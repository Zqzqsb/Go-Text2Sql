{"id":3457299966,"db_name":"hr","question":"在2024年10月13日，哪些员工在客户服务部工作并且当天的工作时间超过了15小时？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-13' AND d.name = '客户服务部' AND (a.check_out - a.check_in) \u003e '15:00:00';","pred_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-10-13' AND (a.check_out - a.check_in) \u003e INTERVAL '15 hours';","thinking":"","ambiguous":"False"}
{"id":1044893251,"db_name":"hr","question":"2024年10月11日，哪些员工在清华大学毕业并且当天迟到（上班时间晚于09:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-10-11' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE e.university = '清华大学' AND ar.date = '2024-10-11' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3626797096,"db_name":"hr","question":"在2024年，员工H03961的考勤记录中，有多少天的上班时间晚于9:00？","gt_sql":"SELECT COUNT(*) FROM attendance_records WHERE employee_id = 'H03961' AND date \u003e= '2024-01-01' AND date \u003c= '2024-12-31' AND check_in \u003e '09:00:00';","pred_sql":"SELECT COUNT(*) FROM attendance_records WHERE employee_id = 'H03961' AND date BETWEEN '2024-01-01' AND '2024-12-31' AND check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":207527642,"db_name":"hr","question":"2024年9月24日，哪些员工在8:30之前打卡上班，并且他们的绩效等级为A+？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-24' AND a.check_in \u003c '08:30:00' AND p.rating = 'A+';","pred_sql":"SELECT e.name, ar.check_in, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-24' AND ar.check_in \u003c '08:30:00' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":4093748071,"db_name":"hr","question":"请列出在2024年10月5日所有员工的姓名、部门名称以及他们的上班和下班时间。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-05';","pred_sql":"SELECT e.name, d.name AS department_name, ar.check_in, ar.check_out FROM employees e JOIN departments d ON e.department_id = d.department_id LEFT JOIN attendance_records ar ON e.employee_id = ar.employee_id AND ar.date = '2024-10-05';","thinking":"","ambiguous":"False"}
{"id":4123999737,"db_name":"hr","question":"查询2024年9月21日所有员工的姓名、部门名称、上班时间和下班时间，并按部门名称排序。","gt_sql":"SELECT e.name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-21' ORDER BY d.name;","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN attendance_records a ON e.employee_id = a.employee_id WHERE a.date = '2024-09-21' ORDER BY d.name;","thinking":"","ambiguous":"False"}
{"id":560968712,"db_name":"hr","question":"试用期未满三个月就离职的员工比例是多少？","gt_sql":"SELECT COUNT(*) FILTER (WHERE end_date - start_date \u003c 90 AND status = '离职') / COUNT(*) * 100 AS离职比例 FROM probation_employees;","pred_sql":"SELECT ROUND(COUNT(CASE WHEN pe.status = '离职' AND (pe.end_date - pe.start_date) \u003c 90 THEN 1 END) * 100.0 / COUNT(*), 2) AS early_termination_percentage FROM probation_employees pe;","thinking":"","ambiguous":"False"}
{"id":2123418406,"db_name":"hr","question":"2024年10月8日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-08' AND d.name = '客户服务部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND ar.date = '2024-10-08' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2685336973,"db_name":"hr","question":"列出所有试用期员工的姓名和他们的入职日期。","gt_sql":"SELECT e.name, e.hire_date FROM employees e JOIN probation_employees p ON e.employee_id = p.employee_id WHERE p.status = '在职';","pred_sql":"SELECT e.name, e.hire_date FROM employees e JOIN probation_employees p ON e.employee_id = p.employee_id;","thinking":"","ambiguous":"False"}
{"id":1786804299,"db_name":"hr","question":"2024年9月22日，哪些部门的员工在上班时间（check_in）晚于09:00，并且这些员工的剩余年假天数少于5天？","gt_sql":"SELECT d.name AS department_name, e.name AS employee_name, a.check_in, e.remaining_annual_leave FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-22' AND a.check_in \u003e '09:00:00' AND e.remaining_annual_leave \u003c 5;","pred_sql":"SELECT d.name AS department_name, e.name AS employee_name, ar.check_in, e.remaining_annual_leave FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-22' AND ar.check_in \u003e '09:00:00' AND e.remaining_annual_leave \u003c 5;","thinking":"","ambiguous":"False"}
{"id":187164736,"db_name":"hr","question":"2023年入职的员工中，哪些人在2024年10月5日有考勤记录，并且他们的绩效等级是什么？","gt_sql":"SELECT e.name, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE e.hire_date \u003e= '2023-01-01' AND e.hire_date \u003c '2024-01-01' AND a.date = '2024-10-05';","pred_sql":"SELECT e.name, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE EXTRACT(YEAR FROM e.hire_date) = 2023 AND a.date = '2024-10-05';","thinking":"","ambiguous":"False"}
{"id":16656251,"db_name":"hr","question":"2023年入职的员工中，哪些人在2024年9月26日有考勤记录，并且他们的绩效等级是什么？","gt_sql":"SELECT e.name, e.hire_date, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE e.hire_date \u003e= '2023-01-01' AND e.hire_date \u003c '2024-01-01' AND a.date = '2024-09-26';","pred_sql":"SELECT e.name, e.hire_date, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE EXTRACT(YEAR FROM e.hire_date) = 2023 AND a.date = '2024-09-26';","thinking":"","ambiguous":"False"}
{"id":3745687130,"db_name":"hr","question":"在2024年，员工H05598的考勤记录中，下班时间早于18:00的有多少天？","gt_sql":"SELECT COUNT(*) FROM attendance_records WHERE employee_id = 'H05598' AND date \u003e= '2024-01-01' AND date \u003c= '2024-12-31' AND check_out \u003c '18:00:00';","pred_sql":"SELECT COUNT(*) FROM attendance_records WHERE employee_id = 'H05598' AND date BETWEEN '2024-01-01' AND '2024-12-31' AND check_out \u003c '18:00:00';","thinking":"","ambiguous":"False"}
{"id":2706374430,"db_name":"hr","question":"2024年9月28日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且这些员工所在的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-28' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-28' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1934436050,"db_name":"hr","question":"2024年10月12日，哪些员工在运营部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-12' AND a.check_in \u003e '09:00:00' AND d.name = '运营部';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '运营部' AND ar.date = '2024-10-12' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3074190923,"db_name":"hr","question":"2024年10月11日，哪些员工在上班时间（check_in）晚于09:00，并且他们的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-11' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, d.name FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-11' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":511554832,"db_name":"hr","question":"2024年9月21日，哪些员工在销售部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-21' AND d.name = '销售部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND a.date = '2024-09-21' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2699770862,"db_name":"hr","question":"2023年12月11日，哪些员工在绩效评估中获得了C评级，并且他们的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-12-11' AND pe.rating = 'C';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-12-11' AND pe.rating = 'C';","thinking":"","ambiguous":"False"}
{"id":2054121283,"db_name":"hr","question":"2024年9月22日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且这些员工所属的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-22' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-22' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1458867293,"db_name":"hr","question":"2023年有哪些员工获得了创新奖，并且他们的绩效评估等级为A+？","gt_sql":"SELECT a.employee_id, e.name, a.award_name, pe.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2023 AND a.award_name = '创新奖' AND pe.rating = 'A+';","pred_sql":"SELECT e.employee_id, e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2023 AND a.award_name = '创新奖' AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":3998131614,"db_name":"hr","question":"2024年10月9日，哪些员工在客户服务部工作并且当天迟到（上班时间晚于08:30:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-10-09' AND a.check_in \u003e '08:30:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND ar.date = '2024-10-09' AND ar.check_in \u003e '08:30:00';","thinking":"","ambiguous":"False"}
{"id":3232263409,"db_name":"hr","question":"2023年有多少员工在试用期内获得了优秀员工奖？","gt_sql":"SELECT COUNT(DISTINCT pe.employee_id) FROM probation_employees pe JOIN awards a ON pe.employee_id = a.employee_id WHERE pe.status = '在职' AND a.award_name = '优秀员工' AND a.year = 2023;","pred_sql":"SELECT COUNT(DISTINCT e.employee_id) FROM employees e JOIN probation_employees pe ON e.employee_id = pe.employee_id JOIN awards a ON e.employee_id = a.employee_id WHERE a.award_name = '优秀员工奖' AND a.year = 2023 AND pe.start_date \u003c= '2023-12-31' AND pe.end_date \u003e= '2023-01-01';","thinking":"","ambiguous":"False"}
{"id":3292642794,"db_name":"hr","question":"2021年入职的员工中，有哪些人在2022年获得了奖项？","gt_sql":"SELECT e.name, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE e.hire_date BETWEEN '2021-01-01' AND '2021-12-31' AND a.year = 2022;","pred_sql":"SELECT e.name, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE EXTRACT(YEAR FROM e.hire_date) = 2021 AND a.year = 2022;","thinking":"","ambiguous":"False"}
{"id":1309577663,"db_name":"hr","question":"哪些员工的考勤记录显示他们可能同时在多个项目中工作？","gt_sql":"SELECT employee_id FROM attendance_records GROUP BY employee_id HAVING COUNT(DISTINCT date) \u003e 1;","pred_sql":"SELECT DISTINCT e.employee_id, e.name FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE ar.date IN (SELECT date FROM attendance_records GROUP BY date, employee_id HAVING COUNT(*) \u003e 1);","thinking":"","ambiguous":"False"}
{"id":3488243740,"db_name":"hr","question":"2024年9月24日，哪些部门的员工在上班时间晚于9:30打卡，并且这些员工的年假剩余天数少于10天？","gt_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-24' AND ar.check_in \u003e '09:30:00' AND e.remaining_annual_leave \u003c 10;","pred_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN attendance_records a ON e.employee_id = a.employee_id WHERE a.date = '2024-09-24' AND a.check_in \u003e '09:30:00' AND e.remaining_annual_leave \u003c 10;","thinking":"","ambiguous":"False"}
{"id":651157477,"db_name":"hr","question":"2024年9月19日，哪些员工在销售部工作并且当天迟到（即上班时间晚于09:00）？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-19' AND d.name = '销售部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND ar.date = '2024-09-19' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":53102733,"db_name":"hr","question":"2024年9月26日，哪些部门的员工在上班时间（check_in）晚于09:00，并且他们的绩效等级为C？","gt_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-26' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'C';","pred_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-26' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'C';","thinking":"","ambiguous":"False"}
{"id":3108523290,"db_name":"hr","question":"2021年入职的员工中，哪些人在2021年获得了奖项，并且他们的绩效评估等级为B？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE e.hire_date \u003e= '2021-01-01' AND e.hire_date \u003c '2022-01-01' AND a.year = 2021 AND pe.rating = 'B';","pred_sql":"SELECT e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE EXTRACT(YEAR FROM e.hire_date) = 2021 AND EXTRACT(YEAR FROM a.year) = 2021 AND p.rating = 'B';","thinking":"","ambiguous":"False"}
{"id":840538968,"db_name":"hr","question":"2024年10月3日，哪些员工在销售部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND a.date = '2024-10-03' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND a.date = '2024-10-03' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3192644686,"db_name":"hr","question":"2020年获得'优秀员工'奖项的员工中，哪些人目前仍在试用期内？","gt_sql":"SELECT e.name, p.status FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN probation_employees p ON e.employee_id = p.employee_id WHERE a.year = 2020 AND a.award_name = '优秀员工' AND p.status = '在职';","pred_sql":"SELECT e.name, p.status FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN probation_employees p ON e.employee_id = p.employee_id WHERE a.year = 2020 AND a.award_name = '优秀员工' AND p.status = '试用期' AND CURRENT_DATE BETWEEN p.start_date AND p.end_date;","thinking":"","ambiguous":"False"}
{"id":1597119407,"db_name":"hr","question":"2023年入职的员工中，哪些员工在2023年获得了奖项，并且他们的绩效评估等级为A+？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE e.hire_date \u003e= '2023-01-01' AND e.hire_date \u003c '2024-01-01' AND a.year = 2023 AND pe.rating = 'A+';","pred_sql":"SELECT e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE EXTRACT(YEAR FROM e.hire_date) = 2023 AND EXTRACT(YEAR FROM a.year) = 2023 AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":3355699316,"db_name":"hr","question":"请列出在2024年9月19日所有员工的姓名、部门名称以及他们的考勤记录（包括上班和下班时间），并且这些员工必须是在试用期内的。","gt_sql":"SELECT e.name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN probation_employees p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-19' AND p.status = '在职';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, ar.check_in, ar.check_out FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN probation_employees pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-19' AND pe.status = 'In Probation';","thinking":"","ambiguous":"False"}
{"id":1396580707,"db_name":"hr","question":"对于每个员工，如何计算其入职后的年假使用情况？","gt_sql":"SELECT e.employee_id, e.name, e.hire_date, e.remaining_annual_leave, COUNT(a.id) AS days_used_annual_leave\nFROM employees e\nLEFT JOIN attendance_records a ON e.employee_id = a.employee_id\nGROUP BY e.employee_id, e.name, e.hire_date, e.remaining_annual_leave;","pred_sql":"SELECT e.employee_id, e.name, e.hire_date, e.remaining_annual_leave, (365 - e.remaining_annual_leave) AS used_annual_leave FROM employees e;","thinking":"","ambiguous":"False"}
{"id":2385394779,"db_name":"hr","question":"2022年获得'技术突破奖'的员工中，哪些人每天的工作时间超过10小时？","gt_sql":"SELECT e.name, a.date, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN awards aw ON e.employee_id = aw.employee_id WHERE aw.year = 2022 AND aw.award_name = '技术突破奖' AND EXTRACT(HOUR FROM (a.check_out - a.check_in)) \u003e= 10;","pred_sql":"SELECT e.name, ar.date, ar.check_in, ar.check_out FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN awards a ON e.employee_id = a.employee_id WHERE a.year = 2022 AND a.award_name = '技术突破奖' AND (ar.check_out - ar.check_in) \u003e INTERVAL '10 hours';","thinking":"","ambiguous":"False"}
{"id":3598287205,"db_name":"hr","question":"2024年9月20日，哪些员工在质量控制部工作并且当天上班时间超过8小时？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-20' AND d.name = '质量控制部' AND EXTRACT(HOUR FROM (a.check_out - a.check_in)) \u003e 8;","pred_sql":"SELECT e.name, e.employee_id, ar.check_in, ar.check_out FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND ar.date = '2024-09-20' AND (ar.check_out - ar.check_in) \u003e INTERVAL '8 hours';","thinking":"","ambiguous":"False"}
{"id":1157360763,"db_name":"hr","question":"2024年9月25日，哪些员工在清华大学毕业并且当天上班时间早于09:00？","gt_sql":"SELECT e.name FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE a.date = '2024-09-25' AND e.university = '清华大学' AND a.check_in \u003c '09:00:00';","pred_sql":"SELECT e.name FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-09-25' AND a.check_in \u003c '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1456890377,"db_name":"hr","question":"绩效评级为A+的员工中，平均每天工作时长最长的是谁？","gt_sql":"SELECT e.name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN (SELECT employee_id, AVG(EXTRACT(EPOCH FROM (check_out - check_in)) / 3600) AS avg_work_hours FROM attendance_records GROUP BY employee_id) a ON e.employee_id = a.employee_id WHERE pe.rating = 'A+' ORDER BY a.avg_work_hours DESC LIMIT 1;","pred_sql":"SELECT e.name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE pe.rating = 'A+' GROUP BY e.id, e.name ORDER BY AVG(EXTRACT(EPOCH FROM (ar.check_out - ar.check_in))/3600) DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":455172185,"db_name":"hr","question":"2024年10月4日，哪些员工在销售部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-04' AND d.name = '销售部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND ar.date = '2024-10-04' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":4212530835,"db_name":"hr","question":"在2024年9月18日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且他们的绩效评估等级为D？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-18' AND a.check_in \u003e '09:00:00' AND p.rating = 'D';","pred_sql":"SELECT e.name, ar.check_in, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-18' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'D';","thinking":"","ambiguous":"False"}
{"id":1240612673,"db_name":"hr","question":"2024年9月25日，哪些员工在上班时间（check_in）晚于08:30:00，并且他们的绩效等级为B+？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-25' AND a.check_in \u003e '08:30:00' AND p.rating = 'B+';","pred_sql":"SELECT e.name, ar.check_in, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-25' AND ar.check_in \u003e '08:30:00' AND pe.rating = 'B+';","thinking":"","ambiguous":"False"}
{"id":2857901445,"db_name":"hr","question":"查询2024年所有员工的面试记录，并按面试次数排序。","gt_sql":"SELECT * FROM interviews WHERE interview_date \u003e= '2024-01-01' AND interview_date \u003c= '2024-12-31' ORDER BY interview_count DESC;","pred_sql":"SELECT i.employee_id, i.interview_date, COUNT(*) OVER (PARTITION BY i.employee_id) AS interview_count FROM interviews i WHERE EXTRACT(YEAR FROM i.interview_date) = 2024 ORDER BY interview_count DESC;","thinking":"","ambiguous":"False"}
{"id":71265646,"db_name":"hr","question":"2024年10月10日，哪些员工在上班时间（check_in）晚于08:30:00，并且他们的绩效等级（rating）为A+？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-10' AND a.check_in \u003e '08:30:00' AND p.rating = 'A+';","pred_sql":"SELECT e.name, ar.check_in, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-10' AND ar.check_in \u003e '08:30:00' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":2168264130,"db_name":"hr","question":"2024年9月27日，哪些部门的员工在上班时间晚于9:00打卡，并且这些员工的年假剩余天数少于10天？","gt_sql":"SELECT d.name AS department_name, e.name AS employee_name, a.check_in, e.remaining_annual_leave FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-27' AND a.check_in \u003e '09:00:00' AND e.remaining_annual_leave \u003c 10;","pred_sql":"SELECT d.name AS department_name, e.name AS employee_name, ar.check_in, e.remaining_annual_leave FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-27' AND ar.check_in \u003e '09:00:00' AND e.remaining_annual_leave \u003c 10;","thinking":"","ambiguous":"False"}
{"id":1505285087,"db_name":"hr","question":"查询所有员工的姓名和他们的绩效评估日期。","gt_sql":"SELECT e.name, p.evaluation_date FROM employees e JOIN performance_evaluations p ON e.employee_id = p.employee_id;","pred_sql":"SELECT e.name, p.evaluation_date FROM employees e JOIN performance_evaluations p ON e.employee_id = p.employee_id;","thinking":"","ambiguous":"False"}
{"id":1736090929,"db_name":"hr","question":"2024年10月7日，哪些员工在上班时间（check_in）晚于9:00并且在下班时间（check_out）早于17:00？请列出他们的姓名、部门名称和考勤记录。","gt_sql":"SELECT e.name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-07' AND a.check_in \u003e '09:00:00' AND a.check_out \u003c '17:00:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, ar.check_in, ar.check_out FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-07' AND ar.check_in \u003e '09:00:00' AND ar.check_out \u003c '17:00:00';","thinking":"","ambiguous":"False"}
{"id":816170327,"db_name":"hr","question":"请查询2024年10月5日所有员工的考勤记录，并显示他们的姓名、部门名称和当天的上班及下班时间。","gt_sql":"SELECT e.name, d.name AS department_name, ar.check_in, ar.check_out FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-05';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-05';","thinking":"","ambiguous":"False"}
{"id":3913837113,"db_name":"hr","question":"哪个部门的员工平均面试次数最多？","gt_sql":"SELECT e.department_id, AVG(i.interview_count) AS avg_interview_count FROM employees e JOIN interviews i ON e.employee_id = i.employee_id GROUP BY e.department_id ORDER BY avg_interview_count DESC LIMIT 1;","pred_sql":"SELECT d.department_id, AVG(i.interview_count) AS avg_interview_count FROM departments d JOIN employees e ON d.department_id = e.department_id JOIN interviews i ON e.employee_id = i.employee_id GROUP BY d.department_id ORDER BY avg_interview_count DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":578427607,"db_name":"hr","question":"哪些员工在2024年9月27日有考勤记录，并且他们的绩效等级为A+？","gt_sql":"SELECT e.name, e.employee_id, a.date, a.check_in, a.check_out, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-27' AND p.rating = 'A+';","pred_sql":"SELECT e.name, e.employee_id, ar.date, ar.check_in, ar.check_out, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-27' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":2435455132,"db_name":"hr","question":"2024年获得最佳团队奖的员工中，哪些人在2024年10月9日的考勤记录中迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN awards aw ON e.employee_id = aw.employee_id WHERE aw.award_name = '最佳团队奖' AND aw.year = 2024 AND a.date = '2024-10-09' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN awards aw ON e.employee_id = aw.employee_id JOIN attendance_records a ON e.employee_id = a.employee_id WHERE aw.year = 2024 AND aw.award_name = '最佳团队奖' AND a.date = '2024-10-09' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":801113743,"db_name":"hr","question":"2024年10月14日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-14' AND a.check_in \u003e '09:00:00' AND d.name = '质量控制部';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND ar.date = '2024-10-14' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":879816496,"db_name":"hr","question":"2024年9月24日，哪些员工在下午1点之后才下班，并且他们的绩效等级为B+？","gt_sql":"SELECT e.name, a.check_out, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-24' AND a.check_out \u003e '13:00:00' AND p.rating = 'B+';","pred_sql":"SELECT e.name, a.check_out, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-24' AND a.check_out \u003e '13:00:00' AND p.rating = 'B+';","thinking":"","ambiguous":"False"}
{"id":2367322111,"db_name":"hr","question":"在2024年10月8日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于上午9:00），并且这些员工所在的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-08' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, d.name FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-08' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":247458622,"db_name":"hr","question":"请列出2022年获得过奖项的所有员工的名字、部门名称以及他们获得的奖项名称。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.year = 2022;","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.year = 2022;","thinking":"","ambiguous":"False"}
{"id":570267133,"db_name":"hr","question":"在2024年10月12日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且他们的绩效评估等级为D？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-12' AND a.check_in \u003e '09:00:00' AND p.rating = 'D';","pred_sql":"SELECT e.name, ar.check_in, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-12' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'D';","thinking":"","ambiguous":"False"}
{"id":137546085,"db_name":"hr","question":"2024年10月13日，哪些员工在清华大学毕业并且当天上班时间早于09:30？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-10-13' AND a.check_in \u003c '09:30:00';","pred_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-10-13' AND a.check_in \u003c '09:30:00';","thinking":"","ambiguous":"False"}
{"id":4072264422,"db_name":"hr","question":"2024年9月22日，哪些员工在客户服务部工作并且当天有考勤记录？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-09-22';","pred_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-09-22';","thinking":"","ambiguous":"False"}
{"id":4121529769,"db_name":"hr","question":"2023年有哪些员工获得了'质量改进奖'，并且他们的绩效评估等级为'A+'？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.award_name = '质量改进奖' AND a.year = 2023 AND pe.rating = 'A+';","pred_sql":"SELECT e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2023 AND a.award_name = '质量改进奖' AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":437939056,"db_name":"hr","question":"2024年10月5日，哪些员工在上班时间（check_in）晚于08:30，并且他们的部门负责人是H05487？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, d.name AS department_name FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-05' AND a.check_in \u003e '08:30:00' AND d.manager_id = 'H05487';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in, d.name AS department_name FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-05' AND ar.check_in \u003e '08:30:00' AND d.manager_id = 'H05487';","thinking":"","ambiguous":"False"}
{"id":2108794903,"db_name":"hr","question":"2024年10月2日，哪些员工在行政部工作并且当天上班时间超过9小时？","gt_sql":"SELECT e.name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-02' AND d.name = '行政部' AND (a.check_out - a.check_in) \u003e '09:00:00';","pred_sql":"SELECT e.name, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '行政部' AND a.date = '2024-10-02' AND (a.check_out - a.check_in) \u003e INTERVAL '9 hours';","thinking":"","ambiguous":"False"}
{"id":2803368869,"db_name":"hr","question":"2023年3月31日，哪些部门的员工在绩效评估中获得了D评级？请列出部门名称和员工姓名。","gt_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-03-31' AND pe.rating = 'D';","pred_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.rating = 'D' AND pe.evaluation_date = '2023-03-31';","thinking":"","ambiguous":"False"}
{"id":408783378,"db_name":"hr","question":"列出所有正式员工的姓名和他们的车牌号。","gt_sql":"SELECT name, car_plate FROM employees WHERE employee_type = '正式员工';","pred_sql":"SELECT e.name, e.car_plate FROM employees e WHERE e.employee_type = '正式员工';","thinking":"","ambiguous":"False"}
{"id":1719343281,"db_name":"hr","question":"在2024年9月19日，哪些员工在质量控制部工作并且他们的考勤记录显示他们当天迟到了？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-19' AND d.name = '质量控制部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-19' AND d.name = '质量控制部' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2395193694,"db_name":"hr","question":"2022年获得'客户满意度奖'的员工中，哪些人在2024年10月12日的考勤记录中迟到了？","gt_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '客户满意度奖' AND a.year = 2022 AND ar.date = '2024-10-12' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.year = 2022 AND a.award_name = '客户满意度奖' AND ar.date = '2024-10-12' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2461283805,"db_name":"hr","question":"2024年10月11日，哪些员工的考勤记录显示他们上班时间晚于09:00，并且他们的部门负责人是H00842？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, d.name AS department_name FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-11' AND a.check_in \u003e '09:00:00' AND d.manager_id = 'H00842';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in, d.name AS department_name FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-11' AND ar.check_in \u003e '09:00:00' AND d.manager_id = 'H00842';","thinking":"","ambiguous":"False"}
{"id":1004841644,"db_name":"hr","question":"请列出2023年获得'领导力奖'的员工姓名及其所属部门名称。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.award_name = '领导力奖' AND a.year = 2023;","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.year = 2023 AND a.award_name = '领导力奖';","thinking":"","ambiguous":"False"}
{"id":958025096,"db_name":"hr","question":"2023年获得'领导力奖'的员工中，哪些人在2024年10月9日的考勤记录中迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN awards aw ON e.employee_id = aw.employee_id WHERE aw.award_name = '领导力奖' AND aw.year = 2023 AND a.date = '2024-10-09' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, ar.check_in FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.year = 2023 AND a.award_name = '领导力奖' AND ar.date = '2024-10-09' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":4156394932,"db_name":"hr","question":"在2024年10月2日，哪些实习生在早上9点到10点之间打卡上班，并且他们的部门负责人是谁？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, d.manager_id FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-02' AND ar.check_in BETWEEN '09:00:00' AND '10:00:00' AND e.employee_type = '实习生';","pred_sql":"SELECT e.name AS intern_name, d.name AS department_name, d.manager_id FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-02' AND a.check_in BETWEEN '09:00:00' AND '10:00:00' AND e.employee_type = '实习生';","thinking":"","ambiguous":"False"}
{"id":5535555,"db_name":"hr","question":"哪个部门的员工平均年龄最大？","gt_sql":"SELECT d.name FROM departments d JOIN employees e ON d.department_id = e.department_id GROUP BY d.name ORDER BY AVG(EXTRACT(YEAR FROM AGE(date('now'), e.birth_date))) DESC LIMIT 1;","pred_sql":"SELECT d.name FROM departments d JOIN employees e ON d.department_id = e.department_id GROUP BY d.id, d.name ORDER BY AVG(EXTRACT(YEAR FROM AGE(CURRENT_DATE, e.birth_date))) DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1584866592,"db_name":"hr","question":"哪些员工在2024年9月16日有考勤记录，并且他们的绩效等级为C？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-16' AND p.rating = 'C';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in, ar.check_out FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-16' AND pe.rating = 'C';","thinking":"","ambiguous":"False"}
{"id":4123927043,"db_name":"hr","question":"2024年10月8日，哪些员工在研发部工作并且当天迟到（即上班时间晚于09:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-08' AND d.name = '研发部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '研发部' AND ar.date = '2024-10-08' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2642437739,"db_name":"hr","question":"2024年9月20日，哪些员工在财务部工作并且当天迟到（即上班时间晚于09:00）？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND a.date = '2024-09-20' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND a.date = '2024-09-20' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1412040002,"db_name":"hr","question":"2024年10月5日，哪些员工在人力资源部工作并且当天上班时间超过8小时？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '人力资源部' AND a.date = '2024-10-05' AND EXTRACT(HOUR FROM (a.check_out - a.check_in)) \u003e= 8;","pred_sql":"SELECT e.name, e.employee_id, ar.check_in, ar.check_out FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '人力资源部' AND ar.date = '2024-10-05' AND (ar.check_out - ar.check_in) \u003e INTERVAL '8 hours';","thinking":"","ambiguous":"False"}
{"id":467771706,"db_name":"hr","question":"哪些员工在2024年10月14日有考勤记录，并且他们的绩效等级是A+？","gt_sql":"SELECT e.name, e.employee_id, a.date, a.check_in, a.check_out, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-14' AND p.rating = 'A+';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in, ar.check_out, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-14' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":416599650,"db_name":"hr","question":"2024年9月27日，哪些员工在行政部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-27' AND d.name = '行政部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '行政部' AND ar.date = '2024-09-27' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2074887228,"db_name":"hr","question":"列出所有部门的名称及其对应的员工数量。","gt_sql":"SELECT d.name AS department_name, COUNT(e.employee_id) AS employee_count FROM departments d LEFT JOIN employees e ON d.department_id = e.department_id GROUP BY d.name;","pred_sql":"SELECT d.name, COUNT(e.employee_id) AS employee_count FROM departments d LEFT JOIN employees e ON d.department_id = e.department_id GROUP BY d.name;","thinking":"","ambiguous":"False"}
{"id":4204863942,"db_name":"hr","question":"入职时间最短但已获得A+绩效的员工是谁？","gt_sql":"SELECT e.name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE pe.rating = 'A+' ORDER BY e.hire_date DESC LIMIT 1;","pred_sql":"SELECT e.name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE pe.rating = 'A+' ORDER BY e.hire_date DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":603993474,"db_name":"hr","question":"哪些员工的出勤时间与其所属部门的平均出勤时间差异最大？","gt_sql":"SELECT e.employee_id, e.name, e.department_id, a.total_hours, d.avg_hours, ABS(a.total_hours - d.avg_hours) AS difference\nFROM (\n    SELECT employee_id, SUM(EXTRACT(EPOCH FROM (check_out - check_in)) / 3600) AS total_hours\n    FROM attendance_records\n    GROUP BY employee_id\n) a\nJOIN employees e ON a.employee_id = e.employee_id\nJOIN (\n    SELECT e.department_id, AVG(a.total_hours) AS avg_hours\n    FROM (\n        SELECT employee_id, SUM(EXTRACT(EPOCH FROM (check_out - check_in)) / 3600) AS total_hours\n        FROM attendance_records\n        GROUP BY employee_id\n    ) a\n    JOIN employees e ON a.employee_id = e.employee_id\n    GROUP BY e.department_id\n) d ON e.department_id = d.department_id\nORDER BY difference DESC;","pred_sql":"SELECT e.employee_id, e.name, e.department_id, (EXTRACT(EPOCH FROM (ar.check_out - ar.check_in))/3600) AS actual_hours, dept_avg.avg_hours AS department_avg_hours, ABS((EXTRACT(EPOCH FROM (ar.check_out - ar.check_in))/3600) - dept_avg.avg_hours) AS difference FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN ( SELECT e.department_id, AVG(EXTRACT(EPOCH FROM (ar.check_out - ar.check_in))/3600) AS avg_hours FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id GROUP BY e.department_id ) dept_avg ON e.department_id = dept_avg.department_id ORDER BY difference DESC;","thinking":"","ambiguous":"False"}
{"id":4133405205,"db_name":"hr","question":"2024年10月5日，哪些员工在研发部工作并且当天的工作时长超过10小时？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out, (a.check_out - a.check_in) AS work_duration FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-05' AND d.name = '研发部' AND (a.check_out - a.check_in) \u003e '10:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in, ar.check_out, (ar.check_out - ar.check_in) AS working_hours FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '研发部' AND ar.date = '2024-10-05' AND (ar.check_out - ar.check_in) \u003e INTERVAL '10 hours';","thinking":"","ambiguous":"False"}
{"id":1822156377,"db_name":"hr","question":"请找出在2024年10月12日有考勤记录的员工姓名、部门名称以及他们的绩效等级。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, pe.rating AS performance_rating FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id LEFT JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-12';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, pe.rating AS performance_rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-12';","thinking":"","ambiguous":"False"}
{"id":3941104083,"db_name":"hr","question":"2024年10月11日，哪些员工在销售部工作并且当天迟到（即上班时间晚于09:00）？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-11' AND a.check_in \u003e '09:00:00' AND d.name = '销售部';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND a.date = '2024-10-11' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1448803792,"db_name":"hr","question":"在2024年9月26日，哪些员工在上班时间（check_in）晚于9:00并且在当天获得了奖项？请列出他们的姓名、部门名称、上班时间和奖项名称。","gt_sql":"SELECT e.name, d.name AS department_name, ar.check_in, a.award_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN awards a ON ar.employee_id = a.employee_id WHERE ar.date = '2024-09-26' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, ar.check_in AS check_in_time, a.award_name FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id JOIN awards a ON e.employee_id = a.employee_id WHERE ar.date = '2024-09-26' AND ar.check_in \u003e '09:00:00' AND a.year = 2024 AND EXTRACT(YEAR FROM a.year::text::date) = 2024 AND EXTRACT(MONTH FROM a.year::text::date) = 9 AND EXTRACT(DAY FROM a.year::text::date) = 26;","thinking":"","ambiguous":"False"}
{"id":2348295774,"db_name":"hr","question":"2024年10月5日，哪些员工在上班时间晚于9:00并且他们的绩效等级为A+？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-05' AND a.check_in \u003e '09:00:00' AND p.rating = 'A+';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-05' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":1351044911,"db_name":"hr","question":"2024年10月7日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于09:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-07' AND d.name = '人力资源部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '人力资源部' AND ar.date = '2024-10-07' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1269433479,"db_name":"hr","question":"在2024年10月11日，哪些实习生的考勤记录显示他们当天没有迟到（即上班时间在09:00之前）？请列出他们的姓名、部门名称和上班时间。","gt_sql":"SELECT e.name, d.name AS department_name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-11' AND e.employee_type = '实习生' AND a.check_in \u003c '09:00:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE e.employee_type = '实习生' AND ar.date = '2024-10-11' AND ar.check_in \u003c= '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2181400574,"db_name":"hr","question":"2023年有哪些员工获得了优秀员工奖，并且他们的绩效评估等级为A+？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.award_name = '优秀员工' AND pe.rating = 'A+' AND a.year = 2023;","pred_sql":"SELECT e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2023 AND a.award_name = '优秀员工奖' AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":2992677261,"db_name":"hr","question":"近五年内，每个部门为公司培养的高潜力人才中，有多少最终成长为公司的核心骨干？","gt_sql":"SELECT e.department_id, COUNT(DISTINCT pe.employee_id) AS core_talent_count\nFROM employees e\nJOIN probation_employees pe ON e.employee_id = pe.employee_id\nWHERE pe.status = '转正' AND pe.end_date \u003e= datetime('now') - INTERVAL '5 years'\nGROUP BY e.department_id;","pred_sql":"SELECT d.department_id, COUNT(DISTINCT e.employee_id) AS high_potential_talent_count FROM departments d JOIN employees e ON d.department_id = e.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE pe.rating = '优秀' AND pe.evaluation_date \u003e= CURRENT_DATE - INTERVAL '5 years' GROUP BY d.department_id;","thinking":"","ambiguous":"False"}
{"id":1583766775,"db_name":"hr","question":"2024年获得新人奖的员工中，哪些人在2024年10月8日有考勤记录？","gt_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '新人奖' AND a.year = 2024 AND ar.date = '2024-10-08';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.year = 2024 AND a.award_name = '新人奖' AND ar.date = '2024-10-08';","thinking":"","ambiguous":"False"}
{"id":2928703740,"db_name":"hr","question":"2024年10月2日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效等级为A+？","gt_sql":"SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-02' AND a.check_in \u003e '09:00:00' AND p.rating = 'A+';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-02' AND a.check_in \u003e '09:00:00' AND p.rating = 'A+' AND p.evaluation_date = (SELECT MAX(evaluation_date) FROM performance_evaluations WHERE employee_id = e.employee_id);","thinking":"","ambiguous":"False"}
{"id":2166514841,"db_name":"hr","question":"请列出在2024年获得'新人奖'的员工姓名及其所在部门的名称。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.award_name = '新人奖' AND a.year = 2024;","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.year = 2024 AND a.award_name = '新人奖';","thinking":"","ambiguous":"False"}
{"id":2864760744,"db_name":"hr","question":"从入职到首次获得管理职位，员工平均需要多长时间？","gt_sql":"SELECT AVG(EXTRACT(YEAR FROM age(first_management_position_date, hire_date))) AS average_years_to_management\nFROM (\n    SELECT e.employee_id, e.hire_date, MIN(e.hire_date) AS first_management_position_date\n    FROM employees e\n    WHERE e.position LIKE '%管理%'\n    GROUP BY e.employee_id, e.hire_date\n) AS subquery;","pred_sql":"SELECT AVG(EXTRACT(DAY FROM (MIN(CASE WHEN e.position LIKE '%Manager%' THEN e.hire_date END) - e.hire_date))) AS avg_days_to_first_management_position FROM employees e WHERE e.position LIKE '%Manager%' GROUP BY e.employee_id HAVING MIN(CASE WHEN e.position LIKE '%Manager%' THEN e.hire_date END) \u003e e.hire_date;","thinking":"","ambiguous":"False"}
{"id":2860391364,"db_name":"hr","question":"2024年10月6日，哪些员工在研发部工作并且他们的考勤记录显示他们当天的工作时长超过10小时？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '研发部' AND a.date = '2024-10-06' AND EXTRACT(EPOCH FROM (a.check_out - a.check_in)) / 3600 \u003e 10;","pred_sql":"SELECT e.name, e.employee_id, ar.check_in, ar.check_out FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '研发部' AND ar.date = '2024-10-06' AND (ar.check_out - ar.check_in) \u003e INTERVAL '10 hours';","thinking":"","ambiguous":"False"}
{"id":1852490763,"db_name":"hr","question":"2023年有哪些员工获得了技术突破奖，并且他们的绩效评估等级为A+？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.award_name = '技术突破奖' AND pe.rating = 'A+' AND a.year = 2023;","pred_sql":"SELECT e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2023 AND a.award_name = '技术突破奖' AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":2494653166,"db_name":"hr","question":"2024年9月17日，哪些员工在上班时间迟到并且他们的绩效等级为D？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-17' AND a.check_in \u003e '09:00:00' AND p.rating = 'D';","pred_sql":"SELECT e.name, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-17' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'D';","thinking":"","ambiguous":"False"}
{"id":3084451002,"db_name":"hr","question":"2024年获得'项目管理奖'的员工中，哪些人在2024年10月3日有考勤记录？","gt_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '项目管理奖' AND a.year = 2024 AND ar.date = '2024-10-03';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.year = 2024 AND a.award_name = '项目管理奖' AND ar.date = '2024-10-03';","thinking":"","ambiguous":"False"}
{"id":408688532,"db_name":"hr","question":"2023年获得领导力奖的员工中，哪些人是在2017年之后入职的？","gt_sql":"SELECT e.name, e.hire_date, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE a.award_name = '领导力奖' AND a.year = 2023 AND e.hire_date \u003e '2017-01-01';","pred_sql":"SELECT e.name, e.hire_date, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE a.year = 2023 AND a.award_name = '领导力奖' AND e.hire_date \u003e '2017-12-31';","thinking":"","ambiguous":"False"}
{"id":4036648411,"db_name":"hr","question":"在2024年9月16日，哪些员工在清华大学毕业并且当天上班时间超过8小时？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-09-16' AND (a.check_out - a.check_in) \u003e '08:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in, ar.check_out FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE e.university = '清华大学' AND ar.date = '2024-09-16' AND (ar.check_out - ar.check_in) \u003e INTERVAL '8 hours';","thinking":"","ambiguous":"False"}
{"id":548473863,"db_name":"hr","question":"2023年获得领导力奖的员工中，哪些人是在2023年6月4日进行的绩效评估中评级为D的？","gt_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2023 AND a.award_name = '领导力奖' AND pe.evaluation_date = '2023-06-04' AND pe.rating = 'D';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2023 AND a.award_name = '领导力奖' AND p.evaluation_date = '2023-06-04' AND p.rating = 'D';","thinking":"","ambiguous":"False"}
{"id":2286968533,"db_name":"hr","question":"2024年10月12日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-10-12' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-10-12' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3284637113,"db_name":"hr","question":"在2024年9月21日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效评估等级为B？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-21' AND a.check_in \u003e '09:00:00' AND p.rating = 'B';","pred_sql":"SELECT e.name, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-21' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'B';","thinking":"","ambiguous":"False"}
{"id":773404511,"db_name":"hr","question":"2024年9月24日，哪些部门的员工在上班时间（check_in）晚于09:00，并且这些员工的绩效等级为C？","gt_sql":"SELECT d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-24' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'C';","pred_sql":"SELECT DISTINCT d.name FROM departments d JOIN employees e ON d.department_id = e.department_id JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-24' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'C';","thinking":"","ambiguous":"False"}
{"id":2149393306,"db_name":"hr","question":"2024年10月5日，哪些员工在行政部工作并且当天上班时间超过9小时？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-05' AND d.name = '行政部' AND EXTRACT(HOUR FROM (a.check_out - a.check_in)) \u003e= 9;","pred_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '行政部' AND a.date = '2024-10-05' AND (a.check_out - a.check_in) \u003e INTERVAL '9 hours';","thinking":"","ambiguous":"False"}
{"id":2477803619,"db_name":"hr","question":"在2024年10月6日，哪些员工在财务部工作并且他们的考勤记录显示他们当天有迟到（即上班时间晚于09:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND a.date = '2024-10-06' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND ar.date = '2024-10-06' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":821353235,"db_name":"hr","question":"哪些员工在2023年获得了'A+'的绩效评级，并且他们的部门负责人是谁？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, d.manager_id FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.rating = 'A+' AND pe.evaluation_date \u003e= '2023-01-01' AND pe.evaluation_date \u003c '2024-01-01';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, d.manager_id FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.rating = 'A+' AND EXTRACT(YEAR FROM pe.evaluation_date) = 2023;","thinking":"","ambiguous":"False"}
{"id":907163187,"db_name":"hr","question":"在2024年9月28日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效评估等级为A？","gt_sql":"SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-28' AND a.check_in \u003e '09:00:00' AND p.rating = 'A';","pred_sql":"SELECT e.name, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-28' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'A';","thinking":"","ambiguous":"False"}
{"id":811463423,"db_name":"hr","question":"2023年获得'销售冠军'奖项的员工在2024年10月1日的考勤记录是什么？","gt_sql":"SELECT ar.id, ar.employee_id, ar.date, ar.check_in, ar.check_out FROM attendance_records ar JOIN awards a ON ar.employee_id = a.employee_id WHERE a.award_name = '销售冠军' AND a.year = 2023 AND ar.date = '2024-10-01';","pred_sql":"SELECT e.employee_id, e.id, ar.date, ar.check_in, ar.check_out FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '销售冠军' AND a.year = 2023 AND ar.date = '2024-10-01';","thinking":"","ambiguous":"False"}
{"id":2913040945,"db_name":"hr","question":"每个部门中，从入职到首次获得A+绩效评级用时最短的员工是谁？","gt_sql":"SELECT e.department_id, e.employee_id, e.name, MIN(pe.evaluation_date - e.hire_date) AS time_to_first_A_plus FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE pe.rating = 'A+' GROUP BY e.department_id, e.employee_id, e.name ORDER BY e.department_id, time_to_first_A_plus LIMIT 1;","pred_sql":"","thinking":"WITH first_a_plus AS ( SELECT pe.employee_id, MIN(pe.evaluation_date) AS first_a_plus_date FROM performance_evaluations pe WHERE pe.rating = 'A+' GROUP BY pe.employee_id ), employee_time_to_a_plus AS ( SELECT e.department_id, e.employee_id, e.name, (fa.first_a_plus_date - e.hire_date) AS days_to_a_plus FROM employees e JOIN first_a_plus fa ON e.employee_id = fa.employee_id ), min_time_by_dept AS ( SELECT department_id, MIN(days_to_a_plus) AS min_days FROM employee_time_to_a_plus GROUP BY department_id ) SELECT d.department_id, eta.employee_id, eta.name, eta.days_to_a_plus FROM employee_time_to_a_plus eta JOIN min_time_by_dept mt ON eta.department_id = mt.department_id AND eta.days_to_a_plus = mt.min_days JOIN departments d ON eta.department_id = d.department_id ORDER BY d.department_id;","ambiguous":"False"}
{"id":1736656854,"db_name":"hr","question":"2024年9月22日，哪些员工的考勤记录显示他们迟到（即上班时间晚于9:00），并且这些员工所在的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-22' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-22' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2339817132,"db_name":"hr","question":"哪些员工在2024年获得了'优秀员工'奖项，并且他们的绩效评估等级为'A+'？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2024 AND a.award_name = '优秀员工' AND pe.rating = 'A+';","pred_sql":"SELECT e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2024 AND a.award_name = '优秀员工' AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":2218878981,"db_name":"hr","question":"请列出在2023年10月29日进行绩效评估的所有员工的姓名、部门名称以及他们的绩效等级。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, pe.rating FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-10-29';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, pe.rating AS performance_rating FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE pe.evaluation_date = '2023-10-29';","thinking":"","ambiguous":"False"}
{"id":1785434408,"db_name":"hr","question":"2024年9月17日，哪些员工在清华大学毕业并且当天上班时间超过9小时？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-09-17' AND (a.check_out - a.check_in) \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in, ar.check_out FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE e.university = '清华大学' AND ar.date = '2024-09-17' AND (ar.check_out - ar.check_in) \u003e INTERVAL '9 hours';","thinking":"","ambiguous":"False"}
{"id":2274426817,"db_name":"hr","question":"2022年6月16日，哪些员工在绩效评估中获得了C评级，并且他们的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2022-06-16' AND pe.rating = 'C';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2022-06-16' AND pe.rating = 'C';","thinking":"","ambiguous":"False"}
{"id":1121061015,"db_name":"hr","question":"2022年获得'优秀员工'奖的员工中，哪些人在2022年10月30日的绩效评估中获得了A+评级？","gt_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.award_name = '优秀员工' AND a.year = 2022 AND pe.evaluation_date = '2022-10-30' AND pe.rating = 'A+';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2022 AND a.award_name = '优秀员工' AND p.evaluation_date = '2022-10-30' AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":1822740611,"db_name":"hr","question":"2024年9月15日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为B？","gt_sql":"SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-15' AND a.check_in \u003e '09:00:00' AND p.rating = 'B';","pred_sql":"SELECT e.name, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-15' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'B';","thinking":"","ambiguous":"False"}
{"id":3049098373,"db_name":"hr","question":"找出所有在销售部工作的员工的姓名和职位。","gt_sql":"SELECT e.name, e.position FROM employees e JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部';","pred_sql":"SELECT e.name, e.position FROM employees e JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部';","thinking":"","ambiguous":"False"}
{"id":2137629249,"db_name":"hr","question":"在2024年9月23日，哪些员工的考勤记录显示他们没有在9:00之前打卡上班，并且他们的绩效评估等级为D？","gt_sql":"SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-23' AND a.check_in \u003e '09:00:00' AND p.rating = 'D';","pred_sql":"SELECT e.name, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-23' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'D';","thinking":"","ambiguous":"False"}
{"id":2240615465,"db_name":"hr","question":"2024年10月14日，哪些员工在客户服务部工作并且绩效评估等级为D？","gt_sql":"SELECT e.name, e.employee_id FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2024-10-14' AND pe.rating = 'D' AND d.name = '客户服务部';","pred_sql":"SELECT e.name, e.employee_id FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE d.name = '客户服务部' AND pe.rating = 'D' AND pe.evaluation_date \u003c= '2024-10-14' AND (e.start_work_date \u003c= '2024-10-14' AND (e.employee_type != '离职' OR (e.employee_type = '离职' AND (SELECT MAX(ar.date) FROM attendance_records ar WHERE ar.employee_id = e.employee_id) \u003e= '2024-10-14')));","thinking":"","ambiguous":"False"}
{"id":1309270874,"db_name":"hr","question":"2023年获得领导力奖的员工中，哪些人是在2019年或之后入职的？","gt_sql":"SELECT e.name, e.hire_date, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE a.award_name = '领导力奖' AND a.year = 2023 AND e.hire_date \u003e= '2019-01-01';","pred_sql":"SELECT e.name, e.hire_date, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE a.award_name = '领导力奖' AND a.year = 2023 AND e.hire_date \u003e= '2019-01-01';","thinking":"","ambiguous":"False"}
{"id":2420332715,"db_name":"hr","question":"在2024年9月20日，哪些部门的员工在上班时间（check_in）晚于9:00，并且这些员工的绩效等级（rating）为A+？","gt_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-20' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'A+';","pred_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-20' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":60966118,"db_name":"hr","question":"哪些员工虽然绩效一般，但在同事评价或团队贡献方面表现突出？","gt_sql":"SELECT e.employee_id, e.name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN awards a ON e.employee_id = a.employee_id WHERE pe.rating IN ('B', 'C') AND a.award_name IN ('最佳团队奖', '最佳同事评价奖')","pred_sql":"SELECT e.employee_id, e.name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN awards a ON e.employee_id = a.employee_id WHERE pe.rating = '一般' AND a.award_name IN ('最佳团队贡献奖', '同事评价优秀奖');","thinking":"","ambiguous":"False"}
{"id":1965264110,"db_name":"hr","question":"2024年9月20日，哪些员工在8点到9点之间打卡上班，并且他们的绩效等级为B？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-20' AND a.check_in BETWEEN '08:00:00' AND '09:00:00' AND p.rating = 'B';","pred_sql":"SELECT e.name, a.check_in, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-20' AND a.check_in BETWEEN '08:00:00' AND '09:00:00' AND p.rating = 'B';","thinking":"","ambiguous":"False"}
{"id":1436736406,"db_name":"hr","question":"哪些员工的最后一次绩效评估是在2024年之前且评级为B？","gt_sql":"SELECT e.employee_id, e.name FROM employees e JOIN (SELECT employee_id, MAX(evaluation_date) AS last_evaluation_date FROM performance_evaluations WHERE evaluation_date \u003c '2024-01-01' GROUP BY employee_id) pe ON e.employee_id = pe.employee_id JOIN performance_evaluations pe2 ON pe.employee_id = pe2.employee_id AND pe.last_evaluation_date = pe2.evaluation_date WHERE pe2.rating = 'B';","pred_sql":"SELECT e.employee_id, e.name FROM employees e JOIN (SELECT employee_id, MAX(evaluation_date) AS last_eval_date FROM performance_evaluations WHERE evaluation_date \u003c '2024-01-01' AND rating = 'B' GROUP BY employee_id) pe ON e.employee_id = pe.employee_id;","thinking":"","ambiguous":"False"}
{"id":2263195811,"db_name":"hr","question":"在2024年9月19日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为B+？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-19' AND a.check_in \u003e '09:00:00' AND p.rating = 'B+';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-19' AND a.check_in \u003e '09:00:00' AND p.rating = 'B+';","thinking":"","ambiguous":"False"}
{"id":1079007714,"db_name":"hr","question":"在2024年9月24日，哪些员工的考勤记录显示他们当天的工作时间超过了12小时，并且这些员工所在部门的名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out, (a.check_out - a.check_in) AS work_duration FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-24' AND (a.check_out - a.check_in) \u003e '12:00:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, ar.check_in, ar.check_out, (ar.check_out - ar.check_in) AS working_hours FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-24' AND (ar.check_out - ar.check_in) \u003e INTERVAL '12 hours';","thinking":"","ambiguous":"False"}
{"id":2835428087,"db_name":"hr","question":"2024年9月29日，哪些员工在清华大学毕业并且当天上班时间早于09:00？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-09-29' AND a.check_in \u003c '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE e.university = '清华大学' AND ar.date = '2024-09-29' AND ar.check_in \u003c '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2600324766,"db_name":"hr","question":"在2024年10月11日，哪些员工在上班时间（check_in）晚于9:00并且他们的绩效等级为A？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-11' AND a.check_in \u003e '09:00:00' AND p.rating = 'A';","pred_sql":"SELECT e.name, a.check_in, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-11' AND a.check_in \u003e '09:00:00' AND p.rating = 'A';","thinking":"","ambiguous":"False"}
{"id":1290741288,"db_name":"hr","question":"查询某个员工（例如H03961）的考勤记录，包括日期、上班时间和下班时间。","gt_sql":"SELECT date, check_in, check_out FROM attendance_records WHERE employee_id = 'H03961';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":3714812669,"db_name":"hr","question":"2024年9月23日，哪些员工在厦门大学毕业并且当天迟到了？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '厦门大学' AND a.date = '2024-09-23' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE e.university = '厦门大学' AND ar.date = '2024-09-23' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":4217899403,"db_name":"hr","question":"2024年9月19日，哪些员工在上班时间（check_in）晚于09:00，并且他们的绩效等级为D？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-19' AND a.check_in \u003e '09:00:00' AND p.rating = 'D';","pred_sql":"SELECT e.name, ar.check_in, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-19' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'D';","thinking":"","ambiguous":"False"}
{"id":1946117596,"db_name":"hr","question":"2024年10月11日，哪些员工在清华大学毕业并且当天迟到（即上班时间晚于08:30）？","gt_sql":"SELECT e.name, e.employee_id, a.date, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-10-11' AND a.check_in \u003e '08:30:00';","pred_sql":"SELECT e.name, e.employee_id, a.date, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-10-11' AND a.check_in \u003e '08:30:00';","thinking":"","ambiguous":"False"}
{"id":1268105110,"db_name":"hr","question":"2024年10月10日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为D？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-10' AND a.check_in \u003e '09:00:00' AND p.rating = 'D';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-10' AND a.check_in \u003e '09:00:00' AND p.rating = 'D';","thinking":"","ambiguous":"False"}
{"id":910719964,"db_name":"hr","question":"2024年入职的员工中，哪些人在2024年获得了'新人奖'，并且他们的绩效等级是'A'？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE e.hire_date \u003e= '2024-01-01' AND a.award_name = '新人奖' AND pe.rating = 'A' AND a.year = 2024;","pred_sql":"SELECT e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE EXTRACT(YEAR FROM e.hire_date) = 2024 AND a.year = 2024 AND a.award_name = '新人奖' AND p.rating = 'A';","thinking":"","ambiguous":"False"}
{"id":4215983699,"db_name":"hr","question":"2024年9月26日，哪些员工在早上8点到9点之间打卡上班，并且他们的绩效等级为B+？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-26' AND a.check_in BETWEEN '08:00:00' AND '09:00:00' AND p.rating = 'B+';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-26' AND a.check_in BETWEEN '08:00:00' AND '09:00:00' AND p.rating = 'B+';","thinking":"","ambiguous":"False"}
{"id":3022631781,"db_name":"hr","question":"2023年获得创新奖的员工中，哪些人在2024年9月25日有考勤记录？","gt_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '创新奖' AND a.year = 2023 AND ar.date = '2024-09-25';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.year = 2023 AND a.award_name = '创新奖' AND ar.date = '2024-09-25';","thinking":"","ambiguous":"False"}
{"id":1326215630,"db_name":"hr","question":"在2024年9月24日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为D？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-24' AND a.check_in \u003e '09:00:00' AND p.rating = 'D';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-24' AND a.check_in \u003e '09:00:00' AND p.rating = 'D';","thinking":"","ambiguous":"False"}
{"id":2739991096,"db_name":"hr","question":"在2024年，哪个部门的经理是员工H03372，并且该部门员工的平均年假是多少？","gt_sql":"SELECT d.name AS department_name, AVG(e.remaining_annual_leave) AS avg_annual_leave FROM departments d JOIN employees e ON d.department_id = e.department_id WHERE d.manager_id = 'H03372' GROUP BY d.name;","pred_sql":"SELECT d.name, AVG(e.remaining_annual_leave) AS average_annual_leave FROM departments d JOIN employees e ON d.department_id = e.department_id WHERE d.manager_id = 'H03372' AND EXTRACT(YEAR FROM CURRENT_DATE) = 2024 GROUP BY d.name;","thinking":"","ambiguous":"False"}
{"id":3094758858,"db_name":"hr","question":"哪些员工在2024年10月12日有考勤记录，并且他们的绩效评估等级为A+？","gt_sql":"SELECT e.name, a.date, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-12' AND p.rating = 'A+';","pred_sql":"SELECT e.name, a.date, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-12' AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":3240116959,"db_name":"hr","question":"2023年获得'质量改进奖'的员工中，哪些人在2024年10月3日的考勤记录中迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, a.date, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN awards aw ON e.employee_id = aw.employee_id WHERE aw.award_name = '质量改进奖' AND aw.year = 2023 AND a.date = '2024-10-03' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, a.date, a.check_in FROM employees e JOIN awards aw ON e.employee_id = aw.employee_id JOIN attendance_records a ON e.employee_id = a.employee_id WHERE aw.award_name = '质量改进奖' AND aw.year = 2023 AND a.date = '2024-10-03' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3253971302,"db_name":"hr","question":"在2024年9月15日，哪些员工在财务部工作并且他们的绩效等级为A+？","gt_sql":"SELECT e.name, e.employee_id, d.name AS department_name, pe.rating FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE ar.date = '2024-09-15' AND d.name = '财务部' AND pe.rating = 'A+';","pred_sql":"SELECT e.name, e.employee_id, d.name AS department_name, pe.rating FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE d.name = '财务部' AND pe.rating = 'A+' AND pe.evaluation_date = '2024-09-15';","thinking":"","ambiguous":"False"}
{"id":3037862925,"db_name":"hr","question":"2024年9月21日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于09:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND a.date = '2024-09-21' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND ar.date = '2024-09-21' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1991610345,"db_name":"hr","question":"2024年9月25日，哪些员工在销售部工作并且当天上班时间超过8小时？","gt_sql":"SELECT e.name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-25' AND d.name = '销售部' AND (a.check_out - a.check_in) \u003e '08:00:00';","pred_sql":"SELECT e.name, ar.check_in, ar.check_out FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND ar.date = '2024-09-25' AND (ar.check_out - ar.check_in) \u003e interval '8 hours';","thinking":"","ambiguous":"False"}
{"id":3421802959,"db_name":"hr","question":"2022年获得'技术突破奖'的员工中，哪些人同时在2022年7月13日之后进行了绩效评估，并且他们的绩效等级是什么？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2022 AND a.award_name = '技术突破奖' AND pe.evaluation_date \u003e '2022-07-13';","pred_sql":"SELECT e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2022 AND a.award_name = '技术突破奖' AND p.evaluation_date \u003e '2022-07-13';","thinking":"","ambiguous":"False"}
{"id":3350855518,"db_name":"hr","question":"在2024年10月11日，哪些员工在财务部工作并且当天迟到（即上班时间晚于09:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-11' AND a.check_in \u003e '09:00:00' AND d.name = '财务部';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND ar.date = '2024-10-11' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1481678835,"db_name":"hr","question":"2024年10月12日，哪些员工在研发部工作并且当天上班时间晚于9:00？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-12' AND a.check_in \u003e '09:00:00' AND d.name = '研发部';","pred_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-12' AND d.name = '研发部' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1832961045,"db_name":"hr","question":"2023年8月6日，哪些部门的员工在绩效评估中获得了C评级？","gt_sql":"SELECT d.name AS department_name FROM departments d JOIN employees e ON d.department_id = e.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE pe.evaluation_date = '2023-08-06' AND pe.rating = 'C';","pred_sql":"SELECT d.name FROM departments d JOIN employees e ON d.department_id = e.department_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE p.evaluation_date = '2023-08-06' AND p.rating = 'C';","thinking":"","ambiguous":"False"}
{"id":3794832374,"db_name":"hr","question":"在2024年10月1日，哪些员工的考勤记录显示他们当天的工作时间超过了12小时，并且这些员工所属的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-01' AND (a.check_out - a.check_in) \u003e '12:00:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-01' AND (EXTRACT(EPOCH FROM (a.check_out - a.check_in))/3600) \u003e 12;","thinking":"","ambiguous":"False"}
{"id":4131389571,"db_name":"hr","question":"2024年10月9日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效等级为A+？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-09' AND a.check_in \u003e '09:00:00' AND p.rating = 'A+';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-09' AND a.check_in \u003e '09:00:00' AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":2592420070,"db_name":"hr","question":"2024年9月24日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-24' AND a.check_in \u003e '09:00:00' AND d.name = '人力资源部';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '人力资源部' AND a.date = '2024-09-24' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1526114356,"db_name":"hr","question":"在2024年10月2日，哪些员工在销售部工作并且他们的考勤记录显示他们当天迟到了？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND a.date = '2024-10-02' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-02' AND d.name = '销售部' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":906637391,"db_name":"hr","question":"在2024年10月11日，哪些员工的考勤记录显示他们没有按时下班（即下班时间晚于21:00），并且他们的绩效评估等级为B+？","gt_sql":"SELECT e.name, a.check_out, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-11' AND a.check_out \u003e '21:00:00' AND p.rating = 'B+';","pred_sql":"SELECT e.name, ar.check_out, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-11' AND ar.check_out \u003e '21:00:00' AND pe.rating = 'B+';","thinking":"","ambiguous":"False"}
{"id":3180358031,"db_name":"hr","question":"请列出2022年绩效评估等级为B的员工姓名、部门名称以及他们的入职日期，并按入职日期排序。","gt_sql":"SELECT e.name, d.name AS department_name, e.hire_date FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.rating = 'B' AND pe.evaluation_date \u003e= '2022-01-01' AND pe.evaluation_date \u003c '2023-01-01' ORDER BY e.hire_date;","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, e.hire_date FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.rating = 'B' AND EXTRACT(YEAR FROM pe.evaluation_date) = 2022 ORDER BY e.hire_date;","thinking":"","ambiguous":"False"}
{"id":1427670664,"db_name":"hr","question":"请列出在2024年9月22日考勤记录中，所有员工的姓名、部门名称以及他们的上班和下班时间，并且这些员工必须是在客户服务部工作。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-22' AND d.name = '客户服务部';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN attendance_records a ON e.employee_id = a.employee_id WHERE d.name = '客户服务部' AND a.date = '2024-09-22';","thinking":"","ambiguous":"False"}
{"id":2517372671,"db_name":"hr","question":"2024年9月20日，哪些部门的员工在上班时间（check_in）晚于09:00并且他们的绩效等级为B？","gt_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-20' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'B';","pred_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-20' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'B';","thinking":"","ambiguous":"False"}
{"id":2374975326,"db_name":"hr","question":"2024年10月2日最早到岗的员工是谁？","gt_sql":"SELECT e.name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id WHERE ar.date = '2024-10-02' ORDER BY ar.check_in LIMIT 1;","pred_sql":"SELECT e.name FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE ar.date = '2024-10-02' ORDER BY ar.check_in ASC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1399658957,"db_name":"hr","question":"2023年入职的员工中，哪些人在2024年10月10日有考勤记录，并且他们的绩效评估等级为B+？","gt_sql":"SELECT e.name, e.employee_id, a.date, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE e.hire_date \u003e= '2023-01-01' AND e.hire_date \u003c '2024-01-01' AND a.date = '2024-10-10' AND p.rating = 'B+';","pred_sql":"SELECT e.name, e.employee_id, ar.date, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE EXTRACT(YEAR FROM e.hire_date) = 2023 AND ar.date = '2024-10-10' AND pe.rating = 'B+';","thinking":"","ambiguous":"False"}
{"id":1337508734,"db_name":"hr","question":"2024年10月4日，哪些员工在财务部工作并且他们的考勤记录显示迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.date, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND a.date = '2024-10-04' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.date, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND ar.date = '2024-10-04' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2509046712,"db_name":"hr","question":"哪些员工在2024年9月17日有考勤记录，并且他们的绩效等级为A+？","gt_sql":"SELECT e.name, a.date, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-17' AND p.rating = 'A+';","pred_sql":"SELECT e.name, ar.date, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-17' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":1196649212,"db_name":"hr","question":"试用期延长次数最多的三名员工分别来自哪些部门？","gt_sql":"SELECT d.name AS department_name\nFROM probation_employees pe\nJOIN employees e ON pe.employee_id = e.employee_id\nJOIN departments d ON e.department_id = d.department_id\nGROUP BY pe.employee_id, d.name\nORDER BY COUNT(*) DESC\nLIMIT 3;","pred_sql":"SELECT d.name FROM probation_employees pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id GROUP BY pe.employee_id, d.name ORDER BY COUNT(*) DESC LIMIT 3;","thinking":"","ambiguous":"False"}
{"id":3455582973,"db_name":"hr","question":"2024年10月4日，哪些员工在财务部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-04' AND d.name = '财务部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND ar.date = '2024-10-04' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2169239057,"db_name":"hr","question":"请列出2023年所有获得'优秀员工'奖项的员工姓名及其所在部门的名称。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.award_name = '优秀员工' AND a.year = 2023;","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN awards a ON e.employee_id = a.employee_id WHERE a.year = 2023 AND a.award_name = '优秀员工';","thinking":"","ambiguous":"False"}
{"id":329969630,"db_name":"hr","question":"2023年有多少员工在试用期内获得了客户满意度奖？","gt_sql":"SELECT COUNT(DISTINCT pe.employee_id) FROM probation_employees pe JOIN awards a ON pe.employee_id = a.employee_id WHERE pe.status = '在职' AND a.award_name = '客户满意度奖' AND a.year = 2023;","pred_sql":"SELECT COUNT(DISTINCT e.employee_id) FROM employees e JOIN probation_employees pe ON e.employee_id = pe.employee_id JOIN awards a ON e.employee_id = a.employee_id WHERE pe.start_date \u003c= '2023-12-31' AND pe.end_date \u003e= '2023-01-01' AND a.year = 2023 AND a.award_name = '客户满意度奖';","thinking":"","ambiguous":"False"}
{"id":1957766738,"db_name":"hr","question":"在2024年9月24日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00:00），并且他们的绩效等级为C？","gt_sql":"SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-24' AND a.check_in \u003e '09:00:00' AND p.rating = 'C';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-24' AND a.check_in \u003e '09:00:00' AND p.rating = 'C';","thinking":"","ambiguous":"False"}
{"id":701997867,"db_name":"hr","question":"列出所有获得过奖项的员工的姓名和奖项名称。","gt_sql":"SELECT e.name, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id;","pred_sql":"SELECT e.name, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id;","thinking":"","ambiguous":"False"}
{"id":906781191,"db_name":"hr","question":"在2024年10月13日，哪些员工在法务部工作并且他们的考勤记录显示他们在8:30之前打卡上班？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-13' AND a.check_in \u003c '08:30:00' AND d.name = '法务部';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '法务部' AND ar.date = '2024-10-13' AND ar.check_in \u003c '08:30:00';","thinking":"","ambiguous":"False"}
{"id":388401260,"db_name":"hr","question":"2024年9月17日，哪些员工在质量控制部工作并且当天上班时间超过9小时？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-17' AND d.name = '质量控制部' AND EXTRACT(HOUR FROM (a.check_out - a.check_in)) \u003e= 9;","pred_sql":"SELECT e.name, e.employee_id, ar.check_in, ar.check_out FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND ar.date = '2024-09-17' AND (ar.check_out - ar.check_in) \u003e INTERVAL '9 hours';","thinking":"","ambiguous":"False"}
{"id":1988310183,"db_name":"hr","question":"请列出2024年9月26日所有员工的姓名、部门名称以及他们的考勤记录（包括上班和下班时间），并且这些员工的年假剩余天数大于10天。","gt_sql":"SELECT e.name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-26' AND e.remaining_annual_leave \u003e 10;","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, ar.check_in, ar.check_out FROM employees e JOIN departments d ON e.department_id = d.department_id LEFT JOIN attendance_records ar ON e.employee_id = ar.employee_id AND ar.date = '2024-09-26' WHERE e.remaining_annual_leave \u003e 10;","thinking":"","ambiguous":"False"}
{"id":2363197929,"db_name":"hr","question":"2024年10月9日，哪些员工在财务部工作并且当天考勤记录显示他们迟到了？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND a.date = '2024-10-09' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND ar.date = '2024-10-09' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":935583315,"db_name":"hr","question":"2024年10月10日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-10' AND d.name = '客户服务部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND ar.date = '2024-10-10' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3679145520,"db_name":"hr","question":"哪些员工在公司内部的创新孵化项目中表现最为活跃？这些项目对公司的长远发展有何影响？","gt_sql":"SELECT e.employee_id, e.name, COUNT(a.id) AS active_projects_count\nFROM employees e\nJOIN awards a ON e.employee_id = a.employee_id\nWHERE a.award_name = '创新奖'\nGROUP BY e.employee_id, e.name\nORDER BY active_projects_count DESC;","pred_sql":"SELECT e.employee_id, e.name, COUNT(a.id) AS active_innovation_projects FROM employees e LEFT JOIN awards a ON e.employee_id = a.employee_id WHERE a.award_name LIKE '%创新孵化%' GROUP BY e.employee_id, e.name ORDER BY active_innovation_projects DESC;","thinking":"","ambiguous":"False"}
{"id":1647521458,"db_name":"hr","question":"在2024年9月25日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且这些员工所在的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-25' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-25' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2154404311,"db_name":"hr","question":"2024年9月28日，哪些员工在客户服务部工作并且他们的绩效等级是A+？","gt_sql":"SELECT e.name, e.employee_id, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-28' AND d.name = '客户服务部' AND p.rating = 'A+';","pred_sql":"SELECT e.name, e.employee_id, pe.rating FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND pe.rating = 'A+' AND pe.evaluation_date = '2024-09-28';","thinking":"","ambiguous":"False"}
{"id":1956887122,"db_name":"hr","question":"2024年10月7日，哪些员工在法务部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-07' AND a.check_in \u003e '09:00:00' AND d.name = '法务部';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '法务部' AND ar.date = '2024-10-07' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":541499305,"db_name":"hr","question":"请列出在2024年10月14日考勤记录中，所有员工的姓名、部门名称以及他们的上班和下班时间。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, ar.check_in, ar.check_out FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-14';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, ar.check_in, ar.check_out FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-14';","thinking":"","ambiguous":"False"}
{"id":607760760,"db_name":"hr","question":"2021年获得优秀员工的员工中，哪些人在2021年1月1日之后有过考勤记录？","gt_sql":"SELECT DISTINCT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '优秀员工' AND a.year = 2021 AND ar.date \u003e '2021-01-01';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.year = 2021 AND a.award_name = '优秀员工' AND ar.date \u003e '2021-01-01' GROUP BY e.name;","thinking":"","ambiguous":"False"}
{"id":3786409554,"db_name":"hr","question":"2024年获得领导力奖的员工中，哪些人是在2017年之后入职的，并且他们的平均剩余年假天数是多少？","gt_sql":"SELECT AVG(e.remaining_annual_leave) AS avg_remaining_annual_leave FROM awards a JOIN employees e ON a.employee_id = e.employee_id WHERE a.year = 2024 AND a.award_name = '领导力奖' AND e.hire_date \u003e '2017-01-01';","pred_sql":"SELECT AVG(e.remaining_annual_leave) AS average_remaining_annual_leave FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE a.year = 2024 AND a.award_name = '领导力奖' AND e.hire_date \u003e '2017-12-31';","thinking":"","ambiguous":"False"}
{"id":1833538335,"db_name":"hr","question":"哪些员工虽然履历看似普通，但在关键决策或创新突破中起到了决定性作用？","gt_sql":"SELECT e.employee_id, e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE a.award_name IN ('创新奖', '关键决策奖')","pred_sql":"SELECT e.employee_id, e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE e.university IS NULL OR e.major IS NULL GROUP BY e.employee_id, e.name HAVING COUNT(a.id) \u003e 0;","thinking":"","ambiguous":"False"}
{"id":2571560082,"db_name":"hr","question":"在2023年12月7日进行的绩效评估中，哪些员工获得了B评级，并且他们的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-12-07' AND pe.rating = 'B';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-12-07' AND pe.rating = 'B';","thinking":"","ambiguous":"False"}
{"id":3184081384,"db_name":"hr","question":"2023年入职的员工中，有哪些人在2023年获得了奖项？请列出他们的姓名、部门名称和奖项名称。","gt_sql":"SELECT e.name, d.name AS department_name, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE e.hire_date \u003e= '2023-01-01' AND e.hire_date \u003c '2024-01-01' AND a.year = 2023;","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.award_name FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN awards a ON e.employee_id = a.employee_id WHERE EXTRACT(YEAR FROM e.hire_date) = 2023 AND a.year = 2023;","thinking":"","ambiguous":"False"}
{"id":3265054996,"db_name":"hr","question":"2024年9月25日，哪些员工在销售部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-25' AND d.name = '销售部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND ar.date = '2024-09-25' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1987469456,"db_name":"hr","question":"2024年9月20日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND a.date = '2024-09-20' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND ar.date = '2024-09-20' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3475714298,"db_name":"hr","question":"在2024年9月29日，哪些员工在客户服务部工作并且当天的工作时间超过10小时？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-29' AND d.name = '客户服务部' AND EXTRACT(EPOCH FROM (a.check_out - a.check_in)) / 3600 \u003e 10;","pred_sql":"SELECT e.name, e.employee_id, ar.check_in, ar.check_out FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-29' AND d.name = '客户服务部' AND (ar.check_out - ar.check_in) \u003e INTERVAL '10 hours';","thinking":"","ambiguous":"False"}
{"id":3158837504,"db_name":"hr","question":"2024年10月4日，哪些员工在上班时间（check_in）晚于08:30并且他们的绩效等级为A+？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-04' AND a.check_in \u003e '08:30:00' AND p.rating = 'A+';","pred_sql":"SELECT e.name, ar.check_in, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-04' AND ar.check_in \u003e '08:30:00' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":1341335041,"db_name":"hr","question":"获取所有员工的考勤记录，并统计每个员工的迟到天数。","gt_sql":"SELECT employee_id, COUNT(*) AS late_days FROM attendance_records WHERE check_in \u003e '09:00:00' GROUP BY employee_id;","pred_sql":"SELECT e.employee_id, COUNT(CASE WHEN a.check_in \u003e '09:00:00' THEN 1 END) AS late_days FROM employees e LEFT JOIN attendance_records a ON e.employee_id = a.employee_id GROUP BY e.employee_id;","thinking":"","ambiguous":"False"}
{"id":1248129462,"db_name":"hr","question":"哪些员工在2024年9月15日有考勤记录，并且他们的绩效等级为A+？","gt_sql":"SELECT e.name, e.employee_id FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-15' AND p.rating = 'A+';","pred_sql":"SELECT e.name, e.employee_id FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-15' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":2929076718,"db_name":"hr","question":"2021年获得最佳团队奖的员工中，哪些人在2024年9月19日有考勤记录？","gt_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '最佳团队奖' AND a.year = 2021 AND ar.date = '2024-09-19';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.year = 2021 AND a.award_name = '最佳团队奖' AND ar.date = '2024-09-19';","thinking":"","ambiguous":"False"}
{"id":860593492,"db_name":"hr","question":"在2024年9月21日，哪些员工在客户服务部工作并且当天有考勤记录？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-09-21';","pred_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-09-21';","thinking":"","ambiguous":"False"}
{"id":803138423,"db_name":"hr","question":"在2024年9月23日，哪些员工在财务部工作并且他们的考勤记录显示他们在9:30之前打卡上班？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-23' AND a.check_in \u003c '09:30:00' AND d.name = '财务部';","pred_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND a.date = '2024-09-23' AND a.check_in \u003c '09:30:00';","thinking":"","ambiguous":"False"}
{"id":1392351924,"db_name":"hr","question":"2024年10月9日，哪些实习生的考勤记录显示他们上班时间晚于9:00？","gt_sql":"SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id WHERE a.date = '2024-10-09' AND a.check_in \u003e '09:00:00' AND e.employee_type = '实习生';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.employee_type = '实习生' AND a.date = '2024-10-09' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2647170145,"db_name":"hr","question":"2023年获得'项目管理奖'的员工中，哪些人在2024年9月23日有考勤记录？","gt_sql":"SELECT e.name, a.date, a.check_in, a.check_out FROM awards a1 JOIN employees e ON a1.employee_id = e.employee_id JOIN attendance_records a ON e.employee_id = a.employee_id WHERE a1.award_name = '项目管理奖' AND a1.year = 2023 AND a.date = '2024-09-23';","pred_sql":"SELECT e.name, a.date, a.check_in, a.check_out FROM employees e JOIN awards aw ON e.employee_id = aw.employee_id JOIN attendance_records a ON e.employee_id = a.employee_id WHERE aw.award_name = '项目管理奖' AND aw.year = 2023 AND a.date = '2024-09-23';","thinking":"","ambiguous":"False"}
{"id":2581619009,"db_name":"hr","question":"2022年入职的员工中，哪些人在2023年获得了奖项，并且他们的绩效评估等级为A+？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE e.hire_date \u003e= '2022-01-01' AND e.hire_date \u003c '2023-01-01' AND a.year = 2023 AND pe.rating = 'A+';","pred_sql":"SELECT e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE EXTRACT(YEAR FROM e.hire_date) = 2022 AND EXTRACT(YEAR FROM a.year) = 2023 AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":2697889458,"db_name":"hr","question":"请列出在2024年10月13日考勤记录中，所有员工的姓名、部门名称以及他们的上班和下班时间，并且这些员工必须是人力资源部的成员。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-13' AND d.name = '人力资源部';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, ar.check_in, ar.check_out FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE d.name = '人力资源部' AND ar.date = '2024-10-13';","thinking":"","ambiguous":"False"}
{"id":3387668548,"db_name":"hr","question":"2024年9月18日，哪些员工在行政部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '行政部' AND a.date = '2024-09-18' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '行政部' AND ar.date = '2024-09-18' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1417292000,"db_name":"hr","question":"哪些因素（如导师计划、培训课程、轮岗经历）对新员工的快速成长贡献最大？","gt_sql":"SELECT '导师计划' AS factor, COUNT(*) AS contribution FROM employees WHERE employee_id IN (SELECT employee_id FROM performance_evaluations WHERE rating = 'A+') UNION ALL SELECT '培训课程' AS factor, COUNT(*) AS contribution FROM employees WHERE employee_id IN (SELECT employee_id FROM performance_evaluations WHERE rating = 'A+') UNION ALL SELECT '轮岗经历' AS factor, COUNT(*) AS contribution FROM employees WHERE employee_id IN (SELECT employee_id FROM performance_evaluations WHERE rating = 'A+') ORDER BY contribution DESC;","pred_sql":"SELECT e.employee_id, e.name, COUNT(DISTINCT i.id) AS interview_count, COUNT(DISTINCT a.id) AS award_count, COUNT(DISTINCT pe.id) AS evaluation_count, COUNT(DISTINCT ar.id) AS attendance_days, CASE WHEN p.employee_id IS NOT NULL THEN 1 ELSE 0 END AS has_probation FROM employees e LEFT JOIN interviews i ON e.employee_id = i.employee_id LEFT JOIN awards a ON e.employee_id = a.employee_id LEFT JOIN performance_evaluations pe ON e.employee_id = pe.employee_id AND pe.rating = 'Excellent' LEFT JOIN attendance_records ar ON e.employee_id = ar.employee_id LEFT JOIN probation_employees p ON e.employee_id = p.employee_id AND p.status = 'Completed' WHERE e.hire_date \u003e= CURRENT_DATE - INTERVAL '1 year' GROUP BY e.employee_id, e.name, p.employee_id ORDER BY award_count DESC, evaluation_count DESC, interview_count DESC;","thinking":"","ambiguous":"False"}
{"id":1597423542,"db_name":"hr","question":"2024年9月20日，哪些员工在销售部工作并且当天迟到（即上班时间晚于08:00:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND a.date = '2024-09-20' AND a.check_in \u003e '08:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND ar.date = '2024-09-20' AND ar.check_in \u003e '08:00:00';","thinking":"","ambiguous":"False"}
{"id":3397723976,"db_name":"hr","question":"每个部门中年龄最大的员工是谁？","gt_sql":"SELECT e.department_id, e.employee_id, e.name, MAX(AGE(date('now'), e.birth_date)) AS max_age FROM employees e GROUP BY e.department_id, e.employee_id, e.name;","pred_sql":"SELECT d.department_id, e.employee_id, e.name, MIN(e.birth_date) AS max_age FROM departments d JOIN employees e ON d.department_id = e.department_id GROUP BY d.department_id, e.employee_id, e.name HAVING MIN(e.birth_date) = (SELECT MIN(e2.birth_date) FROM employees e2 WHERE e2.department_id = d.department_id);","thinking":"","ambiguous":"False"}
{"id":339893232,"db_name":"hr","question":"在2024年9月30日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-30' AND d.name = '人力资源部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '人力资源部' AND a.date = '2024-09-30' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":244305078,"db_name":"hr","question":"2024年9月18日，哪些员工在研发部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-18' AND d.name = '研发部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '研发部' AND a.date = '2024-09-18' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2030661443,"db_name":"hr","question":"2024年9月28日，哪些员工在上班时间（check_in）晚于09:30并且他们的绩效等级为A+？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-28' AND a.check_in \u003e '09:30:00' AND p.rating = 'A+';","pred_sql":"SELECT e.name, ar.check_in, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-28' AND ar.check_in \u003e '09:30:00' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":2290320497,"db_name":"hr","question":"在2024年9月17日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且他们的绩效等级为B？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-17' AND a.check_in \u003e '09:00:00' AND p.rating = 'B';","pred_sql":"SELECT e.name, ar.check_in, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-17' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'B';","thinking":"","ambiguous":"False"}
{"id":2134005508,"db_name":"hr","question":"哪些员工在2024年9月22日有考勤记录，并且他们的绩效等级为D？","gt_sql":"SELECT e.name, e.employee_id, a.date, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-22' AND p.rating = 'D';","pred_sql":"SELECT e.name, e.employee_id, a.date, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-22' AND p.rating = 'D';","thinking":"","ambiguous":"False"}
{"id":3179866905,"db_name":"hr","question":"哪些员工在2024年10月3日有考勤记录，并且他们的绩效等级为A+？","gt_sql":"SELECT e.name, e.employee_id, a.date, a.check_in, a.check_out, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-03' AND p.rating = 'A+';","pred_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-03' AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":1447725797,"db_name":"hr","question":"2024年10月7日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-10-07' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND ar.date = '2024-10-07' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3166523944,"db_name":"hr","question":"显示每位员工的考勤记录及其绩效评估评级。","gt_sql":"SELECT ar.employee_id, ar.date, ar.check_in, ar.check_out, pe.rating FROM attendance_records ar JOIN performance_evaluations pe ON ar.employee_id = pe.employee_id;","pred_sql":"SELECT e.employee_id, ar.date, ar.check_in, ar.check_out, pe.rating FROM employees e LEFT JOIN attendance_records ar ON e.employee_id = ar.employee_id LEFT JOIN performance_evaluations pe ON e.employee_id = pe.employee_id;","thinking":"","ambiguous":"False"}
{"id":3133264714,"db_name":"hr","question":"在2024年10月5日，哪些员工的考勤记录显示他们迟到（即上班时间晚于9:00），并且这些员工在2021年获得了奖项？","gt_sql":"SELECT e.name, a.award_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN awards a ON e.employee_id = a.employee_id WHERE ar.date = '2024-10-05' AND ar.check_in \u003e '09:00:00' AND a.year = 2021;","pred_sql":"SELECT e.name, a.award_name FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN awards a ON e.employee_id = a.employee_id WHERE ar.date = '2024-10-05' AND ar.check_in \u003e '09:00:00' AND a.year = 2021;","thinking":"","ambiguous":"False"}
{"id":2850698943,"db_name":"hr","question":"2024年9月25日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于08:30:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND a.date = '2024-09-25' AND a.check_in \u003e '08:30:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND ar.date = '2024-09-25' AND ar.check_in \u003e '08:30:00';","thinking":"","ambiguous":"False"}
{"id":2860363666,"db_name":"hr","question":"过去三年中，每个季度产出最高的员工是否也是最严格遵守工作时间的？","gt_sql":"WITH QuarterlyPerformance AS (SELECT EXTRACT(YEAR FROM evaluation_date) AS year, EXTRACT(QUARTER FROM evaluation_date) AS quarter, employee_id, RANK() OVER (PARTITION BY EXTRACT(YEAR FROM evaluation_date), EXTRACT(QUARTER FROM evaluation_date) ORDER BY rating DESC) AS performance_rank FROM performance_evaluations WHERE evaluation_date \u003e= date('now') - INTERVAL '3 years'), QuarterlyAttendance AS (SELECT EXTRACT(YEAR FROM date) AS year, EXTRACT(QUARTER FROM date) AS quarter, employee_id, COUNT(*) FILTER (WHERE check_in IS NOT NULL AND check_out IS NOT NULL) AS full_attendance_days, COUNT(*) AS total_days, RANK() OVER (PARTITION BY EXTRACT(YEAR FROM date), EXTRACT(QUARTER FROM date) ORDER BY COUNT(*) FILTER (WHERE check_in IS NOT NULL AND check_out IS NOT NULL) DESC) AS attendance_rank FROM attendance_records WHERE date \u003e= date('now') - INTERVAL '3 years' GROUP BY EXTRACT(YEAR FROM date), EXTRACT(QUARTER FROM date), employee_id) SELECT qp.year, qp.quarter, qp.employee_id FROM QuarterlyPerformance qp JOIN QuarterlyAttendance qa ON qp.year = qa.year AND qp.quarter = qa.quarter AND qp.employee_id = qa.employee_id WHERE qp.performance_rank = 1 AND qa.attendance_rank = 1;","pred_sql":"SELECT EXTRACT(YEAR FROM pe.evaluation_date) AS year, EXTRACT(QUARTER FROM pe.evaluation_date) AS quarter, pe.employee_id, (SELECT COUNT(*) FROM attendance_records ar WHERE ar.employee_id = pe.employee_id AND EXTRACT(YEAR FROM ar.date) = EXTRACT(YEAR FROM pe.evaluation_date) AND EXTRACT(QUARTER FROM ar.date) = EXTRACT(QUARTER FROM pe.evaluation_date) AND ar.check_in \u003c= '09:15:00' AND ar.check_out \u003e= '17:45:00') * 100.0 / NULLIF((SELECT COUNT(*) FROM attendance_records ar WHERE ar.employee_id = pe.employee_id AND EXTRACT(YEAR FROM ar.date) = EXTRACT(YEAR FROM pe.evaluation_date) AND EXTRACT(QUARTER FROM ar.date) = EXTRACT(QUARTER FROM pe.evaluation_date)), 0) AS punctuality_percentage FROM performance_evaluations pe WHERE pe.rating = 'A' AND pe.evaluation_date \u003e= CURRENT_DATE - INTERVAL '3 years' GROUP BY year, quarter, pe.employee_id ORDER BY year, quarter, punctuality_percentage DESC;","thinking":"","ambiguous":"False"}
{"id":3284872060,"db_name":"hr","question":"2023年有哪些员工获得了奖项，并且他们的绩效评估等级为A+？","gt_sql":"SELECT a.employee_id, e.name, a.award_name, pe.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2023 AND pe.rating = 'A+';","pred_sql":"SELECT e.employee_id, e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2023 AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":1370529433,"db_name":"hr","question":"2022年获得'质量改进奖'的员工中，哪些人在2024年10月4日的考勤记录中迟到了？","gt_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '质量改进奖' AND a.year = 2022 AND ar.date = '2024-10-04' AND ar.check_in \u003e '08:00:00';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.year = 2022 AND a.award_name = '质量改进奖' AND ar.date = '2024-10-04' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":4101493476,"db_name":"hr","question":"2024年10月3日，哪些员工在客户服务部工作并且他们的考勤记录显示迟到（即上班时间晚于09:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-03' AND a.check_in \u003e '09:00:00' AND d.name = '客户服务部';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND ar.date = '2024-10-03' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1724137514,"db_name":"hr","question":"2024年10月2日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '人力资源部' AND a.date = '2024-10-02' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '人力资源部' AND a.date = '2024-10-02' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3595600525,"db_name":"hr","question":"2023年获得'优秀员工'奖项的员工中，哪些人的绩效等级为'A+'？","gt_sql":"SELECT e.name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2023 AND a.award_name = '优秀员工' AND p.rating = 'A+';","pred_sql":"SELECT e.name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2023 AND a.award_name = '优秀员工' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":815548435,"db_name":"hr","question":"2023年5月31日，哪些部门的员工在绩效评估中获得了A+评级？","gt_sql":"SELECT d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-05-31' AND pe.rating = 'A+';","pred_sql":"SELECT d.name FROM departments d JOIN employees e ON d.department_id = e.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE pe.evaluation_date = '2023-05-31' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":2061849622,"db_name":"hr","question":"2024年10月2日，哪些员工在上班时间（check_in）晚于9:00并且他们的绩效等级为A+？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-02' AND a.check_in \u003e '09:00:00' AND p.rating = 'A+';","pred_sql":"SELECT e.name, ar.check_in, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-02' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":1250267679,"db_name":"hr","question":"2021年获得'销售冠军'奖项的员工在2024年9月18日的考勤记录是什么？","gt_sql":"SELECT ar.date, ar.check_in, ar.check_out FROM attendance_records ar JOIN awards a ON ar.employee_id = a.employee_id WHERE a.award_name = '销售冠军' AND a.year = 2021 AND ar.date = '2024-09-18';","pred_sql":"SELECT ar.date, ar.check_in, ar.check_out FROM attendance_records ar JOIN awards a ON ar.employee_id = a.employee_id WHERE a.award_name = '销售冠军' AND a.year = 2021 AND ar.date = '2024-09-18';","thinking":"","ambiguous":"False"}
{"id":1929429344,"db_name":"hr","question":"2023年5月27日，哪些员工在绩效评估中获得了A+评级，并且他们的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-05-27' AND pe.rating = 'A+';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-05-27' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":3689323727,"db_name":"hr","question":"在2024年9月16日，哪些员工的考勤记录显示他们迟到了，并且这些员工所属的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-16' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-16' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2977986068,"db_name":"hr","question":"列出所有员工的姓名及其部门名称。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN departments d ON e.department_id = d.department_id;","pred_sql":"SELECT e.name, d.name FROM employees e LEFT JOIN departments d ON e.department_id = d.department_id;","thinking":"","ambiguous":"False"}
{"id":3402561235,"db_name":"hr","question":"入职时间最长但职位级别最低的员工是谁？","gt_sql":"SELECT * FROM employees ORDER BY hire_date ASC, position DESC LIMIT 1;","pred_sql":"SELECT e.employee_id, e.name, e.birth_date, e.hire_date, e.start_work_date, e.position, e.university, e.major, (CURRENT_DATE - e.hire_date) AS employment_duration FROM employees e WHERE e.hire_date = (SELECT MIN(hire_date) FROM employees) AND e.position = (SELECT MIN(position) FROM employees WHERE hire_date = (SELECT MIN(hire_date) FROM employees)) LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":3958686389,"db_name":"hr","question":"在2024年，部门ID为D00007的员工中，哪些人的绩效评估等级为A？","gt_sql":"SELECT e.name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE e.department_id = 'D00007' AND pe.rating = 'A' AND pe.evaluation_date \u003e= '2024-01-01' AND pe.evaluation_date \u003c '2025-01-01';","pred_sql":"SELECT e.name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE e.department_id = 'D00007' AND pe.rating = 'A' AND EXTRACT(YEAR FROM pe.evaluation_date) = 2024;","thinking":"","ambiguous":"False"}
{"id":3786147845,"db_name":"hr","question":"2022年获得创新奖的员工中，有哪些人在2024年10月12日的考勤记录中迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '创新奖' AND a.year = 2022 AND ar.date = '2024-10-12' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.year = 2022 AND a.award_name = '创新奖' AND ar.date = '2024-10-12' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1159542995,"db_name":"hr","question":"在2024年9月23日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且这些员工所属的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-23' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-23' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3254827737,"db_name":"hr","question":"2023年有多少员工获得了质量改进奖，并且他们的绩效评估等级为A+？","gt_sql":"SELECT COUNT(DISTINCT a.employee_id) FROM awards a JOIN performance_evaluations p ON a.employee_id = p.employee_id WHERE a.award_name = '质量改进奖' AND a.year = 2023 AND p.rating = 'A+';","pred_sql":"SELECT COUNT(DISTINCT e.employee_id) FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2023 AND a.award_name = '质量改进奖' AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":3909320290,"db_name":"hr","question":"2024年9月23日，哪些部门的员工在上班时间晚于8:00并且下班时间早于18:00？","gt_sql":"SELECT d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-23' AND ar.check_in \u003e '08:00:00' AND ar.check_out \u003c '18:00:00';","pred_sql":"SELECT DISTINCT d.name FROM departments d JOIN employees e ON d.department_id = e.department_id JOIN attendance_records a ON e.employee_id = a.employee_id WHERE a.date = '2024-09-23' AND a.check_in \u003e '08:00:00' AND a.check_out \u003c '18:00:00';","thinking":"","ambiguous":"False"}
{"id":628072208,"db_name":"hr","question":"2023年10月9日，哪些部门的员工在面试中表现出色并获得了优秀员工奖？","gt_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN awards a ON e.employee_id = a.employee_id JOIN interviews i ON e.employee_id = i.employee_id WHERE a.award_name = '优秀员工' AND i.interview_date = '2023-10-09';","pred_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN interviews i ON e.employee_id = i.employee_id JOIN awards a ON e.employee_id = a.employee_id WHERE i.interview_date = '2023-10-09' AND a.award_name = '优秀员工奖';","thinking":"","ambiguous":"False"}
{"id":3286899081,"db_name":"hr","question":"在2024年10月12日，哪些员工在上午9点前打卡上班，并且他们的绩效等级为'B+'？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-12' AND a.check_in \u003c '09:00:00' AND p.rating = 'B+';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-12' AND a.check_in \u003c '09:00:00' AND p.rating = 'B+';","thinking":"","ambiguous":"False"}
{"id":2517269758,"db_name":"hr","question":"在2024年9月20日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效评估等级为A+？","gt_sql":"SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-20' AND a.check_in \u003e '09:00:00' AND p.rating = 'A+';","pred_sql":"SELECT e.name, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-20' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":3866100328,"db_name":"hr","question":"2021年获得'质量改进奖'的员工中，哪些人的绩效等级为'B+'？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2021 AND a.award_name = '质量改进奖' AND pe.rating = 'B+';","pred_sql":"SELECT e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2021 AND a.award_name = '质量改进奖' AND p.rating = 'B+';","thinking":"","ambiguous":"False"}
{"id":3469101707,"db_name":"hr","question":"2024年9月29日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于08:30:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-29' AND a.check_in \u003e '08:30:00' AND d.name = '客户服务部';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND ar.date = '2024-09-29' AND ar.check_in \u003e '08:30:00';","thinking":"","ambiguous":"False"}
{"id":2797510377,"db_name":"hr","question":"2024年9月16日，哪些员工在上班时间（check_in）晚于08:30:00，并且他们的部门负责人是谁？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, d.manager_id FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-16' AND ar.check_in \u003e '08:30:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, d.manager_id FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-16' AND a.check_in \u003e '08:30:00';","thinking":"","ambiguous":"False"}
{"id":2587625643,"db_name":"hr","question":"在2024年10月1日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且他们的职位是顾问？","gt_sql":"SELECT e.name, e.position, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE a.date = '2024-10-01' AND a.check_in \u003e '09:00:00' AND e.position = '顾问';","pred_sql":"SELECT e.name, e.position, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE ar.date = '2024-10-01' AND ar.check_in \u003e '09:00:00' AND e.position = '顾问';","thinking":"","ambiguous":"False"}
{"id":2556819995,"db_name":"hr","question":"2024年9月23日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-09-23' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND ar.date = '2024-09-23' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2163155798,"db_name":"hr","question":"过去五年中，每年的技术创新奖获得者，其创新成果对公司业务的实际影响如何？","gt_sql":"SELECT a.year, e.name, a.award_name, pe.status\nFROM awards a\nJOIN employees e ON a.employee_id = e.employee_id\nLEFT JOIN probation_employees pe ON a.employee_id = pe.employee_id\nWHERE a.award_name = '创新奖' AND a.year \u003e= EXTRACT(YEAR FROM date('now')) - 5;","pred_sql":"SELECT a.year, e.name, a.award_name, pe.rating AS innovation_status FROM awards a JOIN employees e ON a.employee_id = e.employee_id LEFT JOIN performance_evaluations pe ON a.employee_id = pe.employee_id AND pe.evaluation_date \u003e= a.year::text::date WHERE a.award_name LIKE '%技术创新%' AND a.year \u003e= EXTRACT(YEAR FROM CURRENT_DATE) - 5 ORDER BY a.year DESC;","thinking":"","ambiguous":"False"}
{"id":1599035554,"db_name":"hr","question":"2024年10月6日，哪些员工在财务部工作并且当天迟到（上班时间晚于09:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-06' AND a.check_in \u003e '09:00:00' AND d.name = '财务部';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND ar.date = '2024-10-06' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3248411469,"db_name":"hr","question":"在2024年10月4日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且这些员工所在的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-04' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-04' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2257279104,"db_name":"hr","question":"请列出在2024年10月4日有考勤记录的员工姓名及其所属部门名称。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-04';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN attendance_records a ON e.employee_id = a.employee_id WHERE a.date = '2024-10-04';","thinking":"","ambiguous":"False"}
{"id":2036213054,"db_name":"hr","question":"在2023年，哪些员工获得了奖项并且在同一年进行了绩效评估？请列出他们的员工ID、奖项名称、绩效等级和评估日期。","gt_sql":"SELECT a.employee_id, a.award_name, pe.rating, pe.evaluation_date FROM awards a JOIN performance_evaluations pe ON a.employee_id = pe.employee_id WHERE a.year = 2023 AND pe.evaluation_date \u003e= '2023-01-01' AND pe.evaluation_date \u003c '2024-01-01';","pred_sql":"SELECT e.employee_id, a.award_name, p.rating, p.evaluation_date FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE EXTRACT(YEAR FROM a.year) = 2023 AND EXTRACT(YEAR FROM p.evaluation_date) = 2023;","thinking":"","ambiguous":"False"}
{"id":2231439732,"db_name":"hr","question":"请列出在2024年10月10日所有迟到的员工姓名及其所属部门名称，迟到的定义为上班时间晚于上午9:30。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-10' AND ar.check_in \u003e '09:30:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN attendance_records a ON e.employee_id = a.employee_id WHERE a.date = '2024-10-10' AND a.check_in \u003e '09:30:00';","thinking":"","ambiguous":"False"}
{"id":1852561007,"db_name":"hr","question":"请列出2024年9月19日所有员工的姓名、部门名称以及他们的上班和下班时间。","gt_sql":"SELECT e.name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-19';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM employees e JOIN departments d ON e.department_id = d.department_id LEFT JOIN attendance_records a ON e.employee_id = a.employee_id AND a.date = '2024-09-19';","thinking":"","ambiguous":"False"}
{"id":3057784484,"db_name":"hr","question":"2024年10月3日，哪些员工在行政部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-03' AND d.name = '行政部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '行政部' AND ar.date = '2024-10-03' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":604055577,"db_name":"hr","question":"哪个部门的员工平均剩余年假最多？","gt_sql":"SELECT e.department_id, AVG(e.remaining_annual_leave) AS avg_remaining_annual_leave FROM employees e GROUP BY e.department_id ORDER BY avg_remaining_annual_leave DESC LIMIT 1;","pred_sql":"SELECT d.department_id, AVG(e.remaining_annual_leave) AS average_remaining_leave FROM departments d JOIN employees e ON d.department_id = e.department_id GROUP BY d.department_id ORDER BY average_remaining_leave DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1799658813,"db_name":"hr","question":"2024年9月27日，哪些员工在上午10点之前打卡上班，并且他们的绩效等级为A+？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-27' AND a.check_in \u003c '10:00:00' AND p.rating = 'A+';","pred_sql":"SELECT e.name, a.check_in, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-27' AND a.check_in \u003c '10:00:00' AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":556306212,"db_name":"hr","question":"查询在2024年进行面试的所有员工的面试日期及次数。","gt_sql":"SELECT interview_date, interview_count FROM interviews WHERE interview_date \u003e= '2024-01-01' AND interview_date \u003c '2025-01-01';","pred_sql":"SELECT interview_date, interview_count FROM interviews WHERE EXTRACT(YEAR FROM interview_date) = 2024;","thinking":"","ambiguous":"False"}
{"id":3669286537,"db_name":"hr","question":"在2024年9月20日，哪些员工的考勤记录显示他们迟到了，并且这些员工所在的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-20' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-20' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1975822937,"db_name":"hr","question":"2024年9月29日，哪些员工在研发部工作并且他们的绩效等级为B+？","gt_sql":"SELECT e.name, e.employee_id, d.name AS department_name, pe.rating FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE d.name = '研发部' AND pe.rating = 'B+' AND ar.date = '2024-09-29';","pred_sql":"SELECT e.name, e.employee_id, d.name AS department_name, pe.rating FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE d.name = '研发部' AND pe.rating = 'B+' AND pe.evaluation_date = '2024-09-29';","thinking":"","ambiguous":"False"}
{"id":1362951886,"db_name":"hr","question":"2022年获得'销售冠军'奖项的员工在2024年10月10日的考勤记录是什么？","gt_sql":"SELECT ar.id, ar.employee_id, ar.date, ar.check_in, ar.check_out FROM attendance_records ar JOIN awards a ON ar.employee_id = a.employee_id WHERE a.award_name = '销售冠军' AND a.year = 2022 AND ar.date = '2024-10-10';","pred_sql":"SELECT ar.id, ar.employee_id, ar.date, ar.check_in, ar.check_out FROM attendance_records ar JOIN awards a ON ar.employee_id = a.employee_id WHERE a.award_name = '销售冠军' AND a.year = 2022 AND ar.date = '2024-10-10';","thinking":"","ambiguous":"False"}
{"id":2799760973,"db_name":"hr","question":"2023年获得客户满意度奖的员工中，哪些人是在2020年6月19日之后入职的？","gt_sql":"SELECT e.name, e.hire_date, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE a.award_name = '客户满意度奖' AND a.year = 2023 AND e.hire_date \u003e '2020-06-19';","pred_sql":"SELECT e.name, e.hire_date, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE a.year = 2023 AND a.award_name = '客户满意度奖' AND e.hire_date \u003e '2020-06-19';","thinking":"","ambiguous":"False"}
{"id":1692765210,"db_name":"hr","question":"在2024年9月22日，哪些员工在上班时间（check_in）晚于9:00并且他们的绩效评估等级为A+？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-22' AND a.check_in \u003e '09:00:00' AND p.rating = 'A+';","pred_sql":"SELECT e.name, ar.check_in, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-22' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":804998806,"db_name":"hr","question":"2022年6月20日，哪些部门的员工在绩效评估中获得了C评级？","gt_sql":"SELECT d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2022-06-20' AND pe.rating = 'C';","pred_sql":"SELECT DISTINCT d.name FROM departments d JOIN employees e ON d.department_id = e.department_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE p.evaluation_date = '2022-06-20' AND p.rating = 'C';","thinking":"","ambiguous":"False"}
{"id":170694593,"db_name":"hr","question":"哪些员工在2024年获得了'客户满意度奖'，并且他们的绩效评估等级为'C'？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.award_name = '客户满意度奖' AND a.year = 2024 AND pe.rating = 'C';","pred_sql":"SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2024 AND a.award_name = '客户满意度奖' AND pe.rating = 'C';","thinking":"","ambiguous":"False"}
{"id":2091607073,"db_name":"hr","question":"2023年获得'项目管理奖'的员工中，哪些人每天的平均工作时长超过10小时？","gt_sql":"SELECT e.name, AVG(EXTRACT(EPOCH FROM (ar.check_out - ar.check_in)) / 3600) AS avg_work_hours FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN awards a ON e.employee_id = a.employee_id WHERE a.award_name = '项目管理奖' AND a.year = 2023 GROUP BY e.name HAVING AVG(EXTRACT(EPOCH FROM (ar.check_out - ar.check_in)) / 3600) \u003e 10;","pred_sql":"SELECT e.name, AVG(EXTRACT(EPOCH FROM (ar.check_out - ar.check_in))/3600) AS daily_avg_work_hours FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN awards a ON e.employee_id = a.employee_id WHERE a.year = 2023 AND a.award_name = '项目管理奖' GROUP BY e.name HAVING AVG(EXTRACT(EPOCH FROM (ar.check_out - ar.check_in))/3600) \u003e 10;","thinking":"","ambiguous":"False"}
{"id":2894384990,"db_name":"hr","question":"2023年3月9日，哪些员工在绩效评估中获得了'D'评级，并且他们的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-03-09' AND pe.rating = 'D';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-03-09' AND pe.rating = 'D';","thinking":"","ambiguous":"False"}
{"id":1149281173,"db_name":"hr","question":"长期致力于某个专业领域的专家型员工，其知识的深度和广度如何影响团队的整体实力？","gt_sql":"SELECT e.employee_id, e.name, e.major, e.hire_date, pe.rating, a.award_name\nFROM employees e\nJOIN performance_evaluations pe ON e.employee_id = pe.employee_id\nLEFT JOIN awards a ON e.employee_id = a.employee_id\nWHERE e.major IS NOT NULL AND e.hire_date \u003c date('now') - INTERVAL '5 years'\nORDER BY pe.rating DESC;","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":1884200158,"db_name":"hr","question":"请列出在2024年10月8日考勤记录中，所有员工的姓名、部门名称以及他们的上班和下班时间。","gt_sql":"SELECT e.name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-08';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-08';","thinking":"","ambiguous":"False"}
{"id":2557740373,"db_name":"hr","question":"2024年9月26日，哪些员工在人力资源部工作并且当天上班时间晚于9:00？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-26' AND a.check_in \u003e '09:00:00' AND d.name = '人力资源部';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '人力资源部' AND ar.date = '2024-09-26' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3799739588,"db_name":"hr","question":"在2024年9月28日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为A+？","gt_sql":"SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-28' AND a.check_in \u003e '09:00:00' AND p.rating = 'A+';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-28' AND a.check_in \u003e '09:00:00' AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":1074403791,"db_name":"hr","question":"在2024年9月20日，哪些员工在研发部工作并且他们的考勤记录显示他们迟到了？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '研发部' AND a.date = '2024-09-20' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-20' AND d.name = '研发部' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1640643914,"db_name":"hr","question":"2024年10月13日，哪些部门的员工在上班时间（check_in）晚于9:00，并且这些员工的绩效等级为'A+'？","gt_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-13' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'A+';","pred_sql":"SELECT d.name AS department_name, e.name AS employee_name FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-13' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":3875469036,"db_name":"hr","question":"2023年获得'销售冠军'奖项的员工中，哪些人的绩效评估等级为'B'或以上？","gt_sql":"SELECT e.name, a.award_name, p.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2023 AND a.award_name = '销售冠军' AND p.rating IN ('B', 'A+', 'A')","pred_sql":"SELECT e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2023 AND a.award_name = '销售冠军' AND p.rating IN ('A', 'B');","thinking":"","ambiguous":"False"}
{"id":1182082319,"db_name":"hr","question":"2024年9月17日，哪些员工在财务部工作并且当天上班时间超过9小时？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-17' AND d.name = '财务部' AND EXTRACT(HOUR FROM (a.check_out - a.check_in)) \u003e= 9;","pred_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND a.date = '2024-09-17' AND (a.check_out - a.check_in) \u003e interval '9 hours';","thinking":"","ambiguous":"False"}
{"id":219564979,"db_name":"hr","question":"在2024年9月18日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的部门负责人是谁？","gt_sql":"SELECT e.name AS employee_name, e.employee_id, a.check_in, d.name AS department_name, d.manager_id FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-18' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name AS employee_name, e.employee_id, ar.check_in, d.name AS department_name, d.manager_id FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-18' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2296352057,"db_name":"hr","question":"2023年获得'技术突破奖'的员工中，哪些人在2024年9月23日的考勤记录中迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN awards aw ON e.employee_id = aw.employee_id WHERE aw.award_name = '技术突破奖' AND aw.year = 2023 AND a.date = '2024-09-23' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN awards aw ON e.employee_id = aw.employee_id JOIN attendance_records a ON e.employee_id = a.employee_id WHERE aw.award_name = '技术突破奖' AND aw.year = 2023 AND a.date = '2024-09-23' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3848854887,"db_name":"hr","question":"2024年9月26日，哪些员工在运营部工作并且当天有考勤记录？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '运营部' AND a.date = '2024-09-26';","pred_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '运营部' AND a.date = '2024-09-26';","thinking":"","ambiguous":"False"}
{"id":4144781586,"db_name":"hr","question":"2020年获得“优秀员工”奖项的员工中，哪些人在2023年的绩效评估中评级为C？","gt_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2020 AND a.award_name = '优秀员工' AND p.rating = 'C' AND p.evaluation_date \u003e= '2023-01-01' AND p.evaluation_date \u003c '2024-01-01';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2020 AND a.award_name = '优秀员工' AND EXTRACT(YEAR FROM p.evaluation_date) = 2023 AND p.rating = 'C';","thinking":"","ambiguous":"False"}
{"id":543593806,"db_name":"hr","question":"2024年10月3日，哪些员工在上班时间迟到并且他们的绩效等级为C？","gt_sql":"SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-03' AND a.check_in \u003e '09:00:00' AND p.rating = 'C';","pred_sql":"SELECT e.name, ar.check_in, pe.rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-03' AND ar.check_in \u003e '09:00:00' AND pe.rating = 'C';","thinking":"","ambiguous":"False"}
{"id":3302179394,"db_name":"hr","question":"2024年10月12日，哪些员工在法务部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-12' AND d.name = '法务部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-12' AND d.name = '法务部' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1798514231,"db_name":"hr","question":"近5年来，每年面试通过率（最终入职的比例）最高的部门是哪个？","gt_sql":"WITH InterviewCounts AS (SELECT EXTRACT(YEAR FROM interview_date) AS year, department_id, COUNT(*) AS total_interviews FROM interviews JOIN employees ON interviews.employee_id = employees.employee_id WHERE interview_date \u003e= date('now') - INTERVAL '5 years' GROUP BY year, department_id), HiredCounts AS (SELECT EXTRACT(YEAR FROM hire_date) AS year, department_id, COUNT(*) AS total_hired FROM employees WHERE hire_date \u003e= date('now') - INTERVAL '5 years' GROUP BY year, department_id) SELECT ic.year, ic.department_id, (hc.total_hired / ic.total_interviews) AS hire_rate FROM InterviewCounts ic JOIN HiredCounts hc ON ic.year = hc.year AND ic.department_id = hc.department_id ORDER BY ic.year, hire_rate DESC;","pred_sql":"SELECT EXTRACT(YEAR FROM i.interview_date) AS year, e.department_id, COUNT(DISTINCT e.employee_id) * 100.0 / COUNT(DISTINCT i.employee_id) AS hire_rate FROM interviews i LEFT JOIN employees e ON i.employee_id = e.employee_id WHERE i.interview_date \u003e= CURRENT_DATE - INTERVAL '5 years' GROUP BY year, e.department_id ORDER BY year, hire_rate DESC;","thinking":"","ambiguous":"False"}
{"id":2882208186,"db_name":"hr","question":"在2024年10月12日，哪些员工在清华大学毕业并且当天有考勤记录？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-10-12';","pred_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-10-12';","thinking":"","ambiguous":"False"}
{"id":2752876678,"db_name":"hr","question":"2023年获得领导力奖的员工中，哪些人在2024年10月1日的考勤记录中迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '领导力奖' AND a.year = 2023 AND ar.date = '2024-10-01' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.year = 2023 AND a.award_name = '领导力奖' AND ar.date = '2024-10-01' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2550918549,"db_name":"hr","question":"在2023年获得'销售冠军'奖项的员工中，哪些人在2024年9月22日的考勤记录中迟到了？","gt_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '销售冠军' AND a.year = 2023 AND ar.date = '2024-09-22' AND ar.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.year = 2023 AND a.award_name = '销售冠军' AND ar.date = '2024-09-22' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2654497153,"db_name":"hr","question":"2024年10月10日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于09:00）？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-10' AND a.check_in \u003e '09:00:00' AND d.name = '人力资源部';","pred_sql":"SELECT e.name, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '人力资源部' AND ar.date = '2024-10-10' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":776263740,"db_name":"hr","question":"2023年4月20日，哪些员工在绩效评估中获得了D评级，并且他们的部门名称是什么？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-04-20' AND pe.rating = 'D';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-04-20' AND pe.rating = 'D';","thinking":"","ambiguous":"False"}
{"id":1728657056,"db_name":"hr","question":"近两年内既获得过奖项又有绩效提升的员工比例是多少？","gt_sql":"SELECT COUNT(DISTINCT pe.employee_id) * 1.0 / COUNT(DISTINCT e.employee_id) AS award_and_performance_ratio\nFROM employees e\nLEFT JOIN (\n    SELECT a.employee_id\n    FROM awards a\n    WHERE a.year \u003e= EXTRACT(YEAR FROM date('now')) - 2\n    INTERSECT\n    SELECT p.employee_id\n    FROM performance_evaluations p\n    WHERE p.evaluation_date \u003e= date('now') - INTERVAL '2 years'\n) pe ON e.employee_id = pe.employee_id;","pred_sql":"SELECT COUNT(DISTINCT CASE WHEN a.employee_id IS NOT NULL AND p.employee_id IS NOT NULL THEN e.employee_id END) * 100.0 / COUNT(DISTINCT e.employee_id) AS percentage FROM employees e LEFT JOIN awards a ON e.employee_id = a.employee_id AND a.year \u003e= EXTRACT(YEAR FROM CURRENT_DATE) - 1 LEFT JOIN performance_evaluations p ON e.employee_id = p.employee_id AND p.evaluation_date \u003e= CURRENT_DATE - INTERVAL '2 years' AND p.rating IN ('Improved', 'Excellent', 'Outstanding');","thinking":"","ambiguous":"False"}
{"id":4069271992,"db_name":"hr","question":"2023年入职的员工中，哪些人在2023年获得了优秀员工奖，并且他们的绩效评估等级为A+？","gt_sql":"SELECT e.employee_id, e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE e.hire_date \u003e= '2023-01-01' AND e.hire_date \u003c '2024-01-01' AND a.award_name = '优秀员工' AND pe.rating = 'A+' AND pe.evaluation_date \u003e= '2023-01-01' AND pe.evaluation_date \u003c '2024-01-01';","pred_sql":"SELECT e.employee_id, e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE EXTRACT(YEAR FROM e.hire_date) = 2023 AND EXTRACT(YEAR FROM a.year) = 2023 AND a.award_name = '优秀员工奖' AND p.rating = 'A+';","thinking":"","ambiguous":"False"}
{"id":2408826226,"db_name":"hr","question":"在2024年9月21日，哪些员工在客户服务部工作并且他们的考勤记录显示他们当天迟到了？","gt_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-09-21' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-09-21' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2252548426,"db_name":"hr","question":"获取所有员工的考勤记录，并计算他们的总工作时长。","gt_sql":"SELECT employee_id, SUM(EXTRACT(EPOCH FROM (check_out - check_in))) AS total_work_seconds FROM attendance_records GROUP BY employee_id;","pred_sql":"SELECT e.employee_id, SUM(EXTRACT(EPOCH FROM (a.check_out - a.check_in))) AS total_work_duration_seconds FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id GROUP BY e.employee_id;","thinking":"","ambiguous":"False"}
{"id":141603518,"db_name":"hr","question":"2024年9月15日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-15' AND d.name = '客户服务部' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND ar.date = '2024-09-15' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":3509550647,"db_name":"hr","question":"2021年获得创新奖的员工中，哪些人在2024年10月5日的考勤记录中迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, a.date, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN awards aw ON e.employee_id = aw.employee_id WHERE aw.award_name = '创新奖' AND aw.year = 2021 AND a.date = '2024-10-05' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, a.date, a.check_in FROM employees e JOIN awards aw ON e.employee_id = aw.employee_id JOIN attendance_records a ON e.employee_id = a.employee_id WHERE aw.award_name = '创新奖' AND aw.year = 2021 AND a.date = '2024-10-05' AND a.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":102704152,"db_name":"hr","question":"哪些员工在2024年获得了奖项，并且他们的绩效评估等级为C？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2024 AND pe.rating = 'C';","pred_sql":"SELECT e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2024 AND p.rating = 'C';","thinking":"","ambiguous":"False"}
{"id":4066261878,"db_name":"hr","question":"2024年有哪些员工获得了'领导力奖'，并且他们的绩效等级是'C'？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2024 AND a.award_name = '领导力奖' AND pe.rating = 'C';","pred_sql":"SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2024 AND a.award_name = '领导力奖' AND pe.rating = 'C';","thinking":"","ambiguous":"False"}
{"id":7133946,"db_name":"hr","question":"2024年9月19日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND a.date = '2024-09-19' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND ar.date = '2024-09-19' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":2339648,"db_name":"hr","question":"2024年获得'项目管理奖'的员工中，哪些人在2024年9月23日有考勤记录？","gt_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '项目管理奖' AND a.year = 2024 AND ar.date = '2024-09-23';","pred_sql":"SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.year = 2024 AND a.award_name = '项目管理奖' AND ar.date = '2024-09-23';","thinking":"","ambiguous":"False"}
{"id":1476916008,"db_name":"hr","question":"请列出在2024年9月20日有考勤记录的员工姓名、部门名称以及他们的绩效等级（如果有）。","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, pe.rating AS performance_rating FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id LEFT JOIN performance_evaluations pe ON e.employee_id = pe.employee_id AND pe.evaluation_date = '2024-09-20' WHERE ar.date = '2024-09-20';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, pe.rating AS performance_rating FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id LEFT JOIN departments d ON e.department_id = d.department_id LEFT JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-20';","thinking":"","ambiguous":"False"}
{"id":2848971755,"db_name":"hr","question":"2024年9月26日，哪些员工在上班时间（check_in）晚于09:30:00，并且他们的部门负责人是谁？","gt_sql":"SELECT e.name AS employee_name, d.name AS department_name, d.manager_id FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-26' AND ar.check_in \u003e '09:30:00';","pred_sql":"SELECT e.name AS employee_name, d.name AS department_name, d.manager_id FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-26' AND a.check_in \u003e '09:30:00';","thinking":"","ambiguous":"False"}
{"id":1510555187,"db_name":"hr","question":"2024年10月3日，哪些员工在清华大学毕业并且当天迟到（即上班时间晚于9:00）？","gt_sql":"SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-10-03' AND a.check_in \u003e '09:00:00';","pred_sql":"SELECT e.name, e.employee_id, ar.check_in FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE e.university = '清华大学' AND ar.date = '2024-10-03' AND ar.check_in \u003e '09:00:00';","thinking":"","ambiguous":"False"}
{"id":1954114065,"db_name":"hr","question":"2024年10月1日，哪些员工在研发部工作并且当天的工作时长超过10小时？","gt_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-01' AND d.name = '研发部' AND EXTRACT(EPOCH FROM (a.check_out - a.check_in)) / 3600 \u003e 10;","pred_sql":"SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '研发部' AND a.date = '2024-10-01' AND (a.check_out - a.check_in) \u003e INTERVAL '10 hours';","thinking":"","ambiguous":"False"}
{"id":3968556416,"db_name":"hr","question":"2023年获得'优秀员工'奖项的员工中，哪些人同时在2023年有绩效评估记录，并且他们的绩效等级是什么？","gt_sql":"SELECT e.name, a.award_name, pe.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2023 AND a.award_name = '优秀员工' AND pe.evaluation_date \u003e= '2023-01-01' AND pe.evaluation_date \u003c '2024-01-01';","pred_sql":"SELECT e.name, a.award_name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2023 AND a.award_name = '优秀员工' AND EXTRACT(YEAR FROM p.evaluation_date) = 2023;","thinking":"","ambiguous":"False"}
{"id":2192717523,"db_name":"loan_user","question":"在2024年7月19日，哪些客户的存款账户余额超过100000，并且同时拥有贷款余额超过500000的贷款？请列出这些客户的客户编号、存款账户余额、贷款余额以及贷款种类。","gt_sql":"SELECT d.cust_no, d.acct_bal, l.loan_balance, l.loan_type FROM deposit_account_info d JOIN loan_detail_info l ON d.cust_no = l.cust_id WHERE d.data_dt = '2024-07-19' AND l.dw_date = '2024-07-19' AND d.acct_bal \u003e 100000 AND l.loan_balance \u003e 500000;","pred_sql":"SELECT d.cust_no, d.acct_bal, SUM(l.loan_balance) AS total_loan_balance, l.loan_type FROM deposit_account_info d JOIN loan_detail_info l ON d.cust_no = l.cust_id WHERE d.data_dt = '2024-07-19' AND d.acct_bal \u003e 100000 AND l.loan_balance \u003e 500000 GROUP BY d.cust_no, d.acct_bal, l.loan_type HAVING SUM(l.loan_balance) \u003e 500000;","thinking":"","ambiguous":"False"}
{"id":747211607,"db_name":"loan_user","question":"在2024年7月2日，哪些客户持有美元理财产品，并且其理财余额超过5000000美元？","gt_sql":"SELECT cust_no, wealth_bal FROM financial_products WHERE data_dt = '2024-07-02' AND currency = 'USD' AND wealth_bal \u003e 5000000;","pred_sql":"SELECT fp.cust_no, fp.wealth_bal FROM financial_products fp JOIN currency c ON fp.currency = c.curr_code WHERE fp.data_dt = '2024-07-02' AND c.curr_full_name = 'US Dollar' AND fp.wealth_bal \u003e 5000000;","thinking":"","ambiguous":"False"}
{"id":218132520,"db_name":"loan_user","question":"请查询2024年7月22日所有属于'不良'大类的五级分类名称和对应的五级分类代码。","gt_sql":"SELECT rs_type_name, rs_type_id FROM five_level_classification WHERE rs_type = '不良' AND data_dt = '2024-07-22';","pred_sql":"SELECT rs_type_name, rs_type_id FROM five_level_classification WHERE rs_type = '不良' AND data_dt = '2024-07-22';","thinking":"","ambiguous":"False"}
{"id":175056471,"db_name":"loan_user","question":"获取所有用户的姓名、职业名称和还款描述，按还款金额降序排列。","gt_sql":"SELECT c.customer_name, o.occupation_name, lr.description FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_repayment lr ON c.id = lr.loan_application_id ORDER BY lr.repayment_amount DESC;","pred_sql":"SELECT c.customer_name, o.occupation_name, lr.description FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_application la ON c.id = la.customer_id JOIN loan_repayment lr ON la.id = lr.loan_application_id ORDER BY lr.repayment_amount DESC;","thinking":"","ambiguous":"False"}
{"id":334027216,"db_name":"loan_user","question":"查询所有职业为'护士'的客户的基本信息，包括客户姓名、身份证号、手机号、电子邮件和住址，并按客户姓名排序。","gt_sql":"SELECT c.customer_name, c.id_number, c.phone_number, c.email, c.address FROM customer c JOIN occupation o ON c.occupation_id = o.id WHERE o.occupation_name = '护士' ORDER BY c.customer_name;","pred_sql":"SELECT customer_name, id_number, phone_number, email, address FROM customer WHERE occupation_id = (SELECT id FROM occupation WHERE occupation_name = '护士') ORDER BY customer_name;","thinking":"","ambiguous":"False"}
{"id":3272129262,"db_name":"loan_user","question":"在2024年7月19日，沈阳分行的客户中，有多少对私客户同时拥有存款账户和贷款？","gt_sql":"SELECT COUNT(DISTINCT da.cust_no) FROM deposit_account_info da JOIN loan_detail_info ld ON da.cust_no = ld.cust_id WHERE da.data_dt = '2024-08-19' AND da.bank_nm = '沈阳分行' AND da.cust_type = '对私' AND ld.cust_type = '对私' AND ld.dw_date = '2024-07-19';","pred_sql":"SELECT COUNT(DISTINCT d.cust_no) AS private_customers_with_both_accounts FROM deposit_account_info d JOIN loan_detail_info l ON d.cust_no = l.cust_id JOIN bank_orgnization b ON d.org_no = b.bank_id WHERE d.data_dt = '2024-07-19' AND b.bank_name = '沈阳分行' AND d.cust_type = '2' AND l.dw_date = '2024-07-19';","thinking":"","ambiguous":"False"}
{"id":2889578956,"db_name":"loan_user","question":"查询2023年6月30日所有外币的币种代码、全名以及对应的银行机构名称和层级。","gt_sql":"SELECT c.curr_code, c.curr_full_name, b.bank_name, b.bank_level FROM currency c JOIN bank_orgnization b ON c.data_dt = b.data_dt WHERE c.curr_class = '外币' AND c.data_dt = '2023-06-30';","pred_sql":"SELECT c.curr_code, c.curr_full_name, b.bank_name, b.bank_level FROM currency c JOIN bank_orgnization b ON c.data_dt = b.data_dt WHERE c.data_dt = '2023-06-30' AND c.curr_class \u003c\u003e 'CNY';","thinking":"","ambiguous":"False"}
{"id":88302712,"db_name":"loan_user","question":"查找所有存款类型的产品编号和名称，要求数据日期为2024年7月22日。","gt_sql":"SELECT deposit_id, deposit_name FROM deposit_type WHERE data_dt = '2024-07-22';","pred_sql":"SELECT deposit_id, deposit_name FROM deposit_type WHERE data_dt = '2024-07-22';","thinking":"","ambiguous":"False"}
{"id":1348647978,"db_name":"loan_user","question":"查询2024年7月15日开户且卡内活期余额大于2000元的借记卡信息，并显示对应的客户姓名和居住地址。","gt_sql":"SELECT d.card_no, d.cust_nm, d.residential_address FROM debit_card_information d WHERE d.open_date = '2024-07-15' AND d.current_bal \u003e 2000;","pred_sql":"SELECT d.card_no, d.cust_nm, d.residential_address FROM debit_card_information d WHERE DATE(d.open_date) = '2024-07-15' AND d.current_bal \u003e 2000;","thinking":"","ambiguous":"False"}
{"id":1016905624,"db_name":"loan_user","question":"查询2003年6月22日所有信用分高于0.75的客户的客户ID和信用分","gt_sql":"SELECT customer_id, credit_score FROM loan_credit WHERE credit_date = '2003-06-22' AND credit_score \u003e 0.75;","pred_sql":"SELECT customer_id, credit_score FROM loan_credit WHERE credit_date = '2003-06-22' AND credit_score \u003e 0.75;","thinking":"","ambiguous":"False"}
{"id":3611732895,"db_name":"loan_user","question":"查询所有用户的姓名、性别及其还款金额，按性别分组。","gt_sql":"SELECT c.gender, c.customer_name, lr.repayment_amount FROM customer c JOIN loan_repayment lr ON c.id = lr.loan_application_id GROUP BY c.gender, c.customer_name, lr.repayment_amount;","pred_sql":"SELECT c.gender, c.customer_name, SUM(lr.repayment_amount) AS total_repayment FROM customer c JOIN loan_application la ON c.id = la.customer_id JOIN loan_repayment lr ON la.id = lr.loan_application_id GROUP BY c.gender, c.customer_name;","thinking":"","ambiguous":"False"}
{"id":1319754722,"db_name":"loan_user","question":"获取贷款金额最高的贷款申请及其客户信息。","gt_sql":"SELECT la.loan_amount, da.cust_name FROM loan_application la JOIN deposit_account_info da ON la.customer_id = da.cust_no ORDER BY la.loan_amount DESC LIMIT 1;","pred_sql":"SELECT c.customer_name, l.loan_amount FROM customer c JOIN loan_application l ON c.id = l.customer_id ORDER BY l.loan_amount DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":2123954700,"db_name":"loan_user","question":"找出理财产品余额超过100万且借记卡状态为正常的客户数量","gt_sql":"SELECT COUNT(DISTINCT fp.cust_no) FROM financial_products fp JOIN debit_card_information dci ON fp.cust_no = dci.cust_no WHERE fp.wealth_bal \u003e 1000000 AND dci.card_state = '正常'","pred_sql":"SELECT COUNT(DISTINCT f.cust_no) FROM financial_products f JOIN debit_card_information d ON f.cust_no = d.cust_no WHERE f.wealth_bal \u003e 1000000 AND d.card_state = '正常';","thinking":"","ambiguous":"False"}
{"id":4161720938,"db_name":"loan_user","question":"在2024年7月19日，哪些客户在沈阳余淮支行开设了活期存款账户，并且这些账户的实际月日均余额超过50000元？","gt_sql":"SELECT dai.cust_name, dai.ci_ref_acct, dai.act_mon_avg_bal FROM deposit_account_info dai JOIN bank_orgnization bo ON dai.org_no = bo.bank_id WHERE dai.data_dt = '2024-07-19' AND dai.acct_type_code = '活期' AND dai.org_nm = '沈阳余淮支行' AND dai.act_mon_avg_bal \u003e 50000;","pred_sql":"SELECT cust_name, ci_ref_acct, act_mon_avg_bal FROM deposit_account_info WHERE org_nm = '沈阳余淮支行' AND re_aclg = '1' AND data_dt = '2024-07-19' AND act_mon_avg_bal \u003e 50000;","thinking":"","ambiguous":"False"}
{"id":1485816909,"db_name":"loan_user","question":"查询所有贷款申请金额超过30000元且申请状态为'PENDING'的客户姓名和贷款金额。","gt_sql":"SELECT c.customer_name, l.loan_amount FROM customer c JOIN loan_application l ON c.id = l.customer_id WHERE l.loan_amount \u003e 30000 AND l.status = 'PENDING'","pred_sql":"SELECT c.customer_name, l.loan_amount FROM customer c JOIN loan_application l ON c.id = l.customer_id WHERE l.loan_amount \u003e 30000 AND l.status = 'PENDING';","thinking":"","ambiguous":"False"}
{"id":864749016,"db_name":"loan_user","question":"查询贷款金额最高的前20名客户中，每种存款类型的客户数量","gt_sql":"WITH top_20_customers AS (SELECT cust_id FROM loan_detail_info ORDER BY loan_amount DESC LIMIT 20) SELECT d.deposit_type_name, COUNT(*) AS customer_count FROM top_20_customers t JOIN loan_detail_info l ON t.cust_id = l.cust_id JOIN deposit_type d ON l.dw_date = d.data_dt GROUP BY d.deposit_type_name","pred_sql":"SELECT dt.deposit_name, COUNT(DISTINCT c.id) AS customer_count FROM customer c JOIN loan_application la ON c.id = la.customer_id JOIN deposit_account_info dai ON c.id_number = dai.cert_code JOIN deposit_type dt ON dai.acct_type_code = dt.deposit_id WHERE la.id IN (SELECT id FROM loan_application ORDER BY loan_amount DESC LIMIT 20) GROUP BY dt.deposit_name;","thinking":"","ambiguous":"False"}
{"id":3380354553,"db_name":"loan_user","question":"列出所有币种分类为'外币'的币种代码和币种全名，并按币种代码升序排列。","gt_sql":"SELECT curr_code, curr_full_name FROM currency WHERE curr_class = '外币' ORDER BY curr_code ASC;","pred_sql":"SELECT curr_code, curr_full_name FROM currency WHERE curr_class = '外币' ORDER BY curr_code ASC;","thinking":"","ambiguous":"False"}
{"id":146146439,"db_name":"loan_user","question":"查询所有客户及其贷款金额，按贷款金额降序排列。","gt_sql":"SELECT la.customer_id, la.loan_amount FROM loan_application la ORDER BY la.loan_amount DESC;","pred_sql":"SELECT c.id AS customer_id, SUM(la.loan_amount) AS total_loan_amount FROM customer c LEFT JOIN loan_application la ON c.id = la.customer_id GROUP BY c.id ORDER BY total_loan_amount DESC;","thinking":"","ambiguous":"False"}
{"id":2245911258,"db_name":"loan_user","question":"查询2024年7月的理财月日均余额，按照客户类型进行分组。","gt_sql":"SELECT f.cast_type, AVG(f.wealth_sta_m_avg_bal_b) AS avg_monthly_balance FROM financial_products f WHERE f.data_dt BETWEEN '2024-07-01' AND '2024-07-31' GROUP BY f.cast_type;","pred_sql":"SELECT cust_type, AVG(wealth_sta_m_avg_bal_a) AS monthly_avg_balance FROM financial_products WHERE EXTRACT(YEAR FROM data_dt) = 2024 AND EXTRACT(MONTH FROM data_dt) = 7 GROUP BY cust_type;","thinking":"","ambiguous":"False"}
{"id":904046704,"db_name":"loan_user","question":"查看贷款发放日期在2024年4月1日之后的所有贷款记录。","gt_sql":"SELECT * FROM loan_detail_info WHERE loandate_s \u003e '2024-04-01';","pred_sql":"SELECT reportid, cust_id, cust_type, iou_no, loan_type, loan_orgno, vouch_type, currency_type, account_state, loan_amount, loan_balance, blc_capital, blc_inner, blc_off, judgelevel, loandate_s, loandate_e, dw_date FROM loan_detail_info WHERE loandate_s \u003e= '2024-04-01';","thinking":"","ambiguous":"False"}
{"id":2037290745,"db_name":"loan_user","question":"找出贷款金额超过其年龄段（0-20，21-40，41-60，61+）平均贷款金额50%的客户。","gt_sql":"WITH age_group_avg AS (SELECT CASE WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 0 AND 20 THEN '0-20' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 21 AND 40 THEN '21-40' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 41 AND 60 THEN '41-60' ELSE '61+' END as age_group, AVG(l.loan_amount) as avg_loan_amount FROM customer c JOIN loan_application l ON c.id = l.customer_id GROUP BY age_group) SELECT c.customer_name, aga.age_group, l.loan_amount, aga.avg_loan_amount FROM customer c JOIN loan_application l ON c.id = l.customer_id JOIN age_group_avg aga ON CASE WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 0 AND 20 THEN '0-20' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 21 AND 40 THEN '21-40' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 41 AND 60 THEN '41-60' ELSE '61+' END = aga.age_group WHERE l.loan_amount \u003e aga.avg_loan_amount * 1.5 ORDER BY l.loan_amount DESC","pred_sql":"SELECT c.customer_name, CASE WHEN EXTRACT(YEAR FROM AGE(c.birth_date)) BETWEEN 0 AND 20 THEN '0-20' WHEN EXTRACT(YEAR FROM AGE(c.birth_date)) BETWEEN 21 AND 40 THEN '21-40' WHEN EXTRACT(YEAR FROM AGE(c.birth_date)) BETWEEN 41 AND 60 THEN '41-60' ELSE '61+' END AS age_group, la.loan_amount AS actual_loan_amount, avg_loan.avg_amount AS age_group_avg_loan_amount FROM customer c JOIN loan_application la ON c.id = la.customer_id JOIN ( SELECT CASE WHEN EXTRACT(YEAR FROM AGE(c2.birth_date)) BETWEEN 0 AND 20 THEN '0-20' WHEN EXTRACT(YEAR FROM AGE(c2.birth_date)) BETWEEN 21 AND 40 THEN '21-40' WHEN EXTRACT(YEAR FROM AGE(c2.birth_date)) BETWEEN 41 AND 60 THEN '41-60' ELSE '61+' END AS age_group, AVG(la2.loan_amount) AS avg_amount FROM customer c2 JOIN loan_application la2 ON c2.id = la2.customer_id GROUP BY age_group ) avg_loan ON CASE WHEN EXTRACT(YEAR FROM AGE(c.birth_date)) BETWEEN 0 AND 20 THEN '0-20' WHEN EXTRACT(YEAR FROM AGE(c.birth_date)) BETWEEN 21 AND 40 THEN '21-40' WHEN EXTRACT(YEAR FROM AGE(c.birth_date)) BETWEEN 41 AND 60 THEN '41-60' ELSE '61+' END = avg_loan.age_group WHERE la.loan_amount \u003e avg_loan.avg_amount * 1.5;","thinking":"","ambiguous":"False"}
{"id":1073845704,"db_name":"loan_user","question":"获取用户的出生日期和性别信息。","gt_sql":"SELECT birth_date, gender FROM customer;","pred_sql":"SELECT birth_date, gender FROM customer;","thinking":"","ambiguous":"False"}
{"id":1970903262,"db_name":"loan_user","question":"在2024年7月19日，哪些客户在沈阳分行持有贷款，并且他们的贷款余额超过500000元？","gt_sql":"SELECT d.cust_id, d.loan_balance FROM loan_detail_info d JOIN deposit_account_info a ON d.cust_id = a.cust_no WHERE d.loan_balance \u003e 500000 AND d.dw_date = '2024-07-19' AND a.bank_no = 'BANK_006';","pred_sql":"SELECT ld.cust_id, ld.loan_balance FROM loan_detail_info ld JOIN bank_orgnization bo ON ld.loan_orgno = bo.bank_id WHERE bo.bank_name = '沈阳分行' AND ld.loan_balance \u003e 500000 AND ld.dw_date = '2024-07-19';","thinking":"","ambiguous":"False"}
{"id":2098164166,"db_name":"loan_user","question":"查询所有贷款余额大于1000000的贷款明细信息，并显示贷款的币种全名和五级分类名称。","gt_sql":"SELECT ldi.reportid, ldi.loan_balance, c.curr_full_name, flc.rs_type_name FROM loan_detail_info ldi JOIN currency c ON ldi.currency_type = c.curr_code JOIN five_level_classification flc ON ldi.judgelevel = flc.rs_type_id WHERE ldi.loan_balance \u003e 1000000;","pred_sql":"SELECT ldi.reportid, ldi.cust_id, ldi.loan_balance, c.curr_full_name, flc.rs_type_name FROM loan_detail_info ldi LEFT JOIN currency c ON ldi.currency_type = c.curr_code LEFT JOIN five_level_classification flc ON ldi.judgelevel = flc.rs_type_id WHERE ldi.loan_balance \u003e 1000000;","thinking":"","ambiguous":"False"}
{"id":3382000879,"db_name":"loan_user","question":"查询所有贷款余额大于1000000的客户及其对应的币种全名，并按贷款余额降序排列。","gt_sql":"SELECT ldi.cust_id, c.curr_full_name, ldi.loan_balance FROM loan_detail_info ldi JOIN currency c ON ldi.currency_type = c.curr_code WHERE ldi.loan_balance \u003e 1000000 ORDER BY ldi.loan_balance DESC;","pred_sql":"SELECT c.id AS customer_id, curr.curr_full_name, ldi.loan_balance FROM customer c JOIN loan_detail_info ldi ON c.id_number = ldi.cust_id JOIN currency curr ON ldi.currency_type = curr.curr_code WHERE ldi.loan_balance \u003e 1000000 ORDER BY ldi.loan_balance DESC;","thinking":"","ambiguous":"False"}
{"id":2579167658,"db_name":"loan_user","question":"找出过去一年内有最多不同类型用户行为的前5名客户","gt_sql":"SELECT ub.customer_id, COUNT(DISTINCT ub.behavior_type) AS behavior_type_count FROM user_behavior ub WHERE ub.behavior_date \u003e= date('now') - INTERVAL '1 year' GROUP BY ub.customer_id ORDER BY behavior_type_count DESC LIMIT 5","pred_sql":"SELECT c.id, COUNT(DISTINCT ub.behavior_type) AS behavior_type_count FROM customer c JOIN user_behavior ub ON c.id = ub.customer_id WHERE ub.behavior_date \u003e= CURRENT_DATE - INTERVAL '1 year' GROUP BY c.id ORDER BY behavior_type_count DESC LIMIT 5;","thinking":"","ambiguous":"False"}
{"id":1454085576,"db_name":"loan_user","question":"查询信用卡数据表中，法人主体为'Corp3'的账户在2024年7月3日的逾期金额总和，并统计这些账户的数量。","gt_sql":"SELECT SUM(age1 + age2 + age3 + age4 + age5 + age6) AS total_overdue_amount, COUNT(*) AS account_count FROM credit_card_data WHERE corporation = 'Corp3' AND dw_date = '2024-07-03';","pred_sql":"SELECT SUM(stm_overdu) AS total_overdue_amount, COUNT(DISTINCT xaccount) AS account_count FROM credit_card_data WHERE corporation = 'Corp3' AND cycle_nbr = '2024-07-03';","thinking":"","ambiguous":"False"}
{"id":1846154246,"db_name":"loan_user","question":"查询贷款明细信息中客户编号为 '1004' 的所有贷款记录。","gt_sql":"SELECT * FROM loan_detail_info WHERE cust_id = '1004';","pred_sql":"SELECT reportid, cust_id, cust_type, iou_no, loan_type, loan_orgno, vouch_type, currency_type, account_state, loan_amount, loan_balance, blc_capital, blc_inner, blc_off, judgelevel, loandate_s, loandate_e, dw_date FROM loan_detail_info WHERE cust_id = '1004';","thinking":"","ambiguous":"False"}
{"id":3291969349,"db_name":"loan_user","question":"查找所有客户及其对应的转账记录。","gt_sql":"SELECT c.customer_name, t.transfer_amount, t.transfer_date FROM customer c JOIN transfer t ON c.id = t.source_customer_id OR c.id = t.target_customer_id;","pred_sql":"SELECT c.customer_name, t.transfer_amount, t.transfer_date FROM customer c LEFT JOIN transfer t ON c.id = t.source_customer_id OR c.id = t.target_customer_id;","thinking":"","ambiguous":"False"}
{"id":3977283654,"db_name":"loan_user","question":"获取所有客户的行为和贷款还款信息的关联。","gt_sql":"SELECT ub.customer_id, ub.behavior_type, lr.repayment_amount FROM user_behavior ub LEFT JOIN loan_repayment lr ON ub.customer_id = lr.loan_application_id;","pred_sql":"SELECT c.id AS customer_id, ub.behavior_type, lr.repayment_amount FROM customer c LEFT JOIN user_behavior ub ON c.id = ub.customer_id LEFT JOIN loan_application la ON c.id = la.customer_id LEFT JOIN loan_repayment lr ON la.id = lr.loan_application_id;","thinking":"","ambiguous":"False"}
{"id":2512363543,"db_name":"loan_user","question":"查询2024年7月21日所有存款账户的客户名称、账户余额以及对应的存款类型名称，并且只显示账户余额大于50000的记录。","gt_sql":"SELECT dai.cust_name, dai.acct_bal, dt.deposit_name FROM deposit_account_info dai JOIN deposit_type dt ON dai.arl_pdp_code = dt.deposit_id WHERE dai.data_dt = '2024-07-21' AND dai.acct_bal \u003e 50000;","pred_sql":"SELECT d.cust_name, d.acct_bal, dt.deposit_type_name FROM deposit_account_info d JOIN deposit_type dt ON d.acct_type_code = dt.deposit_type_id WHERE d.data_dt = '2024-07-21' AND d.acct_bal \u003e 50000;","thinking":"","ambiguous":"False"}
{"id":4035425926,"db_name":"loan_user","question":"计算每个客户的贷款总额占其所在省份贷款总额的百分比。","gt_sql":"WITH customer_total AS (SELECT c.id, c.customer_name, c.province, SUM(l.loan_amount) as total_loan FROM customer c JOIN loan_application l ON c.id = l.customer_id GROUP BY c.id, c.customer_name, c.province), province_total AS (SELECT province, SUM(loan_amount) as province_total FROM loan_application l JOIN customer c ON l.customer_id = c.id GROUP BY province) SELECT ct.customer_name, ct.province, ct.total_loan, (ct.total_loan / pt.province_total * 100) as percentage FROM customer_total ct JOIN province_total pt ON ct.province = pt.province ORDER BY percentage DESC","pred_sql":"SELECT c.customer_name, c.province, SUM(la.loan_amount) AS total_loan_amount, (SUM(la.loan_amount) / SUM(SUM(la.loan_amount)) OVER (PARTITION BY c.province)) * 100 AS loan_percentage FROM customer c JOIN loan_application la ON c.id = la.customer_id GROUP BY c.customer_name, c.province ORDER BY c.province, loan_percentage DESC;","thinking":"","ambiguous":"False"}
{"id":82349614,"db_name":"loan_user","question":"每个省份的贷款申请通过率最高的职业是什么？","gt_sql":"WITH province_occupation_approval AS (SELECT c.province, o.occupation_name, COUNT(*) as total_applications, SUM(CASE WHEN la.status = 'APPROVED' THEN 1 ELSE 0 END) / COUNT(*) as approval_rate, ROW_NUMBER() OVER (PARTITION BY c.province ORDER BY SUM(CASE WHEN la.status = 'APPROVED' THEN 1 ELSE 0 END) / COUNT(*) DESC) as rank FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_application la ON c.id = la.customer_id GROUP BY c.province, o.occupation_name) SELECT province, occupation_name, approval_rate FROM province_occupation_approval WHERE rank = 1 ORDER BY approval_rate DESC","pred_sql":"","thinking":"WITH province_occupation_stats AS ( SELECT c.province, o.occupation_name, COUNT(*) AS total_applications, SUM(CASE WHEN la.status = 'approved' THEN 1 ELSE 0 END) AS approved_applications, ROUND(SUM(CASE WHEN la.status = 'approved' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) AS approval_rate FROM loan_application la JOIN customer c ON la.customer_id = c.id JOIN occupation o ON c.occupation_id = o.id GROUP BY c.province, o.occupation_name ), ranked_occupations AS ( SELECT province, occupation_name, approval_rate, RANK() OVER (PARTITION BY province ORDER BY approval_rate DESC) AS rank FROM province_occupation_stats ) SELECT province AS \"地区名称\", occupation_name AS \"职业名称\", approval_rate AS \"通过率\" FROM ranked_occupations WHERE rank = 1 ORDER BY province;","ambiguous":"False"}
{"id":3816528329,"db_name":"loan_user","question":"各银行分行中，存款余额最高的前10名客户合计占该分行存款总额的比例是多少？","gt_sql":"WITH branch_total AS (SELECT bank_nm, SUM(current_bal + fixed_bal) AS total_deposit FROM debit_card_information GROUP BY bank_nm), top_customers AS (SELECT bank_nm, cust_nm, current_bal + fixed_bal AS deposit, ROW_NUMBER() OVER (PARTITION BY bank_nm ORDER BY current_bal + fixed_bal DESC) AS rank FROM debit_card_information) SELECT tc.bank_nm, SUM(tc.deposit) / bt.total_deposit AS top_10_ratio FROM top_customers tc JOIN branch_total bt ON tc.bank_nm = bt.bank_nm WHERE tc.rank \u003c= 10 GROUP BY tc.bank_nm, bt.total_deposit","pred_sql":"SELECT d.org_nm AS bank_branch_name, (SUM(top10.top_10_balance) / SUM(d.acct_bal)) * 100 AS top10_percentage FROM deposit_account_info d JOIN ( SELECT org_no, org_nm, cust_no, acct_bal AS top_10_balance, ROW_NUMBER() OVER (PARTITION BY org_no ORDER BY acct_bal DESC) AS rank FROM deposit_account_info ) top10 ON d.org_no = top10.org_no AND top10.rank \u003c= 10 GROUP BY d.org_nm ORDER BY top10_percentage DESC LIMIT 10;","thinking":"","ambiguous":"False"}
{"id":3967240206,"db_name":"loan_user","question":"获取所有借记卡的客户名称和电话，要求客户名称包含'Lee'。","gt_sql":"SELECT cust_nm, tel_no FROM debit_card_information WHERE cust_nm LIKE '%Lee%';","pred_sql":"SELECT d.cust_nm AS customer_name, d.tel_no AS phone_number FROM debit_card_information d WHERE d.cust_nm LIKE '%Lee%';","thinking":"","ambiguous":"False"}
{"id":2555762315,"db_name":"loan_user","question":"查询每个客户的行为和还款记录的详情。","gt_sql":"SELECT ub.customer_id, ub.behavior_type, lr.repayment_amount FROM user_behavior ub LEFT JOIN loan_repayment lr ON ub.customer_id = lr.loan_application_id;","pred_sql":"SELECT c.id AS customer_id, ub.behavior_type, lr.repayment_amount FROM customer c LEFT JOIN user_behavior ub ON c.id = ub.customer_id LEFT JOIN loan_application la ON c.id = la.customer_id LEFT JOIN loan_repayment lr ON la.id = lr.loan_application_id;","thinking":"","ambiguous":"False"}
{"id":1472446382,"db_name":"loan_user","question":"2021年11月10日，哪些客户的信用评分高于0.75且进行了还款？","gt_sql":"SELECT DISTINCT lr.loan_application_id, lc.customer_id FROM loan_repayment lr JOIN loan_application la ON lr.loan_application_id = la.id JOIN loan_credit lc ON la.customer_id = lc.customer_id WHERE lr.repayment_date = '2021-11-10' AND lc.credit_score \u003e 0.75;","pred_sql":"SELECT DISTINCT la.id AS loan_application_id, c.id AS customer_id FROM loan_application la JOIN loan_credit lc ON la.customer_id = lc.customer_id JOIN loan_repayment lr ON la.id = lr.loan_application_id JOIN customer c ON la.customer_id = c.id WHERE lc.credit_score \u003e 0.75 AND lr.repayment_date = '2021-11-10';","thinking":"","ambiguous":"False"}
{"id":837468015,"db_name":"loan_user","question":"查询所有还款记录中还款金额超过900的记录。","gt_sql":"SELECT * FROM loan_repayment WHERE repayment_amount \u003e 900;","pred_sql":"SELECT id, loan_application_id, repayment_amount, repayment_date, description FROM loan_repayment WHERE repayment_amount \u003e 900;","thinking":"","ambiguous":"False"}
{"id":3614707278,"db_name":"loan_user","question":"在2024年7月9日，哪些客户的借记卡状态为'正常'，并且他们的居住地址在'987 Willow Street'？请列出这些客户的客户编号、客户名称、卡号和居住地址。","gt_sql":"SELECT dci.cust_no, dci.cust_nm, dci.card_no, dci.residential_address FROM debit_card_information dci WHERE dci.data_dt = '2024-07-09' AND dci.card_state = '正常' AND dci.residential_address = '987 Willow Street';","pred_sql":"SELECT d.cust_no, d.cust_nm, d.card_no, d.residential_address FROM debit_card_information d WHERE d.card_state = '正常' AND d.residential_address = '987 Willow Street' AND DATE(d.data_dt) = '2024-07-09';","thinking":"","ambiguous":"False"}
{"id":3381297740,"db_name":"loan_user","question":"查询所有客户的贷款信息及余额。","gt_sql":"SELECT ld.cust_id, ld.loan_balance FROM loan_detail_info ld;","pred_sql":"SELECT c.id AS customer_id, SUM(ldi.loan_balance) AS total_loan_balance FROM customer c LEFT JOIN loan_detail_info ldi ON c.id_number = ldi.cust_id GROUP BY c.id;","thinking":"","ambiguous":"False"}
{"id":3209601254,"db_name":"loan_user","question":"各种贷款类型中，关联的借记卡用户数量是多少？","gt_sql":"SELECT lt.loan_type_name, COUNT(DISTINCT d.cust_no) AS user_count FROM loan_type lt LEFT JOIN debit_card_information d ON lt.loan_type_code = d.cust_no GROUP BY lt.loan_type_name","pred_sql":"SELECT lt.loan_type_name, COUNT(DISTINCT dci.cust_no) AS debit_card_user_count FROM loan_type lt LEFT JOIN loan_application la ON lt.id = la.loan_type_id LEFT JOIN customer c ON la.customer_id = c.id LEFT JOIN debit_card_information dci ON c.id_number = dci.cust_id GROUP BY lt.loan_type_name;","thinking":"","ambiguous":"False"}
{"id":1181974520,"db_name":"loan_user","question":"获取每种贷款类型的客户数量。","gt_sql":"SELECT ld.loan_type, COUNT(DISTINCT ld.cust_id) AS customer_count FROM loan_detail_info ld GROUP BY ld.loan_type;","pred_sql":"SELECT lt.loan_type_name, COUNT(DISTINCT la.customer_id) AS customer_count FROM loan_type lt LEFT JOIN loan_application la ON lt.id = la.loan_type_id GROUP BY lt.loan_type_name;","thinking":"","ambiguous":"False"}
{"id":4290316983,"db_name":"loan_user","question":"查询2011年4月13日所有客户的信用分和信用描述","gt_sql":"SELECT credit_score, description FROM loan_credit WHERE credit_date = '2011-04-13';","pred_sql":"SELECT c.id, c.customer_name, lc.credit_score, lc.description FROM customer c JOIN loan_credit lc ON c.id = lc.customer_id WHERE lc.credit_date = '2011-04-13';","thinking":"","ambiguous":"False"}
{"id":4121525980,"db_name":"loan_user","question":"查询2024年7月14日沈阳余淮支行的所有对公客户的理财余额总和以及保本理财余额总和。","gt_sql":"SELECT SUM(fp.wealth_bal) AS total_wealth_bal, SUM(fp.wealth_bal_t) AS total_wealth_bal_t FROM financial_products fp WHERE fp.data_dt = '2024-07-14' AND fp.bank_nm = '沈阳余淮支行' AND fp.cast_type = '对公';","pred_sql":"SELECT SUM(wealth_bal) AS total_wealth_balance, SUM(wealth_bal_f) AS total_guaranteed_wealth_balance FROM financial_products fp JOIN deposit_account_info dai ON fp.cust_no = dai.cust_no AND fp.data_dt = dai.data_dt JOIN bank_orgnization bo ON dai.org_no = bo.bank_id WHERE dai.cust_type = '2' AND fp.data_dt = '2024-07-14' AND bo.bank_name = '沈阳余淮支行';","thinking":"","ambiguous":"False"}
{"id":1634196262,"db_name":"loan_user","question":"查询2003年6月22日所有信用分大于0.75的客户的客户ID和信用分","gt_sql":"SELECT customer_id, credit_score FROM loan_credit WHERE credit_date = '2003-06-22' AND credit_score \u003e 0.75;","pred_sql":"SELECT customer_id, credit_score FROM loan_credit WHERE credit_date = '2003-06-22' AND credit_score \u003e 0.75;","thinking":"","ambiguous":"False"}
{"id":2019378478,"db_name":"loan_user","question":"获取所有客户的转账记录，并包括源客户和目标客户ID。","gt_sql":"SELECT source_customer_id, target_customer_id FROM transfer;","pred_sql":"SELECT id, source_customer_id, target_customer_id, transfer_amount, transfer_date, description FROM transfer;","thinking":"","ambiguous":"False"}
{"id":522536270,"db_name":"loan_user","question":"查找所有贷款类型中代码为'MORTGAGE'的名称。","gt_sql":"SELECT loan_type_name FROM loan_type WHERE loan_type_code = 'MORTGAGE';","pred_sql":"SELECT loan_type_name FROM loan_type WHERE loan_type_code = 'MORTGAGE';","thinking":"","ambiguous":"False"}
{"id":126227619,"db_name":"loan_user","question":"查询在2024年7月5日拥有正常状态的借记卡的客户名称和卡号。","gt_sql":"SELECT cust_nm, card_no FROM debit_card_information WHERE data_dt = '2024-07-05' AND card_state = '正常';","pred_sql":"SELECT d.cust_nm AS customer_name, d.card_no FROM debit_card_information d WHERE d.card_state = '正常' AND d.data_dt = '2024-07-05';","thinking":"","ambiguous":"False"}
{"id":2456368123,"db_name":"loan_user","question":"统计每个银行的理财产品数目及其对应的客户类型。","gt_sql":"SELECT f.bank_nm, f.cast_type, COUNT(*) AS product_count FROM financial_products f GROUP BY f.bank_nm, f.cast_type;","pred_sql":"SELECT f.bank_nm AS bank_name, f.cast_type AS customer_type, COUNT(*) AS financial_product_count FROM financial_products f GROUP BY f.bank_nm, f.cast_type ORDER BY f.bank_nm, f.cast_type;","thinking":"","ambiguous":"False"}
{"id":1564372003,"db_name":"loan_user","question":"请列出所有存款类型产品名称及其对应的存款类型产品组号，并按照存款类型产品名称排序。","gt_sql":"SELECT deposit_name, deposit_type_id FROM deposit_type ORDER BY deposit_name;","pred_sql":"SELECT deposit_name, deposit_type_id FROM deposit_type ORDER BY deposit_name;","thinking":"","ambiguous":"False"}
{"id":2160477527,"db_name":"loan_user","question":"获取所有客户的贷款申请状态及对应的贷款金额。","gt_sql":"SELECT la.status, la.loan_amount FROM loan_application la;","pred_sql":"SELECT la.status AS loan_status, la.loan_amount FROM loan_application la JOIN customer c ON la.customer_id = c.id;","thinking":"","ambiguous":"False"}
{"id":1462437870,"db_name":"loan_user","question":"查找所有信用评分为0.77的客户信息。","gt_sql":"SELECT customer_id FROM loan_credit WHERE credit_score = 0.77;","pred_sql":"SELECT customer_id FROM loan_credit WHERE credit_score = 0.77;","thinking":"","ambiguous":"False"}
{"id":4083934626,"db_name":"loan_user","question":"查询每个贷款类型的描述和对应的还款记录。","gt_sql":"SELECT lt.description, lr.repayment_amount FROM loan_type lt JOIN loan_application la ON lt.id = la.loan_type_id JOIN loan_repayment lr ON la.id = lr.loan_application_id;","pred_sql":"SELECT lt.loan_type_name, lt.description, lr.repayment_amount FROM loan_type lt LEFT JOIN loan_application la ON lt.id = la.loan_type_id LEFT JOIN loan_repayment lr ON la.id = lr.loan_application_id;","thinking":"","ambiguous":"False"}
{"id":2872120818,"db_name":"loan_user","question":"查询可疑分类的详细信息，包括分类代码和名称。","gt_sql":"SELECT rs_type_id, rs_type_name FROM five_level_classification WHERE rs_type_name = '可疑';","pred_sql":"SELECT rs_type_id, rs_type_name FROM five_level_classification;","thinking":"","ambiguous":"False"}
{"id":1283326851,"db_name":"loan_user","question":"查找2024年7月5日后关闭的借记卡的卡号及关闭日期。","gt_sql":"SELECT card_no, closing_date FROM debit_card_information WHERE closing_date \u003e '2024-07-05';","pred_sql":"SELECT card_no, closing_date FROM debit_card_information WHERE closing_date \u003e '2024-07-05';","thinking":"","ambiguous":"False"}
{"id":531921010,"db_name":"loan_user","question":"列出所有借记卡的卡种类和状态，要求卡种类不为空。","gt_sql":"SELECT card_type_nm, card_state FROM debit_card_information WHERE card_type_nm IS NOT NULL;","pred_sql":"SELECT card_type_nm, card_state FROM debit_card_information WHERE card_type_nm IS NOT NULL;","thinking":"","ambiguous":"False"}
{"id":1418289021,"db_name":"loan_user","question":"查询2024年7月19日所有贷款余额大于100000的客户编号及其对应的贷款余额，并统计每个客户的贷款余额总和。","gt_sql":"SELECT cust_id, SUM(loan_balance) AS total_loan_balance FROM loan_detail_info WHERE dw_date = '2024-07-19' AND loan_balance \u003e 100000 GROUP BY cust_id;","pred_sql":"SELECT cust_id AS customer_id, SUM(loan_balance) AS total_loan_balance FROM loan_detail_info WHERE dw_date = '2024-07-19' AND loan_balance \u003e 100000 GROUP BY cust_id;","thinking":"","ambiguous":"False"}
{"id":137242606,"db_name":"loan_user","question":"各银行分行中，存款余额和贷款余额的相关系数是多少？","gt_sql":"WITH customer_balances AS (SELECT d.bank_nm, d.cust_no, SUM(d.current_bal + d.fixed_bal) AS deposit_balance, SUM(CASE WHEN lt.loan_type_name IS NOT NULL THEN d.current_bal + d.fixed_bal ELSE 0 END) AS loan_balance FROM debit_card_information d LEFT JOIN loan_type lt ON d.cust_no = lt.loan_type_code GROUP BY d.bank_nm, d.cust_no) SELECT bank_nm, CORR(deposit_balance, loan_balance) AS correlation_coefficient FROM customer_balances GROUP BY bank_nm","pred_sql":"SELECT b.bank_name, CORR(d.acct_bal, l.loan_balance) AS correlation_coefficient FROM bank_orgnization b LEFT JOIN deposit_account_info d ON b.bank_id = d.org_no LEFT JOIN loan_detail_info l ON b.bank_id = l.loan_orgno WHERE d.data_dt = (SELECT MAX(data_dt) FROM deposit_account_info) AND l.dw_date = (SELECT MAX(dw_date) FROM loan_detail_info) GROUP BY b.bank_name HAVING COUNT(d.acct_bal) \u003e 0 AND COUNT(l.loan_balance) \u003e 0 ORDER BY correlation_coefficient DESC;","thinking":"","ambiguous":"False"}
{"id":2672242323,"db_name":"loan_user","question":"统计每个月的转账总额和贷款发放总额","gt_sql":"SELECT DATE_TRUNC('month', t.transfer_date) AS month, SUM(t.transfer_amount) AS total_transfer, SUM(l.loan_amount) AS total_loan FROM transfer t FULL OUTER JOIN loan_detail_info l ON DATE_TRUNC('month', t.transfer_date) = DATE_TRUNC('month', l.loandate_s) GROUP BY month ORDER BY month;","pred_sql":"SELECT DATE_TRUNC('month', COALESCE(t.transfer_date, l.apply_date)) AS month, SUM(COALESCE(t.transfer_amount, 0)) AS total_transfer_amount, SUM(COALESCE(l.loan_amount, 0)) AS total_loan_amount FROM transfer t FULL OUTER JOIN loan_application l ON DATE_TRUNC('month', t.transfer_date) = DATE_TRUNC('month', l.apply_date) GROUP BY DATE_TRUNC('month', COALESCE(t.transfer_date, l.apply_date)) ORDER BY month;","thinking":"","ambiguous":"False"}
{"id":2845015839,"db_name":"loan_user","question":"查询所有上海市的客户的姓名和手机号","gt_sql":"SELECT customer_name, phone_number FROM customer WHERE province = '上海市';","pred_sql":"SELECT customer_name, phone_number FROM customer WHERE province = '上海市';","thinking":"","ambiguous":"False"}
{"id":1582007502,"db_name":"loan_user","question":"查询客户ID为533302的信用评分及对应的信用日期。","gt_sql":"SELECT credit_score, credit_date FROM loan_credit WHERE customer_id = 533302;","pred_sql":"SELECT credit_score, credit_date FROM loan_credit WHERE customer_id = 533302;","thinking":"","ambiguous":"False"}
{"id":283689317,"db_name":"loan_user","question":"查询所有转账记录，并按转账金额降序排列。","gt_sql":"SELECT * FROM transfer ORDER BY transfer_amount DESC;","pred_sql":"SELECT id, source_customer_id, target_customer_id, transfer_amount, transfer_date, description FROM transfer ORDER BY transfer_amount DESC;","thinking":"","ambiguous":"False"}
{"id":1594346019,"db_name":"loan_user","question":"统计每个用户的不同行为类型数量","gt_sql":"SELECT customer_id, COUNT(DISTINCT behavior_type) AS unique_behavior_types FROM user_behavior GROUP BY customer_id;","pred_sql":"SELECT customer_id, COUNT(DISTINCT behavior_type) AS distinct_behavior_count FROM user_behavior GROUP BY customer_id;","thinking":"","ambiguous":"False"}
{"id":3342713409,"db_name":"loan_user","question":"在2024年7月22日，沈阳分行的客户中，有多少客户的存款账户余额超过100000元且信用卡逾期金额超过5000元？","gt_sql":"SELECT COUNT(DISTINCT da.cust_no) FROM deposit_account_info da JOIN credit_card_data cc ON da.cust_no = cc.custr_nbr WHERE da.bank_nm = '沈阳分行' AND da.data_dt = '2024-07-22' AND da.acct_bal \u003e 100000 AND (cc.age1 \u003e 5000 OR cc.age2 \u003e 5000 OR cc.age3 \u003e 5000 OR cc.age4 \u003e 5000 OR cc.age5 \u003e 5000 OR cc.age6 \u003e 5000)","pred_sql":"SELECT COUNT(DISTINCT d.cust_no) FROM deposit_account_info d JOIN credit_card_data c ON d.cust_no = c.custr_nbr JOIN bank_orgnization b ON d.org_no = b.bank_id WHERE d.data_dt = '2024-07-22' AND b.bank_name = '沈阳分行' AND d.acct_bal \u003e 100000 AND c.stm_overdu \u003e 5000 AND c.dw_date = '2024-07-22';","thinking":"","ambiguous":"False"}
{"id":842726032,"db_name":"loan_user","question":"查找在北京分行开户的所有借记卡的卡号及客户名称。","gt_sql":"SELECT card_no, cust_nm FROM debit_card_information WHERE bank_nm = '北京分行';","pred_sql":"SELECT d.card_no, d.cust_nm FROM debit_card_information d JOIN bank_orgnization b ON d.bank_no = b.bank_id WHERE b.bank_name = '北京分行' AND d.card_type = '借记卡';","thinking":"","ambiguous":"False"}
{"id":236915033,"db_name":"loan_user","question":"查询连续三个月或更长时间有贷款申请的客户数量。","gt_sql":"WITH monthly_applications AS (SELECT customer_id, DATE_TRUNC('month', apply_date) as apply_month FROM loan_application), consecutive_months AS (SELECT customer_id, apply_month, LEAD(apply_month, 2) OVER (PARTITION BY customer_id ORDER BY apply_month) as next_two_month FROM monthly_applications) SELECT COUNT(DISTINCT customer_id) as customer_count FROM consecutive_months WHERE next_two_month = apply_month + INTERVAL '2 months'","pred_sql":"SELECT COUNT(DISTINCT customer_id) AS continuous_loan_customers FROM (SELECT customer_id, DATE_TRUNC('month', apply_date) AS month, LEAD(DATE_TRUNC('month', apply_date), 2) OVER (PARTITION BY customer_id ORDER BY DATE_TRUNC('month', apply_date)) AS next_month_plus_2 FROM loan_application GROUP BY customer_id, DATE_TRUNC('month', apply_date)) t WHERE next_month_plus_2 = month + INTERVAL '2 months';","thinking":"","ambiguous":"False"}
{"id":4229311898,"db_name":"loan_user","question":"找出所有理财产品的客户号及其对应的银行名称，按客户号排序。","gt_sql":"SELECT f.cust_no, f.bank_nm FROM financial_products f ORDER BY f.cust_no;","pred_sql":"SELECT cust_no, bank_nm FROM financial_products ORDER BY cust_no;","thinking":"","ambiguous":"False"}
{"id":258690623,"db_name":"loan_user","question":"获取所有职业代码及其名称，按名称排序。","gt_sql":"SELECT occupation_code, occupation_name FROM occupation ORDER BY occupation_name;","pred_sql":"SELECT occupation_code, occupation_name FROM occupation ORDER BY occupation_name;","thinking":"","ambiguous":"False"}
{"id":3376193292,"db_name":"loan_user","question":"找出理财产品余额超过借记卡余额10倍的客户数量","gt_sql":"SELECT COUNT(*) FROM financial_products fp JOIN debit_card_information dci ON fp.cust_no = dci.cust_no WHERE fp.wealth_bal \u003e 10 * (dci.current_bal + dci.fixed_bal)","pred_sql":"SELECT COUNT(DISTINCT f.cust_no) AS customer_count FROM financial_products f JOIN debit_card_information d ON f.cust_no = d.cust_no WHERE f.wealth_bal \u003e 10 * d.current_bal;","thinking":"","ambiguous":"False"}
{"id":116553538,"db_name":"loan_user","question":"获取所有贷款金额超过70000的贷款明细，显示贷款机构号和贷款余额。","gt_sql":"SELECT ld.loan_orgno, ld.loan_balance FROM loan_detail_info ld WHERE ld.loan_amount \u003e 70000;","pred_sql":"SELECT loan_orgno, loan_balance FROM loan_detail_info WHERE loan_amount \u003e 70000;","thinking":"","ambiguous":"False"}
{"id":646950911,"db_name":"loan_user","question":"查询所有贷款类型及其相关的用户行为。","gt_sql":"SELECT lt.loan_type_name, ub.behavior_type FROM loan_type lt LEFT JOIN loan_repayment lr ON lt.id = lr.loan_application_id LEFT JOIN user_behavior ub ON lr.loan_application_id = ub.customer_id;","pred_sql":"SELECT lt.loan_type_name, ub.behavior_type FROM loan_type lt LEFT JOIN loan_application la ON lt.id = la.loan_type_id LEFT JOIN user_behavior ub ON la.customer_id = ub.customer_id;","thinking":"","ambiguous":"False"}
{"id":109259315,"db_name":"loan_user","question":"统计每个层级的银行机构数量。","gt_sql":"SELECT bank_level, COUNT(*) AS institution_count FROM bank_orgnization GROUP BY bank_level;","pred_sql":"SELECT bank_level, COUNT(*) AS org_count FROM bank_orgnization GROUP BY bank_level ORDER BY bank_level;","thinking":"","ambiguous":"False"}
{"id":2700778328,"db_name":"loan_user","question":"在2024年7月15日，北京东单支行的客户Olivia Lee持有的借记卡的卡内活期余额和卡内定期余额分别是多少？","gt_sql":"SELECT current_bal, fixed_bal FROM debit_card_information WHERE data_dt = '2024-07-15' AND bank_nm = '北京东单支行' AND cust_nm = 'Olivia Lee';","pred_sql":"SELECT d.current_bal AS \"活期余额\", d.fixed_bal AS \"定期余额\" FROM debit_card_information d JOIN customer c ON d.cust_id = c.id_number WHERE c.customer_name = 'Olivia Lee' AND d.org_nm = '北京东单支行' AND d.data_dt = '2024-07-15';","thinking":"","ambiguous":"False"}
{"id":4212764935,"db_name":"loan_user","question":"查询2017年10月31日信用分大于0.85的客户的姓名和信用描述，并按信用分降序排列。","gt_sql":"SELECT c.customer_name, lc.description FROM loan_credit lc JOIN customer c ON lc.customer_id = c.id WHERE lc.credit_date = '2017-10-31' AND lc.credit_score \u003e 0.85 ORDER BY lc.credit_score DESC;","pred_sql":"SELECT c.customer_name, lc.description FROM customer c JOIN loan_credit lc ON c.id = lc.customer_id WHERE lc.credit_score \u003e 0.85 AND lc.credit_date = '2017-10-31' ORDER BY lc.credit_score DESC;","thinking":"","ambiguous":"False"}
{"id":4269406178,"db_name":"loan_user","question":"获取所有申请了汽车贷款的客户的贷款金额。","gt_sql":"SELECT la.loan_amount FROM loan_application la WHERE la.loan_type_id = (SELECT id FROM loan_type WHERE loan_type_code = 'CAR');","pred_sql":"SELECT loan_amount FROM loan_application WHERE loan_type_id = (SELECT id FROM loan_type WHERE loan_type_name = '汽车贷款');","thinking":"","ambiguous":"False"}
{"id":1128360712,"db_name":"loan_user","question":"计算每种贷款类型的平均还款金额和还款次数。","gt_sql":"SELECT lt.loan_type_name, AVG(lr.repayment_amount) as avg_repayment_amount, COUNT(lr.id) as repayment_count FROM loan_repayment lr JOIN loan_application la ON lr.loan_application_id = la.id JOIN loan_type lt ON la.loan_type_id = lt.id GROUP BY lt.loan_type_name","pred_sql":"SELECT lt.loan_type_name, AVG(lr.repayment_amount) AS avg_repayment_amount, COUNT(lr.id) AS repayment_count FROM loan_type lt LEFT JOIN loan_application la ON lt.id = la.loan_type_id LEFT JOIN loan_repayment lr ON la.id = lr.loan_application_id GROUP BY lt.loan_type_name;","thinking":"","ambiguous":"False"}
{"id":2724005771,"db_name":"loan_user","question":"查询信用卡数据表中法人主体为'Corp3'的账户名称、银行、账户类别和开户日期，并按开户日期降序排列。","gt_sql":"SELECT acc_name1, bank, category, day_opened FROM credit_card_data WHERE corporation = 'Corp3' ORDER BY day_opened DESC;","pred_sql":"SELECT acc_name1 AS account_name, bank, category, day_opened AS opening_date FROM credit_card_data WHERE corporation = 'Corp3' ORDER BY day_opened DESC;","thinking":"","ambiguous":"False"}
{"id":3382134012,"db_name":"loan_user","question":"查询所有客户的姓名及其住址。","gt_sql":"SELECT customer_name, address FROM customer;","pred_sql":"SELECT customer_name, address FROM customer;","thinking":"","ambiguous":"False"}
{"id":1545912595,"db_name":"loan_user","question":"2023年，各银行机构的贷款总额与其客户的借记卡总余额之比是多少？","gt_sql":"WITH loan_sum AS (SELECT loan_orgno, SUM(loan_amount) as total_loan FROM loan_detail_info WHERE EXTRACT(YEAR FROM loandate_s) = 2023 GROUP BY loan_orgno), debit_sum AS (SELECT bank_no, SUM(current_bal) as total_debit FROM debit_card_information WHERE EXTRACT(YEAR FROM data_dt) = 2023 GROUP BY bank_no) SELECT bo.bank_name, ls.total_loan, ds.total_debit, ls.total_loan / NULLIF(ds.total_debit, 0) as loan_debit_ratio FROM bank_orgnization bo LEFT JOIN loan_sum ls ON bo.bank_id = ls.loan_orgno LEFT JOIN debit_sum ds ON bo.bank_id = ds.bank_no ORDER BY loan_debit_ratio DESC","pred_sql":"SELECT bo.bank_id, bo.bank_name, SUM(ldi.loan_amount) AS total_loan_amount, SUM(dbi.current_bal) AS total_debit_balance, CASE WHEN SUM(dbi.current_bal) = 0 THEN NULL ELSE SUM(ldi.loan_amount) / SUM(dbi.current_bal) END AS loan_to_debit_ratio FROM bank_orgnization bo LEFT JOIN loan_detail_info ldi ON bo.bank_id = ldi.loan_orgno LEFT JOIN debit_card_information dbi ON bo.bank_id = dbi.bank_no WHERE EXTRACT(YEAR FROM ldi.dw_date) = 2023 AND EXTRACT(YEAR FROM dbi.data_dt) = 2023 GROUP BY bo.bank_id, bo.bank_name ORDER BY bo.bank_id;","thinking":"","ambiguous":"False"}
{"id":2397640501,"db_name":"loan_user","question":"找出还款金额最接近平均值的记录","gt_sql":"SELECT * FROM loan_repayment WHERE repayment_amount = (SELECT repayment_amount FROM loan_repayment ORDER BY ABS(repayment_amount - (SELECT AVG(repayment_amount) FROM loan_repayment)) LIMIT 1);","pred_sql":"SELECT id, loan_application_id, repayment_amount, repayment_date, description FROM loan_repayment WHERE ABS(repayment_amount - (SELECT AVG(repayment_amount) FROM loan_repayment)) = (SELECT MIN(ABS(repayment_amount - (SELECT AVG(repayment_amount) FROM loan_repayment))) FROM loan_repayment);","thinking":"","ambiguous":"False"}
{"id":561955406,"db_name":"loan_user","question":"在2024年7月，哪些客户的信用评分高于0.8，并且在该月内进行了至少一次理财产品的购买？","gt_sql":"SELECT DISTINCT l.customer_id FROM loan_credit l JOIN financial_products f ON l.credit_date = f.data_dt WHERE l.credit_score \u003e 0.8 AND f.data_dt \u003e= '2024-07-01' AND f.data_dt \u003c '2024-08-01';","pred_sql":"SELECT DISTINCT c.id FROM customer c JOIN loan_credit lc ON c.id = lc.customer_id JOIN financial_products fp ON fp.cust_no = c.id_number WHERE lc.credit_score \u003e 0.8 AND fp.data_dt \u003e= '2024-07-01' AND fp.data_dt \u003c '2024-08-01';","thinking":"","ambiguous":"False"}
{"id":1986127383,"db_name":"loan_user","question":"计算每个月的贷款申请通过率（状态为'APPROVED'的申请数除以总申请数）。","gt_sql":"SELECT EXTRACT(YEAR FROM apply_date) as year, EXTRACT(MONTH FROM apply_date) as month, COUNT(CASE WHEN status = 'APPROVED' THEN 1 END) / COUNT(*) as approval_rate FROM loan_application GROUP BY year, month ORDER BY year, month","pred_sql":"SELECT EXTRACT(YEAR FROM apply_date) AS year, EXTRACT(MONTH FROM apply_date) AS month, COUNT(CASE WHEN status = 'APPROVED' THEN 1 END)::numeric / COUNT(*) AS approval_rate FROM loan_application GROUP BY year, month ORDER BY year, month;","thinking":"","ambiguous":"False"}
{"id":1657316021,"db_name":"loan_user","question":"2024年第一季度，各银行机构的新增客户数量和这些新客户的平均贷款金额是多少？","gt_sql":"WITH new_customers AS (SELECT DISTINCT ON (cust_id) cust_id, loan_orgno, loan_amount FROM loan_detail_info WHERE loandate_s BETWEEN '2024-01-01' AND '2024-03-31' AND cust_id NOT IN (SELECT cust_id FROM loan_detail_info WHERE loandate_s \u003c '2024-01-01')) SELECT bo.bank_name, COUNT(nc.cust_id) as new_customer_count, AVG(nc.loan_amount) as avg_loan_amount FROM bank_orgnization bo LEFT JOIN new_customers nc ON bo.bank_id = nc.loan_orgno GROUP BY bo.bank_name ORDER BY new_customer_count DESC","pred_sql":"SELECT b.bank_name, COUNT(DISTINCT c.id) AS new_customer_count, COALESCE(AVG(l.loan_amount), 0) AS avg_loan_amount FROM bank_orgnization b LEFT JOIN customer c ON b.bank_id = SUBSTRING(c.id_number FROM 1 FOR 4) AND c.birth_date BETWEEN '2024-01-01' AND '2024-03-31' LEFT JOIN loan_application l ON c.id = l.customer_id AND l.apply_date BETWEEN '2024-01-01' AND '2024-03-31' GROUP BY b.bank_name;","thinking":"","ambiguous":"False"}
{"id":2162181589,"db_name":"loan_user","question":"计算每个管辖行的平均贷款期限和平均贷款金额。","gt_sql":"SELECT dai.bank_nm, AVG(la.loan_term) as avg_loan_term, AVG(la.loan_amount) as avg_loan_amount FROM loan_application la JOIN deposit_account_info dai ON la.customer_id = dai.cust_noeger GROUP BY dai.bank_nm","pred_sql":"SELECT b.bank_name, AVG(l.loan_term) AS avg_loan_term, AVG(l.loan_amount) AS avg_loan_amount FROM bank_orgnization b JOIN loan_detail_info l ON b.bank_id = l.loan_orgno WHERE b.bank_level = '管辖行' GROUP BY b.bank_name;","thinking":"","ambiguous":"False"}
{"id":2307971258,"db_name":"loan_user","question":"获取所有客户的信用评分及信用日期。","gt_sql":"SELECT customer_id, credit_score, credit_date FROM loan_credit;","pred_sql":"SELECT c.id AS customer_id, lc.credit_score, lc.credit_date FROM customer c JOIN loan_credit lc ON c.id = lc.customer_id;","thinking":"","ambiguous":"False"}
{"id":2557946358,"db_name":"loan_user","question":"查询所有贷款到期日期在2026年之前的用户及其贷款余额。","gt_sql":"SELECT l.cust_id, l.loan_balance FROM loan_detail_info l WHERE l.loandate_e \u003c '2026-01-01';","pred_sql":"SELECT cust_id, loan_balance FROM loan_detail_info WHERE loandate_e::date \u003c '2026-01-01' AND loan_balance \u003e 0;","thinking":"","ambiguous":"False"}
{"id":3214990589,"db_name":"loan_user","question":"获取所有贷款申请及对应的申请日期。","gt_sql":"SELECT apply_date, loan_amount FROM loan_application;","pred_sql":"SELECT apply_date, loan_amount FROM loan_application;","thinking":"","ambiguous":"False"}
{"id":140188268,"db_name":"loan_user","question":"查询所有申请了住房贷款且状态为'APPROVED'的客户ID及其贷款金额，并按贷款金额降序排列。","gt_sql":"SELECT la.customer_id, la.loan_amount FROM loan_application la JOIN loan_type lt ON la.loan_type_id = lt.id WHERE lt.loan_type_name = '住房贷款' AND la.status = 'APPROVED' ORDER BY la.loan_amount DESC;","pred_sql":"SELECT customer_id, loan_amount FROM loan_application la JOIN loan_type lt ON la.loan_type_id = lt.id WHERE lt.loan_type_name = '住房贷款' AND la.status = 'APPROVED' ORDER BY loan_amount DESC;","thinking":"","ambiguous":"False"}
{"id":2839950527,"db_name":"loan_user","question":"找出存款余额最高的前5个网点及其管辖行。","gt_sql":"SELECT dai.org_nm, dai.bank_nm, SUM(dai.acct_bal) as total_balance FROM deposit_account_info dai GROUP BY dai.org_nm, dai.bank_nm ORDER BY total_balance DESC LIMIT 5","pred_sql":"SELECT b.bank_name AS 网点名称, p.bank_name AS 所属银行名称, SUM(d.acct_bal) AS 存款总余额 FROM deposit_account_info d JOIN bank_orgnization b ON d.org_no = b.bank_id JOIN bank_orgnization p ON b.bank_parent = p.bank_id GROUP BY b.bank_name, p.bank_name ORDER BY 存款总余额 DESC LIMIT 5;","thinking":"","ambiguous":"False"}
{"id":2833646672,"db_name":"loan_user","question":"查找用户还款信息中描述为'严琳'的记录。","gt_sql":"SELECT * FROM loan_repayment WHERE description = '严琳';","pred_sql":"SELECT id, loan_application_id, repayment_amount, repayment_date, description FROM loan_repayment WHERE description = '严琳';","thinking":"","ambiguous":"False"}
{"id":508839263,"db_name":"loan_user","question":"统计每种五级分类的数量。","gt_sql":"SELECT rs_type, COUNT(*) AS count FROM five_level_classification GROUP BY rs_type;","pred_sql":"SELECT rs_type_name, COUNT(*) AS count FROM five_level_classification GROUP BY rs_type_name;","thinking":"","ambiguous":"False"}
{"id":3720034566,"db_name":"loan_user","question":"统计每种五级分类的数量","gt_sql":"SELECT rs_type, COUNT(*) FROM five_level_classification GROUP BY rs_type;","pred_sql":"SELECT rs_type_name, COUNT(*) AS count FROM five_level_classification GROUP BY rs_type_name;","thinking":"","ambiguous":"False"}
{"id":1167041688,"db_name":"loan_user","question":"列出所有银行机构及其对应的客户号和理财余额。","gt_sql":"SELECT b.bank_name, f.cust_no, f.wealth_bal FROM bank_orgnization b JOIN financial_products f ON b.bank_id = f.bank_no;","pred_sql":"SELECT bo.bank_name, fp.cust_no, fp.wealth_bal FROM bank_orgnization bo JOIN financial_products fp ON bo.bank_id = fp.bank_no;","thinking":"","ambiguous":"False"}
{"id":1532873158,"db_name":"loan_user","question":"列出所有贷款类型的名称和描述，并按贷款类型代码排序。","gt_sql":"SELECT loan_type_name, description FROM loan_type ORDER BY loan_type_code;","pred_sql":"SELECT loan_type_name, description FROM loan_type ORDER BY loan_type_code;","thinking":"","ambiguous":"False"}
{"id":2367133121,"db_name":"loan_user","question":"列出所有层级为2的银行机构名称及其父节点名称","gt_sql":"SELECT b1.bank_name, b2.bank_name AS parent_name FROM bank_orgnization b1 LEFT JOIN bank_orgnization b2 ON b1.bank_parent = b2.bank_id WHERE b1.bank_level = '2';","pred_sql":"SELECT b.bank_name, p.bank_name AS parent_name FROM bank_orgnization b JOIN bank_orgnization p ON b.bank_parent = p.bank_id WHERE b.bank_level = '2';","thinking":"","ambiguous":"False"}
{"id":2982430979,"db_name":"loan_user","question":"找出每个省份贷款金额最高的前3名客户，显示省份、客户姓名和贷款金额。","gt_sql":"WITH ranked_loans AS (SELECT c.province, c.customer_name, l.loan_amount, ROW_NUMBER() OVER (PARTITION BY c.province ORDER BY l.loan_amount DESC) as rank FROM customer c JOIN loan_application l ON c.id = l.customer_id) SELECT province, customer_name, loan_amount FROM ranked_loans WHERE rank \u003c= 3 ORDER BY province, loan_amount DESC","pred_sql":"SELECT c.province, c.customer_name, SUM(la.loan_amount) AS total_loan_amount FROM customer c JOIN loan_application la ON c.id = la.customer_id GROUP BY c.province, c.customer_name ORDER BY c.province, total_loan_amount DESC LIMIT 3;","thinking":"","ambiguous":"False"}
{"id":4126585093,"db_name":"loan_user","question":"查询转账记录中源客户ID为376252的记录。","gt_sql":"SELECT * FROM transfer WHERE source_customer_id = 376252;","pred_sql":"SELECT id, source_customer_id, target_customer_id, transfer_amount, transfer_date, description FROM transfer WHERE source_customer_id = 376252;","thinking":"","ambiguous":"False"}
{"id":1577554550,"db_name":"loan_user","question":"查询每个客户的姓名、性别及其职业名称。","gt_sql":"SELECT c.customer_name, c.gender, o.occupation_name FROM customer c JOIN occupation o ON c.occupation_id = o.id;","pred_sql":"SELECT c.customer_name, c.gender, o.occupation_name FROM customer c LEFT JOIN occupation o ON c.occupation_id = o.id;","thinking":"","ambiguous":"False"}
{"id":1654794343,"db_name":"loan_user","question":"在2024年7月，沈阳余淮支行的客户中，有多少客户持有非保本理财产品，并且这些客户的总非保本理财余额是多少？","gt_sql":"SELECT COUNT(DISTINCT fp.cust_no) AS customer_count, SUM(fp.wealth_bal_f) AS total_non_guaranteed_wealth_balance FROM financial_products fp JOIN bank_orgnization bo ON fp.bank_no = bo.bank_id WHERE bo.bank_name = '沈阳余淮支行' AND fp.data_dt \u003e= '2024-07-01' AND fp.data_dt \u003c= '2024-07-31' AND fp.wealth_bal_f IS NOT NULL;","pred_sql":"SELECT COUNT(DISTINCT fp.cust_no) AS customer_count, SUM(fp.wealth_bal_f) AS total_non_guaranteed_balance FROM financial_products fp JOIN bank_orgnization bo ON fp.org_no = bo.bank_id WHERE bo.bank_name = '沈阳余淮支行' AND fp.data_dt BETWEEN '2024-07-01' AND '2024-07-31' AND fp.wealth_bal_f \u003e 0;","thinking":"","ambiguous":"False"}
{"id":2092588313,"db_name":"loan_user","question":"查找所有信用评分为0.8以上的客户ID。","gt_sql":"SELECT customer_id FROM loan_credit WHERE credit_score \u003e 0.8;","pred_sql":"SELECT DISTINCT c.id FROM customer c JOIN loan_credit lc ON c.id = lc.customer_id WHERE lc.credit_score \u003e 0.8;","thinking":"","ambiguous":"False"}
{"id":2021025668,"db_name":"loan_user","question":"列出所有转账金额大于5000的转账记录，并显示转账双方的客户姓名和转账金额。","gt_sql":"SELECT c1.customer_name AS source_customer_name, c2.customer_name AS target_customer_name, t.transfer_amount FROM transfer t JOIN customer c1 ON t.source_customer_id = c1.id JOIN customer c2 ON t.target_customer_id = c2.id WHERE t.transfer_amount \u003e 5000;","pred_sql":"SELECT c1.customer_name AS source_customer, c2.customer_name AS target_customer, t.transfer_amount FROM transfer t JOIN customer c1 ON t.source_customer_id = c1.id JOIN customer c2 ON t.target_customer_id = c2.id WHERE t.transfer_amount \u003e 5000;","thinking":"","ambiguous":"False"}
{"id":891116215,"db_name":"loan_user","question":"哪些客户在2019年申请了贷款并且其贷款状态为'APPROVED'？","gt_sql":"SELECT la.customer_id FROM loan_application la JOIN loan_status ls ON la.status = ls.loan_status_code WHERE la.apply_date \u003e= '2019-01-01' AND la.apply_date \u003c '2020-01-01' AND ls.loan_status_code = 'APPROVED';","pred_sql":"SELECT DISTINCT c.id FROM customer c JOIN loan_application la ON c.id = la.customer_id JOIN loan_status ls ON la.status = ls.loan_status_code WHERE EXTRACT(YEAR FROM la.apply_date) = 2019 AND ls.loan_status_name = 'APPROVED';","thinking":"","ambiguous":"False"}
{"id":3533102799,"db_name":"loan_user","question":"计算每种卡类型的客户数量和平均理财产品余额","gt_sql":"SELECT dci.card_type, dci.card_type_nm, COUNT(DISTINCT dci.cust_no) AS customer_count, AVG(fp.wealth_bal) AS avg_wealth_bal FROM debit_card_information dci LEFT JOIN financial_products fp ON dci.cust_no = fp.cust_no GROUP BY dci.card_type, dci.card_type_nm","pred_sql":"SELECT d.card_type_nm AS card_type, COUNT(DISTINCT d.cust_no) AS customer_count, AVG(f.wealth_bal) AS avg_wealth_balance FROM debit_card_information d LEFT JOIN financial_products f ON d.cust_no = f.cust_no GROUP BY d.card_type_nm;","thinking":"","ambiguous":"False"}
{"id":2160175524,"db_name":"loan_user","question":"查找所有贷款申请中，客户的姓名和贷款金额，按申请日期升序排列。","gt_sql":"SELECT c.customer_name, a.loan_amount FROM customer c JOIN loan_application a ON c.id = a.customer_id ORDER BY a.apply_date ASC;","pred_sql":"SELECT c.customer_name, l.loan_amount FROM loan_application l JOIN customer c ON l.customer_id = c.id ORDER BY l.apply_date ASC;","thinking":"","ambiguous":"False"}
{"id":305358980,"db_name":"loan_user","question":"查询2024年7月19日所有对私客户的账户余额总和以及实际年日均余额总和。","gt_sql":"SELECT SUM(acct_bal) AS total_acct_bal, SUM(act_year_avg_bal) AS total_act_year_avg_bal FROM deposit_account_info WHERE data_dt = '2024-07-19' AND cust_type = '对私';","pred_sql":"SELECT SUM(acct_bal) AS total_account_balance, SUM(act_year_avg_bal) AS total_annual_average_balance FROM deposit_account_info WHERE data_dt = '2024-07-19' AND cust_type = 'P';","thinking":"","ambiguous":"False"}
{"id":3219483220,"db_name":"loan_user","question":"查询所有还款金额低于500的客户及其职业。","gt_sql":"SELECT c.customer_name, o.occupation_name FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_repayment lr ON c.id = lr.loan_application_id WHERE lr.repayment_amount \u003c 500;","pred_sql":"SELECT c.customer_name, o.occupation_name FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_application la ON c.id = la.customer_id JOIN loan_repayment lr ON la.id = lr.loan_application_id WHERE lr.repayment_amount \u003c 500;","thinking":"","ambiguous":"False"}
{"id":3553634354,"db_name":"loan_user","question":"找出2023年7月19日，所有客户的存款账户信息及其账户余额。","gt_sql":"SELECT d.cust_name, d.acct_bal FROM deposit_account_info d WHERE d.data_dt = '2023-07-19 00:00:00';","pred_sql":"SELECT c.customer_name, d.acct_bal FROM customer c JOIN deposit_account_info d ON c.id_number = d.cert_code WHERE d.data_dt = '2023-07-19';","thinking":"","ambiguous":"False"}
{"id":1610907085,"db_name":"loan_user","question":"找出存款余额最高的客户及其最近的贷款申请信息。","gt_sql":"SELECT dai.cust_no, dai.acct_bal, la.loan_amount, la.apply_date FROM deposit_account_info dai LEFT JOIN loan_application la ON dai.cust_noeger = la.customer_id ORDER BY dai.acct_bal DESC, la.apply_date DESC LIMIT 1","pred_sql":"SELECT c.id, c.customer_name, c.id_number, d.acct_bal AS deposit_balance, l.loan_amount, l.apply_date FROM customer c JOIN deposit_account_info d ON c.id_number = d.cert_code JOIN loan_application l ON c.id = l.customer_id WHERE d.acct_bal = (SELECT MAX(acct_bal) FROM deposit_account_info) AND l.apply_date = (SELECT MAX(apply_date) FROM loan_application WHERE customer_id = c.id) LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1410414363,"db_name":"loan_user","question":"统计每个职业的客户数量。","gt_sql":"SELECT o.occupation_name, COUNT(c.id) AS customer_count FROM occupation o LEFT JOIN customer c ON o.id = c.occupation_id GROUP BY o.occupation_name;","pred_sql":"SELECT o.occupation_name, COUNT(c.id) AS customer_count FROM customer c JOIN occupation o ON c.occupation_id = o.id GROUP BY o.occupation_name;","thinking":"","ambiguous":"False"}
{"id":3954115529,"db_name":"loan_user","question":"查询2016年6月11日所有转账金额大于5000的客户的姓名和转账金额，并按转账金额降序排列。","gt_sql":"SELECT c.customer_name, t.transfer_amount FROM transfer t JOIN customer c ON t.source_customer_id = c.id WHERE t.transfer_date = '2016-06-11' AND t.transfer_amount \u003e 5000 ORDER BY t.transfer_amount DESC;","pred_sql":"SELECT c.customer_name, t.transfer_amount FROM customer c JOIN transfer t ON c.id = t.source_customer_id WHERE t.transfer_date = '2016-06-11' AND t.transfer_amount \u003e 5000 ORDER BY t.transfer_amount DESC;","thinking":"","ambiguous":"False"}
{"id":1086674624,"db_name":"loan_user","question":"查询2024年7月1日之后发放的贷款中，贷款余额大于1000000的客户编号、贷款余额、贷款种类以及币种全名，并按贷款余额降序排列。","gt_sql":"SELECT ldi.cust_id, ldi.loan_balance, ldi.loan_type, c.curr_full_name FROM loan_detail_info ldi JOIN currency c ON ldi.currency_type = c.curr_code WHERE ldi.loandate_s \u003e '2024-07-01' AND ldi.loan_balance \u003e 1000000 ORDER BY ldi.loan_balance DESC;","pred_sql":"SELECT ld.cust_id AS 客户编号, ld.loan_balance AS 贷款余额, lt.loan_type_name AS 贷款种类, c.curr_full_name AS 币种全名 FROM loan_detail_info ld JOIN loan_type lt ON ld.loan_type = lt.loan_type_code JOIN currency c ON ld.currency_type = c.curr_code WHERE ld.loandate_s \u003e '2024-07-01' AND ld.loan_balance \u003e 1000000 ORDER BY ld.loan_balance DESC;","thinking":"","ambiguous":"False"}
{"id":1680159550,"db_name":"loan_user","question":"获取所有用户行为中，行为日期为2018-06-26的记录。","gt_sql":"SELECT * FROM user_behavior WHERE behavior_date = '2018-06-26';","pred_sql":"SELECT id, customer_id, behavior_type, behavior_date, description FROM user_behavior WHERE behavior_date = '2018-06-26';","thinking":"","ambiguous":"False"}
{"id":2548352227,"db_name":"loan_user","question":"找出还款日期在周末的记录","gt_sql":"SELECT * FROM loan_repayment WHERE EXTRACT(DOW FROM repayment_date) IN (0, 6);","pred_sql":"SELECT id, loan_application_id, repayment_amount, repayment_date, description FROM loan_repayment WHERE EXTRACT(DOW FROM repayment_date) IN (0, 6);","thinking":"","ambiguous":"False"}
{"id":1833243393,"db_name":"loan_user","question":"计算每种存款类型和贷款类型组合的客户数量，并按照客户数量降序排列。","gt_sql":"SELECT dt.deposit_name, lt.loan_type_name, COUNT(DISTINCT c.id) AS customer_count FROM customer c JOIN deposit_account_info dai ON c.id_number = dai.cert_code JOIN deposit_type dt ON dai.arl_pdp_code = dt.deposit_id LEFT JOIN loan_application la ON c.id = la.customer_id LEFT JOIN loan_type lt ON la.loan_type_id = lt.id GROUP BY dt.deposit_name, lt.loan_type_name ORDER BY customer_count DESC","pred_sql":"SELECT dt.deposit_type_name AS deposit_type, lt.loan_type_name AS loan_type, COUNT(DISTINCT c.id) AS customer_count FROM customer c JOIN deposit_account_info dai ON c.id_number = dai.cert_code JOIN deposit_type dt ON dai.acct_type_code = dt.deposit_id JOIN loan_application la ON c.id = la.customer_id JOIN loan_type lt ON la.loan_type_id = lt.id GROUP BY dt.deposit_type_name, lt.loan_type_name ORDER BY customer_count DESC;","thinking":"","ambiguous":"False"}
{"id":3824204712,"db_name":"loan_user","question":"查询2021年11月10日所有还款金额大于20元的客户的姓名和还款金额，并按还款金额降序排列。","gt_sql":"SELECT c.customer_name, lr.repayment_amount FROM loan_repayment lr JOIN loan_application la ON lr.loan_application_id = la.id JOIN customer c ON la.customer_id = c.id WHERE lr.repayment_date = '2021-11-10' AND lr.repayment_amount \u003e 20 ORDER BY lr.repayment_amount DESC;","pred_sql":"SELECT c.customer_name, lr.repayment_amount FROM customer c JOIN loan_repayment lr ON c.id = lr.loan_application_id WHERE lr.repayment_date = '2021-11-10' AND lr.repayment_amount \u003e 20 ORDER BY lr.repayment_amount DESC;","thinking":"","ambiguous":"False"}
{"id":3260667731,"db_name":"loan_user","question":"统计每种贷款类型的平均信用分。","gt_sql":"SELECT lt.loan_type_name, AVG(lc.credit_score) AS average_credit_score FROM loan_type lt JOIN loan_application la ON lt.id = la.loan_type_id JOIN loan_credit lc ON la.customer_id = lc.customer_id GROUP BY lt.loan_type_name;","pred_sql":"SELECT lt.loan_type_name, AVG(lc.credit_score) AS average_credit_score FROM loan_type lt JOIN loan_application la ON lt.id = la.loan_type_id JOIN loan_credit lc ON la.customer_id = lc.customer_id GROUP BY lt.loan_type_name;","thinking":"","ambiguous":"False"}
{"id":732762958,"db_name":"loan_user","question":"获取所有贷款类型的名称和代码，要求代码不为空。","gt_sql":"SELECT loan_type_name, loan_type_code FROM loan_type WHERE loan_type_code IS NOT NULL;","pred_sql":"SELECT loan_type_code, loan_type_name FROM loan_type WHERE loan_type_code IS NOT NULL;","thinking":"","ambiguous":"False"}
{"id":330418458,"db_name":"loan_user","question":"统计各贷款状态下的贷款申请数量。","gt_sql":"SELECT ls.loan_status_name, COUNT(la.id) AS count FROM loan_status ls JOIN loan_application la ON ls.loan_status_code = la.status GROUP BY ls.loan_status_name;","pred_sql":"SELECT ls.loan_status_name, COUNT(la.id) AS application_count FROM loan_status ls LEFT JOIN loan_application la ON ls.loan_status_code = la.status GROUP BY ls.loan_status_name;","thinking":"","ambiguous":"False"}
{"id":245397134,"db_name":"loan_user","question":"获取所有信用评分的客户ID及描述。","gt_sql":"SELECT customer_id, description FROM loan_credit;","pred_sql":"SELECT customer_id, description FROM loan_credit;","thinking":"","ambiguous":"False"}
{"id":2669572809,"db_name":"loan_user","question":"查询2024年7月15日在北京东单支行开户的所有客户的姓名、证件号码、开户手机号以及他们的借记卡卡号和卡内活期余额。","gt_sql":"SELECT dci.cust_nm, dci.cust_id, dci.tel_no, dci.card_no, dci.current_bal FROM debit_card_information dci WHERE dci.data_dt = '2024-07-15 00:00:00' AND dci.bank_nm = '北京东单支行';","pred_sql":"SELECT c.customer_name, c.id_number, c.phone_number, d.card_no, d.current_bal FROM customer c JOIN debit_card_information d ON c.id_number = d.cust_id WHERE d.org_nm = '北京东单支行' AND DATE(d.open_date) = '2024-07-15';","thinking":"","ambiguous":"False"}
{"id":2085255506,"db_name":"loan_user","question":"统计每种客户类型的贷款总金额，并按客户类型名称排序。","gt_sql":"SELECT l.cust_type, SUM(l.loan_amount) AS total_amount FROM loan_detail_info l GROUP BY l.cust_type ORDER BY l.cust_type;","pred_sql":"SELECT cust_type, SUM(loan_amount) AS total_loan_amount FROM loan_detail_info GROUP BY cust_type ORDER BY cust_type;","thinking":"","ambiguous":"False"}
{"id":1984536651,"db_name":"loan_user","question":"查询贷款余额占贷款总额比例最高的前10笔贷款","gt_sql":"SELECT *, (loan_balance / loan_amount) AS balance_ratio FROM loan_detail_info ORDER BY balance_ratio DESC LIMIT 10;","pred_sql":"SELECT ld.reportid AS loan_id, c.customer_name, c.id_number, lt.loan_type_name, ls.loan_status_name, ld.loan_amount, ld.loan_balance, (ld.loan_balance / NULLIF(ld.loan_amount, 0)) * 100 AS balance_ratio FROM loan_detail_info ld JOIN customer c ON ld.cust_id = c.id_number JOIN loan_type lt ON ld.loan_type = lt.loan_type_code JOIN loan_status ls ON ld.account_state = ls.loan_status_code ORDER BY balance_ratio DESC NULLS LAST LIMIT 10;","thinking":"","ambiguous":"False"}
{"id":258245311,"db_name":"loan_user","question":"查询2019年申请住房贷款且申请状态为'REJECTED'的客户ID和贷款金额总和。","gt_sql":"SELECT la.customer_id, SUM(la.loan_amount) AS total_loan_amount FROM loan_application la JOIN loan_type lt ON la.loan_type_id = lt.id WHERE lt.loan_type_name = '住房贷款' AND la.status = 'REJECTED' AND EXTRACT(YEAR FROM la.apply_date) = 2019 GROUP BY la.customer_id;","pred_sql":"SELECT customer_id, SUM(loan_amount) AS total_rejected_amount FROM loan_application WHERE loan_type_id = (SELECT id FROM loan_type WHERE loan_type_name = '住房贷款') AND status = 'REJECTED' AND EXTRACT(YEAR FROM apply_date) = 2019 GROUP BY customer_id;","thinking":"","ambiguous":"False"}
{"id":1895651034,"db_name":"loan_user","question":"获取银行机构的所有信息。","gt_sql":"SELECT * FROM bank_orgnization;","pred_sql":"SELECT bank_level, bank_id, bank_name, bank_parent, data_dt FROM bank_orgnization;","thinking":"","ambiguous":"False"}
{"id":134489693,"db_name":"loan_user","question":"查询2024年7月22日当天，所有贷款余额（本金）超过10000的贷款明细信息，并显示对应的币种全名和五级分类名称。","gt_sql":"SELECT ldi.reportid, ldi.cust_id, ldi.loan_balance, ldi.blc_capital, c.curr_full_name, flc.rs_type_name FROM loan_detail_info ldi JOIN currency c ON ldi.currency_type = c.curr_code JOIN five_level_classification flc ON ldi.judgelevel = flc.rs_type_id WHERE ldi.blc_capital \u003e 10000 AND ldi.dw_date = '2024-07-22';","pred_sql":"SELECT ldi.iou_no, ldi.cust_id, ldi.loan_balance, ldi.blc_capital, c.curr_full_name, flc.rs_type_name FROM loan_detail_info ldi JOIN currency c ON ldi.currency_type = c.curr_code JOIN five_level_classification flc ON ldi.judgelevel = flc.rs_type_id WHERE ldi.loan_balance \u003e 10000 AND DATE(ldi.dw_date) = '2024-07-22';","thinking":"","ambiguous":"False"}
{"id":2899938404,"db_name":"loan_user","question":"获取所有借记卡的卡状态和开户日期，要求卡状态为'正常'。","gt_sql":"SELECT card_state, open_date FROM debit_card_information WHERE card_state = '正常';","pred_sql":"SELECT card_state, open_date FROM debit_card_information WHERE card_state = '正常';","thinking":"","ambiguous":"False"}
{"id":1614542471,"db_name":"loan_user","question":"列出所有在2023年6月30日进行转账的客户的姓名、转账金额以及转账日期，并按照转账金额从高到低排序。","gt_sql":"SELECT c.customer_name, t.transfer_amount, t.transfer_date FROM transfer t JOIN customer c ON t.source_customer_id = c.id WHERE t.transfer_date = '2023-06-30' ORDER BY t.transfer_amount DESC;","pred_sql":"SELECT c.customer_name, t.transfer_amount, t.transfer_date FROM customer c JOIN transfer t ON c.id = t.source_customer_id WHERE t.transfer_date = '2023-06-30' ORDER BY t.transfer_amount DESC;","thinking":"","ambiguous":"False"}
{"id":2860028194,"db_name":"loan_user","question":"获取2023年6月30日的所有银行机构及其层级信息。","gt_sql":"SELECT b.bank_name, b.bank_level FROM bank_orgnization b WHERE b.data_dt = '2023-06-30';","pred_sql":"SELECT bank_name, bank_level FROM bank_orgnization WHERE data_dt = '2023-06-30';","thinking":"","ambiguous":"False"}
{"id":2112082105,"db_name":"loan_user","question":"查询2024年7月2日所有持有非保本理财产品的客户及其对应的理财余额总和，并按理财余额总和降序排列。","gt_sql":"SELECT cust_no, SUM(wealth_bal_f) AS total_wealth_bal_f FROM financial_products WHERE data_dt = '2024-07-02' GROUP BY cust_no ORDER BY total_wealth_bal_f DESC;","pred_sql":"SELECT cust_no, SUM(wealth_bal) AS total_wealth_balance FROM financial_products WHERE data_dt = '2024-07-02' AND cast_type = '非保本' GROUP BY cust_no ORDER BY total_wealth_balance DESC;","thinking":"","ambiguous":"False"}
{"id":1900105170,"db_name":"loan_user","question":"2019年申请的贷款中，状态为'REJECTED'的贷款总金额是多少？","gt_sql":"SELECT SUM(loan_amount) FROM loan_application WHERE status = 'REJECTED' AND apply_date \u003e= '2019-01-01' AND apply_date \u003c= '2019-12-31';","pred_sql":"SELECT SUM(loan_amount) FROM loan_application WHERE status = 'REJECTED' AND EXTRACT(YEAR FROM apply_date) = 2019;","thinking":"","ambiguous":"False"}
{"id":3724611031,"db_name":"loan_user","question":"查询2024年7月21日杭州分行下所有对公客户的存款账户余额总和，并按支行名称分组。","gt_sql":"SELECT d.org_nm, SUM(d.acct_bal) AS total_balance FROM deposit_account_info d JOIN bank_orgnization b ON d.bank_no = b.bank_id WHERE d.data_dt = '2024-07-21' AND d.bank_no = 'BANK_003' AND d.cust_type = '对公' GROUP BY d.org_nm;","pred_sql":"SELECT org_nm, SUM(acct_bal) FROM deposit_account_info WHERE data_dt = '2024-07-21' AND cust_type = '2' AND bank_nm = '杭州分行' GROUP BY org_nm;","thinking":"","ambiguous":"False"}
{"id":3179484363,"db_name":"loan_user","question":"统计每个用户的还款总额、行为次数和平均还款金额","gt_sql":"SELECT lr.loan_application_id, SUM(lr.repayment_amount) AS total_repayment, COUNT(ub.id) AS behavior_count, AVG(lr.repayment_amount) AS avg_repayment_amount FROM loan_repayment lr LEFT JOIN user_behavior ub ON lr.loan_application_id = ub.customer_id GROUP BY lr.loan_application_id;","pred_sql":"SELECT lr.loan_application_id, SUM(lr.repayment_amount) AS total_repayment, COUNT(ub.id) AS behavior_count, AVG(lr.repayment_amount) AS avg_repayment FROM loan_repayment lr LEFT JOIN user_behavior ub ON lr.loan_application_id = ub.customer_id GROUP BY lr.loan_application_id;","thinking":"","ambiguous":"False"}
{"id":3200437107,"db_name":"loan_user","question":"查询所有银行及其机构层级和数据日期。","gt_sql":"SELECT bank_name, bank_level, data_dt FROM bank_orgnization;","pred_sql":"SELECT bank_name, bank_level, data_dt FROM bank_orgnization;","thinking":"","ambiguous":"False"}
{"id":2071923254,"db_name":"loan_user","question":"找出存款余额前10%的客户中，尚未申请贷款的客户，列出他们的姓名、存款余额和职业。","gt_sql":"WITH top_depositors AS (SELECT c.id, c.customer_name, c.occupation_id, dai.acct_bal FROM customer c JOIN deposit_account_info dai ON c.id_number = dai.cert_code ORDER BY dai.acct_bal DESC LIMIT (SELECT COUNT(*) * 0.1 FROM customer)) SELECT td.customer_name, td.acct_bal AS deposit_balance, td.occupation_id FROM top_depositors td LEFT JOIN loan_application la ON td.id = la.customer_id WHERE la.id IS NULL","pred_sql":"SELECT c.customer_name, d.acct_bal, c.occupation_id FROM customer c JOIN deposit_account_info d ON c.id_number = d.cert_code WHERE c.id NOT IN (SELECT DISTINCT customer_id FROM loan_application) AND d.acct_bal \u003e= (SELECT PERCENTILE_CONT(0.9) WITHIN GROUP (ORDER BY acct_bal) FROM deposit_account_info) LIMIT (SELECT COUNT(*) * 0.1 FROM deposit_account_info);","thinking":"","ambiguous":"False"}
{"id":3565838054,"db_name":"loan_user","question":"计算每个网点的贷款申请成功率（已批准的申请数除以总申请数）。","gt_sql":"SELECT dai.org_nm, COUNT(CASE WHEN la.status = 'APPROVED' THEN 1 END) / COUNT(*) as approval_rate FROM loan_application la JOIN deposit_account_info dai ON la.customer_id = dai.cust_noeger GROUP BY dai.org_nm","pred_sql":"SELECT b.org_nm AS organization_name, COUNT(CASE WHEN l.status = 'APPROVED' THEN 1 END) * 100.0 / COUNT(*) AS approval_rate FROM loan_application l JOIN loan_detail_info d ON l.id::text = d.reportid JOIN debit_card_information b ON d.loan_orgno = b.org_no GROUP BY b.org_nm;","thinking":"","ambiguous":"False"}
{"id":1893298039,"db_name":"loan_user","question":"获取所有客户在2023年7月的存款账户余额信息。","gt_sql":"SELECT cust_name, acct_bal FROM deposit_account_info WHERE data_dt BETWEEN '2023-07-01' AND '2023-07-31';","pred_sql":"SELECT c.customer_name, d.acct_bal FROM customer c JOIN deposit_account_info d ON c.id_number = d.cert_code WHERE DATE_TRUNC('month', d.data_dt) = '2023-07-01';","thinking":"","ambiguous":"False"}
{"id":2315630941,"db_name":"loan_user","question":"在2023年6月30日，哪些银行机构的存款账户余额超过100000元，并且这些账户的币种是美元？","gt_sql":"SELECT b.bank_name, d.cust_name, d.acct_bal, d.cur_type FROM bank_orgnization b JOIN deposit_account_info d ON b.bank_id = d.bank_no WHERE d.acct_bal \u003e 100000 AND d.cur_type = 'USD' AND b.data_dt = '2023-06-30';","pred_sql":"SELECT d.org_nm AS bank_name, d.cust_name, d.acct_bal AS account_balance, c.curr_full_name AS currency_type FROM deposit_account_info d JOIN currency c ON d.cur_type = c.curr_code WHERE d.data_dt = '2023-06-30' AND d.acct_bal \u003e 100000 AND c.curr_class = 'USD';","thinking":"","ambiguous":"False"}
{"id":870110560,"db_name":"loan_user","question":"查询2024年7月19日所有存款账户信息中，账户余额大于100000的客户名称、账户类型、账户余额以及对应的币种全名。","gt_sql":"SELECT d.cust_name, d.acct_type_code, d.acct_bal, c.curr_full_name FROM deposit_account_info d JOIN currency c ON d.cur_type = c.curr_code WHERE d.data_dt = '2024-07-19' AND d.acct_bal \u003e 100000;","pred_sql":"SELECT d.cust_name, d.acct_type_code, d.acct_bal, c.curr_full_name FROM deposit_account_info d JOIN currency c ON d.cur_type = c.curr_code WHERE d.data_dt = '2024-07-19' AND d.acct_bal \u003e 100000;","thinking":"","ambiguous":"False"}
{"id":1308562229,"db_name":"loan_user","question":"查询所有借记卡状态为'正常'且开户日期在2024年7月1日之后的客户名称和卡号，并按开户日期降序排列。","gt_sql":"SELECT cust_nm, card_no FROM debit_card_information WHERE card_state = '正常' AND open_date \u003e '2024-07-01' ORDER BY open_date DESC;","pred_sql":"SELECT cust_nm AS customer_name, card_no FROM debit_card_information WHERE card_state = '正常' AND open_date \u003e '2024-07-01' ORDER BY open_date DESC;","thinking":"","ambiguous":"False"}
{"id":1986404179,"db_name":"loan_user","question":"列出所有存款类型产品名称及其对应的存款类型产品组号，并按照存款类型产品名称排序。","gt_sql":"SELECT deposit_name, deposit_type_id FROM deposit_type ORDER BY deposit_name;","pred_sql":"SELECT deposit_name, deposit_type_id FROM deposit_type ORDER BY deposit_name;","thinking":"","ambiguous":"False"}
{"id":2032902123,"db_name":"loan_user","question":"找出转账次数最多的前10名客户及其最常用的转账金额","gt_sql":"SELECT source_customer_id, COUNT(*) AS transfer_count, MODE() WITHIN GROUP (ORDER BY transfer_amount) AS most_common_amount FROM transfer GROUP BY source_customer_id ORDER BY transfer_count DESC LIMIT 10;","pred_sql":"SELECT t.source_customer_id AS customer_id, COUNT(*) AS transfer_count, MODE() WITHIN GROUP (ORDER BY t.transfer_amount) AS most_frequent_amount FROM transfer t GROUP BY t.source_customer_id ORDER BY transfer_count DESC LIMIT 10;","thinking":"","ambiguous":"False"}
{"id":3109098948,"db_name":"loan_user","question":"查询上海市的客户中，有多少人拥有信用卡并且其信用卡账户状态为'正常'，同时这些客户的贷款余额总和是多少？","gt_sql":"SELECT COUNT(DISTINCT c.id) AS customer_count, SUM(ldi.loan_balance) AS total_loan_balance FROM customer c JOIN credit_card_data ccd ON c.id_number = ccd.custr_nbr JOIN loan_detail_info ldi ON c.id_number = ldi.cust_id WHERE c.province = '上海市' AND ccd.acct_sts = '正常';","pred_sql":"SELECT COUNT(DISTINCT c.id) AS customer_count, COALESCE(SUM(ldi.loan_balance), 0) AS total_loan_balance FROM customer c JOIN credit_card_data ccd ON c.id_number = ccd.custr_nbr JOIN loan_detail_info ldi ON c.id_number = ldi.cust_id WHERE c.province = '上海市' AND ccd.acct_sts = '正常';","thinking":"","ambiguous":"False"}
{"id":188271146,"db_name":"loan_user","question":"查询2024年7月22日贷款余额大于15000的贷款明细信息，并显示对应的五级分类名称和贷款类型名称。","gt_sql":"SELECT ldi.reportid, ldi.loan_balance, flc.rs_type_name, ldi.loan_type FROM loan_detail_info ldi JOIN five_level_classification flc ON ldi.judgelevel = flc.rs_type_id WHERE ldi.loan_balance \u003e 15000 AND ldi.dw_date = '2024-07-22';","pred_sql":"SELECT ldi.reportid, ldi.loan_balance, flc.rs_type_name AS risk_classification, lt.loan_type_name AS product_type FROM loan_detail_info ldi JOIN five_level_classification flc ON ldi.judgelevel = flc.rs_type_id JOIN loan_type lt ON ldi.loan_type = lt.loan_type_code WHERE ldi.loan_balance \u003e 15000 AND ldi.dw_date = '2024-07-22';","thinking":"","ambiguous":"False"}
{"id":7209425,"db_name":"loan_user","question":"查询既有房贷又有车贷，并且房贷金额大于车贷金额的客户数量。","gt_sql":"WITH customer_loans AS (SELECT c.id, MAX(CASE WHEN lt.loan_type_name = '房贷' THEN l.loan_amount END) as house_loan, MAX(CASE WHEN lt.loan_type_name = '车贷' THEN l.loan_amount END) as car_loan FROM customer c JOIN loan_application l ON c.id = l.customer_id JOIN loan_type lt ON l.loan_type_id = lt.id WHERE lt.loan_type_name IN ('房贷', '车贷') GROUP BY c.id) SELECT COUNT(*) as customer_count FROM customer_loans WHERE house_loan IS NOT NULL AND car_loan IS NOT NULL AND house_loan \u003e car_loan","pred_sql":"SELECT COUNT(DISTINCT a.customer_id) FROM loan_application a JOIN loan_application b ON a.customer_id = b.customer_id JOIN loan_type c ON a.loan_type_id = c.id JOIN loan_type d ON b.loan_type_id = d.id WHERE c.loan_type_name = '房贷' AND d.loan_type_name = '车贷' AND a.loan_amount \u003e b.loan_amount;","thinking":"","ambiguous":"False"}
{"id":1065176696,"db_name":"loan_user","question":"查询2024年7月19日杭州上城区支行的所有客户及其对应的借记卡余额总和，并按余额总和降序排列。","gt_sql":"SELECT dci.cust_nm, SUM(dci.current_bal + dci.fixed_bal) AS total_balance FROM debit_card_information dci JOIN bank_orgnization bo ON dci.bank_no = bo.bank_id WHERE dci.data_dt = '2024-07-19' AND bo.bank_name = '杭州上城区支行' GROUP BY dci.cust_nm ORDER BY total_balance DESC;","pred_sql":"SELECT c.customer_name, SUM(d.current_bal) AS total_balance FROM customer c JOIN debit_card_information d ON c.id_number = d.cust_id WHERE d.org_nm = '杭州上城区支行' AND d.data_dt::date = '2024-07-19' GROUP BY c.customer_name ORDER BY total_balance DESC;","thinking":"","ambiguous":"False"}
{"id":953680810,"db_name":"loan_user","question":"统计每种担保方式下的平均贷款金额、中位数贷款金额和贷款金额的四分位差","gt_sql":"SELECT vouch_type, AVG(loan_amount) AS avg_loan_amount, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY loan_amount) AS median_loan_amount, PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY loan_amount) - PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY loan_amount) AS iqr_loan_amount FROM loan_detail_info GROUP BY vouch_type","pred_sql":"SELECT vouch_type, AVG(loan_amount) AS avg_loan_amount, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY loan_amount) AS median_loan_amount, PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY loan_amount) - PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY loan_amount) AS iqr_loan_amount FROM loan_detail_info GROUP BY vouch_type ORDER BY vouch_type;","thinking":"","ambiguous":"False"}
{"id":2393859347,"db_name":"loan_user","question":"在2020年11月3日，信用评分高于0.8的客户之间进行的转账总额是多少？","gt_sql":"SELECT SUM(t.transfer_amount) FROM transfer t JOIN loan_credit lc ON t.source_customer_id = lc.customer_id OR t.target_customer_id = lc.customer_id WHERE t.transfer_date = '2020-11-03' AND lc.credit_score \u003e 0.8","pred_sql":"SELECT COALESCE(SUM(t.transfer_amount), 0) FROM transfer t JOIN loan_credit lc1 ON t.source_customer_id = lc1.customer_id JOIN loan_credit lc2 ON t.target_customer_id = lc2.customer_id WHERE t.transfer_date = '2020-11-03' AND lc1.credit_score \u003e 0.8 AND lc2.credit_score \u003e 0.8;","thinking":"","ambiguous":"False"}
{"id":749612150,"db_name":"loan_user","question":"申请贷款金额超过50000且职业是护士的客户有多少？","gt_sql":"SELECT COUNT(DISTINCT c.id) FROM customer c JOIN loan_application la ON c.id = la.customer_id JOIN occupation o ON c.occupation_id = o.id WHERE la.loan_amount \u003e 50000 AND o.occupation_name = '护士'","pred_sql":"SELECT COUNT(DISTINCT c.id) FROM customer c JOIN loan_application la ON c.id = la.customer_id JOIN occupation o ON c.occupation_id = o.id WHERE la.loan_amount \u003e 50000 AND o.occupation_name = '护士';","thinking":"","ambiguous":"False"}
{"id":3260359700,"db_name":"loan_user","question":"查找所有在2024年7月的贷款申请及客户信息。","gt_sql":"SELECT ld.cust_id, ld.loan_amount FROM loan_detail_info ld WHERE ld.dw_date BETWEEN '2024-07-01' AND '2024-07-31';","pred_sql":"SELECT c.id AS customer_id, la.loan_amount FROM customer c JOIN loan_application la ON c.id = la.customer_id WHERE la.apply_date BETWEEN '2024-07-01' AND '2024-07-31';","thinking":"","ambiguous":"False"}
{"id":2869045188,"db_name":"loan_user","question":"每个月度的贷款申请通过率是多少？","gt_sql":"SELECT DATE_TRUNC('month', apply_date) as month, COUNT(*) as total_applications, SUM(CASE WHEN status = 'APPROVED' THEN 1 ELSE 0 END) / COUNT(*) as approval_rate FROM loan_application GROUP BY month ORDER BY month","pred_sql":"SELECT TO_CHAR(apply_date, 'YYYY-MM') AS month, COUNT(*) AS total_applications, ROUND(100.0 * SUM(CASE WHEN status = 'Approved' THEN 1 ELSE 0 END) / COUNT(*), 2) AS approval_rate FROM loan_application GROUP BY TO_CHAR(apply_date, 'YYYY-MM') ORDER BY month;","thinking":"","ambiguous":"False"}
{"id":2139894777,"db_name":"loan_user","question":"查询2024年7月2日所有对公客户的理财余额总和，并按银行机构名称分组显示。","gt_sql":"SELECT b.bank_name, SUM(f.wealth_bal) AS total_wealth_bal FROM financial_products f JOIN bank_orgnization b ON f.bank_no = b.bank_id WHERE f.data_dt = '2024-07-02' AND f.cast_type = '对公' GROUP BY b.bank_name;","pred_sql":"SELECT b.bank_name, SUM(f.wealth_bal) AS total_wealth_balance FROM financial_products f JOIN bank_orgnization b ON f.bank_no = b.bank_id WHERE f.data_dt = '2024-07-02' AND f.cast_type = '对公' GROUP BY b.bank_name;","thinking":"","ambiguous":"False"}
{"id":2426521027,"db_name":"loan_user","question":"查询所有客户及其贷款申请状态。","gt_sql":"SELECT c.customer_name, l.status FROM customer c LEFT JOIN loan_application l ON c.id = l.customer_id;","pred_sql":"SELECT c.customer_name, ls.loan_status_name FROM customer c LEFT JOIN loan_application la ON c.id = la.customer_id LEFT JOIN loan_status ls ON la.status = ls.loan_status_code;","thinking":"","ambiguous":"False"}
{"id":3310012060,"db_name":"loan_user","question":"统计各贷款类型的客户数量和贷款总额。","gt_sql":"SELECT lt.loan_type_name, COUNT(la.customer_id) AS customer_count, SUM(la.loan_amount) AS total_loan_amount FROM loan_type lt JOIN loan_application la ON lt.id = la.loan_type_id GROUP BY lt.loan_type_name;","pred_sql":"SELECT lt.loan_type_name, COUNT(DISTINCT la.customer_id) AS customer_count, SUM(la.loan_amount) AS total_loan_amount FROM loan_application la JOIN loan_type lt ON la.loan_type_id = lt.id GROUP BY lt.loan_type_name;","thinking":"","ambiguous":"False"}
{"id":1454101538,"db_name":"loan_user","question":"计算每个年龄段（0-20，21-40，41-60，61+）的贷款申请通过率。","gt_sql":"SELECT CASE WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 0 AND 20 THEN '0-20' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 21 AND 40 THEN '21-40' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 41 AND 60 THEN '41-60' ELSE '61+' END as age_group, COUNT(CASE WHEN l.status = 'APPROVED' THEN 1 END) / COUNT(*) as approval_rate FROM customer c JOIN loan_application l ON c.id = l.customer_id GROUP BY age_group ORDER BY age_group","pred_sql":"SELECT CASE WHEN EXTRACT(YEAR FROM AGE(c.birth_date)) BETWEEN 0 AND 20 THEN '0-20' WHEN EXTRACT(YEAR FROM AGE(c.birth_date)) BETWEEN 21 AND 40 THEN '21-40' WHEN EXTRACT(YEAR FROM AGE(c.birth_date)) BETWEEN 41 AND 60 THEN '41-60' ELSE '61+' END AS age_group, COUNT(*) AS total_applications, SUM(CASE WHEN la.status = 'APPROVED' THEN 1 ELSE 0 END) AS approved_applications, ROUND(SUM(CASE WHEN la.status = 'APPROVED' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) AS approval_rate FROM loan_application la JOIN customer c ON la.customer_id = c.id GROUP BY age_group ORDER BY age_group;","thinking":"","ambiguous":"False"}
{"id":1355579742,"db_name":"loan_user","question":"查询贷款申请ID为323803的还款金额和日期。","gt_sql":"SELECT repayment_amount, repayment_date FROM loan_repayment WHERE loan_application_id = 323803;","pred_sql":"SELECT repayment_amount, repayment_date FROM loan_repayment WHERE loan_application_id = 323803;","thinking":"","ambiguous":"False"}
{"id":2730549341,"db_name":"loan_user","question":"在2023年6月30日，杭州上城区支行的客户中，信用分最高的客户ID和信用分是多少？","gt_sql":"SELECT lc.customer_id, lc.credit_score FROM loan_credit lc JOIN bank_orgnization bo ON lc.credit_date = bo.data_dt WHERE bo.bank_name = '杭州上城区支行' AND bo.data_dt = '2023-06-30' ORDER BY lc.credit_score DESC LIMIT 1;","pred_sql":"SELECT c.id, lc.credit_score FROM customer c JOIN loan_credit lc ON c.id = lc.customer_id JOIN debit_card_information d ON c.id_number = d.cust_id JOIN bank_orgnization b ON d.org_no = b.bank_id WHERE b.bank_name = '杭州上城区支行' AND lc.credit_date = '2023-06-30' ORDER BY lc.credit_score DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1021718263,"db_name":"loan_user","question":"获取用户还款信息中还款日期在2020-02-25之前的记录。","gt_sql":"SELECT * FROM loan_repayment WHERE repayment_date \u003c '2020-02-25';","pred_sql":"SELECT id, loan_application_id, repayment_amount, repayment_date, description FROM loan_repayment WHERE repayment_date \u003c '2020-02-25';","thinking":"","ambiguous":"False"}
{"id":405520388,"db_name":"loan_user","question":"查找客户关飞的所有转账记录。","gt_sql":"SELECT t.transfer_amount, t.transfer_date FROM transfer t JOIN customer c ON t.source_customer_id = c.id WHERE c.customer_name = '关飞';","pred_sql":"SELECT t.transfer_amount, t.transfer_date FROM transfer t JOIN customer c ON t.source_customer_id = c.id OR t.target_customer_id = c.id WHERE c.customer_name = '关飞';","thinking":"","ambiguous":"False"}
{"id":1969682603,"db_name":"loan_user","question":"查找所有客户的姓名、身份证号及其贷款状态。","gt_sql":"SELECT c.customer_name, c.id_number, s.loan_status_name FROM customer c JOIN loan_application a ON c.id = a.customer_id JOIN loan_status s ON a.status = s.loan_status_code;","pred_sql":"SELECT c.customer_name, c.id_number, ls.loan_status_name FROM customer c LEFT JOIN loan_application la ON c.id = la.customer_id LEFT JOIN loan_status ls ON la.status = ls.loan_status_code;","thinking":"","ambiguous":"False"}
{"id":797442197,"db_name":"loan_user","question":"获取所有用户行为中行为类型包含'ILL'的记录。","gt_sql":"SELECT * FROM user_behavior WHERE behavior_type LIKE '%ILL%';","pred_sql":"SELECT id, customer_id, behavior_type, behavior_date, description FROM user_behavior WHERE behavior_type LIKE '%ILL%';","thinking":"","ambiguous":"False"}
{"id":3086691704,"db_name":"loan_user","question":"获取所有转账记录及其描述，按转账金额升序排列。","gt_sql":"SELECT * FROM transfer ORDER BY transfer_amount ASC;","pred_sql":"SELECT id, source_customer_id, target_customer_id, transfer_amount, transfer_date, description FROM transfer ORDER BY transfer_amount ASC;","thinking":"","ambiguous":"False"}
{"id":1652118460,"db_name":"loan_user","question":"查询用户行为中描述不为空的记录。","gt_sql":"SELECT * FROM user_behavior WHERE description IS NOT NULL;","pred_sql":"SELECT id, customer_id, behavior_type, behavior_date, description FROM user_behavior WHERE description IS NOT NULL;","thinking":"","ambiguous":"False"}
{"id":729818388,"db_name":"loan_user","question":"2024年7月9日，杭州上城区支行的客户James Taylor的借记卡余额是多少？","gt_sql":"SELECT current_bal FROM debit_card_information WHERE cust_nm = 'James Taylor' AND bank_nm = '杭州上城区支行' AND data_dt = '2024-07-09';","pred_sql":"SELECT d.current_bal FROM debit_card_information d JOIN customer c ON d.cust_id = c.id_number WHERE c.customer_name = 'James Taylor' AND d.org_nm = '杭州上城区支行' AND d.data_dt = '2024-07-09';","thinking":"","ambiguous":"False"}
{"id":3319537046,"db_name":"loan_user","question":"查询描述中包含'Loan'的贷款类型","gt_sql":"SELECT * FROM loan_type WHERE description ILIKE '%Loan%';","pred_sql":"SELECT id, loan_type_code, loan_type_name, description FROM loan_type WHERE description LIKE '%Loan%';","thinking":"","ambiguous":"False"}
{"id":981960336,"db_name":"loan_user","question":"查询所有信用卡账户的币种代码及其对应的币种全名，并统计每个币种代码下的账户数量。","gt_sql":"SELECT c.curr_code, c.curr_full_name, COUNT(ccd.curr_num) AS account_count FROM currency c LEFT JOIN credit_card_data ccd ON c.curr_code = ccd.curr_num GROUP BY c.curr_code, c.curr_full_name;","pred_sql":"SELECT c.curr_code, c.curr_full_name, COUNT(ccd.xaccount) AS account_count FROM credit_card_data ccd JOIN currency c ON ccd.curr_num = c.curr_code GROUP BY c.curr_code, c.curr_full_name;","thinking":"","ambiguous":"False"}
{"id":446364127,"db_name":"loan_user","question":"查询所有银行机构的理财产品中，保本理财月日均余额的平均值。","gt_sql":"SELECT AVG(f.wealth_t_m_avg_bal_a) AS avg_guaranteed_balance FROM financial_products f;","pred_sql":"SELECT bo.bank_name, AVG(fp.wealth_sta_m_avg_bal_a) AS avg_guaranteed_monthly_avg_balance FROM financial_products fp JOIN bank_orgnization bo ON fp.bank_no = bo.bank_id WHERE fp.cast_type = '保本' GROUP BY bo.bank_name;","thinking":"","ambiguous":"False"}
{"id":1464013698,"db_name":"loan_user","question":"列出所有贷款状态为'APPROVED'的贷款类型名称及其描述","gt_sql":"SELECT lt.loan_type_name, lt.description FROM loan_status ls JOIN loan_type lt ON ls.id = lt.id WHERE ls.loan_status_code = 'APPROVED';","pred_sql":"SELECT lt.loan_type_name, lt.description FROM loan_type lt JOIN loan_application la ON lt.id = la.loan_type_id WHERE la.status = 'APPROVED';","thinking":"","ambiguous":"False"}
{"id":2417924945,"db_name":"loan_user","question":"查询2023年申请贷款的客户中，年龄最大的前5名客户的姓名、年龄和贷款金额。","gt_sql":"SELECT c.customer_name, DATE_PART('year', AGE(date('now'), c.birth_date)) as age, l.loan_amount FROM customer c JOIN loan_application l ON c.id = l.customer_id WHERE EXTRACT(YEAR FROM l.apply_date) = 2023 ORDER BY age DESC LIMIT 5","pred_sql":"SELECT c.customer_name, EXTRACT(YEAR FROM AGE(CURRENT_DATE, c.birth_date)) AS age, la.loan_amount FROM customer c JOIN loan_application la ON c.id = la.customer_id WHERE EXTRACT(YEAR FROM la.apply_date) = 2023 ORDER BY age DESC LIMIT 5;","thinking":"","ambiguous":"False"}
{"id":3366689482,"db_name":"loan_user","question":"在2023年6月30日，杭州上城区支行的客户中，信用评分大于0.75的客户数量是多少？","gt_sql":"SELECT COUNT(DISTINCT lc.customer_id) FROM loan_credit lc JOIN financial_products fp ON lc.customer_id = fp.cust_no JOIN bank_orgnization bo ON fp.bank_no = bo.bank_id WHERE bo.bank_name = '杭州上城区支行' AND bo.data_dt = '2023-06-30' AND lc.credit_score \u003e 0.75;","pred_sql":"SELECT COUNT(DISTINCT c.id) FROM customer c JOIN loan_credit lc ON c.id = lc.customer_id JOIN debit_card_information dci ON c.id_number = dci.cust_id JOIN bank_orgnization bo ON dci.org_no = bo.bank_id WHERE c.province = '杭州' AND bo.bank_name = '上城区支行' AND lc.credit_score \u003e 0.75 AND bo.data_dt = '2023-06-30' AND dci.data_dt = '2023-06-30' AND lc.credit_date \u003c= '2023-06-30';","thinking":"","ambiguous":"False"}
{"id":3973811473,"db_name":"loan_user","question":"2024年7月22日的五级分类中，各个大类的数量分布如何？","gt_sql":"SELECT rs_type, COUNT(*) as count FROM five_level_classification WHERE data_dt = '2024-07-22' GROUP BY rs_type ORDER BY count DESC","pred_sql":"SELECT rs_type_name, COUNT(*) AS count FROM five_level_classification WHERE data_dt = '2024-07-22' GROUP BY rs_type_name;","thinking":"","ambiguous":"False"}
{"id":1905559813,"db_name":"loan_user","question":"统计不同五级分类下的用户行为数量，按分类名称分组。","gt_sql":"SELECT flc.rs_type_name, COUNT(ub.id) AS behavior_count FROM five_level_classification flc LEFT JOIN user_behavior ub ON flc.rs_type_name = ub.behavior_type GROUP BY flc.rs_type_name;","pred_sql":"SELECT f.rs_type_name, COUNT(ub.id) AS behavior_count FROM five_level_classification f JOIN loan_detail_info l ON f.rs_type_id = l.judgelevel JOIN customer c ON l.cust_id = c.id_number JOIN user_behavior ub ON c.id = ub.customer_id GROUP BY f.rs_type_name;","thinking":"","ambiguous":"False"}
{"id":6017603,"db_name":"loan_user","question":"查看所有转账记录，按转账日期排序。","gt_sql":"SELECT * FROM transfer ORDER BY transfer_date;","pred_sql":"SELECT id, source_customer_id, target_customer_id, transfer_amount, transfer_date, description FROM transfer ORDER BY transfer_date;","thinking":"","ambiguous":"False"}
{"id":2286869285,"db_name":"loan_user","question":"在2024年7月，杭州上城区支行的客户James Taylor的借记卡中，有哪些卡种类代码对应的卡种类名称和卡状态？","gt_sql":"SELECT card_type, card_type_nm, card_state FROM debit_card_information WHERE data_dt = '2024-07-09' AND bank_nm = '杭州上城区支行' AND cust_nm = 'James Taylor';","pred_sql":"SELECT d.card_type, d.card_type_nm, d.card_state FROM debit_card_information d JOIN customer c ON d.cust_id = c.id_number WHERE c.customer_name = 'James Taylor' AND d.org_nm = '杭州上城区支行' AND d.open_date \u003e= '2024-07-01' AND d.open_date \u003c '2024-08-01';","thinking":"","ambiguous":"False"}
{"id":1590803091,"db_name":"loan_user","question":"查询2024年7月2日所有理财产品中，币种为美元（USD）的理财余额总和是多少？","gt_sql":"SELECT SUM(wealth_bal) FROM financial_products WHERE data_dt = '2024-07-02' AND currency = 'USD';","pred_sql":"SELECT SUM(wealth_bal) FROM financial_products WHERE currency = 'USD' AND data_dt = '2024-07-02';","thinking":"","ambiguous":"False"}
{"id":3414285101,"db_name":"loan_user","question":"获取每个客户的行为次数和最新信用评分，按客户ID排序。","gt_sql":"SELECT ub.customer_id, COUNT(ub.id) AS behavior_count, MAX(lc.credit_score) AS latest_credit_score FROM user_behavior ub JOIN loan_credit lc ON ub.customer_id = lc.customer_id GROUP BY ub.customer_id ORDER BY ub.customer_id;","pred_sql":"SELECT c.id AS customer_id, COUNT(ub.id) AS behavior_count, (SELECT lc.credit_score FROM loan_credit lc WHERE lc.customer_id = c.id ORDER BY lc.credit_date DESC LIMIT 1) AS latest_credit_score FROM customer c LEFT JOIN user_behavior ub ON c.id = ub.customer_id GROUP BY c.id ORDER BY c.id;","thinking":"","ambiguous":"False"}
{"id":3246518573,"db_name":"loan_user","question":"查询2023年6月30日所有转账金额大于1000的转账记录，并显示转账双方的客户姓名和转账金额。","gt_sql":"SELECT t.transfer_amount, c1.customer_name AS source_customer_name, c2.customer_name AS target_customer_name FROM transfer t JOIN customer c1 ON t.source_customer_id = c1.id JOIN customer c2 ON t.target_customer_id = c2.id WHERE t.transfer_date = '2023-06-30' AND t.transfer_amount \u003e 1000;","pred_sql":"SELECT t.transfer_amount, c1.customer_name AS source_customer_name, c2.customer_name AS target_customer_name FROM transfer t JOIN customer c1 ON t.source_customer_id = c1.id JOIN customer c2 ON t.target_customer_id = c2.id WHERE t.transfer_date = '2023-06-30' AND t.transfer_amount \u003e 1000;","thinking":"","ambiguous":"False"}
{"id":104815069,"db_name":"loan_user","question":"获取客户姓名为饶丽的所有信息。","gt_sql":"SELECT * FROM customer WHERE customer_name = '饶丽';","pred_sql":"SELECT id, customer_name, id_number, phone_number, email, address, birth_date, gender, occupation_id, province FROM customer WHERE customer_name = '饶丽';","thinking":"","ambiguous":"False"}
{"id":3801446621,"db_name":"loan_user","question":"查找在2024年7月14日所有正常状态的借记卡及其对应的客户名称。","gt_sql":"SELECT d.card_no, d.cust_nm FROM debit_card_information d WHERE d.data_dt = '2024-07-14' AND d.card_state = '正常';","pred_sql":"SELECT d.card_no, c.customer_name FROM debit_card_information d JOIN customer c ON d.cust_id = c.id_number WHERE d.card_state = '正常' AND DATE(d.data_dt) = '2024-07-14';","thinking":"","ambiguous":"False"}
{"id":368801370,"db_name":"loan_user","question":"查询2024年7月19日所有贷款余额超过500000的客户及其对应的五级分类名称和币种全名，并按贷款余额降序排列。","gt_sql":"SELECT ldi.cust_id, ldi.loan_balance, flc.rs_type_name, c.curr_full_name FROM loan_detail_info ldi JOIN five_level_classification flc ON ldi.judgelevel = flc.rs_type_id JOIN currency c ON ldi.currency_type = c.curr_code WHERE ldi.dw_date = '2024-07-19' AND ldi.loan_balance \u003e 500000 ORDER BY ldi.loan_balance DESC;","pred_sql":"SELECT ld.cust_id AS customer_identifier, ld.loan_balance AS loan_balance_amount, flc.rs_type_name AS risk_classification_name, c.curr_full_name AS currency_full_name FROM loan_detail_info ld JOIN five_level_classification flc ON ld.judgelevel = flc.rs_type_id JOIN currency c ON ld.currency_type = c.curr_code WHERE ld.loan_balance \u003e 500000 AND ld.dw_date::date = '2024-07-19' ORDER BY ld.loan_balance DESC;","thinking":"","ambiguous":"False"}
{"id":852089580,"db_name":"loan_user","question":"在2024年7月19日，沈阳分行的所有客户中，有多少客户的账户余额超过100000元，并且他们的性别是男性？","gt_sql":"SELECT COUNT(*) FROM deposit_account_info dai JOIN bank_orgnization bo ON dai.bank_no = bo.bank_id WHERE dai.data_dt = '2024-07-19' AND dai.acct_bal \u003e 100000 AND dai.gender_code = '男' AND bo.bank_name = '沈阳分行';","pred_sql":"SELECT COUNT(DISTINCT d.cust_no) FROM deposit_account_info d JOIN customer c ON d.cert_code = c.id_number WHERE d.data_dt = '2024-07-19' AND d.org_nm = '沈阳分行' AND d.acct_bal \u003e 100000 AND c.gender = '男';","thinking":"","ambiguous":"False"}
{"id":1377442693,"db_name":"loan_user","question":"查询贷款类型为汽车贷款的所有信息。","gt_sql":"SELECT * FROM loan_type WHERE loan_type_name = '汽车贷款';","pred_sql":"SELECT id, loan_type_code, loan_type_name, description FROM loan_type WHERE loan_type_name = '汽车贷款';","thinking":"","ambiguous":"False"}
{"id":2349708736,"db_name":"loan_user","question":"查询所有客户的姓名和他们的贷款金额，贷款金额大于10000的记录。","gt_sql":"SELECT c.customer_name, la.loan_amount FROM customer c JOIN loan_application la ON c.id = la.customer_id WHERE la.loan_amount \u003e 10000;","pred_sql":"SELECT c.customer_name, la.loan_amount FROM customer c JOIN loan_application la ON c.id = la.customer_id WHERE la.loan_amount \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":3911124385,"db_name":"loan_user","question":"计算每个客户的综合评分（存款余额、贷款信用和贷款偿还情况的加权平均），并列出综合评分最高的前20名客户。","gt_sql":"WITH customer_scores AS (SELECT c.id, c.customer_name, COALESCE(SUM(dai.acct_bal), 0) AS total_deposit, AVG(lc.credit_score) AS avg_credit_score, AVG(CASE WHEN ldi.judgelevel = '1' THEN 100 WHEN ldi.judgelevel = '2' THEN 80 WHEN ldi.judgelevel = '3' THEN 60 WHEN ldi.judgelevel = '4' THEN 40 WHEN ldi.judgelevel = '5' THEN 20 ELSE 0 END) AS loan_repayment_score FROM customer c LEFT JOIN deposit_account_info dai ON c.id_number = dai.cert_code LEFT JOIN loan_credit lc ON c.id = lc.customer_id LEFT JOIN loan_detail_info ldi ON c.id_number = ldi.cust_id GROUP BY c.id, c.customer_name) SELECT customer_name, total_deposit, avg_credit_score, loan_repayment_score, (COALESCE(total_deposit / 1000000, 0) * 0.4 + COALESCE(avg_credit_score / 1000, 0) * 0.3 + COALESCE(loan_repayment_score / 100, 0) * 0.3) AS composite_score FROM customer_scores ORDER BY composite_score DESC LIMIT 20","pred_sql":"SELECT c.customer_name, COALESCE(SUM(d.acct_bal), 0) AS deposit_total, COALESCE(AVG(lc.credit_score), 0) AS avg_credit_score, COALESCE(SUM(lr.repayment_amount) / NULLIF(SUM(la.loan_amount), 0), 0) AS repayment_score, (COALESCE(SUM(d.acct_bal), 0) * 0.4 + COALESCE(AVG(lc.credit_score), 0) * 0.3 + COALESCE(SUM(lr.repayment_amount) / NULLIF(SUM(la.loan_amount), 0), 0) * 100 * 0.3) AS composite_score FROM customer c LEFT JOIN deposit_account_info d ON c.id_number = d.cert_code LEFT JOIN loan_credit lc ON c.id = lc.customer_id LEFT JOIN loan_application la ON c.id = la.customer_id LEFT JOIN loan_repayment lr ON la.id = lr.loan_application_id GROUP BY c.id, c.customer_name ORDER BY composite_score DESC LIMIT 20;","thinking":"","ambiguous":"False"}
{"id":3773516021,"db_name":"loan_user","question":"获取所有护士的职业代码和描述。","gt_sql":"SELECT occupation_code, description FROM occupation WHERE occupation_name = '护士';","pred_sql":"SELECT occupation_code, description FROM occupation WHERE occupation_name = '护士';","thinking":"","ambiguous":"False"}
{"id":1642595147,"db_name":"loan_user","question":"获取所有客户在2021年8月的行为记录及对应的信用评分。","gt_sql":"SELECT ub.customer_id, ub.behavior_type, lc.credit_score FROM user_behavior ub JOIN loan_credit lc ON ub.customer_id = lc.customer_id WHERE ub.behavior_date BETWEEN '2021-08-01' AND '2021-08-31';","pred_sql":"SELECT c.id AS customer_id, ub.behavior_type, lc.credit_score FROM customer c LEFT JOIN user_behavior ub ON c.id = ub.customer_id AND ub.behavior_date BETWEEN '2021-08-01' AND '2021-08-31' LEFT JOIN loan_credit lc ON c.id = lc.customer_id AND lc.credit_date \u003c= '2021-08-31' ORDER BY c.id, ub.behavior_date;","thinking":"","ambiguous":"False"}
{"id":2547804030,"db_name":"loan_user","question":"查询所有贷款类型及其状态的描述。","gt_sql":"SELECT lt.loan_type_name, ls.loan_status_name, ls.description FROM loan_type lt JOIN loan_status ls ON lt.id = ls.id;","pred_sql":"SELECT lt.loan_type_name, ls.loan_status_name, lt.description, ls.description FROM loan_type lt CROSS JOIN loan_status ls;","thinking":"","ambiguous":"False"}
{"id":1574302461,"db_name":"loan_user","question":"查询2024年7月2日所有对公客户的理财余额总和，并按管辖行名称分组显示。","gt_sql":"SELECT f.bank_nm, SUM(f.wealth_bal) AS total_wealth_bal FROM financial_products f WHERE f.data_dt = '2024-07-02' AND f.cast_type = '对公' GROUP BY f.bank_nm;","pred_sql":"SELECT b.bank_name, SUM(f.wealth_bal) AS total_wealth_balance FROM financial_products f JOIN bank_orgnization b ON f.org_no = b.bank_id WHERE f.cast_type = '2' AND f.data_dt = '2024-07-02' GROUP BY b.bank_name;","thinking":"","ambiguous":"False"}
{"id":576649992,"db_name":"loan_user","question":"哪些客户在2019年申请了住房贷款，并且他们的贷款申请状态是'REJECTED'？","gt_sql":"SELECT la.customer_id, lt.loan_type_name, la.loan_amount, la.loan_term, la.apply_date, la.status FROM loan_application la JOIN loan_type lt ON la.loan_type_id = lt.id WHERE lt.loan_type_name = '住房贷款' AND la.apply_date \u003e= '2019-01-01' AND la.apply_date \u003c= '2019-12-31' AND la.status = 'REJECTED';","pred_sql":"SELECT c.id, lt.loan_type_name, la.loan_amount, la.loan_term, la.apply_date, la.status FROM customer c JOIN loan_application la ON c.id = la.customer_id JOIN loan_type lt ON la.loan_type_id = lt.id WHERE la.apply_date BETWEEN '2019-01-01' AND '2019-12-31' AND lt.loan_type_name = '住房贷款' AND la.status = 'REJECTED';","thinking":"","ambiguous":"False"}
{"id":278921693,"db_name":"loan_user","question":"查询2024年7月19日当天，持有非保本理财产品余额超过100000的客户编号及其对应的理财余额，并按理财余额降序排列。","gt_sql":"SELECT cust_no, wealth_bal_f FROM financial_products WHERE data_dt = '2024-07-19' AND wealth_bal_f \u003e 100000 ORDER BY wealth_bal_f DESC;","pred_sql":"SELECT cust_no, wealth_bal FROM financial_products WHERE data_dt = '2024-07-19' AND wealth_bal \u003e 100000 AND cast_type = '非保本' ORDER BY wealth_bal DESC;","thinking":"","ambiguous":"False"}
{"id":2923698873,"db_name":"loan_user","question":"查找所有客户的名字和电子邮件。","gt_sql":"SELECT customer_name, email FROM customer;","pred_sql":"SELECT customer_name, email FROM customer;","thinking":"","ambiguous":"False"}
{"id":2256662449,"db_name":"loan_user","question":"计算每个客户的贷款成功率随时间的变化（按季度）。","gt_sql":"WITH quarterly_stats AS (SELECT c.id, c.customer_name, DATE_TRUNC('quarter', l.apply_date) as quarter, COUNT(CASE WHEN l.status = 'APPROVED' THEN 1 END) / COUNT(*) as success_rate FROM customer c JOIN loan_application l ON c.id = l.customer_id GROUP BY c.id, c.customer_name, quarter) SELECT customer_name, quarter, success_rate, LAG(success_rate) OVER (PARTITION BY id ORDER BY quarter) as prev_quarter_rate, success_rate - LAG(success_rate) OVER (PARTITION BY id ORDER BY quarter) as rate_change FROM quarterly_stats ORDER BY customer_name, quarter","pred_sql":"SELECT c.customer_name, DATE_TRUNC('quarter', l.apply_date) AS quarter, COUNT(CASE WHEN l.status = 'APPROVED' THEN 1 END) * 100.0 / COUNT(*) AS current_quarter_success_rate, LAG(COUNT(CASE WHEN l.status = 'APPROVED' THEN 1 END) * 100.0 / COUNT(*), 1) OVER (PARTITION BY c.id ORDER BY DATE_TRUNC('quarter', l.apply_date)) AS previous_quarter_success_rate, (COUNT(CASE WHEN l.status = 'APPROVED' THEN 1 END) * 100.0 / COUNT(*) - LAG(COUNT(CASE WHEN l.status = 'APPROVED' THEN 1 END) * 100.0 / COUNT(*), 1) OVER (PARTITION BY c.id ORDER BY DATE_TRUNC('quarter', l.apply_date))) / NULLIF(LAG(COUNT(CASE WHEN l.status = 'APPROVED' THEN 1 END) * 100.0 / COUNT(*), 1) OVER (PARTITION BY c.id ORDER BY DATE_TRUNC('quarter', l.apply_date)), 0) * 100 AS change_rate FROM customer c JOIN loan_application l ON c.id = l.customer_id GROUP BY c.id, c.customer_name, DATE_TRUNC('quarter', l.apply_date) ORDER BY c.customer_name, quarter;","thinking":"","ambiguous":"False"}
{"id":956063573,"db_name":"loan_user","question":"查询2024年7月19日所有持有美元存款的客户名称及其对应的账户余额，并按照账户余额从高到低排序。","gt_sql":"SELECT dai.cust_name, dai.acct_bal FROM deposit_account_info dai WHERE dai.data_dt = '2024-07-19' AND dai.cur_type = 'USD' ORDER BY dai.acct_bal DESC;","pred_sql":"SELECT c.customer_name, d.acct_bal FROM customer c JOIN deposit_account_info d ON c.id_number = d.cert_code WHERE d.data_dt = '2024-07-19' AND d.cur_type = '2' ORDER BY d.acct_bal DESC;","thinking":"","ambiguous":"False"}
{"id":568233943,"db_name":"loan_user","question":"查询所有客户的姓名、身份证号、手机号和电子邮件，并且只返回那些出生日期在1980年之后的客户信息。","gt_sql":"SELECT customer_name, id_number, phone_number, email FROM customer WHERE birth_date \u003e '1980-01-01';","pred_sql":"SELECT customer_name, id_number, phone_number, email FROM customer WHERE birth_date \u003e '1980-01-01';","thinking":"","ambiguous":"False"}
{"id":665248378,"db_name":"loan_user","question":"贷款申请金额最高的前5名客户的职业是什么？","gt_sql":"SELECT c.customer_name, o.occupation_name, la.loan_amount FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_application la ON c.id = la.customer_id ORDER BY la.loan_amount DESC LIMIT 5","pred_sql":"SELECT c.customer_name, o.occupation_name, SUM(la.loan_amount) AS total_loan_amount FROM customer c JOIN loan_application la ON c.id = la.customer_id JOIN occupation o ON c.occupation_id = o.id GROUP BY c.customer_name, o.occupation_name ORDER BY total_loan_amount DESC LIMIT 5;","thinking":"","ambiguous":"False"}
{"id":1030650241,"db_name":"loan_user","question":"获取所有贷款记录的客户类型及其贷款余额。","gt_sql":"SELECT cust_type, loan_balance FROM loan_detail_info;","pred_sql":"SELECT cust_type, SUM(loan_balance) AS total_loan_balance FROM loan_detail_info GROUP BY cust_type;","thinking":"","ambiguous":"False"}
{"id":1979307069,"db_name":"loan_user","question":"在2023年6月30日，杭州上城区支行的所有借记卡客户的总活期余额和总定期余额是多少？","gt_sql":"SELECT SUM(d.current_bal) AS total_current_bal, SUM(d.fixed_bal) AS total_fixed_bal FROM debit_card_information d JOIN bank_orgnization b ON d.bank_no = b.bank_id WHERE b.bank_name = '杭州上城区支行' AND b.data_dt = '2023-06-30';","pred_sql":"SELECT SUM(CASE WHEN d.acct_type_code = 'C' THEN d.acct_bal ELSE 0 END) AS total_current_balance, SUM(CASE WHEN d.acct_type_code = 'D' THEN d.acct_bal ELSE 0 END) AS total_fixed_balance FROM debit_card_information dc JOIN deposit_account_info d ON dc.cust_no = d.cust_no AND dc.data_dt = d.data_dt JOIN bank_orgnization b ON dc.org_no = b.bank_id WHERE dc.data_dt = '2023-06-30'::timestamp AND b.bank_name = '杭州上城区支行' AND dc.card_state = '正常';","thinking":"","ambiguous":"False"}
{"id":645950570,"db_name":"loan_user","question":"查询在特定日期的可疑行为和其对应的贷款状态。","gt_sql":"SELECT flc.rs_type_name, ls.loan_status_name FROM five_level_classification flc JOIN loan_status ls ON flc.rs_type = '不良' WHERE flc.data_dt = '2024-07-22';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":3312818819,"db_name":"loan_user","question":"查询身份证号为c839d762-6392-4005-8386-ed4e2c50997a的客户信息。","gt_sql":"SELECT * FROM customer WHERE id_number = 'c839d762-6392-4005-8386-ed4e2c50997a';","pred_sql":"SELECT customer_name, id_number, phone_number, email, address, birth_date, gender, occupation_id, province FROM customer WHERE id_number = 'c839d762-6392-4005-8386-ed4e2c50997a';","thinking":"","ambiguous":"False"}
{"id":527420496,"db_name":"loan_user","question":"查询2003年6月22日所有客户的信用分和信用描述","gt_sql":"SELECT credit_score, description FROM loan_credit WHERE credit_date = '2003-06-22';","pred_sql":"SELECT c.id, lc.credit_score, lc.description FROM customer c JOIN loan_credit lc ON c.id = lc.customer_id WHERE lc.credit_date = '2003-06-22';","thinking":"","ambiguous":"False"}
{"id":2918505586,"db_name":"loan_user","question":"在2024年7月21日，哪些客户在杭州分行拥有存款账户，并且他们的存款账户余额超过50000元？","gt_sql":"SELECT d.cust_name, d.acct_bal FROM deposit_account_info d JOIN bank_orgnization b ON d.bank_no = b.bank_id WHERE d.data_dt = '2024-07-21' AND d.acct_bal \u003e 50000 AND b.bank_name = '杭州分行';","pred_sql":"SELECT c.customer_name, d.acct_bal FROM customer c JOIN deposit_account_info d ON c.id_number = d.cert_code WHERE d.org_nm = '杭州分行' AND d.acct_bal \u003e 50000 AND d.data_dt = '2024-07-21' AND c.province = '杭州';","thinking":"","ambiguous":"False"}
{"id":1280121870,"db_name":"loan_user","question":"查询所有贷款余额大于10000的客户编号及其对应的贷款余额，并显示这些客户的存款账户余额。","gt_sql":"SELECT l.cust_id, l.loan_balance, d.acct_bal FROM loan_detail_info l JOIN deposit_account_info d ON l.cust_id = d.cust_no WHERE l.loan_balance \u003e 10000;","pred_sql":"SELECT d.cust_no AS customer_id, l.loan_balance, SUM(d.acct_bal) AS deposit_balance FROM loan_detail_info l JOIN deposit_account_info d ON l.cust_id = d.cust_no WHERE l.loan_balance \u003e 10000 GROUP BY d.cust_no, l.loan_balance;","thinking":"","ambiguous":"False"}
{"id":2006837077,"db_name":"loan_user","question":"统计每种五级分类的用户数量，并找出对应的贷款余额总和。","gt_sql":"SELECT f.rs_type_name, COUNT(*) AS user_count, SUM(l.loan_balance) AS total_balance FROM five_level_classification f JOIN loan_detail_info l ON f.rs_type_id = l.judgelevel GROUP BY f.rs_type_name;","pred_sql":"SELECT f.rs_type_name AS 五级分类名称, COUNT(DISTINCT l.cust_id) AS 用户数量, SUM(l.loan_balance) AS 贷款余额总和 FROM five_level_classification f JOIN loan_detail_info l ON f.rs_type_id = l.judgelevel GROUP BY f.rs_type_name;","thinking":"","ambiguous":"False"}
{"id":938785076,"db_name":"loan_user","question":"查找所有存款类型中，数据日期为2024年7月22日的产品名称。","gt_sql":"SELECT deposit_name FROM deposit_type WHERE data_dt = '2024-07-22';","pred_sql":"SELECT deposit_name FROM deposit_type WHERE data_dt = '2024-07-22';","thinking":"","ambiguous":"False"}
{"id":182531082,"db_name":"loan_user","question":"获取转账表中转账金额大于500的记录。","gt_sql":"SELECT * FROM transfer WHERE transfer_amount \u003e 500;","pred_sql":"SELECT id, source_customer_id, target_customer_id, transfer_amount, transfer_date, description FROM transfer WHERE transfer_amount \u003e 500;","thinking":"","ambiguous":"False"}
{"id":1098966204,"db_name":"loan_user","question":"查询所有在河北省出生且信用评分高于0.8的客户的姓名、身份证号和信用评分，并按信用评分降序排列。","gt_sql":"SELECT c.customer_name, c.id_number, lc.credit_score FROM customer c JOIN loan_credit lc ON c.id = lc.customer_id WHERE c.province = '河北省' AND lc.credit_score \u003e 0.8 ORDER BY lc.credit_score DESC;","pred_sql":"SELECT c.customer_name, c.id_number, lc.credit_score FROM customer c JOIN loan_credit lc ON c.id = lc.customer_id WHERE c.province = '河北省' AND lc.credit_score \u003e 0.8 ORDER BY lc.credit_score DESC;","thinking":"","ambiguous":"False"}
{"id":2906434348,"db_name":"loan_user","question":"计算每个年龄段（20-30岁，31-40岁，41-50岁，51岁以上）在不同贷款类型上的申请成功率。","gt_sql":"WITH age_groups AS (SELECT c.id, CASE WHEN EXTRACT(YEAR FROM AGE(date('now'), c.birth_date)) BETWEEN 20 AND 30 THEN '20-30' WHEN EXTRACT(YEAR FROM AGE(date('now'), c.birth_date)) BETWEEN 31 AND 40 THEN '31-40' WHEN EXTRACT(YEAR FROM AGE(date('now'), c.birth_date)) BETWEEN 41 AND 50 THEN '41-50' ELSE '51+' END AS age_group FROM customer c) SELECT ag.age_group, lt.loan_type_name, COUNT(la.id) AS total_applications, SUM(CASE WHEN la.status = 'APPROVED' THEN 1 ELSE 0 END) / COUNT(la.id) AS success_rate FROM age_groups ag JOIN loan_application la ON ag.id = la.customer_id JOIN loan_type lt ON la.loan_type_id = lt.id GROUP BY ag.age_group, lt.loan_type_name ORDER BY ag.age_group, success_rate DESC","pred_sql":"SELECT CASE WHEN EXTRACT(YEAR FROM AGE(c.birth_date)) BETWEEN 20 AND 30 THEN '20-30岁' WHEN EXTRACT(YEAR FROM AGE(c.birth_date)) BETWEEN 31 AND 40 THEN '31-40岁' WHEN EXTRACT(YEAR FROM AGE(c.birth_date)) BETWEEN 41 AND 50 THEN '41-50岁' ELSE '51岁以上' END AS age_group, lt.loan_type_name AS loan_type, COUNT(la.id) AS total_applications, ROUND(100.0 * SUM(CASE WHEN la.status = 'APPROVED' THEN 1 ELSE 0 END) / COUNT(la.id), 2) AS success_rate FROM loan_application la JOIN customer c ON la.customer_id = c.id JOIN loan_type lt ON la.loan_type_id = lt.id GROUP BY age_group, lt.loan_type_name ORDER BY age_group, loan_type;","thinking":"","ambiguous":"False"}
{"id":4018894094,"db_name":"loan_user","question":"列出所有职业代码为'NURSE'的用户贷款状态为'APPROVED'的贷款状态名称和职业名称。","gt_sql":"SELECT ls.loan_status_name, o.occupation_name FROM loan_status ls JOIN occupation o ON ls.loan_status_code = 'APPROVED' AND o.occupation_code = 'NURSE';","pred_sql":"SELECT ls.loan_status_name, o.occupation_name FROM loan_application la JOIN loan_status ls ON la.status = ls.loan_status_code JOIN customer c ON la.customer_id = c.id JOIN occupation o ON c.occupation_id = o.id WHERE o.occupation_code = 'NURSE' AND ls.loan_status_code = 'APPROVED';","thinking":"","ambiguous":"False"}
{"id":2317494329,"db_name":"loan_user","question":"统计每种职业的客户数量和平均贷款金额，并只显示客户数量超过100的职业。","gt_sql":"SELECT o.occupation_name, COUNT(DISTINCT c.id) as customer_count, AVG(l.loan_amount) as avg_loan_amount FROM occupation o JOIN customer c ON o.id = c.occupation_id JOIN loan_application l ON c.id = l.customer_id GROUP BY o.occupation_name HAVING COUNT(DISTINCT c.id) \u003e 100 ORDER BY customer_count DESC","pred_sql":"SELECT o.occupation_name, COUNT(DISTINCT c.id) AS customer_count, AVG(l.loan_amount) AS avg_loan_amount FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_application l ON c.id = l.customer_id GROUP BY o.occupation_name HAVING COUNT(DISTINCT c.id) \u003e 100;","thinking":"","ambiguous":"False"}
{"id":2459941756,"db_name":"loan_user","question":"在2024年7月14日，哪些客户在沈阳余淮支行购买了非保本理财产品，并且这些产品的币种是新加坡元？","gt_sql":"SELECT f.cust_no, f.org_nm, f.currency, f.wealth_bal_f FROM financial_products f JOIN currency c ON f.currency = c.curr_code WHERE f.data_dt = '2024-07-14' AND f.org_nm = '沈阳余淮支行' AND f.currency = 'SGD';","pred_sql":"SELECT fp.cust_no, bo.bank_name, fp.currency, fp.wealth_bal FROM financial_products fp JOIN bank_orgnization bo ON fp.org_no = bo.bank_id JOIN currency c ON fp.currency = c.curr_code WHERE bo.bank_name = '沈阳余淮支行' AND c.curr_full_name = '新加坡元' AND fp.cast_type = '非保本' AND fp.data_dt = '2024-07-14';","thinking":"","ambiguous":"False"}
{"id":627241378,"db_name":"loan_user","question":"查询所有用户的身份证号及手机号。","gt_sql":"SELECT id_number, phone_number FROM customer;","pred_sql":"SELECT id_number, phone_number FROM customer;","thinking":"","ambiguous":"False"}
{"id":3818857737,"db_name":"loan_user","question":"获取在2024年7月5日及之后开户的借记卡的客户名称和开户日期。","gt_sql":"SELECT cust_nm, open_date FROM debit_card_information WHERE open_date \u003e= '2024-07-05';","pred_sql":"SELECT cust_nm AS customer_name, open_date AS account_opening_date FROM debit_card_information WHERE open_date \u003e= '2024-07-05';","thinking":"","ambiguous":"False"}
{"id":1788527678,"db_name":"loan_user","question":"找出理财产品余额排名前10%的客户中，过去30天内有登录行为的客户数量","gt_sql":"WITH top_customers AS (SELECT cust_no FROM financial_products WHERE wealth_bal \u003e (SELECT PERCENTILE_CONT(0.9) WITHIN GROUP (ORDER BY wealth_bal) FROM financial_products)) SELECT COUNT(DISTINCT ub.customer_id) FROM top_customers tc JOIN user_behavior ub ON tc.cust_noeger = ub.customer_id WHERE ub.behavior_type = 'LOGIN' AND ub.behavior_date \u003e= date('now') - INTERVAL '30 days'","pred_sql":"SELECT COUNT(DISTINCT f.cust_no) FROM financial_products f JOIN user_behavior u ON f.cust_no = u.customer_id::text WHERE f.wealth_bal \u003e= (SELECT PERCENTILE_CONT(0.9) WITHIN GROUP (ORDER BY wealth_bal) FROM financial_products) AND u.behavior_type = '登录' AND u.behavior_date \u003e= CURRENT_DATE - INTERVAL '30 days';","thinking":"","ambiguous":"False"}
{"id":1240825133,"db_name":"loan_user","question":"获取2023年12月10日的客户信用评分及对应的行为描述，显示客户ID和信用评分。","gt_sql":"SELECT lc.customer_id, lc.credit_score, ub.description FROM loan_credit lc JOIN user_behavior ub ON lc.customer_id = ub.customer_id WHERE lc.credit_date = '2023-12-10';","pred_sql":"SELECT c.id AS customer_id, lc.credit_score, ub.description AS behavior_description FROM customer c JOIN loan_credit lc ON c.id = lc.customer_id JOIN user_behavior ub ON c.id = ub.customer_id WHERE lc.credit_date = '2023-12-10' AND ub.behavior_date = '2023-12-10';","thinking":"","ambiguous":"False"}
{"id":1225880496,"db_name":"loan_user","question":"获取所有机构的编号及其对应的名称。","gt_sql":"SELECT bank_id, bank_name FROM bank_orgnization;","pred_sql":"SELECT bank_id, bank_name FROM bank_orgnization;","thinking":"","ambiguous":"False"}
{"id":1895296880,"db_name":"loan_user","question":"查找2024年1月20日还款记录和对应的贷款申请信息。","gt_sql":"SELECT lr.repayment_amount, la.loan_amount FROM loan_repayment lr JOIN loan_application la ON lr.loan_application_id = la.id WHERE lr.repayment_date = '2024-01-20';","pred_sql":"SELECT lr.repayment_amount, la.loan_amount FROM loan_repayment lr JOIN loan_application la ON lr.loan_application_id = la.id WHERE lr.repayment_date = '2024-01-20';","thinking":"","ambiguous":"False"}
{"id":1454533076,"db_name":"loan_user","question":"查询2023年6月30日所有外币的币种代码及其全名，并统计每个币种在2023年6月30日之前的转账记录总数。","gt_sql":"SELECT c.curr_code, c.curr_full_name, COUNT(t.id) AS transfer_count FROM currency c LEFT JOIN transfer t ON c.curr_code = t.source_customer_id AND t.transfer_date \u003c c.data_dt WHERE c.data_dt = '2023-06-30' AND c.curr_class = '外币' GROUP BY c.curr_code, c.curr_full_name;","pred_sql":"SELECT c.curr_code, c.curr_full_name, COUNT(t.id) AS transfer_count FROM currency c LEFT JOIN transfer t ON c.curr_code = t.currency_type AND t.transfer_date \u003c= '2023-06-30' WHERE c.data_dt = '2023-06-30' AND c.curr_class \u003c\u003e '本币' GROUP BY c.curr_code, c.curr_full_name;","thinking":"","ambiguous":"False"}
{"id":3316681947,"db_name":"loan_user","question":"2021年11月10日，贷款申请ID为742969的用户还款金额是多少？","gt_sql":"SELECT repayment_amount FROM loan_repayment WHERE loan_application_id = 742969 AND repayment_date = '2021-11-10';","pred_sql":"SELECT repayment_amount FROM loan_repayment WHERE loan_application_id = 742969 AND repayment_date = '2021-11-10';","thinking":"","ambiguous":"False"}
{"id":2982717712,"db_name":"loan_user","question":"统计每种存款类型下的平均贷款金额和贷款金额标准差","gt_sql":"SELECT d.deposit_type_name, AVG(l.loan_amount) AS avg_loan_amount, STDDEV(l.loan_amount) AS stddev_loan_amount FROM deposit_type d JOIN loan_detail_info l ON d.data_dt = l.dw_date GROUP BY d.deposit_type_name","pred_sql":"SELECT dt.deposit_name, AVG(ldi.loan_amount) AS avg_loan_amount, STDDEV(ldi.loan_amount) AS stddev_loan_amount FROM loan_detail_info ldi JOIN deposit_account_info dai ON ldi.cust_id = dai.cust_no JOIN deposit_type dt ON dai.acct_type_code = dt.deposit_id GROUP BY dt.deposit_name;","thinking":"","ambiguous":"False"}
{"id":279794629,"db_name":"loan_user","question":"查询用户的姓名、职业名称及还款日期。","gt_sql":"SELECT c.customer_name, o.occupation_name, lr.repayment_date FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_repayment lr ON c.id = lr.loan_application_id;","pred_sql":"SELECT c.customer_name, o.occupation_name, lr.repayment_date FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_application la ON c.id = la.customer_id JOIN loan_repayment lr ON la.id = lr.loan_application_id;","thinking":"","ambiguous":"False"}
{"id":2733048479,"db_name":"loan_user","question":"计算每种贷款类型的平均贷款金额和平均存款余额。","gt_sql":"SELECT lt.loan_type_name, AVG(la.loan_amount) as avg_loan_amount, AVG(dai.acct_bal) as avg_deposit_balance FROM loan_application la JOIN loan_type lt ON la.loan_type_id = lt.id JOIN deposit_account_info dai ON la.customer_id = dai.cust_noeger GROUP BY lt.loan_type_name","pred_sql":"SELECT lt.loan_type_name, AVG(la.loan_amount) AS avg_loan_amount, AVG(dai.acct_bal) AS avg_deposit_balance FROM loan_type lt LEFT JOIN loan_application la ON lt.id = la.loan_type_id LEFT JOIN customer c ON la.customer_id = c.id LEFT JOIN deposit_account_info dai ON c.id_number = dai.cert_code GROUP BY lt.loan_type_name;","thinking":"","ambiguous":"False"}
{"id":1486729335,"db_name":"loan_user","question":"2019年1月10日申请贷款且状态为'REJECTED'的客户中，有多少客户在2017年10月24日有'LOGIN'行为？","gt_sql":"SELECT COUNT(DISTINCT lb.customer_id) FROM loan_application lb JOIN user_behavior ub ON lb.customer_id = ub.customer_id WHERE lb.apply_date = '2019-01-10' AND lb.status = 'REJECTED' AND ub.behavior_date = '2017-10-24' AND ub.behavior_type = 'LOGIN';","pred_sql":"SELECT COUNT(DISTINCT c.id) FROM customer c JOIN loan_application la ON c.id = la.customer_id JOIN user_behavior ub ON c.id = ub.customer_id WHERE la.apply_date = '2019-01-10' AND la.status = 'REJECTED' AND ub.behavior_type = 'LOGIN' AND ub.behavior_date = '2017-10-24';","thinking":"","ambiguous":"False"}
{"id":760463294,"db_name":"loan_user","question":"查询2019年申请贷款且信用评分高于0.8的客户姓名和贷款金额，并按贷款金额降序排列。","gt_sql":"SELECT c.customer_name, la.loan_amount FROM loan_application la JOIN customer c ON la.customer_id = c.id JOIN loan_credit lc ON c.id = lc.customer_id WHERE la.apply_date \u003e= '2019-01-01' AND la.apply_date \u003c '2020-01-01' AND lc.credit_score \u003e 0.8 ORDER BY la.loan_amount DESC;","pred_sql":"SELECT c.customer_name, l.loan_amount FROM customer c JOIN loan_application l ON c.id = l.customer_id JOIN loan_credit lc ON c.id = lc.customer_id WHERE EXTRACT(YEAR FROM l.apply_date) = 2019 AND lc.credit_score \u003e 0.8 ORDER BY l.loan_amount DESC;","thinking":"","ambiguous":"False"}
{"id":84990606,"db_name":"loan_user","question":"查询所有贷款余额大于500000的贷款明细信息，并按贷款余额降序排列。","gt_sql":"SELECT * FROM loan_detail_info WHERE loan_balance \u003e 500000 ORDER BY loan_balance DESC;","pred_sql":"SELECT reportid, cust_id, cust_type, iou_no, loan_type, loan_orgno, vouch_type, currency_type, account_state, loan_amount, loan_balance, blc_capital, blc_inner, blc_off, judgelevel, loandate_s, loandate_e, dw_date FROM loan_detail_info WHERE loan_balance \u003e 500000 ORDER BY loan_balance DESC;","thinking":"","ambiguous":"False"}
{"id":2524485514,"db_name":"loan_user","question":"查询2003年6月22日所有信用分大于0.75的客户的ID和信用分","gt_sql":"SELECT customer_id, credit_score FROM loan_credit WHERE credit_date = '2003-06-22' AND credit_score \u003e 0.75;","pred_sql":"SELECT c.id, lc.credit_score FROM customer c JOIN loan_credit lc ON c.id = lc.customer_id WHERE lc.credit_date = '2003-06-22' AND lc.credit_score \u003e 0.75;","thinking":"","ambiguous":"False"}
{"id":3030054295,"db_name":"loan_user","question":"请列出所有1990年之后出生的客户姓名和出生日期。","gt_sql":"SELECT customer_name, birth_date FROM customer WHERE birth_date \u003e '1990-01-01' ORDER BY birth_date","pred_sql":"SELECT customer_name, birth_date FROM customer WHERE birth_date \u003e '1989-12-31';","thinking":"","ambiguous":"False"}
{"id":2842932086,"db_name":"loan_user","question":"找出过去一年内信用评分提升最多的前5名客户","gt_sql":"WITH credit_change AS (SELECT customer_id, MAX(credit_score) - MIN(credit_score) as score_increase FROM loan_credit WHERE credit_date \u003e= date('now') - INTERVAL '1 year' GROUP BY customer_id) SELECT cc.customer_id, cc.score_increase, lc.credit_score as current_score FROM credit_change cc JOIN loan_credit lc ON cc.customer_id = lc.customer_id WHERE lc.credit_date = (SELECT MAX(credit_date) FROM loan_credit WHERE customer_id = cc.customer_id) ORDER BY cc.score_increase DESC LIMIT 5","pred_sql":"SELECT c.id AS customer_id, (lc2.credit_score - lc1.credit_score) AS credit_score_increase, lc2.credit_score AS current_score FROM customer c JOIN loan_credit lc1 ON c.id = lc1.customer_id JOIN loan_credit lc2 ON c.id = lc2.customer_id AND lc2.credit_date \u003e lc1.credit_date WHERE lc1.credit_date \u003e= CURRENT_DATE - INTERVAL '1 year' ORDER BY credit_score_increase DESC LIMIT 5;","thinking":"","ambiguous":"False"}
{"id":2650630480,"db_name":"loan_user","question":"统计每种行为类型的用户数量，按行为类型分组。","gt_sql":"SELECT ub.behavior_type, COUNT(DISTINCT ub.customer_id) AS user_count FROM user_behavior ub GROUP BY ub.behavior_type;","pred_sql":"SELECT behavior_type, COUNT(DISTINCT customer_id) AS user_count FROM user_behavior GROUP BY behavior_type;","thinking":"","ambiguous":"False"}
{"id":3532447015,"db_name":"loan_user","question":"计算每种存款类型的客户留存率（在最近一年内仍然持有该类型存款的客户比例）。","gt_sql":"WITH deposit_customers AS (SELECT DISTINCT dt.deposit_name, dai.cust_no FROM deposit_type dt JOIN deposit_account_info dai ON dt.deposit_id = dai.arl_pdp_code WHERE dai.data_dt \u003c= date('now') - INTERVAL '1 year'), recent_customers AS (SELECT DISTINCT dt.deposit_name, dai.cust_no FROM deposit_type dt JOIN deposit_account_info dai ON dt.deposit_id = dai.arl_pdp_code WHERE dai.data_dt \u003e date('now') - INTERVAL '1 year') SELECT dc.deposit_name, COUNT(DISTINCT dc.cust_no) AS original_customers, COUNT(DISTINCT rc.cust_no) AS retained_customers, COUNT(DISTINCT rc.cust_no) / COUNT(DISTINCT dc.cust_no) AS retention_rate FROM deposit_customers dc LEFT JOIN recent_customers rc ON dc.deposit_name = rc.deposit_name AND dc.cust_no = rc.cust_no GROUP BY dc.deposit_name ORDER BY retention_rate DESC","pred_sql":"SELECT dt.deposit_name, COUNT(DISTINCT dai1.cust_no) AS initial_customers, COUNT(DISTINCT dai2.cust_no) AS retained_customers, ROUND(COUNT(DISTINCT dai2.cust_no) * 100.0 / NULLIF(COUNT(DISTINCT dai1.cust_no), 0), 2) AS retention_rate FROM deposit_type dt LEFT JOIN deposit_account_info dai1 ON dt.deposit_id = dai1.acct_type_code AND dai1.data_dt \u003e= (SELECT MAX(data_dt) - INTERVAL '2 years' FROM deposit_account_info) LEFT JOIN deposit_account_info dai2 ON dai1.cust_no = dai2.cust_no AND dai1.acct_type_code = dai2.acct_type_code AND dai2.data_dt \u003e= (SELECT MAX(data_dt) - INTERVAL '1 year' FROM deposit_account_info) GROUP BY dt.deposit_name;","thinking":"","ambiguous":"False"}
{"id":2513228683,"db_name":"loan_user","question":"2024年7月19日，沈阳分行下所有客户的转账总金额是多少？","gt_sql":"SELECT SUM(t.transfer_amount) FROM deposit_account_info d JOIN transfer t ON d.cust_noeger = t.source_customer_id WHERE d.data_dt = '2024-07-19' AND d.bank_nm = '沈阳分行';","pred_sql":"SELECT SUM(t.transfer_amount) AS total_transfer_amount FROM transfer t JOIN customer c ON t.source_customer_id = c.id JOIN bank_orgnization b ON c.province = b.bank_name WHERE b.bank_parent = '沈阳分行' AND t.transfer_date = '2024-07-19';","thinking":"","ambiguous":"False"}
{"id":3023054014,"db_name":"retail","question":"在2023年5月6日，哪个门店的销售利润最高，并且该门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name, MAX(ss.profit) AS max_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-06' GROUP BY s.store_name, s.manager_name ORDER BY max_profit DESC LIMIT 1;","pred_sql":"SELECT s.store_name, s.manager_name, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-06' ORDER BY ss.profit DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":252107871,"db_name":"retail","question":"获取所有销售统计中的利润和销售数量。","gt_sql":"SELECT profit, sales_quantity FROM salesstatistics;","pred_sql":"SELECT sales_amount, sales_quantity FROM salesstatistics;","thinking":"","ambiguous":"False"}
{"id":2902085248,"db_name":"retail","question":"查询特定日期（2023-05-08）的所有销售订单。","gt_sql":"SELECT * FROM salesorders WHERE order_date = '2023-05-08';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":1743968577,"db_name":"retail","question":"在2023年5月5日，哪些员工在数码广场店处理了订单，并且这些订单的总金额超过了7000元？","gt_sql":"SELECT e.name, e.position, s.store_name, so.total_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN stores s ON so.store_id = s.store_id WHERE s.store_name = '数码广场店' AND so.order_date = '2023-05-05' AND so.total_amount \u003e 7000;","pred_sql":"SELECT e.name, e.position, s.store_name, SUM(so.total_amount) AS total_order_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-05' AND s.store_name = '数码广场店' GROUP BY e.employee_id, e.name, e.position, s.store_name HAVING SUM(so.total_amount) \u003e 7000;","thinking":"","ambiguous":"False"}
{"id":3620145899,"db_name":"retail","question":"获取所有销售统计中利润最高的记录。","gt_sql":"SELECT * FROM salesstatistics ORDER BY profit DESC LIMIT 1;","pred_sql":"SELECT s.statistic_id, st.store_name, p.product_name, e.name AS employee_name, s.date, s.sales_quantity, s.sales_amount, s.profit FROM salesstatistics s JOIN stores st ON s.store_id = st.store_id JOIN products p ON s.product_id = p.product_id JOIN employees e ON s.employee_id = e.employee_id ORDER BY s.profit DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":2283742907,"db_name":"retail","question":"在2023年5月，哪些门店的员工销售了超过10000元的商品，并且这些商品的供应商是苹果官方旗舰店？请列出门店名称、员工姓名、销售金额和商品名称。","gt_sql":"SELECT s.store_name, e.name AS employee_name, SUM(od.quantity * od.unit_price) AS total_sales, p.product_name FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date \u003e= '2023-05-01' AND so.order_date \u003c '2023-06-01' AND p.supplier_name = '苹果官方旗舰店' GROUP BY s.store_name, e.name, p.product_name HAVING SUM(od.quantity * od.unit_price) \u003e 10000;","pred_sql":"SELECT s.store_name, e.name AS employee_name, SUM(ss.sales_amount) AS total_sales_amount, p.product_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE EXTRACT(YEAR FROM ss.date) = 2023 AND EXTRACT(MONTH FROM ss.date) = 5 AND p.supplier_name = '苹果官方旗舰店' GROUP BY s.store_name, e.name, p.product_name HAVING SUM(ss.sales_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":3238938312,"db_name":"retail","question":"找出在电子城旗舰店销售的所有商品及其对应的供应商名称。","gt_sql":"SELECT p.product_name, p.supplier_name FROM products p JOIN orderdetails od ON p.product_id = od.product_id JOIN salesorders so ON od.order_id = so.order_id JOIN stores st ON so.store_id = st.store_id WHERE st.store_name = '电子城旗舰店';","pred_sql":"SELECT p.product_name, p.supplier_name FROM products p JOIN orderdetails od ON p.product_id = od.product_id JOIN salesorders so ON od.order_id = so.order_id JOIN stores s ON so.store_id = s.store_id WHERE s.store_name = '电子城旗舰店' GROUP BY p.product_name, p.supplier_name;","thinking":"","ambiguous":"False"}
{"id":2878333594,"db_name":"retail","question":"在2023年5月9日，哪个门店的员工销售了iPad Air，并且该员工的职位是什么？","gt_sql":"SELECT s.store_name, e.name AS employee_name, e.position FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'iPad Air' AND ss.date = '2023-05-09';","pred_sql":"SELECT s.store_name, e.name AS employee_name, e.position FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-09' AND p.product_name = 'iPad Air';","thinking":"","ambiguous":"False"}
{"id":754309478,"db_name":"retail","question":"2023年5月5日，哪些门店的销售金额超过了10000元，并且这些门店的店长姓名是什么？","gt_sql":"SELECT s.store_name, s.manager_name FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id WHERE ss.date = '2023-05-05' AND ss.sales_amount \u003e 10000;","pred_sql":"SELECT s.store_name, s.manager_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.order_date = '2023-05-05' GROUP BY s.store_name, s.manager_name HAVING SUM(so.total_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":711957819,"db_name":"retail","question":"在2023年5月7日，哪些员工处理了订单并且这些订单的总金额超过了10000元？请列出员工的姓名和订单的总金额。","gt_sql":"SELECT e.name, so.total_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id WHERE so.order_date = '2023-05-07' AND so.total_amount \u003e 10000;","pred_sql":"SELECT e.name, SUM(so.total_amount) AS total_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id WHERE so.order_date = '2023-05-07' GROUP BY e.employee_id, e.name HAVING SUM(so.total_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":1769127756,"db_name":"retail","question":"在2023年5月期间，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些门店的总销售利润超过了5000元？","gt_sql":"SELECT s.store_name, e.name AS employee_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '索尼WH-1000XM4' AND ss.date \u003e= '2023-05-01' AND ss.date \u003c= '2023-05-31' GROUP BY s.store_name, e.name HAVING SUM(ss.profit) \u003e 5000;","pred_sql":"SELECT s.store_name, e.name AS employee_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '索尼WH-1000XM4耳机' AND ss.date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, e.name HAVING SUM(ss.profit) \u003e 5000;","thinking":"","ambiguous":"False"}
{"id":435444064,"db_name":"retail","question":"在2023年5月期间，哪些员工在销售订单中涉及了'Nintendo Switch'商品，并且这些订单的总金额超过5000元？","gt_sql":"SELECT DISTINCT e.employee_id, e.name FROM employees e JOIN salesorders s ON e.employee_id = s.employee_id JOIN orderdetails od ON s.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND s.order_date BETWEEN '2023-05-01' AND '2023-05-31' AND s.total_amount \u003e 5000;","pred_sql":"SELECT DISTINCT e.employee_id, e.name FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31' AND so.total_amount \u003e 5000;","thinking":"","ambiguous":"False"}
{"id":2637911653,"db_name":"retail","question":"查询所有销售统计中销售金额最高的商品名称及其对应的利润。","gt_sql":"SELECT p.product_name, MAX(ss.sales_amount) AS max_sales_amount FROM salesstatistics ss JOIN products p ON ss.product_id = p.product_id GROUP BY p.product_name ORDER BY max_sales_amount DESC LIMIT 1;","pred_sql":"SELECT p.product_name, ss.sales_amount FROM products p JOIN salesstatistics ss ON p.product_id = ss.product_id ORDER BY ss.sales_amount DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":424774041,"db_name":"retail","question":"获取所有订单的销售详情，包含商品名称和订单总金额。","gt_sql":"SELECT od.order_detail_id, p.product_name, so.total_amount FROM orderdetails od JOIN products p ON od.product_id = p.product_id JOIN salesorders so ON od.order_id = so.order_id;","pred_sql":"SELECT od.order_detail_id, p.product_name, so.total_amount FROM orderdetails od JOIN products p ON od.product_id = p.product_id JOIN salesorders so ON od.order_id = so.order_id;","thinking":"","ambiguous":"False"}
{"id":1958922267,"db_name":"retail","question":"列出每位员工的姓名及其所属门店名称。","gt_sql":"SELECT e.name, st.store_name FROM employees e JOIN stores st ON e.store_id = st.store_id;","pred_sql":"SELECT e.name, s.store_name FROM employees e JOIN stores s ON e.store_id = s.store_id;","thinking":"","ambiguous":"False"}
{"id":1850407582,"db_name":"retail","question":"在2023年5月8日，哪些门店的店长姓名和他们的总销售金额是多少？","gt_sql":"SELECT s.store_name, s.manager_name, SUM(ss.sales_amount) AS total_sales_amount FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id WHERE ss.date = '2023-05-08' GROUP BY s.store_name, s.manager_name;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales_amount FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.order_date = '2023-05-08' GROUP BY s.store_name, s.manager_name;","thinking":"","ambiguous":"False"}
{"id":3887504470,"db_name":"retail","question":"获取所有销售订单中，销售金额高于7000的订单ID和对应的员工姓名。","gt_sql":"SELECT so.order_id, e.name FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id WHERE so.total_amount \u003e 7000;","pred_sql":"SELECT s.order_id, e.name FROM salesorders s JOIN employees e ON s.employee_id = e.employee_id WHERE s.total_amount \u003e 7000;","thinking":"","ambiguous":"False"}
{"id":3068871934,"db_name":"retail","question":"在2023年5月期间，哪些门店的员工销售了超过10000元的商品，并且这些商品的供应商是苹果官方旗舰店？请列出门店名称、员工姓名、销售金额和商品名称。","gt_sql":"SELECT s.store_name, e.name AS employee_name, SUM(od.quantity * od.unit_price) AS total_sales, p.product_name FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN products p ON od.product_id = p.product_id WHERE p.supplier_name = '苹果官方旗舰店' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, e.name, p.product_name HAVING SUM(od.quantity * od.unit_price) \u003e 10000;","pred_sql":"SELECT s.store_name, e.name AS employee_name, SUM(ss.sales_amount) AS total_sales_amount, p.product_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date BETWEEN '2023-05-01' AND '2023-05-31' AND p.supplier_name = '苹果官方旗舰店' GROUP BY s.store_name, e.name, p.product_name HAVING SUM(ss.sales_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":2869270561,"db_name":"retail","question":"在2023年5月6日，哪些门店的员工销售了iPhone 13，并且这些销售的利润超过了4000元？","gt_sql":"SELECT s.store_name, e.name AS employee_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-06' AND p.product_name = 'iPhone 13' AND ss.profit \u003e 4000;","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":3219161296,"db_name":"retail","question":"查找订单ID为'b8b62bfe-a35d-4ff5-9bc9-654b5f67fed2'的销售订单信息。","gt_sql":"SELECT * FROM salesorders WHERE order_id = 'b8b62bfe-a35d-4ff5-9bc9-654b5f67fed2';","pred_sql":"SELECT order_id, store_id, employee_id, order_date, total_amount FROM salesorders WHERE order_id = 'b8b62bfe-a35d-4ff5-9bc9-654b5f67fed2';","thinking":"","ambiguous":"False"}
{"id":4084880534,"db_name":"retail","question":"查询每位员工的总销售金额。","gt_sql":"SELECT e.name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id GROUP BY e.name;","pred_sql":"SELECT e.name, SUM(so.total_amount) AS total_sales FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id GROUP BY e.name;","thinking":"","ambiguous":"False"}
{"id":758163770,"db_name":"retail","question":"列出每个商品的售价和进货价。","gt_sql":"SELECT p.product_name, p.sale_price, p.purchase_price FROM products p;","pred_sql":"SELECT product_name, sale_price, purchase_price FROM products;","thinking":"","ambiguous":"False"}
{"id":2553064409,"db_name":"retail","question":"在2023年5月，哪些员工在销售订单中处理的总金额超过10000元，并且他们所在的门店的店长是谁？","gt_sql":"SELECT e.name AS employee_name, s.manager_name AS store_manager_name FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id WHERE so.order_date \u003e= '2023-05-01' AND so.order_date \u003c '2023-06-01' AND so.total_amount \u003e 10000 GROUP BY e.name, s.manager_name;","pred_sql":"SELECT e.name AS employee_name, s.manager_name FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN stores s ON e.store_id = s.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY e.employee_id, e.name, s.manager_name HAVING SUM(so.total_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":2558715347,"db_name":"retail","question":"查找某个员工的ID和他们所管理的门店ID。","gt_sql":"SELECT employee_id, store_id FROM employees;","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":2334672967,"db_name":"retail","question":"在2023年5月7日，哪些门店的员工销售了Apple Watch Series 7，并且这些商品的利润是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-07' AND p.product_name = 'Apple Watch Series 7';","pred_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-07' AND p.product_name = 'Apple Watch Series 7';","thinking":"","ambiguous":"False"}
{"id":3673770320,"db_name":"retail","question":"在2023年5月5日，哪些门店的销售经理负责的订单总金额超过了10000元，并且这些订单中包含至少一种售价高于5000元的商品？","gt_sql":"SELECT DISTINCT s.store_name, e.name AS manager_name FROM stores s JOIN employees e ON s.store_id = e.store_id JOIN salesorders so ON s.store_id = so.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-05' AND so.total_amount \u003e 10000 AND p.sale_price \u003e 5000 AND e.position = '销售经理';","pred_sql":"SELECT s.store_name, e.name AS manager_name FROM stores s JOIN employees e ON s.store_id = e.store_id AND e.position = '销售经理' JOIN salesorders so ON s.store_id = so.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-05' AND p.sale_price \u003e 5000 GROUP BY s.store_name, e.name HAVING SUM(so.total_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":1434650665,"db_name":"retail","question":"获取每个订单的详细信息，包括商品名称和销售数量。","gt_sql":"SELECT od.order_detail_id, p.product_name, od.quantity FROM orderdetails od JOIN products p ON od.product_id = p.product_id;","pred_sql":"SELECT od.order_detail_id, p.product_name, od.quantity FROM orderdetails od JOIN products p ON od.product_id = p.product_id;","thinking":"","ambiguous":"False"}
{"id":4072489559,"db_name":"retail","question":"查询门店ID为 '0887d06a-27a8-46b4-98d6-514702e698da' 的销售订单详情。","gt_sql":"SELECT * FROM salesorders WHERE store_id = '0887d06a-27a8-46b4-98d6-514702e698da';","pred_sql":"SELECT order_id, store_id, employee_id, order_date, total_amount FROM salesorders WHERE store_id = '0887d06a-27a8-46b4-98d6-514702e698da';","thinking":"","ambiguous":"False"}
{"id":3987499786,"db_name":"retail","question":"在2023年5月，哪些员工在销售统计中记录的销售数量超过了他们在订单详情表中记录的销售数量？","gt_sql":"SELECT e.employee_id, e.name FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN orderdetails od ON ss.product_id = od.product_id WHERE ss.date \u003e= '2023-05-01' AND ss.date \u003c '2023-06-01' AND ss.sales_quantity \u003e od.quantity GROUP BY e.employee_id, e.name;","pred_sql":"SELECT e.employee_id, e.name FROM employees e WHERE EXISTS (SELECT 1 FROM salesstatistics ss WHERE ss.employee_id = e.employee_id AND ss.date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY ss.employee_id HAVING SUM(ss.sales_quantity) \u003e (SELECT SUM(od.quantity) FROM orderdetails od JOIN salesorders so ON od.order_id = so.order_id WHERE so.employee_id = e.employee_id AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31'));","thinking":"","ambiguous":"False"}
{"id":3272650586,"db_name":"retail","question":"在2023年5月1日，哪些门店的员工销售了iPad Air，并且这些订单的总金额是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, SUM(so.total_amount) AS total_sales_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'iPad Air' AND so.order_date = '2023-05-01' GROUP BY s.store_name, e.name;","pred_sql":"SELECT s.store_name, e.name, SUM(so.total_amount) AS total_sales_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-01' AND p.product_name = 'iPad Air' GROUP BY s.store_name, e.name;","thinking":"","ambiguous":"False"}
{"id":1170763492,"db_name":"retail","question":"列出每个商品的销售数量及对应的订单日期。","gt_sql":"SELECT pd.product_name, SUM(od.quantity) AS total_quantity, so.order_date\nFROM orderdetails od\nJOIN salesorders so ON od.order_id = so.order_id\nJOIN products pd ON od.product_id = pd.product_id\nGROUP BY pd.product_name, so.order_date;","pred_sql":"SELECT p.product_name, SUM(od.quantity) AS sales_quantity, so.order_date FROM products p JOIN orderdetails od ON p.product_id = od.product_id JOIN salesorders so ON od.order_id = so.order_id GROUP BY p.product_name, so.order_date;","thinking":"","ambiguous":"False"}
{"id":3307597619,"db_name":"retail","question":"在2023年5月，哪个门店的销售总额最高，并且该门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date \u003e= '2023-05-01' AND so.order_date \u003c '2023-06-01' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":2824509879,"db_name":"retail","question":"在2023年5月3日，哪些员工在数码广场店销售了iPhone 13，并且销售数量超过1台？","gt_sql":"SELECT e.name, e.position, s.store_name, p.product_name, ss.sales_quantity FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE s.store_name = '数码广场店' AND p.product_name = 'iPhone 13' AND ss.date = '2023-05-03' AND ss.sales_quantity \u003e 1;","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":348511856,"db_name":"retail","question":"在2023年5月7日，哪个门店的销售总额最高，并且该门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-07' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-07' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":3403500771,"db_name":"retail","question":"在2023年5月1日，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些订单的总金额超过了8000元？","gt_sql":"SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '索尼WH-1000XM4' AND so.order_date = '2023-05-01' AND so.total_amount \u003e 8000;","pred_sql":"SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-01' AND p.product_name = '索尼WH-1000XM4耳机' AND so.total_amount \u003e 8000;","thinking":"","ambiguous":"False"}
{"id":1837973022,"db_name":"retail","question":"查找某一商品的进货价和售价。","gt_sql":"SELECT purchase_price, sale_price FROM products WHERE product_id = '9e847a4c-3927-45a2-9a3d-a400cdec1d6a';","pred_sql":"SELECT purchase_price, sale_price FROM products WHERE product_id = '[产品ID]';","thinking":"","ambiguous":"False"}
{"id":1041289855,"db_name":"retail","question":"查询订单详情表中每个产品的销售单价和数量。","gt_sql":"SELECT product_id, unit_price, quantity FROM orderdetails;","pred_sql":"SELECT product_id, unit_price, quantity FROM orderdetails;","thinking":"","ambiguous":"False"}
{"id":2902800338,"db_name":"retail","question":"在2023年5月6日，哪些员工销售了Apple Watch Series 7，并且这些员工的门店名称是什么？","gt_sql":"SELECT e.name AS employee_name, s.store_name FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN products p ON ss.product_id = p.product_id JOIN stores s ON e.store_id = s.store_id WHERE p.product_name = 'Apple Watch Series 7' AND ss.date = '2023-05-06';","pred_sql":"SELECT e.name AS employee_name, s.store_name FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id JOIN stores s ON e.store_id = s.store_id WHERE so.order_date = '2023-05-06' AND p.product_name = 'Apple Watch Series 7';","thinking":"","ambiguous":"False"}
{"id":2465572579,"db_name":"retail","question":"查询销售数量最多的门店及其销售总额。","gt_sql":"SELECT st.store_name, SUM(od.quantity) AS total_quantity, SUM(so.total_amount) AS total_sales FROM orderdetails od JOIN salesorders so ON od.order_id = so.order_id JOIN stores st ON so.store_id = st.store_id GROUP BY st.store_name ORDER BY total_quantity DESC LIMIT 1;","pred_sql":"SELECT s.store_name, SUM(ss.sales_quantity) AS total_sales_quantity, SUM(ss.sales_amount) AS total_sales_amount FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id GROUP BY s.store_name ORDER BY total_sales_quantity DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":4232056788,"db_name":"retail","question":"在2023年5月期间，哪些员工在销售订单中处理了超过10000元的订单，并且这些订单涉及的商品类别有哪些？","gt_sql":"SELECT DISTINCT e.name AS employee_name, p.category_name AS product_category FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date \u003e= '2023-05-01' AND so.order_date \u003c '2023-06-01' AND so.total_amount \u003e 10000;","pred_sql":"SELECT DISTINCT e.name, p.category_name FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' AND so.total_amount \u003e 10000 ORDER BY e.name, p.category_name;","thinking":"","ambiguous":"False"}
{"id":3813879652,"db_name":"retail","question":"获取每个员工负责的门店及其所有订单的总金额。","gt_sql":"SELECT e.name AS employee_name, s.store_name, SUM(so.total_amount) AS total_amount FROM employees e JOIN stores s ON e.store_id = s.store_id JOIN salesorders so ON s.store_id = so.store_id GROUP BY e.name, s.store_name;","pred_sql":"SELECT e.name AS employee_name, s.store_name, SUM(so.total_amount) AS total_order_amount FROM employees e JOIN stores s ON e.store_id = s.store_id JOIN salesorders so ON e.employee_id = so.employee_id GROUP BY e.name, s.store_name;","thinking":"","ambiguous":"False"}
{"id":1308038325,"db_name":"retail","question":"2023年5月期间，每个门店的总销售金额和对应的店长姓名是多少？","gt_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, s.manager_name;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, s.manager_name;","thinking":"","ambiguous":"False"}
{"id":3746071071,"db_name":"retail","question":"找出在2023年5月销售数量超过5的商品及其订单详情。","gt_sql":"SELECT pd.product_name, SUM(od.quantity) AS total_quantity\nFROM orderdetails od\nJOIN salesorders so ON od.order_id = so.order_id\nJOIN products pd ON od.product_id = pd.product_id\nWHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31'\nGROUP BY pd.product_name\nHAVING SUM(od.quantity) \u003e 5;","pred_sql":"SELECT p.product_name, SUM(od.quantity) AS total_sales FROM products p JOIN orderdetails od ON p.product_id = od.product_id JOIN salesorders so ON od.order_id = so.order_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY p.product_name HAVING SUM(od.quantity) \u003e 5;","thinking":"","ambiguous":"False"}
{"id":2561670271,"db_name":"retail","question":"列出每个商品的销售数量和售价。","gt_sql":"SELECT p.product_name, SUM(od.quantity) AS total_quantity, p.sale_price FROM products p JOIN orderdetails od ON p.product_id = od.product_id GROUP BY p.product_name, p.sale_price;","pred_sql":"SELECT p.product_name, SUM(od.quantity) AS total_sales_quantity, p.sale_price FROM products p JOIN orderdetails od ON p.product_id = od.product_id GROUP BY p.product_name, p.sale_price;","thinking":"","ambiguous":"False"}
{"id":3159630797,"db_name":"retail","question":"在2023年5月1日，哪些门店的销售经理销售了佳能EOS R6，并且这些销售的利润是多少？","gt_sql":"SELECT s.store_name, e.name AS sales_manager_name, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-01' AND p.product_name = '佳能EOS R6' AND e.position = '销售经理';","pred_sql":"SELECT s.store_name, e.name AS manager_name, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-01' AND p.product_name = '佳能EOS R6' AND e.position = '销售经理';","thinking":"","ambiguous":"False"}
{"id":4216280203,"db_name":"retail","question":"获取所有门店的联系信息。","gt_sql":"SELECT st.store_name, st.phone, st.address FROM stores st;","pred_sql":"SELECT store_name, phone, address FROM stores;","thinking":"","ambiguous":"False"}
{"id":731373976,"db_name":"retail","question":"查找销售金额小于5000的订单及其对应的商品名称。","gt_sql":"SELECT so.order_id, p.product_name FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.total_amount \u003c 5000;","pred_sql":"SELECT so.order_id, p.product_name FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.total_amount \u003c 5000;","thinking":"","ambiguous":"False"}
{"id":170942591,"db_name":"retail","question":"在2023年5月，哪个门店的销售顾问销售了最多的商品数量，并且这些商品的总利润是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, SUM(ss.sales_quantity) AS total_sales_quantity, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id WHERE ss.date \u003e= '2023-05-01' AND ss.date \u003c= '2023-05-31' AND e.position = '销售顾问' GROUP BY s.store_name, e.name ORDER BY total_sales_quantity DESC LIMIT 1;","pred_sql":"SELECT s.store_name, e.name AS sales_advisor_name, SUM(ss.sales_quantity) AS total_quantity, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id WHERE ss.date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, e.name ORDER BY total_quantity DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":3730467553,"db_name":"retail","question":"在2023年5月，哪些门店的员工销售了小米电视4A，并且这些销售的利润总和是多少？","gt_sql":"SELECT s.store_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '小米电视4A' AND ss.date \u003e= '2023-05-01' AND ss.date \u003c= '2023-05-31' GROUP BY s.store_name;","pred_sql":"SELECT s.store_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '小米电视4A' AND ss.date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name;","thinking":"","ambiguous":"False"}
{"id":2909047140,"db_name":"retail","question":"在2023年5月6日，哪些员工在智慧街店销售了小米电视4A，并且这些销售的利润总和是多少？","gt_sql":"SELECT e.name AS employee_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-06' AND s.store_name = '智慧街店' AND p.product_name = '小米电视4A' GROUP BY e.name;","pred_sql":"SELECT e.name, SUM(ss.profit) AS total_profit FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-06' AND s.store_name = '智慧街店' AND p.product_name = '小米电视4A' GROUP BY e.name;","thinking":"","ambiguous":"False"}
{"id":2998787786,"db_name":"retail","question":"获取所有门店的名称和联系电话。","gt_sql":"SELECT store_name, phone FROM stores;","pred_sql":"SELECT store_name, phone FROM stores;","thinking":"","ambiguous":"False"}
{"id":3020408935,"db_name":"retail","question":"在2023年5月8日，哪些门店的销售利润超过了1000元，并且这些门店的店长姓名是什么？","gt_sql":"SELECT s.store_name, s.manager_name FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id WHERE ss.date = '2023-05-08' AND ss.profit \u003e 1000;","pred_sql":"SELECT s.store_name, s.manager_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-08' GROUP BY s.store_name, s.manager_name HAVING SUM(ss.profit) \u003e 1000;","thinking":"","ambiguous":"False"}
{"id":3729612424,"db_name":"retail","question":"查找每个商品类别的总销售数量。","gt_sql":"SELECT p.category_name, SUM(ss.sales_quantity) AS total_sales FROM salesstatistics ss JOIN products p ON ss.product_id = p.product_id GROUP BY p.category_name;","pred_sql":"SELECT p.category_name, SUM(od.quantity) AS total_sales_quantity FROM products p JOIN orderdetails od ON p.product_id = od.product_id GROUP BY p.category_name;","thinking":"","ambiguous":"False"}
{"id":1558062721,"db_name":"retail","question":"获取门店和员工的关联信息。","gt_sql":"SELECT s.store_name, e.name FROM stores s JOIN employees e ON s.store_id = e.store_id;","pred_sql":"SELECT s.store_name, e.name FROM stores s JOIN employees e ON s.store_id = e.store_id;","thinking":"","ambiguous":"False"}
{"id":3748358677,"db_name":"retail","question":"查询所有销售金额高于平均销售金额的订单ID。","gt_sql":"SELECT so.order_id FROM salesorders so WHERE so.total_amount \u003e (SELECT AVG(total_amount) FROM salesorders);","pred_sql":"SELECT order_id FROM salesorders WHERE total_amount \u003e (SELECT AVG(total_amount) FROM salesorders);","thinking":"","ambiguous":"False"}
{"id":281510090,"db_name":"retail","question":"查询特定日期范围内的所有销售订单。","gt_sql":"SELECT * FROM salesorders WHERE order_date BETWEEN '2023-05-01' AND '2023-05-31';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":930082852,"db_name":"retail","question":"获取所有员工及其销售订单的订单日期和总金额。","gt_sql":"SELECT e.name, so.order_date, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id;","pred_sql":"SELECT e.name, s.order_date, s.total_amount FROM employees e JOIN salesorders s ON e.employee_id = s.employee_id;","thinking":"","ambiguous":"False"}
{"id":874677465,"db_name":"retail","question":"查询每个员工的销售订单总金额。","gt_sql":"SELECT e.name, SUM(so.total_amount) AS total_sales FROM employees e LEFT JOIN salesorders so ON e.employee_id = so.employee_id GROUP BY e.name;","pred_sql":"SELECT e.name, SUM(so.total_amount) AS total_sales_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id GROUP BY e.name;","thinking":"","ambiguous":"False"}
{"id":1675790879,"db_name":"retail","question":"查询每位销售员的总销售数量与总利润。","gt_sql":"SELECT e.name, SUM(ss.sales_quantity) AS total_sales, SUM(ss.profi) AS, total_profit FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id GROUP BY e.name;","pred_sql":"SELECT e.name, SUM(ss.sales_quantity) AS total_sales_quantity, SUM(ss.profit) AS total_profit FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id GROUP BY e.name;","thinking":"","ambiguous":"False"}
{"id":1635802249,"db_name":"retail","question":"在2023年5月，哪些门店的员工销售了佳能EOS R6相机，并且这些订单的总金额超过10000元？","gt_sql":"SELECT DISTINCT s.store_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '佳能EOS R6' AND so.order_date \u003e= '2023-05-01' AND so.order_date \u003c '2023-06-01' AND so.total_amount \u003e 10000;","pred_sql":"SELECT DISTINCT s.store_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '佳能EOS R6相机' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31' AND so.total_amount \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":2425848754,"db_name":"retail","question":"在2023年5月5日，哪个门店的销售总额最高，并且该门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-05' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-05' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":2746220287,"db_name":"retail","question":"查找所有门店的商品销售数量和销售金额，按门店名称分组。","gt_sql":"SELECT s.store_name, SUM(ss.sales_quantity) AS total_quantity, SUM(ss.sales_amount) AS total_amount FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id GROUP BY s.store_name;","pred_sql":"SELECT s.store_name, SUM(ss.sales_quantity) AS total_sales_quantity, SUM(ss.sales_amount) AS total_sales_amount FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id GROUP BY s.store_name;","thinking":"","ambiguous":"False"}
{"id":4181874210,"db_name":"retail","question":"在2023年5月期间，哪个门店的销售数量最多，并且该门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name, SUM(ss.sales_quantity) AS total_sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date \u003e= '2023-05-01' AND ss.date \u003c= '2023-05-31' GROUP BY s.store_name, s.manager_name ORDER BY total_sales_quantity DESC LIMIT 1;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(ss.sales_quantity) AS total_sales FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1518878415,"db_name":"retail","question":"获取特定员工的所有销售订单及其总金额。","gt_sql":"SELECT so.order_id, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id WHERE e.name = '王丽';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":729031894,"db_name":"retail","question":"查找某商品的所有订单详情及其销售单价。","gt_sql":"SELECT od.order_detail_id, od.unit_price FROM orderdetails od JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '戴尔灵越15';","pred_sql":"SELECT order_detail_id, unit_price FROM orderdetails WHERE product_id = '某商品ID';","thinking":"","ambiguous":"False"}
{"id":415457057,"db_name":"retail","question":"查询每个门店的销售总金额及对应的统计日期。","gt_sql":"SELECT s.store_name, ss.sales_amount, ss.date FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id;","pred_sql":"SELECT s.store_name, SUM(ss.sales_amount) AS total_sales_amount, ss.date FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id GROUP BY s.store_name, ss.date;","thinking":"","ambiguous":"False"}
{"id":2711834209,"db_name":"retail","question":"查找在未来城店中进货价高于4000的商品名称。","gt_sql":"SELECT p.product_name FROM products p JOIN orderdetails od ON p.product_id = od.product_id JOIN salesorders so ON od.order_id = so.order_id JOIN stores s ON so.store_id = s.store_id WHERE p.purchase_price \u003e 4000 AND s.store_name = '未来城店';","pred_sql":"SELECT p.product_name FROM products p JOIN orderdetails od ON p.product_id = od.product_id JOIN salesorders so ON od.order_id = so.order_id JOIN stores s ON so.store_id = s.store_id WHERE s.store_name = '未来城店' AND p.purchase_price \u003e 4000;","thinking":"","ambiguous":"False"}
{"id":1625040088,"db_name":"retail","question":"在2023年5月9日，哪些门店的销售订单总额超过了10000元，并且这些门店的店长姓名是什么？","gt_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-09' GROUP BY s.store_name, s.manager_name HAVING SUM(so.total_amount) \u003e 10000;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS daily_sales FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.order_date = '2023-05-09' GROUP BY s.store_name, s.manager_name HAVING SUM(so.total_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":3394370453,"db_name":"retail","question":"在2023年5月2日，哪个门店的销售总额最高，并且该门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-02' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-02' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1323956071,"db_name":"retail","question":"在2023年5月9日，哪些门店的销售金额超过了1000元，并且这些门店的店长姓名是什么？","gt_sql":"SELECT s.store_name, s.manager_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-09' AND ss.sales_amount \u003e 1000;","pred_sql":"SELECT s.store_name, s.manager_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.order_date = '2023-05-09' GROUP BY s.store_name, s.manager_name HAVING SUM(so.total_amount) \u003e 1000;","thinking":"","ambiguous":"False"}
{"id":3696477446,"db_name":"retail","question":"在2023年5月，哪些员工在销售订单中处理了超过10000元的订单，并且这些订单涉及的商品类别是什么？","gt_sql":"SELECT e.name AS employee_name, p.category_name AS product_category FROM salesorders s JOIN employees e ON s.employee_id = e.employee_id JOIN orderdetails od ON s.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE s.order_date \u003e= '2023-05-01' AND s.order_date \u003c '2023-06-01' AND s.total_amount \u003e 10000 GROUP BY e.name, p.category_name;","pred_sql":"SELECT e.name AS employee_name, p.category_name FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE EXTRACT(MONTH FROM so.order_date) = 5 AND EXTRACT(YEAR FROM so.order_date) = 2023 AND so.total_amount \u003e 10000 GROUP BY e.name, p.category_name;","thinking":"","ambiguous":"False"}
{"id":4263762934,"db_name":"retail","question":"统计每个门店的总利润，按门店名称分组。","gt_sql":"SELECT s.store_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id GROUP BY s.store_name;","pred_sql":"SELECT s.store_name, SUM(ss.profit) AS total_profit FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id GROUP BY s.store_name;","thinking":"","ambiguous":"False"}
{"id":1452830768,"db_name":"retail","question":"在2023年5月期间，哪些门店的员工销售了超过10000元的商品，并且这些商品的供应商是索尼官方旗舰店？请列出门店名称、员工姓名、销售金额和商品名称。","gt_sql":"SELECT s.store_name, e.name AS employee_name, od.unit_price * od.quantity AS sales_amount, p.product_name FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date \u003e= '2023-05-01' AND so.order_date \u003c '2023-06-01' AND p.supplier_name = '索尼官方旗舰店' AND od.unit_price * od.quantity \u003e 10000;","pred_sql":"SELECT s.store_name, e.name AS employee_name, ss.sales_amount, p.product_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date BETWEEN '2023-05-01' AND '2023-05-31' AND ss.sales_amount \u003e 10000 AND p.supplier_name = '索尼官方旗舰店';","thinking":"","ambiguous":"False"}
{"id":4210000185,"db_name":"retail","question":"查询销售金额大于5000的订单及其详情。","gt_sql":"SELECT so.order_id, so.total_amount, od.product_id, od.quantity FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id WHERE so.total_amount \u003e 5000;","pred_sql":"SELECT s.order_id, s.total_amount, o.product_id, o.quantity FROM salesorders s JOIN orderdetails o ON s.order_id = o.order_id WHERE s.total_amount \u003e 5000;","thinking":"","ambiguous":"False"}
{"id":2309159488,"db_name":"retail","question":"查询在特定日期（例如2023-05-02）销售的所有商品及其销售金额。","gt_sql":"SELECT p.product_name, ss.sales_amount FROM products p JOIN salesstatistics ss ON p.product_id = ss.product_id WHERE ss.date = '2023-05-02';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":3856696435,"db_name":"retail","question":"查找2023年5月的数据，包括销售数量和对应的门店名称。","gt_sql":"SELECT ss.sales_quantity, s.store_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-01' OR ss.date = '2023-05-06';","pred_sql":"SELECT s.store_name, SUM(ss.sales_quantity) AS total_sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name;","thinking":"","ambiguous":"False"}
{"id":3385775144,"db_name":"retail","question":"获取每种商品的售价和进货价。","gt_sql":"SELECT product_name, sale_price, purchase_price FROM products;","pred_sql":"SELECT product_name, sale_price, purchase_price FROM products;","thinking":"","ambiguous":"False"}
{"id":898352649,"db_name":"retail","question":"在2023年5月期间，哪些门店的智能手表类商品销售数量超过了10件，并且这些商品的供应商是索尼官方旗舰店？请列出门店名称和销售数量。","gt_sql":"SELECT s.store_name, SUM(ss.sales_quantity) AS total_sales_quantity FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id JOIN products p ON ss.product_id = p.product_id WHERE p.category_name = '智能手表' AND p.supplier_name = '索尼官方旗舰店' AND ss.date \u003e= '2023-05-01' AND ss.date \u003c= '2023-05-31' GROUP BY s.store_name HAVING SUM(ss.sales_quantity) \u003e 10;","pred_sql":"SELECT s.store_name, SUM(ss.sales_quantity) AS total_sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE p.category_name = '智能手表' AND p.supplier_name = '索尼官方旗舰店' AND ss.date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name HAVING SUM(ss.sales_quantity) \u003e 10;","thinking":"","ambiguous":"False"}
{"id":1057968799,"db_name":"retail","question":"在2023年5月，哪些门店的平均订单金额超过了10000元，并且这些门店的店长姓名是什么？","gt_sql":"SELECT s.store_name, s.manager_name, AVG(so.total_amount) AS avg_order_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date \u003e= '2023-05-01' AND so.order_date \u003c '2023-06-01' GROUP BY s.store_name, s.manager_name HAVING AVG(so.total_amount) \u003e 10000;","pred_sql":"SELECT s.store_name, s.manager_name, AVG(so.total_amount) AS avg_order_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, s.manager_name HAVING AVG(so.total_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":1042797521,"db_name":"retail","question":"在2023年5月2日，哪些门店的员工销售了iPad Air，并且这些销售记录的利润是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, ss.sales_quantity, ss.sales_amount, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-02' AND p.product_name = 'iPad Air';","pred_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, ss.sales_quantity, ss.sales_amount, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-02' AND p.product_name = 'iPad Air';","thinking":"","ambiguous":"False"}
{"id":2349214824,"db_name":"retail","question":"在2023年5月期间，哪些门店的员工销售了iPhone 13，并且这些销售的利润总和是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'iPhone 13' AND ss.date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, e.name;","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":1437353225,"db_name":"retail","question":"在2023年5月，哪个门店的员工销售了最多的商品数量，并且该门店的总销售金额是多少？","gt_sql":"SELECT s.store_name, SUM(ss.sales_quantity) AS total_sales_quantity, SUM(ss.sales_amount) AS total_sales_amount FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date \u003e= '2023-05-01' AND ss.date \u003c= '2023-05-31' GROUP BY s.store_name ORDER BY total_sales_quantity DESC LIMIT 1;","pred_sql":"SELECT s.store_name, SUM(ss.sales_quantity) AS total_sales_quantity, SUM(ss.sales_amount) AS total_sales_amount FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name ORDER BY total_sales_quantity DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":2159290753,"db_name":"retail","question":"在2023年5月9日，哪些门店的员工销售了Apple Watch Series 7，并且这些订单的总金额是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, SUM(so.total_amount) AS total_sales_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON e.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'Apple Watch Series 7' AND so.order_date = '2023-05-09' GROUP BY s.store_name, e.name;","pred_sql":"SELECT s.store_name, e.name AS employee_name, SUM(so.total_amount) AS total_sales_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-09' AND p.product_name = 'Apple Watch Series 7' GROUP BY s.store_name, e.name;","thinking":"","ambiguous":"False"}
{"id":3028653636,"db_name":"retail","question":"查询订单详情表中所有订单的销售数量和单价。","gt_sql":"SELECT quantity, unit_price FROM orderdetails;","pred_sql":"SELECT quantity, unit_price FROM orderdetails;","thinking":"","ambiguous":"False"}
{"id":699540097,"db_name":"retail","question":"在2023年5月期间，哪些门店的员工销售了Nintendo Switch，并且这些员工的职位是什么？","gt_sql":"SELECT DISTINCT s.store_name, e.name AS employee_name, e.position FROM stores s JOIN employees e ON s.store_id = e.store_id JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND ss.date \u003e= '2023-05-01' AND ss.date \u003c= '2023-05-31';","pred_sql":"SELECT s.store_name, e.name, e.position FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31';","thinking":"","ambiguous":"False"}
{"id":1931659377,"db_name":"retail","question":"获取所有销售统计数据中，销售数量大于1的记录。","gt_sql":"SELECT * FROM salesstatistics WHERE sales_quantity \u003e 1;","pred_sql":"SELECT s.statistic_id, s.store_id, st.store_name, s.product_id, p.product_name, s.employee_id, e.name AS employee_name, s.date, s.sales_quantity, s.sales_amount, s.profit FROM salesstatistics s JOIN stores st ON s.store_id = st.store_id JOIN products p ON s.product_id = p.product_id JOIN employees e ON s.employee_id = e.employee_id WHERE s.sales_quantity \u003e 1;","thinking":"","ambiguous":"False"}
{"id":3746361325,"db_name":"retail","question":"在2023年5月，哪些门店的员工销售了Nintendo Switch，并且这些销售的利润总和是多少？","gt_sql":"SELECT s.store_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND ss.date \u003e= '2023-05-01' AND ss.date \u003c '2023-06-01' GROUP BY s.store_name;","pred_sql":"SELECT s.store_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND ss.date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name;","thinking":"","ambiguous":"False"}
{"id":716876897,"db_name":"retail","question":"获取所有订单的销售总额和对应的订单日期。","gt_sql":"SELECT so.order_date, SUM(so.total_amount) AS total_sales FROM salesorders so GROUP BY so.order_date;","pred_sql":"SELECT order_date, total_amount FROM salesorders;","thinking":"","ambiguous":"False"}
{"id":2607128675,"db_name":"retail","question":"查询每个门店的订单总金额和销售数量。","gt_sql":"SELECT st.store_name, SUM(so.total_amount) AS total_sales, COUNT(so.order_id) AS total_orders FROM salesorders so JOIN stores st ON so.store_id = st.store_id GROUP BY st.store_name;","pred_sql":"SELECT s.store_name, SUM(so.total_amount) AS sales_total_amount, COUNT(so.order_id) AS order_count FROM stores s LEFT JOIN salesorders so ON s.store_id = so.store_id GROUP BY s.store_name;","thinking":"","ambiguous":"False"}
{"id":285217611,"db_name":"retail","question":"查询订单详情中，销售数量为2的所有订单详情信息。","gt_sql":"SELECT * FROM orderdetails WHERE quantity = 2;","pred_sql":"SELECT order_detail_id, order_id, product_id, quantity, unit_price FROM orderdetails WHERE quantity = 2;","thinking":"","ambiguous":"False"}
{"id":780164755,"db_name":"retail","question":"在2023年5月1日，哪些门店的员工销售了戴尔灵越15这款商品，并且这些员工的职位是什么？","gt_sql":"SELECT s.store_name, e.name AS employee_name, e.position FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '戴尔灵越15' AND ss.date = '2023-05-01';","pred_sql":"SELECT s.store_name, e.name AS employee_name, e.position FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-01' AND p.product_name = '戴尔灵越15';","thinking":"","ambiguous":"False"}
{"id":936656745,"db_name":"retail","question":"找出所有员工的职务和所属门店。","gt_sql":"SELECT e.name, e.position, st.store_name FROM employees e JOIN stores st ON e.store_id = st.store_id;","pred_sql":"SELECT e.name, e.position, s.store_name FROM employees e JOIN stores s ON e.store_id = s.store_id;","thinking":"","ambiguous":"False"}
{"id":1245782625,"db_name":"retail","question":"在2023年5月3日，哪些门店的员工销售了佳能EOS R6，并且这些销售的总利润是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '佳能EOS R6' AND ss.date = '2023-05-03' GROUP BY s.store_name, e.name;","pred_sql":"SELECT s.store_name, e.name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-03' AND p.product_name = '佳能EOS R6' GROUP BY s.store_name, e.name;","thinking":"","ambiguous":"False"}
{"id":1283619082,"db_name":"retail","question":"在2023年5月5日，哪些门店的员工销售了iPhone 13，并且这些销售的利润总和是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'iPhone 13' AND ss.date = '2023-05-05' GROUP BY s.store_name, e.name;","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":1656453304,"db_name":"retail","question":"在2023年5月6日，哪些门店的员工销售了华为Mate 40 Pro，并且该商品的销售数量超过1个？","gt_sql":"SELECT s.store_name, e.name AS employee_name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-06' AND p.product_name = '华为Mate 40 Pro' AND ss.sales_quantity \u003e 1;","pred_sql":"SELECT s.store_name, e.name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-06' AND p.product_name = '华为Mate 40 Pro' AND ss.sales_quantity \u003e 1;","thinking":"","ambiguous":"False"}
{"id":366199293,"db_name":"retail","question":"查询每个订单的详细信息，包括商品名称和销售数量。","gt_sql":"SELECT od.order_detail_id, p.product_name, od.quantity FROM orderdetails od JOIN products p ON od.product_id = p.product_id;","pred_sql":"SELECT od.order_detail_id, p.product_name, od.quantity FROM orderdetails od JOIN products p ON od.product_id = p.product_id;","thinking":"","ambiguous":"False"}
{"id":3334478107,"db_name":"retail","question":"查询所有员工及其职位，并显示他们所在门店的联系电话。","gt_sql":"SELECT e.name, e.position, s.phone FROM employees e JOIN stores s ON e.store_id = s.store_id;","pred_sql":"SELECT e.name, e.position, s.phone FROM employees e JOIN stores s ON e.store_id = s.store_id;","thinking":"","ambiguous":"False"}
{"id":4270219527,"db_name":"retail","question":"在2023年5月5日，哪些门店的员工销售了戴尔灵越15商品，并且该商品的销售数量超过1件？请列出门店名称、员工姓名和销售数量。","gt_sql":"SELECT s.store_name, e.name AS employee_name, od.quantity FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-05' AND p.product_name = '戴尔灵越15' AND od.quantity \u003e 1;","pred_sql":"SELECT s.store_name, e.name AS employee_name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-05' AND p.product_name = '戴尔灵越15' AND ss.sales_quantity \u003e 1;","thinking":"","ambiguous":"False"}
{"id":1514093143,"db_name":"retail","question":"查询销售金额大于5000的订单及其商品信息。","gt_sql":"SELECT so.order_id, so.total_amount, od.product_id, od.quantity FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id WHERE so.total_amount \u003e 5000;","pred_sql":"SELECT so.order_id, so.total_amount, od.product_id, od.quantity FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id WHERE so.total_amount \u003e 5000;","thinking":"","ambiguous":"False"}
{"id":2669644548,"db_name":"retail","question":"获取每个员工的销售订单及其金额。","gt_sql":"SELECT e.name, so.order_id, so.total_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id;","pred_sql":"SELECT e.name, s.order_id, s.total_amount FROM employees e JOIN salesorders s ON e.employee_id = s.employee_id;","thinking":"","ambiguous":"False"}
{"id":805828737,"db_name":"retail","question":"查找所有利润大于3000的销售统计记录及其对应的日期。","gt_sql":"SELECT ss.statistic_id, ss.date FROM salesstatistics ss WHERE ss.profit \u003e 3000;","pred_sql":"SELECT statistic_id, date FROM salesstatistics WHERE profit \u003e 3000;","thinking":"","ambiguous":"False"}
{"id":3997676800,"db_name":"retail","question":"在2023年5月1日，哪些门店的员工销售了Apple Watch Series 7，并且这些订单的总金额超过了7000元？","gt_sql":"SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'Apple Watch Series 7' AND so.order_date = '2023-05-01' AND so.total_amount \u003e 7000;","pred_sql":"SELECT s.store_name, e.name, SUM(so.total_amount) AS sales_total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-01' AND p.product_name = 'Apple Watch Series 7' GROUP BY s.store_name, e.name HAVING SUM(so.total_amount) \u003e 7000;","thinking":"","ambiguous":"False"}
{"id":4161491201,"db_name":"retail","question":"查询每种商品的剩余数量及其类别名称。","gt_sql":"SELECT p.product_name, p.remaining_quantity, p.category_name FROM products p;","pred_sql":"SELECT product_name, remaining_quantity, category_name FROM products;","thinking":"","ambiguous":"False"}
{"id":1127435173,"db_name":"retail","question":"在2023年5月7日，哪些员工在销售订单中涉及的商品类别是相机，并且这些订单的总金额超过了15000元？","gt_sql":"SELECT e.employee_id, e.name, e.position FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-07' AND p.category_name = '相机' AND so.total_amount \u003e 15000;","pred_sql":"SELECT DISTINCT e.employee_id, e.name, e.position FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-07' AND p.category_name = '相机' GROUP BY e.employee_id, e.name, e.position HAVING SUM(od.quantity * od.unit_price) \u003e 15000;","thinking":"","ambiguous":"False"}
{"id":2902593996,"db_name":"retail","question":"在2023年5月3日，哪些门店的员工销售了iPhone 13，并且这些销售的利润总和是多少？","gt_sql":"SELECT s.store_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN products p ON ss.product_id = p.product_id JOIN stores s ON ss.store_id = s.store_id WHERE p.product_name = 'iPhone 13' AND ss.date = '2023-05-03' GROUP BY s.store_name;","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":3388599532,"db_name":"retail","question":"在2023年5月8日，哪个门店的总销售金额最高，并且该门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-08' GROUP BY s.store_id ORDER BY total_sales DESC LIMIT 1;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-08' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":4098005311,"db_name":"retail","question":"在2023年5月3日，哪些员工在数字大道店销售了Nintendo Switch，并且他们的销售数量和总金额是多少？","gt_sql":"SELECT e.name AS employee_name, ss.sales_quantity, ss.sales_amount FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-03' AND s.store_name = '数字大道店' AND p.product_name = 'Nintendo Switch';","pred_sql":"SELECT e.name, ss.sales_quantity, ss.sales_amount FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-03' AND s.store_name = '数字大道店' AND p.product_name = 'Nintendo Switch';","thinking":"","ambiguous":"False"}
{"id":923028298,"db_name":"retail","question":"在2023年5月5日，哪些门店的员工销售了戴森V11商品，并且该商品的利润超过500元？","gt_sql":"SELECT s.store_name, e.name AS employee_name FROM salesstatistics ss JOIN products p ON ss.product_id = p.product_id JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id WHERE ss.date = '2023-05-05' AND p.product_name = '戴森V11' AND ss.profit \u003e 500;","pred_sql":"SELECT s.store_name, e.name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-05' AND p.product_name = '戴森V11' AND ss.profit \u003e 500;","thinking":"","ambiguous":"False"}
{"id":1361891626,"db_name":"retail","question":"在2023年5月9日，哪些门店的销售金额超过了2000元，并且这些门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-09' AND ss.sales_amount \u003e 2000;","pred_sql":"SELECT s.store_name, s.manager_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.order_date = '2023-05-09' GROUP BY s.store_name, s.manager_name HAVING SUM(so.total_amount) \u003e 2000;","thinking":"","ambiguous":"False"}
{"id":1630147030,"db_name":"retail","question":"在2023年5月1日，哪些门店的销售额超过了10000元，并且这些门店的店长姓名是什么？","gt_sql":"SELECT s.store_name, s.manager_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.order_date = '2023-05-01' AND so.total_amount \u003e 10000;","pred_sql":"SELECT s.store_name, s.manager_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.order_date = '2023-05-01' GROUP BY s.store_id, s.store_name, s.manager_name HAVING SUM(so.total_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":3263175989,"db_name":"retail","question":"在2023年5月9日，哪些门店的员工销售了iPhone 13，并且这些门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name, e.name AS employee_name FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-09' AND p.product_name = 'iPhone 13';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":378330460,"db_name":"retail","question":"查询某个商品的销售金额和剩余数量。","gt_sql":"SELECT sales_amount, remaining_quantity FROM salesstatistics ss JOIN products p ON ss.product_id = p.product_id WHERE p.product_id = '81bfd69e-1240-48bf-a302-313c0255a1c9';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":4052285642,"db_name":"retail","question":"查找所有门店及其地址和电话。","gt_sql":"SELECT s.store_name, s.address, s.phone FROM stores s;","pred_sql":"SELECT store_name, address, phone FROM stores;","thinking":"","ambiguous":"False"}
{"id":1549729846,"db_name":"retail","question":"在2023年5月2日，哪些门店的员工完成了销售订单，并且这些订单的总金额超过了2000元？请列出门店名称、员工姓名和订单总金额。","gt_sql":"SELECT s.store_name, e.name, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-02' AND so.total_amount \u003e 2000;","pred_sql":"SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-02' AND so.total_amount \u003e 2000;","thinking":"","ambiguous":"False"}
{"id":3935894550,"db_name":"retail","question":"获取每个门店的总销售数量和总利润。","gt_sql":"SELECT store_id, SUM(sales_quantity) AS total_sales_quantity, SUM(profit) AS total_profit FROM salesstatistics GROUP BY store_id;","pred_sql":"SELECT s.store_id, SUM(ss.sales_quantity) AS total_sales_quantity, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id GROUP BY s.store_id;","thinking":"","ambiguous":"False"}
{"id":3331362186,"db_name":"retail","question":"在2023年5月7日，哪些门店的销售利润超过了1000元，并且这些门店的店长是谁？","gt_sql":"SELECT s.store_name, st.profit, s.manager_name FROM salesstatistics st JOIN stores s ON st.store_id = s.store_id WHERE st.date = '2023-05-07' AND st.profit \u003e 1000;","pred_sql":"SELECT s.store_name, SUM(ss.profit) AS total_profit, s.manager_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-07' GROUP BY s.store_name, s.manager_name HAVING SUM(ss.profit) \u003e 1000;","thinking":"","ambiguous":"False"}
{"id":1128623969,"db_name":"retail","question":"在2023年5月8日，哪个门店的销售数量最多，并且该门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-08' ORDER BY ss.sales_quantity DESC LIMIT 1;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(ss.sales_quantity) AS total_sales FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-08' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":2501471268,"db_name":"retail","question":"哪个门店在2023年5月9日的销售中获利最多？","gt_sql":"SELECT ss.store_id, SUM(ss.profit) AS total_profit FROM salesstatistics ss WHERE ss.date = '2023-05-09' GROUP BY ss.store_id ORDER BY total_profit DESC LIMIT 1;","pred_sql":"SELECT s.store_id, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-09' GROUP BY s.store_id ORDER BY total_profit DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1462073315,"db_name":"retail","question":"在2023年5月，哪些门店的员工销售了佳能EOS R6相机，并且这些订单的总金额超过了5000元？","gt_sql":"SELECT s.store_name, e.name AS employee_name, SUM(od.quantity * od.unit_price) AS total_sales FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id WHERE p.product_name = '佳能EOS R6' AND so.order_date \u003e= '2023-05-01' AND so.order_date \u003c '2023-06-01' GROUP BY s.store_name, e.name HAVING SUM(od.quantity * od.unit_price) \u003e 5000;","pred_sql":"SELECT s.store_name, e.name, SUM(so.total_amount) AS sales_total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '佳能EOS R6相机' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, e.name HAVING SUM(so.total_amount) \u003e 5000;","thinking":"","ambiguous":"False"}
{"id":1581647710,"db_name":"retail","question":"在2023年5月期间，哪些门店的员工销售了iPad Air，并且这些员工的职位是什么？","gt_sql":"SELECT s.store_name, e.name AS employee_name, e.position FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'iPad Air' AND ss.date \u003e= '2023-05-01' AND ss.date \u003c= '2023-05-31';","pred_sql":"SELECT s.store_name, e.name, e.position FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'iPad Air' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31';","thinking":"","ambiguous":"False"}
{"id":801232665,"db_name":"retail","question":"查找所有商品的类别名称和售价。","gt_sql":"SELECT category_name, sale_price FROM products;","pred_sql":"SELECT category_name, sale_price FROM products;","thinking":"","ambiguous":"False"}
{"id":456965504,"db_name":"retail","question":"在2023年5月，哪些门店的销售额超过了10000元，并且这些门店中有多少员工是销售经理？","gt_sql":"SELECT s.store_name, COUNT(e.employee_id) AS sales_manager_count FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id JOIN employees e ON s.store_id = e.store_id WHERE ss.date \u003e= '2023-05-01' AND ss.date \u003c= '2023-05-31' AND ss.sales_amount \u003e 10000 AND e.position = '销售经理' GROUP BY s.store_name;","pred_sql":"SELECT s.store_name, COUNT(DISTINCT e.employee_id) AS manager_count FROM stores s JOIN salesorders so ON s.store_id = so.store_id JOIN employees e ON s.store_id = e.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' AND e.position = '销售经理' GROUP BY s.store_id, s.store_name HAVING SUM(so.total_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":3382493010,"db_name":"retail","question":"找出每个商品的剩余数量及其对应的销售数量。","gt_sql":"SELECT p.product_name, p.remaining_quantity, SUM(od.quantity) AS sold_quantity FROM products p LEFT JOIN orderdetails od ON p.product_id = od.product_id GROUP BY p.product_name, p.remaining_quantity;","pred_sql":"SELECT p.product_name, p.remaining_quantity, COALESCE(SUM(od.quantity), 0) AS sales_quantity FROM products p LEFT JOIN orderdetails od ON p.product_id = od.product_id GROUP BY p.product_id, p.product_name, p.remaining_quantity;","thinking":"","ambiguous":"False"}
{"id":571189478,"db_name":"retail","question":"查询每个订单的详细信息，包括订单日期和总金额。","gt_sql":"SELECT so.order_id, so.order_date, so.total_amount FROM salesorders so;","pred_sql":"SELECT order_id, order_date, total_amount FROM salesorders;","thinking":"","ambiguous":"False"}
{"id":3197967117,"db_name":"retail","question":"在2023年5月6日，哪些门店的员工销售了华为Mate 40 Pro手机，并且该商品的销售数量超过了1件？","gt_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-06' AND p.product_name = '华为Mate 40 Pro' AND ss.sales_quantity \u003e 1;","pred_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-06' AND p.product_name = '华为Mate 40 Pro' AND ss.sales_quantity \u003e 1;","thinking":"","ambiguous":"False"}
{"id":426781097,"db_name":"retail","question":"获取每个门店的员工及其职位。","gt_sql":"SELECT s.store_name, e.name, e.position FROM stores s JOIN employees e ON s.store_id = e.store_id;","pred_sql":"SELECT s.store_name, e.name, e.position FROM stores s JOIN employees e ON s.store_id = e.store_id;","thinking":"","ambiguous":"False"}
{"id":3095201302,"db_name":"retail","question":"在2023年5月1日，哪些员工在创客空间店销售了华为Mate 40 Pro，并且这些销售的总金额是多少？","gt_sql":"SELECT e.name AS employee_name, SUM(od.quantity * od.unit_price) AS total_sales_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-01' AND s.store_name = '创客空间店' AND p.product_name = '华为Mate 40 Pro' GROUP BY e.name;","pred_sql":"SELECT e.name, SUM(ss.sales_amount) AS total_sales_amount FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-01' AND s.store_name = '创客空间店' AND p.product_name = '华为Mate 40 Pro' GROUP BY e.name;","thinking":"","ambiguous":"False"}
{"id":3814813462,"db_name":"retail","question":"在2023年5月期间，哪些门店的员工销售了戴森V11商品，并且这些员工的职位是什么？","gt_sql":"SELECT s.store_name, e.name AS employee_name, e.position FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '戴森V11' AND ss.date \u003e= '2023-05-01' AND ss.date \u003c= '2023-05-31';","pred_sql":"SELECT s.store_name, e.name AS employee_name, e.position FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '戴森V11' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31';","thinking":"","ambiguous":"False"}
{"id":609043667,"db_name":"retail","question":"获取所有订单详情和相应的产品信息。","gt_sql":"SELECT od.order_detail_id, p.product_name, od.quantity FROM orderdetails od JOIN products p ON od.product_id = p.product_id;","pred_sql":"SELECT od.order_detail_id AS \"产品唯一标识\", p.product_name AS \"产品名称\", od.quantity AS \"购买数量\" FROM orderdetails od JOIN products p ON od.product_id = p.product_id;","thinking":"","ambiguous":"False"}
{"id":1259543351,"db_name":"retail","question":"在2023年5月6日，哪些员工在销售统计表中记录了销售数量大于1的商品，并且这些商品的供应商是'戴尔官方旗舰店'？","gt_sql":"SELECT DISTINCT e.employee_id, e.name FROM employees e JOIN salesstatistics s ON e.employee_id = s.employee_id JOIN products p ON s.product_id = p.product_id WHERE s.date = '2023-05-06' AND s.sales_quantity \u003e 1 AND p.supplier_name = '戴尔官方旗舰店';","pred_sql":"SELECT DISTINCT e.employee_id, e.name FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-06' AND ss.sales_quantity \u003e 1 AND p.supplier_name = '戴尔官方旗舰店';","thinking":"","ambiguous":"False"}
{"id":3115466033,"db_name":"retail","question":"查询所有商品的名称及其售价。","gt_sql":"SELECT product_name, sale_price FROM products;","pred_sql":"SELECT product_name, sale_price FROM products;","thinking":"","ambiguous":"False"}
{"id":1445435683,"db_name":"retail","question":"获取每个门店的店长姓名及联系电话。","gt_sql":"SELECT manager_name, phone FROM stores;","pred_sql":"SELECT store_name AS \"门店名称\", manager_name AS \"店长姓名\", phone AS \"联系电话\" FROM stores;","thinking":"","ambiguous":"False"}
{"id":1024575513,"db_name":"retail","question":"查询在2023年5月7日由员工范莹负责的所有销售订单的总金额和对应门店名称。","gt_sql":"SELECT so.total_amount, st.store_name FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores st ON so.store_id = st.store_id WHERE e.name = '范莹' AND so.order_date = '2023-05-07';","pred_sql":"SELECT so.total_amount, s.store_name FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id WHERE so.order_date = '2023-05-07' AND e.name = '范莹';","thinking":"","ambiguous":"False"}
{"id":1356118157,"db_name":"retail","question":"在2023年5月期间，哪些门店的员工销售了'Apple Watch Series 7'，并且这些门店的总销售金额超过了10000元？","gt_sql":"SELECT s.store_name, SUM(so.total_amount) AS total_sales FROM stores s JOIN salesorders so ON s.store_id = so.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'Apple Watch Series 7' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name HAVING SUM(so.total_amount) \u003e 10000;","pred_sql":"SELECT s.store_name, SUM(so.total_amount) AS total_sales_amount FROM stores s JOIN salesorders so ON s.store_id = so.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'Apple Watch Series 7' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name HAVING SUM(so.total_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":2779355161,"db_name":"retail","question":"统计每个门店在2023年5月的销售总金额。","gt_sql":"SELECT s.store_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name;","pred_sql":"SELECT s.store_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name;","thinking":"","ambiguous":"False"}
{"id":3800488480,"db_name":"retail","question":"获取所有门店及其对应的经理姓名。","gt_sql":"SELECT store_name, manager_name FROM stores;","pred_sql":"SELECT s.store_name, s.manager_name FROM stores s;","thinking":"","ambiguous":"False"}
{"id":52927163,"db_name":"retail","question":"获取所有商品的销售单价和剩余数量。","gt_sql":"SELECT p.product_name, p.sale_price, p.remaining_quantity FROM products p;","pred_sql":"SELECT product_name, sale_price AS sales_unit_price, remaining_quantity FROM products;","thinking":"","ambiguous":"False"}
{"id":4140737645,"db_name":"retail","question":"在2023年5月1日，哪些门店的员工销售了iPhone 13，并且这些订单的总金额是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, SUM(so.total_amount) AS total_sales_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'iPhone 13' AND so.order_date = '2023-05-01' GROUP BY s.store_name, e.name;","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":3812947992,"db_name":"retail","question":"在2023年5月8日，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些订单的总金额超过了15000元？","gt_sql":"SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '索尼WH-1000XM4' AND so.order_date = '2023-05-08' AND so.total_amount \u003e 15000;","pred_sql":"SELECT s.store_name, e.name, SUM(so.total_amount) AS total_sales_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-08' AND p.product_name = '索尼WH-1000XM4耳机' GROUP BY s.store_name, e.name HAVING SUM(so.total_amount) \u003e 15000;","thinking":"","ambiguous":"False"}
{"id":2237439168,"db_name":"retail","question":"在2023年5月9日，哪个门店的销售数量最多，并且该门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name, MAX(ss.sales_quantity) AS max_sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-09' GROUP BY s.store_name, s.manager_name ORDER BY max_sales_quantity DESC LIMIT 1;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(ss.sales_quantity) AS total_sales FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-09' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":3083869006,"db_name":"retail","question":"获取销售统计表中所有记录的利润总和。","gt_sql":"SELECT SUM(profit) AS total_profit FROM salesstatistics;","pred_sql":"SELECT SUM(profit) AS total_profit FROM salesstatistics;","thinking":"","ambiguous":"False"}
{"id":106112262,"db_name":"retail","question":"查询特定员工的所有订单及对应的门店名称。","gt_sql":"SELECT so.order_id, s.store_name FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.employee_id = 'a4fddd73-a996-4afc-b014-4daf6a9c778a';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":886303610,"db_name":"retail","question":"在2023年5月，哪个门店的销售顾问黄萍销售了最多的商品数量？请列出该门店的名称和销售顾问黄萍的销售数量。","gt_sql":"SELECT s.store_name, SUM(ss.sales_quantity) AS total_sales_quantity FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON e.store_id = s.store_id WHERE e.name = '黄萍' AND ss.date \u003e= '2023-05-01' AND ss.date \u003c= '2023-05-31' GROUP BY s.store_name ORDER BY total_sales_quantity DESC LIMIT 1;","pred_sql":"SELECT s.store_name, SUM(ss.sales_quantity) AS total_sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id WHERE e.name = '黄萍' AND ss.date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name ORDER BY total_sales_quantity DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1529918379,"db_name":"retail","question":"在2023年5月8日，哪些门店的员工销售了Nintendo Switch，并且这些销售的利润是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND ss.date = '2023-05-08';","pred_sql":"SELECT s.store_name, e.name AS employee_name, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-08' AND p.product_name = 'Nintendo Switch';","thinking":"","ambiguous":"False"}
{"id":3470071233,"db_name":"retail","question":"在2023年5月5日，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些订单的总金额是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '索尼WH-1000XM4' AND so.order_date = '2023-05-05';","pred_sql":"SELECT s.store_name, e.name, SUM(so.total_amount) AS total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-05' AND p.product_name = '索尼WH-1000XM4耳机' GROUP BY s.store_name, e.name;","thinking":"","ambiguous":"False"}
{"id":616988720,"db_name":"retail","question":"在2023年5月5日，哪些员工在智能生活馆销售了商品，并且这些商品的供应商是小米官方旗舰店？","gt_sql":"SELECT e.name, e.position, p.product_name FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-05' AND s.store_name = '智能生活馆' AND p.supplier_name = '小米官方旗舰店';","pred_sql":"SELECT e.name AS employee_name, e.position, p.product_name FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-05' AND p.supplier_name = '小米官方旗舰店' AND e.store_id IN (SELECT store_id FROM stores WHERE store_name = '智能生活馆');","thinking":"","ambiguous":"False"}
{"id":4131869213,"db_name":"retail","question":"在2023年5月7日，哪个门店的销售利润最高，并且该门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-07' ORDER BY ss.profit DESC LIMIT 1;","pred_sql":"SELECT s.store_name, s.manager_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-07' GROUP BY s.store_name, s.manager_name ORDER BY SUM(ss.profit) DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":2632379040,"db_name":"retail","question":"在2023年5月9日，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些销售的利润是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, ss.profit FROM salesstatistics ss JOIN products p ON ss.product_id = p.product_id JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id WHERE p.product_name = '索尼WH-1000XM4' AND ss.date = '2023-05-09';","pred_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-09' AND p.product_name = '索尼WH-1000XM4耳机';","thinking":"","ambiguous":"False"}
{"id":1347772939,"db_name":"retail","question":"查询某个商品在所有门店的销售数量及售价。","gt_sql":"SELECT p.product_name, od.quantity, od.unit_price FROM orderdetails od JOIN products p ON od.product_id = p.product_id JOIN salesorders so ON od.order_id = so.order_id WHERE p.product_name = '佳能EOS R6';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":2314844420,"db_name":"retail","question":"在销售订单表中，查询在2023年5月3日销售的所有订单的总金额和对应的门店名称。","gt_sql":"SELECT s.store_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-03';","pred_sql":"SELECT s.store_name, SUM(so.total_amount) AS total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-03' GROUP BY s.store_name;","thinking":"","ambiguous":"False"}
{"id":1029843679,"db_name":"retail","question":"查询订单详情表中销售数量大于1的所有记录。","gt_sql":"SELECT * FROM orderdetails WHERE quantity \u003e 1;","pred_sql":"SELECT order_detail_id, order_id, product_id, quantity, unit_price FROM orderdetails WHERE quantity \u003e 1;","thinking":"","ambiguous":"False"}
{"id":973958071,"db_name":"retail","question":"在2023年5月5日，哪个门店的员工销售了iPhone 13，并且该订单的总金额是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'iPhone 13' AND so.order_date = '2023-05-05';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":3235376159,"db_name":"retail","question":"找出在2023年5月5日的所有销售记录及其对应的门店名称。","gt_sql":"SELECT so.order_id, so.total_amount, s.store_name FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-05';","pred_sql":"SELECT s.order_id, s.total_amount, st.store_name FROM salesorders s JOIN stores st ON s.store_id = st.store_id WHERE s.order_date = '2023-05-05';","thinking":"","ambiguous":"False"}
{"id":590339570,"db_name":"retail","question":"查询所有订单中销售数量大于1的商品名称和订单ID。","gt_sql":"SELECT p.product_name, od.order_id FROM orderdetails od JOIN products p ON od.product_id = p.product_id WHERE od.quantity \u003e 1;","pred_sql":"SELECT p.product_name, od.order_id FROM orderdetails od JOIN products p ON od.product_id = p.product_id WHERE od.quantity \u003e 1;","thinking":"","ambiguous":"False"}
{"id":947155024,"db_name":"retail","question":"查找在2023年5月期间销售的所有订单。","gt_sql":"SELECT so.order_id, so.order_date, so.total_amount FROM salesorders so WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31';","pred_sql":"SELECT order_id, order_date, total_amount FROM salesorders WHERE order_date BETWEEN '2023-05-01' AND '2023-05-31';","thinking":"","ambiguous":"False"}
{"id":143868964,"db_name":"retail","question":"查询销售统计表中每个员工的销售数量。","gt_sql":"SELECT employee_id, SUM(sales_quantity) FROM salesstatistics GROUP BY employee_id;","pred_sql":"SELECT employee_id, SUM(sales_quantity) AS total_sales_quantity FROM salesstatistics GROUP BY employee_id;","thinking":"","ambiguous":"False"}
{"id":801054820,"db_name":"retail","question":"列出每个商品的类别和当前剩余数量。","gt_sql":"SELECT category_name, remaining_quantity FROM products;","pred_sql":"SELECT category_name, remaining_quantity FROM products;","thinking":"","ambiguous":"False"}
{"id":956049949,"db_name":"retail","question":"获取每个员工的销售数量及其对应的门店名称。","gt_sql":"SELECT e.name AS employee_name, SUM(ss.sales_quantity) AS total_sales, s.store_name FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN stores s ON e.store_id = s.store_id GROUP BY e.name, s.store_name;","pred_sql":"SELECT e.name AS employee_name, SUM(ss.sales_quantity) AS total_sales, s.store_name FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON e.store_id = s.store_id GROUP BY e.name, s.store_name;","thinking":"","ambiguous":"False"}
{"id":1812261268,"db_name":"retail","question":"查询订单详情中所有订单ID及其对应的商品ID。","gt_sql":"SELECT od.order_id, od.product_id FROM orderdetails od;","pred_sql":"SELECT order_id, product_id FROM orderdetails;","thinking":"","ambiguous":"False"}
{"id":573573963,"db_name":"retail","question":"查询在特定日期的销售统计。","gt_sql":"SELECT * FROM salesstatistics WHERE date = '2023-05-05';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":2726627092,"db_name":"retail","question":"在2023年5月1日，哪些员工在科技园店销售了iPhone 13，并且他们的销售数量和总金额是多少？","gt_sql":"SELECT e.name AS employee_name, ss.sales_quantity, ss.sales_amount FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON e.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE s.store_name = '科技园店' AND p.product_name = 'iPhone 13' AND ss.date = '2023-05-01';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":3682087832,"db_name":"retail","question":"在2023年5月9日，哪些员工销售了Apple Watch Series 7，并且这些商品的供应商是任天堂官方旗舰店？","gt_sql":"SELECT e.name FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-09' AND p.product_name = 'Apple Watch Series 7' AND p.supplier_name = '任天堂官方旗舰店';","pred_sql":"SELECT e.name FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-09' AND p.product_name = 'Apple Watch Series 7' AND p.supplier_name = '任天堂官方旗舰店';","thinking":"","ambiguous":"False"}
{"id":994704464,"db_name":"retail","question":"获取在2023年5月6日的所有销售订单的总金额和对应的门店名称。","gt_sql":"SELECT so.total_amount, s.store_name FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-06';","pred_sql":"SELECT so.total_amount, s.store_name FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-06';","thinking":"","ambiguous":"False"}
{"id":2258930244,"db_name":"retail","question":"列出在特定日期内所有销售订单的详情。","gt_sql":"SELECT so.order_id, od.quantity, od.unit_price FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id WHERE so.order_date = '2023-05-06';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":251367692,"db_name":"retail","question":"在2023年5月7日，哪些员工在智慧街店销售了佳能EOS R6相机，并且这些销售的订单总金额是多少？","gt_sql":"SELECT e.name AS employee_name, s.store_name, p.product_name, SUM(o.total_amount) AS total_sales_amount FROM salesorders o JOIN employees e ON o.employee_id = e.employee_id JOIN stores s ON o.store_id = s.store_id JOIN orderdetails d ON o.order_id = d.order_id JOIN products p ON d.product_id = p.product_id WHERE o.order_date = '2023-05-07' AND s.store_name = '智慧街店' AND p.product_name = '佳能EOS R6' GROUP BY e.name, s.store_name, p.product_name;","pred_sql":"SELECT e.name AS employee_name, s.store_name, p.product_name, SUM(so.total_amount) AS total_sales_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-07' AND s.store_name = '智慧街店' AND p.product_name = '佳能EOS R6相机' GROUP BY e.name, s.store_name, p.product_name;","thinking":"","ambiguous":"False"}
{"id":4178948313,"db_name":"retail","question":"获取所有销售订单中每个门店的总销售数量和总销售金额。","gt_sql":"SELECT st.store_name, SUM(od.quantity) AS total_quantity, SUM(od.quantity * od.unit_price) AS total_sales FROM orderdetails od JOIN salesorders so ON od.order_id = so.order_id JOIN stores st ON so.store_id = st.store_id GROUP BY st.store_name;","pred_sql":"SELECT s.store_name, SUM(od.quantity) AS total_sales_quantity, SUM(od.quantity * od.unit_price) AS total_sales_amount FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN stores s ON so.store_id = s.store_id GROUP BY s.store_name;","thinking":"","ambiguous":"False"}
{"id":635779591,"db_name":"retail","question":"在2023年5月5日，哪些门店的员工销售了佳能EOS R6相机，并且这些订单的总金额是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, SUM(od.quantity * od.unit_price) AS total_amount FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id WHERE p.product_name = '佳能EOS R6' AND so.order_date = '2023-05-05' GROUP BY s.store_name, e.name;","pred_sql":"SELECT s.store_name, e.name AS employee_name, SUM(so.total_amount) AS total_sales_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-05' AND p.product_name = '佳能EOS R6' GROUP BY s.store_name, e.name;","thinking":"","ambiguous":"False"}
{"id":2326522926,"db_name":"retail","question":"查询商品表中售价大于15000的商品信息。","gt_sql":"SELECT * FROM products WHERE sale_price \u003e 15000;","pred_sql":"SELECT product_id, product_name, category_name, purchase_price, sale_price, remaining_quantity, supplier_name, description FROM products WHERE sale_price \u003e 15000;","thinking":"","ambiguous":"False"}
{"id":845825777,"db_name":"retail","question":"在2023年5月8日，哪些门店的员工销售了索尼WH-1000XM4商品，并且该商品的销售数量超过了1个？","gt_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-08' AND p.product_name = '索尼WH-1000XM4' AND ss.sales_quantity \u003e 1;","pred_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-08' AND p.product_name = '索尼WH-1000XM4' AND ss.sales_quantity \u003e 1;","thinking":"","ambiguous":"False"}
{"id":1519890808,"db_name":"retail","question":"在2023年5月1日，哪些门店的销售顾问销售了超过1000元的商品，并且这些商品的供应商是'戴森官方旗舰店'？请列出门店名称、员工姓名、商品名称和销售金额。","gt_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, ss.sales_amount FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-01' AND ss.sales_amount \u003e 1000 AND p.supplier_name = '戴森官方旗舰店';","pred_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, od.quantity * od.unit_price AS sales_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-01' AND p.supplier_name = '戴森官方旗舰店' AND od.quantity * od.unit_price \u003e 1000;","thinking":"","ambiguous":"False"}
{"id":624803127,"db_name":"retail","question":"查找特定商品的所有销售记录及其销售数量。","gt_sql":"SELECT od.order_id, od.quantity FROM orderdetails od WHERE od.product_id = 'fba9543e-90b3-4a3d-b29e-bcf4518c4e3d';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":4067103855,"db_name":"retail","question":"获取每个门店的总销售金额和对应的门店名称。","gt_sql":"SELECT s.store_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id GROUP BY s.store_name;","pred_sql":"SELECT s.store_name, SUM(so.total_amount) AS total_sales_amount FROM stores s JOIN salesorders so ON s.store_id = so.store_id GROUP BY s.store_name;","thinking":"","ambiguous":"False"}
{"id":2670659765,"db_name":"retail","question":"获取在特定日期内的销售订单及其商品数量。","gt_sql":"SELECT so.order_id, SUM(od.quantity) AS total_quantity FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id WHERE so.order_date = '2023-05-06' GROUP BY so.order_id;","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":4067388605,"db_name":"retail","question":"查询每个订单的详细信息，包括订单日期和员工名称。","gt_sql":"SELECT so.order_id, so.order_date, e.name FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id;","pred_sql":"SELECT s.order_id, s.order_date, e.name AS employee_name FROM salesorders s JOIN employees e ON s.employee_id = e.employee_id;","thinking":"","ambiguous":"False"}
{"id":383590974,"db_name":"retail","question":"列出所有商品的名称和其供应商名称。","gt_sql":"SELECT product_name, supplier_name FROM products;","pred_sql":"SELECT product_name, supplier_name FROM products;","thinking":"","ambiguous":"False"}
{"id":4056403376,"db_name":"retail","question":"列出所有商品的售价及其供应商名称。","gt_sql":"SELECT p.sale_price, p.supplier_name FROM products p;","pred_sql":"SELECT product_name, sale_price, supplier_name FROM products;","thinking":"","ambiguous":"False"}
{"id":3670992366,"db_name":"retail","question":"查询所有订单详情，包括对应商品的名称和售价。","gt_sql":"SELECT od.order_detail_id, p.product_name, od.unit_price FROM orderdetails od JOIN products p ON od.product_id = p.product_id;","pred_sql":"SELECT od.order_detail_id, p.product_name, od.unit_price FROM orderdetails od JOIN products p ON od.product_id = p.product_id;","thinking":"","ambiguous":"False"}
{"id":2335581270,"db_name":"retail","question":"列出2023年5月销售金额大于3000的门店及其联系电话。","gt_sql":"SELECT s.store_name, s.phone FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.total_amount \u003e 3000 AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31';","pred_sql":"SELECT s.store_name, s.phone FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE EXTRACT(YEAR FROM so.order_date) = 2023 AND EXTRACT(MONTH FROM so.order_date) = 5 GROUP BY s.store_id, s.store_name, s.phone HAVING SUM(so.total_amount) \u003e 3000;","thinking":"","ambiguous":"False"}
{"id":2535524828,"db_name":"retail","question":"找出所有门店的名称及其对应的店长姓名。","gt_sql":"SELECT store_name, manager_name FROM stores;","pred_sql":"SELECT s.store_name, s.manager_name FROM stores s;","thinking":"","ambiguous":"False"}
{"id":120259515,"db_name":"retail","question":"查询所有员工的姓名及其所属门店的联系电话。","gt_sql":"SELECT e.name, st.phone FROM employees e JOIN stores st ON e.store_id = st.store_id;","pred_sql":"SELECT e.name, s.phone FROM employees e JOIN stores s ON e.store_id = s.store_id;","thinking":"","ambiguous":"False"}
{"id":1670319692,"db_name":"retail","question":"在2023年5月9日，哪些员工在创新路专卖店销售了iPad Air，并且他们的销售数量和利润是多少？","gt_sql":"SELECT e.name AS employee_name, ss.sales_quantity, ss.profit FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-09' AND s.store_name = '创新路专卖店' AND p.product_name = 'iPad Air';","pred_sql":"SELECT e.name, ss.sales_quantity, ss.profit FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-09' AND s.store_name = '创新路专卖店' AND p.product_name = 'iPad Air';","thinking":"","ambiguous":"False"}
{"id":4086419825,"db_name":"retail","question":"在2023年5月7日，哪些员工在'未来城店'处理了订单，并且这些订单的总金额超过了15000元？","gt_sql":"SELECT e.name, e.position, s.store_name, so.total_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-07' AND s.store_name = '未来城店' AND so.total_amount \u003e 15000;","pred_sql":"SELECT e.name, e.position, s.store_name, SUM(so.total_amount) AS total_order_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN stores s ON e.store_id = s.store_id WHERE so.order_date = '2023-05-07' AND s.store_name = '未来城店' GROUP BY e.employee_id, e.name, e.position, s.store_name HAVING SUM(so.total_amount) \u003e 15000;","thinking":"","ambiguous":"False"}
{"id":3256730396,"db_name":"retail","question":"查询所有商品的售价和进货价差异。","gt_sql":"SELECT pd.product_name, pd.sale_price - pd.purchase_price AS price_difference\nFROM products pd;","pred_sql":"SELECT product_name, (sale_price - purchase_price) AS price_difference FROM products;","thinking":"","ambiguous":"False"}
{"id":2107889479,"db_name":"retail","question":"在2023年5月期间，哪些门店的销售总额超过了10000元，并且这些门店的店长姓名是什么？","gt_sql":"SELECT s.store_name, s.manager_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_id HAVING SUM(so.total_amount) \u003e 10000;","pred_sql":"SELECT s.store_name, s.manager_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, s.manager_name HAVING SUM(so.total_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":595252998,"db_name":"retail","question":"查找每个门店的利润和销售数量。","gt_sql":"SELECT st.store_name, SUM(ss.profit) AS total_profit, SUM(ss.sales_quantity) AS total_sales_quantity FROM salesstatistics ss JOIN stores st ON ss.store_id = st.store_id GROUP BY st.store_name;","pred_sql":"SELECT s.store_name, SUM(ss.profit) AS total_profit, SUM(ss.sales_quantity) AS total_sales_quantity FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id GROUP BY s.store_name;","thinking":"","ambiguous":"False"}
{"id":2271451016,"db_name":"retail","question":"查找门店ID为'64921abb-1d54-4e03-a15e-ea42f058f31c'的所有销售订单。","gt_sql":"SELECT * FROM salesorders WHERE store_id = '64921abb-1d54-4e03-a15e-ea42f058f31c';","pred_sql":"SELECT order_id, store_id, employee_id, order_date, total_amount FROM salesorders WHERE store_id = '64921abb-1d54-4e03-a15e-ea42f058f31c';","thinking":"","ambiguous":"False"}
{"id":3431877623,"db_name":"retail","question":"在2023年5月6日，哪些门店的员工销售了小米电视4A，并且这些订单的总金额超过了10000元？","gt_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON e.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-06' AND p.product_name = '小米电视4A' AND so.total_amount \u003e 10000;","pred_sql":"SELECT s.store_name, e.name AS employee_name, p.product_name, SUM(so.total_amount) AS total_sales_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-06' AND p.product_name = '小米电视4A' GROUP BY s.store_name, e.name, p.product_name HAVING SUM(so.total_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":1818716672,"db_name":"retail","question":"在2023年5月，哪些门店的员工销售了Nintendo Switch，并且这些销售的利润超过了1000元？","gt_sql":"SELECT DISTINCT s.store_name FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND ss.date \u003e= '2023-05-01' AND ss.date \u003c '2023-06-01' AND ss.profit \u003e 1000;","pred_sql":"SELECT DISTINCT s.store_name FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND ss.date BETWEEN '2023-05-01' AND '2023-05-31' AND ss.profit \u003e 1000;","thinking":"","ambiguous":"False"}
{"id":3062953566,"db_name":"retail","question":"在2023年5月9日，哪些门店的员工销售了索尼WH-1000XM4商品，并且这些商品的销售数量和总金额是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, od.quantity, od.unit_price * od.quantity AS total_amount FROM orderdetails od JOIN salesorders so ON od.order_id = so.order_id JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON e.store_id = s.store_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '索尼WH-1000XM4' AND so.order_date = '2023-05-09';","pred_sql":"SELECT s.store_name, e.name AS employee_name, ss.sales_quantity, ss.sales_amount FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-09' AND p.product_name = '索尼WH-1000XM4';","thinking":"","ambiguous":"False"}
{"id":3908942610,"db_name":"retail","question":"获取特定门店的所有销售订单信息。","gt_sql":"SELECT so.order_id, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE s.store_name = '科技中心店';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":208218356,"db_name":"retail","question":"在2023年5月3日，哪个门店的销售总额最高，并且该门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-03' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-03' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":4174482566,"db_name":"retail","question":"在2023年5月3日，哪个门店的销售数量最多，并且该门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-03' ORDER BY ss.sales_quantity DESC LIMIT 1;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(ss.sales_quantity) AS total_sales FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-03' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1762340720,"db_name":"retail","question":"在2023年5月1日，哪个门店的员工销售了iPad Air，并且该订单的总金额是多少？","gt_sql":"SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'iPad Air' AND so.order_date = '2023-05-01';","pred_sql":"SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-01' AND p.product_name = 'iPad Air';","thinking":"","ambiguous":"False"}
{"id":1734342716,"db_name":"retail","question":"统计各个门店的销售总额。","gt_sql":"SELECT store_id, SUM(total_amount) AS total_sales FROM salesorders GROUP BY store_id;","pred_sql":"SELECT s.store_id, SUM(so.total_amount) AS total_sales FROM stores s JOIN salesorders so ON s.store_id = so.store_id GROUP BY s.store_id;","thinking":"","ambiguous":"False"}
{"id":3698654694,"db_name":"retail","question":"获取所有员工的职位和他们处理的订单数量。","gt_sql":"SELECT e.position, COUNT(so.order_id) AS order_count FROM employees e LEFT JOIN salesorders so ON e.employee_id = so.employee_id GROUP BY e.position;","pred_sql":"SELECT e.position, COUNT(so.order_id) AS order_count FROM employees e LEFT JOIN salesorders so ON e.employee_id = so.employee_id GROUP BY e.position;","thinking":"","ambiguous":"False"}
{"id":3114650274,"db_name":"retail","question":"查询特定门店的所有销售统计记录。","gt_sql":"SELECT * FROM salesstatistics WHERE store_id = 'eecdb2bd-fa18-4c73-84a2-35e3dc390ad5';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":2085424302,"db_name":"retail","question":"在2023年5月期间，哪些门店的总销售金额超过了10000元，并且这些门店的店长姓名是什么？","gt_sql":"SELECT s.store_name, s.manager_name, SUM(o.total_amount) AS total_sales FROM stores s JOIN salesorders o ON s.store_id = o.store_id WHERE o.order_date \u003e= '2023-05-01' AND o.order_date \u003c= '2023-05-31' GROUP BY s.store_id HAVING SUM(o.total_amount) \u003e 10000;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, s.manager_name HAVING SUM(so.total_amount) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":662177839,"db_name":"retail","question":"在2023年5月2日，哪些门店的员工销售了超过10000元的商品，并且这些商品的供应商是'华为官方旗舰店'？","gt_sql":"SELECT DISTINCT s.store_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-02' AND so.total_amount \u003e 10000 AND p.supplier_name = '华为官方旗舰店';","pred_sql":"SELECT DISTINCT s.store_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-02' AND p.supplier_name = '华为官方旗舰店' GROUP BY s.store_name, so.order_id HAVING SUM(od.quantity * od.unit_price) \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":3976972213,"db_name":"retail","question":"列出在指定日期内销售数量最多的商品及其销售订单信息。","gt_sql":"SELECT pd.product_name, SUM(od.quantity) AS total_quantity, so.order_id\nFROM orderdetails od\nJOIN salesorders so ON od.order_id = so.order_id\nJOIN products pd ON od.product_id = pd.product_id\nWHERE so.order_date = '2023-05-02'\nGROUP BY pd.product_name, so.order_id\nORDER BY total_quantity DESC\nLIMIT 1;","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":783788015,"db_name":"retail","question":"查询特定员工的所有订单信息。","gt_sql":"SELECT so.order_id, so.order_date, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id WHERE e.employee_id = '8282299e-10e9-48e4-b28e-a57fbd96cd4d';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":2306528451,"db_name":"retail","question":"在2023年5月4日，哪个门店的销售订单总金额最高，并且该门店的店长是谁？","gt_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-04' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;","pred_sql":"SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS sales_total FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-04' GROUP BY s.store_name, s.manager_name ORDER BY sales_total DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1834111948,"db_name":"retail","question":"在2023年5月1日，哪些门店的员工销售了华为Mate 40 Pro，并且这些员工的职位是什么？","gt_sql":"SELECT s.store_name, e.name AS employee_name, e.position FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '华为Mate 40 Pro' AND ss.date = '2023-05-01';","pred_sql":"SELECT s.store_name, e.name, e.position FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-01' AND p.product_name = '华为Mate 40 Pro';","thinking":"","ambiguous":"False"}
{"id":1718600359,"db_name":"retail","question":"在2023年5月6日，哪些员工在销售统计表中记录的销售金额超过了10000元，并且他们所在的门店的店长是谁？","gt_sql":"SELECT e.name AS employee_name, s.manager_name AS store_manager_name FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN stores s ON e.store_id = s.store_id WHERE ss.date = '2023-05-06' AND ss.sales_amount \u003e 10000;","pred_sql":"SELECT e.name AS employee_name, s.manager_name FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON e.store_id = s.store_id WHERE ss.date = '2023-05-06' AND ss.sales_amount \u003e 10000;","thinking":"","ambiguous":"False"}
{"id":2900121322,"db_name":"retail","question":"在2023年5月期间，哪些门店的员工销售了戴尔灵越15笔记本电脑，并且这些订单的总金额超过了5000元？请列出门店名称、员工姓名和订单总金额。","gt_sql":"SELECT s.store_name, e.name AS employee_name, SUM(od.quantity * od.unit_price) AS total_amount FROM stores s JOIN employees e ON s.store_id = e.store_id JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '戴尔灵越15' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, e.name HAVING SUM(od.quantity * od.unit_price) \u003e 5000;","pred_sql":"SELECT s.store_name, e.name, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '戴尔灵越15笔记本电脑' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31' AND so.total_amount \u003e 5000;","thinking":"","ambiguous":"False"}
{"id":1605466649,"db_name":"retail","question":"获取每个商品的剩余数量和售价。","gt_sql":"SELECT product_id, remaining_quantity, sale_price FROM products;","pred_sql":"SELECT product_id, remaining_quantity, sale_price FROM products;","thinking":"","ambiguous":"False"}
{"id":330758085,"db_name":"retail","question":"统计每个门店的员工数量。","gt_sql":"SELECT s.store_name, COUNT(e.employee_id) AS employee_count FROM stores s LEFT JOIN employees e ON s.store_id = e.store_id GROUP BY s.store_name;","pred_sql":"SELECT s.store_name, COUNT(e.employee_id) AS employee_count FROM stores s LEFT JOIN employees e ON s.store_id = e.store_id GROUP BY s.store_name;","thinking":"","ambiguous":"False"}
{"id":1887568974,"db_name":"retail","question":"在2023年5月5日，哪些员工在科技中心店销售了戴森V11商品，并且该商品的销售数量超过1个？","gt_sql":"SELECT e.name AS employee_name, e.position, od.quantity FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-05' AND s.store_name = '科技中心店' AND p.product_name = '戴森V11' AND od.quantity \u003e 1;","pred_sql":"SELECT e.name, e.position, ss.sales_quantity FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-05' AND s.store_name = '科技中心店' AND p.product_name = '戴森V11' AND ss.sales_quantity \u003e 1;","thinking":"","ambiguous":"False"}
{"id":1544829110,"db_name":"retail","question":"查找在数码广场店销售的所有订单及其总金额。","gt_sql":"SELECT so.order_id, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE s.store_name = '数码广场店';","pred_sql":"SELECT s.order_id, s.total_amount FROM salesorders s JOIN stores st ON s.store_id = st.store_id WHERE st.store_name = '数码广场店';","thinking":"","ambiguous":"False"}
{"id":1389319035,"db_name":"risk_control","question":"找出所有风险等级为'高'且影响程度评分大于8的风险评估，并显示相关的风险事件信息。","gt_sql":"SELECT a.assessment_id, a.risk_level, a.impact_score, e.event_type, e.event_description FROM risk_assessments a JOIN risk_events e ON a.event_id = e.event_id WHERE a.risk_level = '高' AND a.impact_score \u003e 8","pred_sql":"SELECT ra.assessment_id, ra.risk_level, ra.impact_score, re.event_type, re.event_description FROM risk_assessments ra JOIN risk_events re ON ra.event_id = re.event_id WHERE ra.risk_level = '高' AND ra.impact_score \u003e 8;","thinking":"","ambiguous":"False"}
{"id":955757206,"db_name":"risk_control","question":"查找所有与合规风险相关的风险事件。","gt_sql":"SELECT event_id FROM risk_events WHERE event_type = '合规风险';","pred_sql":"SELECT event_id FROM risk_events WHERE event_type = '合规风险';","thinking":"","ambiguous":"False"}
{"id":1687223871,"db_name":"risk_control","question":"查询所有触发了欺诈嫌疑预警的风险事件及其审核状态。","gt_sql":"SELECT re.event_description, a.status FROM alerts a JOIN risk_events re ON a.event_id = re.event_id WHERE a.alert_type = '欺诈嫌疑';","pred_sql":"SELECT re.event_id, re.event_description, re.event_type, re.severity, al.status AS alert_status, al.alert_level, al.alert_content, au.audit_result, au.audit_comments FROM risk_events re JOIN alerts al ON re.event_id = al.event_id LEFT JOIN audit_logs au ON al.alert_id = au.alert_id WHERE al.alert_type = 'Fraud Suspicion';","thinking":"","ambiguous":"False"}
{"id":948809000,"db_name":"risk_control","question":"找出所有已批准的风险报告中，涉及到的风险事件的平均严重程度，并按报告类型分组。","gt_sql":"SELECT r.report_type, AVG(e.severity) as avg_severity FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id WHERE r.approval_status = '已批准' GROUP BY r.report_type ORDER BY avg_severity DESC;","pred_sql":"SELECT r.report_type, AVG(e.severity) AS average_severity FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id WHERE r.approval_status = 'approved' GROUP BY r.report_type;","thinking":"","ambiguous":"False"}
{"id":2131857844,"db_name":"risk_control","question":"列出所有客户的风险等级分布情况，包括每个风险等级的客户数量和平均信用评分。","gt_sql":"SELECT risk_level, COUNT(*) AS customer_count, AVG(credit_score) AS avg_credit_score FROM customers GROUP BY risk_level ORDER BY customer_count DESC","pred_sql":"SELECT risk_level, COUNT(*) AS customer_count, AVG(credit_score) AS average_credit_score FROM customers GROUP BY risk_level ORDER BY risk_level;","thinking":"","ambiguous":"False"}
{"id":1810509227,"db_name":"risk_control","question":"查询所有风险指标及其监控记录，要求监控日期在2023年10月。","gt_sql":"SELECT ri.indicator_id, ri.indicator_name, ml.monitoring_date, ml.actual_value FROM risk_indicators ri JOIN risk_monitoring_logs ml ON ri.indicator_id = ml.indicator_id WHERE ml.monitoring_date \u003e= '2023-10-01' AND ml.monitoring_date \u003c '2023-11-01';","pred_sql":"SELECT ri.indicator_id, ri.indicator_name, rml.monitoring_date, rml.actual_value FROM risk_indicators ri LEFT JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.monitoring_date \u003e= '2023-10-01' AND rml.monitoring_date \u003c '2023-11-01';","thinking":"","ambiguous":"False"}
{"id":2704266530,"db_name":"risk_control","question":"获取所有已批准的风险报告及其作者和相关风险事件ID","gt_sql":"SELECT rr.report_id, rr.report_date, rr.author, rr.event_id FROM risk_reports rr WHERE rr.approval_status = '已批准';","pred_sql":"SELECT report_id, report_date, author, event_id FROM risk_reports WHERE approval_status = 'approved';","thinking":"","ambiguous":"False"}
{"id":3816194798,"db_name":"risk_control","question":"统计每个风险等级的客户在不同交易类型和金额范围下的交易次数和平均风险评分","gt_sql":"SELECT c.risk_level, t.transaction_type, CASE WHEN t.amount \u003c= 1000 THEN '低额' WHEN t.amount \u003c= 10000 THEN '中额' ELSE '高额' END as amount_range, COUNT(*) as transaction_count, AVG(t.risk_score) as avg_risk_score FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.risk_level, t.transaction_type, CASE WHEN t.amount \u003c= 1000 THEN '低额' WHEN t.amount \u003c= 10000 THEN '中额' ELSE '高额' END ORDER BY c.risk_level, t.transaction_type, amount_range","pred_sql":"SELECT c.risk_level, t.transaction_type, CASE WHEN t.amount \u003c 1000 THEN '0-999' WHEN t.amount BETWEEN 1000 AND 5000 THEN '1000-5000' WHEN t.amount \u003e 5000 THEN '5000+' END AS amount_range, COUNT(*) AS transaction_count, AVG(t.risk_score) AS avg_risk_score FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.risk_level, t.transaction_type, amount_range ORDER BY c.risk_level, t.transaction_type, amount_range;","thinking":"","ambiguous":"False"}
{"id":3476903471,"db_name":"risk_control","question":"查询所有涉及特定风险事件的审核记录及审核结果。","gt_sql":"SELECT a.audit_id, a.audit_result, al.alert_content FROM audit_logs a JOIN alerts al ON a.alert_id = al.alert_id WHERE a.event_id = 'RE4692';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":451357687,"db_name":"risk_control","question":"查找所有由'周婷'撰写的风险报告，以及与这些报告相关的风险事件和评估结果。","gt_sql":"SELECT r.report_id, r.report_type, e.event_description, a.risk_level FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id LEFT JOIN risk_assessments a ON e.event_id = a.event_id WHERE r.author = '周婷';","pred_sql":"SELECT r.report_id, r.report_type, e.event_description, a.risk_level FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id LEFT JOIN risk_assessments a ON e.event_id = a.event_id WHERE r.author = '周婷';","thinking":"","ambiguous":"False"}
{"id":880512967,"db_name":"risk_control","question":"查询所有在2023年之后创建的风险报告，并列出其作者及审批状态。","gt_sql":"SELECT rr.report_id, rr.report_date, rr.author, rr.approval_status FROM risk_reports rr WHERE rr.report_date \u003e '2023-01-01';","pred_sql":"SELECT report_id, report_date, author, approval_status FROM risk_reports WHERE report_date \u003e= '2023-01-01';","thinking":"","ambiguous":"False"}
{"id":4205370122,"db_name":"risk_control","question":"查询所有包含'系统'关键词的风险事件描述，以及相关的风险评估结果和缓解计划。","gt_sql":"SELECT e.event_id, e.event_description, a.risk_level, a.impact_score, a.probability_score, a.mitigation_plan FROM risk_events e LEFT JOIN risk_assessments a ON e.event_id = a.event_id WHERE e.event_description LIKE '%系统%' ORDER BY a.risk_level DESC, e.occurrence_time DESC;","pred_sql":"SELECT re.event_id, re.event_description, ra.risk_level, ra.impact_score, ra.probability_score, ra.mitigation_plan FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE re.event_description LIKE '%系统%';","thinking":"","ambiguous":"False"}
{"id":2721513399,"db_name":"risk_control","question":"列出所有风险指标的当前值、30天前的值和变化百分比","gt_sql":"WITH current_values AS (SELECT indicator_id, actual_value as current_value FROM risk_monitoring_logs rml WHERE monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs WHERE indicator_id = rml.indicator_id)), past_values AS (SELECT indicator_id, actual_value as past_value FROM risk_monitoring_logs rml WHERE monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs WHERE indicator_id = rml.indicator_id AND monitoring_date \u003c= date('now') - INTERVAL '30 days')) SELECT ri.indicator_id, ri.indicator_name, cv.current_value, pv.past_value, (cv.current_value - pv.past_value) / pv.past_value * 100 as change_percentage FROM risk_indicators ri LEFT JOIN current_values cv ON ri.indicator_id = cv.indicator_id LEFT JOIN past_values pv ON ri.indicator_id = pv.indicator_id","pred_sql":"SELECT ri.indicator_id, ri.indicator_name, rml_current.actual_value AS current_value, rml_30days_ago.actual_value AS value_30days_ago, CASE WHEN rml_30days_ago.actual_value = 0 THEN NULL ELSE ((rml_current.actual_value - rml_30days_ago.actual_value) / rml_30days_ago.actual_value) * 100 END AS change_percentage FROM risk_indicators ri LEFT JOIN risk_monitoring_logs rml_current ON ri.indicator_id = rml_current.indicator_id AND rml_current.monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs WHERE indicator_id = ri.indicator_id) LEFT JOIN risk_monitoring_logs rml_30days_ago ON ri.indicator_id = rml_30days_ago.indicator_id AND rml_30days_ago.monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs WHERE indicator_id = ri.indicator_id AND monitoring_date \u003c= (CURRENT_TIMESTAMP - INTERVAL '30 days')) WHERE rml_current.actual_value IS NOT NULL OR rml_30days_ago.actual_value IS NOT NULL;","thinking":"","ambiguous":"False"}
{"id":1697295436,"db_name":"risk_control","question":"哪些风险事件的评估结果为高风险，并且这些事件的缓解计划是由曾强评估的？","gt_sql":"SELECT re.event_id, re.event_description, ra.risk_level, ra.mitigation_plan FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE ra.risk_level = '高' AND ra.assessor = '曾强';","pred_sql":"SELECT re.event_id, re.event_description, ra.risk_level, ra.mitigation_plan FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE ra.risk_level = 'high' AND ra.assessor = '曾强';","thinking":"","ambiguous":"False"}
{"id":2228217319,"db_name":"risk_control","question":"有哪些客户的交易类型为投资，且其风险评分大于60？","gt_sql":"SELECT DISTINCT c.customer_name FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_type = '投资' AND t.risk_score \u003e 60;","pred_sql":"SELECT c.customer_name FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_type = '投资' AND t.risk_score \u003e 60;","thinking":"","ambiguous":"False"}
{"id":1939667217,"db_name":"risk_control","question":"查询每个风险事件的创建时间和当前状态","gt_sql":"SELECT re.event_id, re.created_at, re.status FROM risk_events re;","pred_sql":"SELECT event_id, occurrence_time AS creation_time, status FROM risk_events;","thinking":"","ambiguous":"False"}
{"id":2175309220,"db_name":"risk_control","question":"找出所有信用评分低于600的客户及其对应的交易风险评分。","gt_sql":"SELECT c.customer_name, t.risk_score FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.credit_score \u003c 600;","pred_sql":"SELECT c.customer_name, t.risk_score FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.credit_score \u003c 600;","thinking":"","ambiguous":"False"}
{"id":1016775966,"db_name":"risk_control","question":"获取2023年12月所有成功交易的金额和客户名称。","gt_sql":"SELECT t.amount, c.customer_name FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.transaction_date \u003e= '2023-12-01' AND t.transaction_date \u003c '2024-01-01' AND t.status = '成功';","pred_sql":"SELECT t.amount, c.customer_name FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.status = 'success' AND t.transaction_date \u003e= '2023-12-01' AND t.transaction_date \u003c '2024-01-01';","thinking":"","ambiguous":"False"}
{"id":629791557,"db_name":"risk_control","question":"获取所有预警的类型和内容。","gt_sql":"SELECT alert_type, alert_content FROM alerts;","pred_sql":"SELECT alert_type, alert_content FROM alerts;","thinking":"","ambiguous":"False"}
{"id":4191869630,"db_name":"risk_control","question":"列出所有风险报告和其对应的审批人的信息。","gt_sql":"SELECT report_id, report_type, approved_by FROM risk_reports;","pred_sql":"SELECT report_id, report_type, approved_by FROM risk_reports;","thinking":"","ambiguous":"False"}
{"id":3240782233,"db_name":"risk_control","question":"统计每种交易类型的成功率和平均风险评分。","gt_sql":"SELECT transaction_type, COUNT(*) as total_count, SUM(CASE WHEN status = '成功' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) as success_rate, AVG(risk_score) as avg_risk_score FROM transactions GROUP BY transaction_type ORDER BY avg_risk_score DESC;","pred_sql":"SELECT transaction_type, COUNT(*) AS total_count, ROUND(100.0 * SUM(CASE WHEN status = 'success' THEN 1 ELSE 0 END) / COUNT(*), 2) AS success_rate, ROUND(AVG(risk_score), 2) AS avg_risk_score FROM transactions GROUP BY transaction_type;","thinking":"","ambiguous":"False"}
{"id":1390189932,"db_name":"risk_control","question":"获取所有触发的预警及其对应的规则描述。","gt_sql":"SELECT a.alert_id, a.alert_content, rc.rule_description FROM alerts a JOIN rule_configurations rc ON a.rule_id = rc.rule_id;","pred_sql":"SELECT a.alert_id, a.alert_content, r.rule_description FROM alerts a JOIN rule_configurations r ON a.rule_id = r.rule_id;","thinking":"","ambiguous":"False"}
{"id":2842460105,"db_name":"risk_control","question":"查找所有客户及其最近一次交易的状态。","gt_sql":"SELECT c.customer_id, c.customer_name, t.status FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id ORDER BY t.transaction_date DESC LIMIT 1;","pred_sql":"SELECT c.customer_id, c.customer_name, t.status FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date = (SELECT MAX(transaction_date) FROM transactions WHERE customer_id = c.customer_id) OR t.transaction_id IS NULL;","thinking":"","ambiguous":"False"}
{"id":3963285376,"db_name":"risk_control","question":"统计每种风险指标的平均实际值、标准差和变异系数。","gt_sql":"SELECT i.indicator_id, i.indicator_name, AVG(l.actual_value) as avg_value, STDDEV(l.actual_value) as std_dev, CASE WHEN AVG(l.actual_value) != 0 THEN STDDEV(l.actual_value) / AVG(l.actual_value) ELSE NULL END as coefficient_of_variation FROM risk_indicators i JOIN risk_monitoring_logs l ON i.indicator_id = l.indicator_id GROUP BY i.indicator_id, i.indicator_name ORDER BY coefficient_of_variation DESC NULLS LAST;","pred_sql":"SELECT ri.indicator_id, ri.indicator_name, AVG(rm.actual_value) AS average_value, STDDEV(rm.actual_value) AS standard_deviation, (STDDEV(rm.actual_value)/NULLIF(AVG(rm.actual_value),0)) AS coefficient_of_variation FROM risk_indicators ri JOIN risk_monitoring_logs rm ON ri.indicator_id = rm.indicator_id GROUP BY ri.indicator_id, ri.indicator_name;","thinking":"","ambiguous":"False"}
{"id":2546181421,"db_name":"risk_control","question":"查询所有在过去一年内既有高风险交易又有未通过审核的大额交易（超过50万）的客户","gt_sql":"SELECT DISTINCT c.customer_id, c.customer_name FROM customers c JOIN transactions t1 ON c.customer_id = t1.customer_id JOIN transactions t2 ON c.customer_id = t2.customer_id JOIN audit_logs a ON t2.transaction_id = a.transaction_id WHERE t1.risk_score \u003e 80 AND t2.amount \u003e 500000 AND a.audit_result = '拒绝' AND t1.transaction_date \u003e= date('now') - INTERVAL '1 year' AND t2.transaction_date \u003e= date('now') - INTERVAL '1 year'","pred_sql":"SELECT DISTINCT c.customer_id, c.customer_name FROM customers c JOIN transactions t ON c.customer_id = t.customer_id JOIN audit_logs a ON t.transaction_id = a.transaction_id WHERE t.risk_score \u003e= 70 AND t.amount \u003e 500000 AND a.audit_result = 'FAILED' AND t.transaction_date \u003e= CURRENT_DATE - INTERVAL '1 year';","thinking":"","ambiguous":"False"}
{"id":2755620243,"db_name":"risk_control","question":"列出所有风险评估中，缓解计划为空的记录，并计算其影响评分的平均值。","gt_sql":"SELECT AVG(impact_score) AS average_impact_score FROM risk_assessments WHERE mitigation_plan IS NULL;","pred_sql":"SELECT AVG(impact_score) AS average_impact_score FROM risk_assessments WHERE mitigation_plan IS NULL OR mitigation_plan = '';","thinking":"","ambiguous":"False"}
{"id":3751427783,"db_name":"risk_control","question":"查询所有预警信息的内容及其状态。","gt_sql":"SELECT alert_id, alert_content, status FROM alerts;","pred_sql":"SELECT alert_id, alert_content, status FROM alerts;","thinking":"","ambiguous":"False"}
{"id":2897506811,"db_name":"risk_control","question":"计算每个客户的风险指数，风险指数定义为：过去90天内高风险交易次数 * 2 + 未处理预警数量 * 3 + 信用评分的倒数 * 1000，并列出前10名高风险客户。","gt_sql":"WITH customer_risks AS (SELECT c.customer_id, c.customer_name, COUNT(CASE WHEN t.risk_score \u003e 80 AND t.transaction_date \u003e= date('now') - INTERVAL '90 days' THEN 1 END) as high_risk_transactions, COUNT(CASE WHEN a.status = '未处理' THEN 1 END) as unresolved_alerts, c.credit_score FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id LEFT JOIN alerts a ON t.event_id = a.event_id GROUP BY c.customer_id, c.customer_name) SELECT customer_name, (high_risk_transactions * 2 + unresolved_alerts * 3 + 1000.0 / NULLIF(credit_score, 0)) as risk_index FROM customer_risks ORDER BY risk_index DESC LIMIT 10;","pred_sql":"SELECT c.customer_name, (COUNT(CASE WHEN t.risk_score \u003e 75 AND t.transaction_date \u003e= CURRENT_DATE - INTERVAL '90 days' THEN 1 END) * 2 + COUNT(CASE WHEN a.status = 'UNPROCESSED' THEN 1 END) * 3 + (1.0 / NULLIF(c.credit_score, 0)) * 1000) AS risk_index FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id LEFT JOIN alerts a ON c.customer_id = a.assigned_to GROUP BY c.customer_id, c.customer_name, c.credit_score ORDER BY risk_index DESC LIMIT 10;","thinking":"","ambiguous":"False"}
{"id":1765860698,"db_name":"risk_control","question":"统计每种风险事件类型在2023年的发生次数，并按照次数降序排列，同时显示每种类型的平均严重程度。","gt_sql":"SELECT event_type, COUNT(*) as occurrence_count, AVG(severity) as avg_severity FROM risk_events WHERE EXTRACT(YEAR FROM occurrence_time) = 2023 GROUP BY event_type ORDER BY occurrence_count DESC, avg_severity DESC","pred_sql":"SELECT event_type, COUNT(*) AS occurrence_count, AVG(severity) AS average_severity FROM risk_events WHERE occurrence_time \u003e= '2023-01-01' AND occurrence_time \u003c '2024-01-01' GROUP BY event_type ORDER BY occurrence_count DESC;","thinking":"","ambiguous":"False"}
{"id":2186954842,"db_name":"risk_control","question":"找出所有风险报告内容中包含\"合规风险\"的报告及其相关的风险事件","gt_sql":"SELECT rr.*, re.event_type, re.event_description FROM risk_reports rr LEFT JOIN risk_events re ON rr.event_id = re.event_id WHERE rr.report_content LIKE '%合规风险%'","pred_sql":"SELECT r.report_id, r.report_type, r.report_date, r.report_content, r.author, r.approval_status, e.event_id, e.event_type, e.event_description FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id WHERE r.report_content LIKE '%合规风险%';","thinking":"","ambiguous":"False"}
{"id":1001861352,"db_name":"risk_control","question":"获取每个风险指标的更新频率及其数据来源","gt_sql":"SELECT ri.indicator_id, ri.update_frequency, ri.data_source FROM risk_indicators ri;","pred_sql":"SELECT indicator_id, update_frequency, data_source FROM risk_indicators;","thinking":"","ambiguous":"False"}
{"id":3688441488,"db_name":"risk_control","question":"查询所有未解决的风险事件，以及与之相关的最新风险报告","gt_sql":"SELECT re.event_id, re.event_type, re.status, rr.report_content, rr.report_date FROM risk_events re LEFT JOIN risk_reports rr ON re.event_id = rr.event_id WHERE re.status != '已解决' AND rr.report_date = (SELECT MAX(report_date) FROM risk_reports WHERE event_id = re.event_id)","pred_sql":"SELECT re.event_id, re.event_type, re.status, rr.report_content, rr.report_date FROM risk_events re LEFT JOIN (SELECT report_id, event_id, report_content, report_date, ROW_NUMBER() OVER (PARTITION BY event_id ORDER BY report_date DESC) AS rn FROM risk_reports) rr ON re.event_id = rr.event_id AND rr.rn = 1 WHERE re.status != 'Resolved';","thinking":"","ambiguous":"False"}
{"id":2337622346,"db_name":"risk_control","question":"统计每种风险控制规则类型的平均触发次数和最近一次更新时间。","gt_sql":"SELECT r.rule_type, AVG(alert_count) as avg_alert_count, MAX(r.updated_at) as last_update_time FROM rule_configurations r LEFT JOIN (SELECT rule_id, COUNT(*) as alert_count FROM alerts GROUP BY rule_id) a ON r.rule_id = a.rule_id GROUP BY r.rule_type ORDER BY avg_alert_count DESC;","pred_sql":"SELECT rc.rule_type, COUNT(a.alert_id)::numeric / COUNT(DISTINCT rc.rule_id) AS avg_trigger_count, MAX(rc.updated_at) AS last_updated_time FROM rule_configurations rc LEFT JOIN alerts a ON rc.rule_id = a.rule_id GROUP BY rc.rule_type;","thinking":"","ambiguous":"False"}
{"id":1820971007,"db_name":"risk_control","question":"统计每种风险类型下的事件数量，并按数量降序排列。","gt_sql":"SELECT event_type, COUNT(event_id) AS event_count FROM risk_events GROUP BY event_type ORDER BY event_count DESC;","pred_sql":"SELECT event_type AS \"风险类型\", COUNT(*) AS \"事件数量\" FROM risk_events GROUP BY event_type ORDER BY COUNT(*) DESC;","thinking":"","ambiguous":"False"}
{"id":3328333298,"db_name":"risk_control","question":"哪些客户在2023年进行了交易并且其信用评分低于700？","gt_sql":"SELECT c.customer_id, c.customer_name, c.credit_score FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date \u003e= '2023-01-01' AND t.transaction_date \u003c '2024-01-01' AND c.credit_score \u003c 700;","pred_sql":"SELECT DISTINCT c.customer_id, c.customer_name, c.credit_score FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.credit_score \u003c 700 AND t.transaction_date BETWEEN '2023-01-01' AND '2023-12-31';","thinking":"","ambiguous":"False"}
{"id":547790744,"db_name":"risk_control","question":"获取所有风险事件及其对应的风险报告。","gt_sql":"SELECT re.event_id, re.event_type, rr.report_id FROM risk_events re JOIN risk_reports rr ON re.event_id = rr.event_id;","pred_sql":"SELECT re.event_id, re.event_type, rr.report_id FROM risk_events re LEFT JOIN risk_reports rr ON re.event_id = rr.event_id;","thinking":"","ambiguous":"False"}
{"id":3644288071,"db_name":"risk_control","question":"在2023年度，有多少份风险报告被拒绝了？","gt_sql":"SELECT COUNT(*) FROM risk_reports WHERE EXTRACT(YEAR FROM report_date) = 2023 AND approval_status = '已拒绝'","pred_sql":"SELECT COUNT(*) AS rejected_reports_count FROM risk_reports WHERE approval_status = 'rejected' AND EXTRACT(YEAR FROM report_date) = 2023;","thinking":"","ambiguous":"False"}
{"id":3802320452,"db_name":"risk_control","question":"获取所有风险评估记录及其对应的缓解计划。","gt_sql":"SELECT ra.assessment_id, ra.mitigation_plan, ra.assessor FROM risk_assessments ra;","pred_sql":"SELECT assessment_id, mitigation_plan, assessor FROM risk_assessments;","thinking":"","ambiguous":"False"}
{"id":3489018825,"db_name":"risk_control","question":"查询所有风险指标的最新监控日志。","gt_sql":"SELECT m.log_id, m.actual_value, m.is_exceeding_threshold FROM risk_monitoring_logs m JOIN risk_indicators i ON m.indicator_id = i.indicator_id;","pred_sql":"SELECT log_id, actual_value, is_exceeding_threshold FROM risk_monitoring_logs WHERE monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs);","thinking":"","ambiguous":"False"}
{"id":2505821643,"db_name":"risk_control","question":"列出所有风险控制规则及其关联的预警次数","gt_sql":"SELECT rc.rule_id, rc.rule_name, COUNT(a.alert_id) as alert_count FROM rule_configurations rc LEFT JOIN alerts a ON rc.rule_id = a.rule_id GROUP BY rc.rule_id, rc.rule_name ORDER BY alert_count DESC","pred_sql":"SELECT rc.rule_id, rc.rule_name, COUNT(a.alert_id) AS alert_count FROM rule_configurations rc LEFT JOIN alerts a ON rc.rule_id = a.rule_id GROUP BY rc.rule_id, rc.rule_name;","thinking":"","ambiguous":"False"}
{"id":3072597279,"db_name":"risk_control","question":"查询信用风险事件的所有相关交易信息，且交易状态为成功。","gt_sql":"SELECT re.event_id, re.event_description, t.transaction_id, t.amount FROM risk_events re JOIN transactions t ON re.event_id = t.event_id WHERE re.event_type = '信用风险' AND t.status = '成功';","pred_sql":"SELECT re.event_id, re.event_description, t.transaction_id, t.amount FROM risk_events re JOIN transactions t ON re.event_id = t.event_id WHERE re.event_type = '信用风险' AND t.status = '成功';","thinking":"","ambiguous":"False"}
{"id":260033616,"db_name":"risk_control","question":"统计每种风险等级的客户数量","gt_sql":"SELECT c.risk_level, COUNT(c.customer_id) AS customer_count FROM customers c GROUP BY c.risk_level;","pred_sql":"SELECT risk_level, COUNT(*) AS customer_count FROM customers GROUP BY risk_level;","thinking":"","ambiguous":"False"}
{"id":2369245761,"db_name":"risk_control","question":"请找出所有客户中，注册时间在2019年之前且风险等级为高的客户，其交易总金额的中位数。","gt_sql":"SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY total_amount) AS median_transaction_amount\nFROM (\n    SELECT c.customer_id, SUM(t.amount) AS total_amount\n    FROM customers c\n    JOIN transactions t ON c.customer_id = t.customer_id\n    WHERE c.registration_date \u003c '2019-01-01' AND c.risk_level = '高'\n    GROUP BY c.customer_id\n) AS customer_transactions;","pred_sql":"SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY t.amount) AS median_transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.registration_date \u003c '2019-01-01' AND c.risk_level = '高';","thinking":"","ambiguous":"False"}
{"id":1787317276,"db_name":"risk_control","question":"找出所有触发高风险预警的规则及其对应的风险事件描述。","gt_sql":"SELECT rc.rule_name, re.event_description FROM rule_configurations rc JOIN alerts a ON rc.rule_id = a.rule_id JOIN risk_events re ON a.event_id = re.event_id WHERE a.alert_level = '高';","pred_sql":"SELECT rc.rule_name, re.event_description FROM alerts a JOIN rule_configurations rc ON a.rule_id = rc.rule_id JOIN risk_events re ON a.event_id = re.event_id WHERE a.alert_level = 'high';","thinking":"","ambiguous":"False"}
{"id":1447865488,"db_name":"risk_control","question":"获取所有风险事件的创建时间和状态。","gt_sql":"SELECT event_id, created_at, status FROM risk_events;","pred_sql":"SELECT event_id, created_at, status FROM risk_events;","thinking":"","ambiguous":"False"}
{"id":3560291801,"db_name":"risk_control","question":"统计每个风险事件类型在不同月份的发生频率，并计算环比增长率。","gt_sql":"WITH monthly_events AS (SELECT DATE_TRUNC('month', created_at) as month, event_type, COUNT(*) as event_count FROM risk_events GROUP BY DATE_TRUNC('month', created_at), event_type) SELECT current_month.month, current_month.event_type, current_month.event_count, previous_month.event_count as previous_month_count, CASE WHEN previous_month.event_count \u003e 0 THEN ROUND((current_month.event_count - previous_month.event_count) / previous_month.event_count * 100, 2) ELSE NULL END as month_over_month_growth FROM monthly_events current_month LEFT JOIN monthly_events previous_month ON current_month.event_type = previous_month.event_type AND current_month.month = previous_month.month + INTERVAL '1 month' ORDER BY current_month.month DESC, current_month.event_type;","pred_sql":"","thinking":"WITH monthly_event_counts AS ( SELECT DATE_TRUNC('month', occurrence_time) AS month, event_type, COUNT(*) AS current_month_count, LAG(COUNT(*), 1) OVER (PARTITION BY event_type ORDER BY DATE_TRUNC('month', occurrence_time)) AS previous_month_count FROM risk_events GROUP BY DATE_TRUNC('month', occurrence_time), event_type ) SELECT TO_CHAR(month, 'YYYY-MM') AS month, event_type, current_month_count, previous_month_count, CASE WHEN previous_month_count = 0 THEN NULL ELSE ROUND((current_month_count - previous_month_count) * 100.0 / previous_month_count, 2) END AS month_over_month_growth_rate FROM monthly_event_counts ORDER BY month, event_type;","ambiguous":"False"}
{"id":2152701139,"db_name":"risk_control","question":"统计每个月份的平均交易金额和交易笔数","gt_sql":"SELECT DATE_TRUNC('month', transaction_date) as month, AVG(amount) as avg_amount, COUNT(*) as transaction_count FROM transactions GROUP BY DATE_TRUNC('month', transaction_date) ORDER BY month","pred_sql":"SELECT TO_CHAR(transaction_date, 'YYYY-MM') AS time_period, AVG(amount) AS avg_transaction_amount, COUNT(*) AS transaction_count FROM transactions GROUP BY TO_CHAR(transaction_date, 'YYYY-MM') ORDER BY time_period;","thinking":"","ambiguous":"False"}
{"id":558233205,"db_name":"risk_control","question":"查询所有已批准的风险报告及其相关的风险事件信息，包括报告ID、报告类型、审批人、事件描述和事件严重程度。","gt_sql":"SELECT rr.report_id, rr.report_type, rr.approved_by, re.event_description, re.severity FROM risk_reports rr LEFT JOIN risk_events re ON rr.event_id = re.event_id WHERE rr.approval_status = '已批准' ORDER BY re.severity DESC, rr.report_date DESC","pred_sql":"SELECT r.report_id, r.report_type, r.approved_by, e.event_description, e.severity FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id WHERE r.approval_status = 'approved';","thinking":"","ambiguous":"False"}
{"id":3381293646,"db_name":"risk_control","question":"获取所有客户的风险等级及其交易状态。","gt_sql":"SELECT c.customer_name, c.risk_level, t.status FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id;","pred_sql":"SELECT c.customer_name, c.risk_level, t.status FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id;","thinking":"","ambiguous":"False"}
{"id":3077667667,"db_name":"risk_control","question":"查询所有高风险客户的交易信息及其对应的交易状态。","gt_sql":"SELECT c.customer_name, t.transaction_type, t.status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = '高';","pred_sql":"SELECT c.customer_name, t.transaction_type, t.status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = 'high';","thinking":"","ambiguous":"False"}
{"id":2339616488,"db_name":"risk_control","question":"找出所有由'孙宇'撰写且尚未审批的风险报告","gt_sql":"SELECT * FROM risk_reports WHERE author = '孙宇' AND approval_status = '待审批'","pred_sql":"SELECT report_id, report_type, report_date, report_content, author, approval_status, approved_by, event_id FROM risk_reports WHERE author = '孙宇' AND approval_status != 'approved';","thinking":"","ambiguous":"False"}
{"id":1797007792,"db_name":"risk_control","question":"查询所有未处理预警的内容及其关联的风险事件描述。","gt_sql":"SELECT a.alert_content, e.event_description FROM alerts a JOIN risk_events e ON a.event_id = e.event_id WHERE a.status = '未处理';","pred_sql":"SELECT a.alert_content, re.event_description FROM alerts a JOIN risk_events re ON a.event_id = re.event_id WHERE a.status != 'processed';","thinking":"","ambiguous":"False"}
{"id":298505495,"db_name":"risk_control","question":"统计每种风险等级的客户数量，要求风险等级为中或高。","gt_sql":"SELECT risk_level, COUNT(*) AS customer_count FROM customers WHERE risk_level IN ('中', '高') GROUP BY risk_level;","pred_sql":"SELECT risk_level, COUNT(*) AS customer_count FROM customers WHERE risk_level IN ('中', '高') GROUP BY risk_level;","thinking":"","ambiguous":"False"}
{"id":612300483,"db_name":"risk_control","question":"统计每个客户的交易数量和平均风险评分。","gt_sql":"SELECT c.customer_id, c.customer_name, COUNT(t.transaction_id) AS transaction_count, AVG(t.risk_score) AS avg_risk_score FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_id;","pred_sql":"SELECT c.customer_id, c.customer_name, COUNT(t.transaction_id) AS transaction_count, AVG(t.risk_score) AS average_risk_score FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_id, c.customer_name;","thinking":"","ambiguous":"False"}
{"id":3872938276,"db_name":"risk_control","question":"计算每个月新增的高风险客户数量","gt_sql":"SELECT DATE_TRUNC('month', registration_date,) as month, COUNT(*) as new_high_risk_customers FROM customers WHERE risk_level = '高' GROUP BY DATE_TRUNC('month', registration_date) ORDER BY month","pred_sql":"SELECT DATE_TRUNC('month', registration_date) AS month, COUNT(*) AS high_risk_customer_count FROM customers WHERE risk_level = 'high' GROUP BY month ORDER BY month;","thinking":"","ambiguous":"False"}
{"id":4293195588,"db_name":"risk_control","question":"查询所有高风险指标的最新监控记录及其关联的预警和审核信息","gt_sql":"WITH latest_logs AS (SELECT indicator_id, MAX(monitoring_date) AS latest_date FROM risk_monitoring_logs GROUP BY indicator_id) SELECT i.indicator_name, l.monitoring_date, l.actual_value, a.alert_id, a.alert_level, a.alert_content, au.audit_result, au.audit_comments FROM risk_indicators i JOIN latest_logs ll ON i.indicator_id = ll.indicator_id JOIN risk_monitoring_logs l ON ll.indicator_id = l.indicator_id AND ll.latest_date = l.monitoring_date LEFT JOIN alerts a ON l.log_id = a.rule_id LEFT JOIN audit_logs au ON a.alert_id = au.alert_id WHERE i.threshold_value \u003c l.actual_value ORDER BY l.monitoring_date DESC","pred_sql":"SELECT ri.indicator_name, rml.monitoring_date, rml.actual_value, a.alert_level, a.alert_content, a.alert_id, al.audit_result, al.audit_comments FROM risk_indicators ri JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id LEFT JOIN rule_configurations rc ON ri.indicator_id = rc.indicator_id LEFT JOIN alerts a ON rc.rule_id = a.rule_id LEFT JOIN audit_logs al ON a.alert_id = al.alert_id WHERE ri.risk_level = 'high' AND rml.monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs WHERE indicator_id = ri.indicator_id);","thinking":"","ambiguous":"False"}
{"id":3735769324,"db_name":"risk_control","question":"计算每种风险等级的客户数量及其平均信用评分","gt_sql":"SELECT risk_level, COUNT(*) as customer_count, AVG(credit_score) as avg_credit_score FROM customers GROUP BY risk_level","pred_sql":"SELECT risk_level, COUNT(*) AS customer_count, AVG(credit_score) AS average_credit_score FROM customers GROUP BY risk_level;","thinking":"","ambiguous":"False"}
{"id":3555900229,"db_name":"risk_control","question":"在所有已解决的预警中，哪些预警类型的处理时间最长？","gt_sql":"SELECT alert_type, MAX(EXTRACT(EPOCH FROM (resolved_time - alert_time))) AS max_processing_time FROM (SELECT a.alert_type, a.alert_time, l.audit_time AS resolved_time FROM alerts a JOIN audit_logs l ON a.alert_id = l.alert_id WHERE a.status = '已解决') AS resolved_alerts GROUP BY alert_type ORDER BY max_processing_time DESC;","pred_sql":"ERROR: 向LLM发送请求失败","thinking":"","ambiguous":"False"}
{"id":390806390,"db_name":"risk_control","question":"哪些客户在2023年11月期间进行了交易，并且其交易金额超过了100000元？请列出客户名称、交易金额和交易日期。","gt_sql":"SELECT c.customer_name, t.amount, t.transaction_date FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.transaction_date \u003e= '2023-11-01' AND t.transaction_date \u003c '2023-12-01' AND t.amount \u003e 100000;","pred_sql":"SELECT c.customer_name, t.amount, t.transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date BETWEEN '2023-11-01' AND '2023-11-30' AND t.amount \u003e 100000;","thinking":"","ambiguous":"False"}
{"id":2736578842,"db_name":"risk_control","question":"哪些风险指标的名称包含“财务”，并计算其阈值的总和。","gt_sql":"SELECT SUM(threshold_value) FROM risk_indicators WHERE indicator_name LIKE '%财务%';","pred_sql":"SELECT SUM(threshold_value) AS total_threshold_value FROM risk_indicators WHERE indicator_name LIKE '%财务%';","thinking":"","ambiguous":"False"}
{"id":453782697,"db_name":"risk_control","question":"查找所有客户的名称和信用评分。","gt_sql":"SELECT customer_name, credit_score FROM customers;","pred_sql":"SELECT customer_name, credit_score FROM customers;","thinking":"","ambiguous":"False"}
{"id":605680231,"db_name":"risk_control","question":"列出每个客户的最新交易记录及其风险评分。","gt_sql":"SELECT c.customer_id, c.customer_name, t.transaction_id, t.transaction_date, t.risk_score FROM customers c JOIN transactions t ON c.customer_id = t.customer_id ORDER BY t.transaction_date DESC;","pred_sql":"ERROR: 向LLM发送请求失败","thinking":"","ambiguous":"False"}
{"id":591035595,"db_name":"risk_control","question":"获取所有风险监控日志中实际值超过阈值的记录。","gt_sql":"SELECT log_id, actual_value FROM risk_monitoring_logs WHERE is_exceeding_threshold = TRUE;","pred_sql":"SELECT log_id, actual_value FROM risk_monitoring_logs WHERE is_exceeding_threshold = TRUE;","thinking":"","ambiguous":"False"}
{"id":154773295,"db_name":"risk_control","question":"找出所有高风险客户的交易记录，并计算其风险评分的平均值。","gt_sql":"SELECT t.transaction_id, t.transaction_date, t.amount, t.risk_score, AVG(t.risk_score) OVER () AS avg_risk_score FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE c.risk_level = '高';","pred_sql":"SELECT t.transaction_id, t.transaction_date, t.amount, t.risk_score, AVG(t.risk_score) OVER() AS avg_risk_score FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE c.risk_level = 'high';","thinking":"","ambiguous":"False"}
{"id":2894945358,"db_name":"risk_control","question":"查找所有客户的交易记录及其风险评分。","gt_sql":"SELECT t.transaction_id, t.risk_score FROM transactions t JOIN customers c ON t.customer_id = c.customer_id;","pred_sql":"SELECT t.transaction_id, t.risk_score FROM transactions t JOIN customers c ON t.customer_id = c.customer_id;","thinking":"","ambiguous":"False"}
{"id":3936841885,"db_name":"risk_control","question":"找出所有风险报告的状态为“已拒绝”的记录，并计算其数量和报告类型。","gt_sql":"SELECT report_type, COUNT(*) AS count FROM risk_reports WHERE approval_status = '已拒绝' GROUP BY report_type;","pred_sql":"SELECT report_type, COUNT(*) AS count FROM risk_reports WHERE approval_status = '已拒绝' GROUP BY report_type;","thinking":"","ambiguous":"False"}
{"id":2451684746,"db_name":"risk_control","question":"哪些客户的风险等级为高，并且他们的信用评分低于600？","gt_sql":"SELECT c.customer_id, c.customer_name, c.credit_score, c.risk_level FROM customers c WHERE c.risk_level = '高' AND c.credit_score \u003c 600;","pred_sql":"SELECT customer_id, customer_name, credit_score, risk_level FROM customers WHERE risk_level = '高' AND credit_score \u003c 600;","thinking":"","ambiguous":"False"}
{"id":1650691143,"db_name":"risk_control","question":"统计每个风险等级的客户在过去一年内的平均交易金额和交易次数","gt_sql":"SELECT c.risk_level, AVG(t.amount) as avg_transaction_amount, COUNT(t.transaction_id) / COUNT(DISTINCT c.customer_id) as avg_transaction_count FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date \u003e= datetime('now') - INTERVAL '1 year' GROUP BY c.risk_level","pred_sql":"SELECT c.risk_level, AVG(t.amount) AS average_transaction_amount, COUNT(t.transaction_id)/COUNT(DISTINCT t.customer_id) AS average_transactions_per_customer FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date \u003e= CURRENT_DATE - INTERVAL '1 year' GROUP BY c.risk_level;","thinking":"","ambiguous":"False"}
{"id":3897186376,"db_name":"risk_control","question":"列出所有流动性风险事件的报告。","gt_sql":"SELECT rr.* FROM risk_reports rr JOIN risk_events re ON rr.event_id = re.event_id WHERE re.event_type = '流动性风险';","pred_sql":"SELECT report_id, report_type, report_date, report_content, author, approval_status, approved_by, event_id FROM risk_reports WHERE report_type = '流动性风险';","thinking":"","ambiguous":"False"}
{"id":1076275288,"db_name":"risk_control","question":"计算所有客户中，信用评分在600到800之间的客户的数量及其交易总金额。","gt_sql":"SELECT COUNT(DISTINCT c.customer_id) AS customer_count, SUM(t.amount) AS total_transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.credit_score BETWEEN 600 AND 800;","pred_sql":"SELECT COUNT(DISTINCT c.customer_id) AS customer_count, COALESCE(SUM(t.amount), 0) AS total_transaction_amount FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id WHERE c.credit_score BETWEEN 600 AND 800;","thinking":"","ambiguous":"False"}
{"id":1120727301,"db_name":"risk_control","question":"查找所有审批人王思远所批准的风险报告中，报告日期在2023年03月的报告内容。","gt_sql":"SELECT report_content FROM risk_reports WHERE approved_by = '王思远' AND report_date \u003e= '2023-03-01' AND report_date \u003c '2023-04-01';","pred_sql":"SELECT report_content FROM risk_reports WHERE approved_by = '王思远' AND report_date BETWEEN '2023-03-01' AND '2023-03-31';","thinking":"","ambiguous":"False"}
{"id":1080125465,"db_name":"risk_control","question":"查找所有合规风险事件及其相关报告信息。","gt_sql":"SELECT re.event_id, rr.report_id, rr.approval_status FROM risk_events re JOIN risk_reports rr ON re.event_id = rr.event_id WHERE re.event_type = '合规风险';","pred_sql":"SELECT re.event_id, rr.report_id, rr.approval_status FROM risk_events re LEFT JOIN risk_reports rr ON re.event_id = rr.event_id WHERE re.event_type = 'Compliance';","thinking":"","ambiguous":"False"}
{"id":136539419,"db_name":"risk_control","question":"查找所有客户在2023年6月的交易记录。","gt_sql":"SELECT * FROM transactions WHERE transaction_date BETWEEN '2023-06-01' AND '2023-06-30';","pred_sql":"SELECT transaction_id, customer_id, transaction_type, amount, transaction_date, status, risk_score, event_id FROM transactions WHERE transaction_date \u003e= '2023-06-01' AND transaction_date \u003c '2023-07-01';","thinking":"","ambiguous":"False"}
{"id":3750047672,"db_name":"risk_control","question":"哪些风险事件的严重程度为3，并且有相关的审核记录？","gt_sql":"SELECT re.event_id, re.event_type, re.event_description, al.audit_id, al.audit_type, al.audit_result FROM risk_events re JOIN audit_logs al ON re.event_id = al.event_id WHERE re.severity = 3;","pred_sql":"SELECT re.event_id, re.event_type, re.event_description, al.audit_id, al.audit_type, al.audit_result FROM risk_events re JOIN audit_logs al ON re.event_id = al.event_id WHERE re.severity = 3;","thinking":"","ambiguous":"False"}
{"id":3909298542,"db_name":"risk_control","question":"查询所有风险指标的阈值及其对应的监控结果，要求监控结果实际值超过阈值。","gt_sql":"SELECT ri.indicator_name, ri.threshold_value, rml.actual_value FROM risk_indicators ri JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.actual_value \u003e ri.threshold_value;","pred_sql":"SELECT ri.indicator_name, ri.threshold_value, rml.actual_value FROM risk_indicators ri JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.is_exceeding_threshold = TRUE;","thinking":"","ambiguous":"False"}
{"id":2762771801,"db_name":"risk_control","question":"获取所有客户的风险评分及其交易状态。","gt_sql":"SELECT c.customer_id, c.customer_name, c.credit_score, t.status FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id;","pred_sql":"SELECT c.customer_id, c.customer_name, c.credit_score, t.status AS transaction_status FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id;","thinking":"","ambiguous":"False"}
{"id":2830564670,"db_name":"risk_control","question":"列出所有风险事件及其对应的预警信息，要求预警级别为高。","gt_sql":"SELECT re.event_id, re.event_description, a.alert_level, a.alert_content FROM risk_events re JOIN alerts a ON re.event_id = a.event_id WHERE a.alert_level = '高';","pred_sql":"SELECT re.event_id, re.event_description, a.alert_level, a.alert_content FROM risk_events re LEFT JOIN alerts a ON re.event_id = a.event_id WHERE a.alert_level = '高';","thinking":"","ambiguous":"False"}
{"id":942591775,"db_name":"risk_control","question":"查找所有风险事件及其对应的预警信息，按预警时间排序。","gt_sql":"SELECT re.event_id, re.event_description, a.alert_id, a.alert_time FROM risk_events re JOIN alerts a ON re.event_id = a.event_id ORDER BY a.alert_time;","pred_sql":"SELECT re.event_id, re.event_description, a.alert_id, a.alert_time FROM risk_events re LEFT JOIN alerts a ON re.event_id = a.event_id ORDER BY a.alert_time;","thinking":"","ambiguous":"False"}
{"id":3295587616,"db_name":"risk_control","question":"计算每个风险等级（低/中/高）的客户在过去90天内的平均交易金额和交易次数","gt_sql":"SELECT c.risk_level, AVG(t.amount) as avg_transaction_amount, COUNT(t.transaction_id) / COUNT(DISTINCT c.customer_id) as avg_transaction_count FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id AND t.transaction_date \u003e= date('now') - INTERVAL '90 days' GROUP BY c.risk_level","pred_sql":"SELECT c.risk_level, AVG(t.amount) AS average_transaction_amount, COUNT(t.transaction_id)/COUNT(DISTINCT t.customer_id) AS average_transaction_count FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date \u003e= CURRENT_DATE - INTERVAL '90 days' GROUP BY c.risk_level;","thinking":"","ambiguous":"False"}
{"id":3932804573,"db_name":"risk_control","question":"哪些客户的风险等级为高，并且其信用评分低于700分？","gt_sql":"SELECT c.customer_id, c.customer_name, c.credit_score FROM customers c WHERE c.risk_level = '高' AND c.credit_score \u003c 700;","pred_sql":"SELECT customer_id, customer_name, credit_score FROM customers WHERE risk_level = '高' AND credit_score \u003c 700;","thinking":"","ambiguous":"False"}
{"id":862533692,"db_name":"risk_control","question":"列出所有客户的信用评分及其最近的交易信息，要求交易状态为失败。","gt_sql":"SELECT c.customer_id, c.credit_score, t.transaction_id, t.status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.status = '失败';","pred_sql":"SELECT c.customer_id, c.credit_score, t.transaction_id, t.status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.status = 'failed' ORDER BY t.transaction_date DESC;","thinking":"","ambiguous":"False"}
{"id":2759801136,"db_name":"risk_control","question":"列出所有风险评估结果为高风险，但相关客户信用评分高于700的情况","gt_sql":"SELECT ra.assessment_id, ra.event_id, c.customer_id, c.customer_name, c.credit_score FROM risk_assessments ra JOIN risk_events re ON ra.event_id = re.event_id JOIN transactions t ON re.event_id = t.event_id JOIN customers c ON t.customer_id = c.customer_id WHERE ra.risk_level = '高' AND c.credit_score \u003e 700","pred_sql":"SELECT ra.assessment_id, ra.event_id, c.customer_id, c.customer_name, c.credit_score FROM risk_assessments ra JOIN risk_events re ON ra.event_id = re.event_id JOIN transactions t ON re.event_id = t.event_id JOIN customers c ON t.customer_id = c.customer_id WHERE ra.risk_level = 'high' AND c.credit_score \u003e 700;","thinking":"","ambiguous":"False"}
{"id":1448319074,"db_name":"risk_control","question":"查找所有企业客户中，信用评分前10名的客户信息","gt_sql":"SELECT * FROM customers WHERE customer_type = '企业' ORDER BY credit_score DESC LIMIT 10","pred_sql":"SELECT customer_id, customer_name, customer_type, credit_score, risk_level, registration_date, last_update_date FROM customers WHERE customer_type = '企业' ORDER BY credit_score DESC LIMIT 10;","thinking":"","ambiguous":"False"}
{"id":2148910450,"db_name":"risk_control","question":"统计每个月新增的风险控制规则数量和平均活跃规则数","gt_sql":"SELECT DATE_TRUNC('month', created_at) as month, COUNT(*) as new_rules, AVG(SUM(CASE WHEN is_active THEN 1 ELSE 0 END)) OVER (ORDER BY DATE_TRUNC('month', created_at) ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as avg_active_rules FROM rule_configurations GROUP BY DATE_TRUNC('month', created_at) ORDER BY month","pred_sql":"SELECT DATE_TRUNC('month', created_at) AS month, COUNT(*) AS new_rules_count, AVG(COUNT(CASE WHEN is_active THEN 1 END) OVER (ORDER BY DATE_TRUNC('month', created_at))) AS avg_active_rules FROM rule_configurations GROUP BY DATE_TRUNC('month', created_at) ORDER BY month;","thinking":"","ambiguous":"False"}
{"id":3303778848,"db_name":"risk_control","question":"查询所有风险报告的作者及其对应的审批状态，筛选出已批准的报告。","gt_sql":"SELECT rr.author, rr.approval_status FROM risk_reports rr WHERE rr.approval_status = '已批准';","pred_sql":"SELECT author, approval_status FROM risk_reports WHERE approval_status = 'approved';","thinking":"","ambiguous":"False"}
{"id":2919479377,"db_name":"risk_control","question":"列出所有客户的交易情况，包括金额和状态。","gt_sql":"SELECT c.customer_name, t.amount, t.status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id;","pred_sql":"SELECT c.customer_name, t.amount, t.status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id;","thinking":"","ambiguous":"False"}
{"id":3408098582,"db_name":"risk_control","question":"获取所有风险事件及其评估结果","gt_sql":"SELECT re.event_id, ra.assessment_id, ra.risk_level FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id;","pred_sql":"SELECT re.event_id, ra.assessment_id, ra.risk_level FROM risk_events re LEFT JOIN risk_assessments ra ON re.event_id = ra.event_id;","thinking":"","ambiguous":"False"}
{"id":3536942222,"db_name":"risk_control","question":"计算每个风险指标的平均实际值，并与其阈值进行比较","gt_sql":"SELECT ri.indicator_id, ri.indicator_name, ri.threshold_value, AVG(rml.actual_value) as avg_actual_value FROM risk_indicators ri LEFT JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id GROUP BY ri.indicator_id, ri.indicator_name, ri.threshold_value","pred_sql":"SELECT ri.indicator_id, ri.indicator_name, ri.threshold_value, AVG(rm.actual_value) AS average_actual_value FROM risk_indicators ri LEFT JOIN risk_monitoring_logs rm ON ri.indicator_id = rm.indicator_id GROUP BY ri.indicator_id, ri.indicator_name, ri.threshold_value;","thinking":"","ambiguous":"False"}
{"id":3025435441,"db_name":"risk_control","question":"找出所有已批准的风险报告及其相关的风险事件信息","gt_sql":"SELECT rr.report_id, rr.report_type, rr.report_content, re.event_type, re.event_description FROM risk_reports rr JOIN risk_events re ON rr.event_id = re.event_id WHERE rr.approval_status = '已批准'","pred_sql":"SELECT r.report_id, r.report_type, r.report_content, e.event_type, e.event_description FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id WHERE r.approval_status = 'approved';","thinking":"","ambiguous":"False"}
{"id":3761432717,"db_name":"risk_control","question":"找出所有在同一天既有高风险交易又有高级别预警的客户","gt_sql":"SELECT DISTINCT c.customer_id, c.customer_name, t.transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id JOIN alerts a ON t.event_id = a.event_id WHERE t.risk_score \u003e 80 AND a.alert_level = '高' AND DATE(t.transaction_date) = DATE(a.alert_time)","pred_sql":"SELECT DISTINCT c.customer_id, c.customer_name, t.transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id JOIN alerts a ON t.event_id = a.event_id WHERE t.risk_score \u003e= 70 AND a.alert_level = 'HIGH' AND DATE(t.transaction_date) = DATE(a.alert_time);","thinking":"","ambiguous":"False"}
{"id":3404778014,"db_name":"risk_control","question":"查询所有高风险的交易及其对应的客户信息。","gt_sql":"SELECT t.transaction_id, c.customer_name FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.risk_score \u003e 15;","pred_sql":"SELECT t.transaction_id, c.customer_name FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.risk_score \u003e 70;","thinking":"","ambiguous":"False"}
{"id":3200534548,"db_name":"risk_control","question":"列出所有风险评估结果为'高'的事件，包括事件描述和评估日期","gt_sql":"SELECT re.event_description, ra.assessment_date FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE ra.risk_level = '高'","pred_sql":"SELECT re.event_description, ra.assessment_date FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE ra.risk_level = '高';","thinking":"","ambiguous":"False"}
{"id":698660188,"db_name":"risk_control","question":"哪些高风险客户在最近一次交易中出现了失败状态？","gt_sql":"SELECT c.customer_name, t.status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = '高' AND t.status = '失败';","pred_sql":"SELECT c.customer_name, t.status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = 'high' AND t.status = 'failed' AND t.transaction_date = (SELECT MAX(transaction_date) FROM transactions WHERE customer_id = c.customer_id);","thinking":"","ambiguous":"False"}
{"id":756643276,"db_name":"risk_control","question":"查找每个风险事件的交易记录数量。","gt_sql":"SELECT re.event_id, COUNT(t.transaction_id) AS transaction_count FROM risk_events re LEFT JOIN transactions t ON re.event_id = t.event_id GROUP BY re.event_id;","pred_sql":"SELECT re.event_id, COUNT(t.transaction_id) AS transaction_count FROM risk_events re LEFT JOIN transactions t ON re.event_id = t.event_id GROUP BY re.event_id;","thinking":"","ambiguous":"False"}
{"id":1961596891,"db_name":"risk_control","question":"查询2023年1月至3月期间，高风险客户发生的交易金额超过50万元的交易记录及相关客户信息","gt_sql":"SELECT t.transaction_id, t.amount, t.transaction_date, c.customer_name, c.risk_level FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE c.risk_level = '高' AND t.amount \u003e 500000 AND t.transaction_date BETWEEN '2023-01-01' AND '2023-03-31' ORDER BY t.amount DESC","pred_sql":"SELECT t.transaction_id, t.amount, t.transaction_date, c.customer_name, c.risk_level FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE c.risk_level = 'high' AND t.amount \u003e 500000 AND t.transaction_date BETWEEN '2023-01-01' AND '2023-03-31';","thinking":"","ambiguous":"False"}
{"id":1488802626,"db_name":"risk_control","question":"查询2023年发生的所有高严重程度（severity为4或5）的风险事件及其相关的风险评估信息，包括事件描述、严重程度、风险等级和缓解计划。","gt_sql":"SELECT re.event_id, re.event_description, re.severity, ra.risk_level, ra.mitigation_plan FROM risk_events re LEFT JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE EXTRACT(YEAR FROM re.occurrence_time) = 2023 AND re.severity IN (4, 5) ORDER BY re.severity DESC, re.occurrence_time","pred_sql":"SELECT re.event_id, re.event_description, re.severity, ra.risk_level, ra.mitigation_plan FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE re.severity IN (4, 5) AND EXTRACT(YEAR FROM re.occurrence_time) = 2023;","thinking":"","ambiguous":"False"}
{"id":3027811751,"db_name":"risk_control","question":"获取所有风险监控日志中未超过阈值的记录","gt_sql":"SELECT ml.log_id, ml.notes FROM risk_monitoring_logs ml WHERE ml.is_exceeding_threshold = FALSE;","pred_sql":"SELECT log_id, notes FROM risk_monitoring_logs WHERE is_exceeding_threshold = false;","thinking":"","ambiguous":"False"}
{"id":1296190191,"db_name":"risk_control","question":"查询所有待审批状态的风险报告，包括报告作者、相关风险事件信息和最近的审核记录。","gt_sql":"SELECT r.report_id, r.report_type, r.author, e.event_type, e.severity, al.audit_result, al.audit_comments FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id LEFT JOIN (SELECT event_id, audit_result, audit_comments, ROW_NUMBER() OVER (PARTITION BY event_id ORDER BY audit_time DESC) as rn FROM audit_logs) al ON e.event_id = al.event_id AND al.rn = 1 WHERE r.approval_status = '待审批' ORDER BY e.severity DESC, r.report_date DESC;","pred_sql":"SELECT r.report_id, r.report_type, r.author, e.event_type, e.severity, a.audit_result, a.audit_comments FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id LEFT JOIN ( SELECT related_id, audit_result, audit_comments, ROW_NUMBER() OVER (PARTITION BY related_id ORDER BY audit_time DESC) as rn FROM audit_logs WHERE audit_type = 'REPORT_REVIEW' ) a ON r.report_id = a.related_id AND a.rn = 1 WHERE r.approval_status = 'PENDING';","thinking":"","ambiguous":"False"}
{"id":2631012035,"db_name":"risk_control","question":"哪些客户在2021年注册并且风险等级为高，同时他们的信用评分低于550？","gt_sql":"SELECT c.customer_id, c.customer_name, c.credit_score, c.risk_level FROM customers c WHERE c.registration_date \u003e= '2021-01-01' AND c.registration_date \u003c '2022-01-01' AND c.risk_level = '高' AND c.credit_score \u003c 550;","pred_sql":"SELECT customer_id, customer_name, credit_score, risk_level FROM customers WHERE registration_date BETWEEN '2021-01-01' AND '2021-12-31' AND risk_level = '高' AND credit_score \u003c 550;","thinking":"","ambiguous":"False"}
{"id":2342271424,"db_name":"risk_control","question":"列出所有客户的最近一次交易信息，以及该交易是否触发了任何预警。","gt_sql":"SELECT c.customer_id, c.customer_name, t.transaction_id, t.amount, t.transaction_date, CASE WHEN al.alert_id IS NOT NULL THEN 'Yes' ELSE 'No' END as triggered_alert FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id LEFT JOIN alerts al ON t.transaction_id = al.event_id WHERE t.transaction_date = (SELECT MAX(transaction_date) FROM transactions WHERE customer_id = c.customer_id)","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":2292865545,"db_name":"risk_control","question":"获取每种风险类型的数量统计，显示风险事件及其数量。","gt_sql":"SELECT re.event_type, COUNT(re.event_id) AS event_count FROM risk_events re GROUP BY re.event_type;","pred_sql":"SELECT event_type, COUNT(*) AS event_count FROM risk_events GROUP BY event_type ORDER BY event_count DESC;","thinking":"","ambiguous":"False"}
{"id":3057920994,"db_name":"risk_control","question":"查询所有高风险客户（风险等级为'高'）的风险控制规则触发情况，包括客户名称、触发的规则名称和触发次数。","gt_sql":"SELECT c.customer_name, rc.rule_name, COUNT(*) AS trigger_count FROM customers c JOIN transactions t ON c.customer_id = t.customer_id JOIN alerts a ON t.event_id = a.event_id JOIN rule_configurations rc ON a.rule_id = rc.rule_id WHERE c.risk_level = '高' GROUP BY c.customer_id, c.customer_name, rc.rule_id, rc.rule_name ORDER BY trigger_count DESC, c.customer_name","pred_sql":"SELECT c.customer_name, rc.rule_name, COUNT(a.alert_id) AS trigger_count FROM customers c JOIN transactions t ON c.customer_id = t.customer_id JOIN alerts a ON t.event_id = a.event_id JOIN rule_configurations rc ON a.rule_id = rc.rule_id WHERE c.risk_level = '高' GROUP BY c.customer_name, rc.rule_name ORDER BY trigger_count DESC;","thinking":"","ambiguous":"False"}
{"id":1563461822,"db_name":"risk_control","question":"统计每个风险事件类型在不同月份的事件数量、平均严重程度和解决率","gt_sql":"SELECT DATE_TRUNC('month', re.occurrence_time) as month, re.event_type, COUNT(*) as event_count, AVG(re.severity) as avg_severity, SUM(CASE WHEN re.status = '已解决' THEN 1 ELSE 0 END) / COUNT(*) as resolution_rate FROM risk_events re GROUP BY DATE_TRUNC('month', re.occurrence_time), re.event_type ORDER BY month, re.event_type","pred_sql":"SELECT TO_CHAR(re.occurrence_time, 'YYYY-MM') AS month, re.event_type, COUNT(*) AS event_count, AVG(re.severity) AS avg_severity, ROUND(COUNT(CASE WHEN re.status = 'Resolved' THEN 1 END) * 100.0 / COUNT(*), 2) AS resolution_rate FROM risk_events re GROUP BY TO_CHAR(re.occurrence_time, 'YYYY-MM'), re.event_type ORDER BY month, re.event_type;","thinking":"","ambiguous":"False"}
{"id":2699040253,"db_name":"risk_control","question":"请查询所有监控记录，显示实际值和阈值对比。","gt_sql":"SELECT ml.monitoring_date, ml.actual_value, ri.threshold_value FROM risk_monitoring_logs ml JOIN risk_indicators ri ON ml.indicator_id = ri.indicator_id;","pred_sql":"SELECT monitoring_date, actual_value, threshold_value FROM risk_monitoring_logs JOIN risk_indicators ON risk_monitoring_logs.indicator_id = risk_indicators.indicator_id;","thinking":"","ambiguous":"False"}
{"id":2609391365,"db_name":"risk_control","question":"统计每个风险等级的客户在不同交易类型上的平均交易金额","gt_sql":"SELECT c.risk_level, t.transaction_type, AVG(t.amount) AS avg_transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.risk_level, t.transaction_type ORDER BY c.risk_level, avg_transaction_amount DESC","pred_sql":"SELECT c.risk_level, t.transaction_type, AVG(t.amount) AS average_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.risk_level, t.transaction_type ORDER BY c.risk_level, t.transaction_type;","thinking":"","ambiguous":"False"}
{"id":1646275357,"db_name":"risk_control","question":"当前有多少条激活状态的规则配置？","gt_sql":"SELECT COUNT(*) FROM rule_configurations WHERE is_active = true","pred_sql":"SELECT COUNT(*) AS total_active_rules FROM rule_configurations WHERE is_active = TRUE;","thinking":"","ambiguous":"False"}
{"id":3640375109,"db_name":"risk_control","question":"获取所有客户的风险等级和信用评分。","gt_sql":"SELECT customer_id, customer_name, risk_level, credit_score FROM customers;","pred_sql":"SELECT customer_id, customer_name, risk_level, credit_score FROM customers;","thinking":"","ambiguous":"False"}
{"id":1137138067,"db_name":"risk_control","question":"请找出所有风险指标的阈值大于100的记录，并计算其数量和平均更新频率。","gt_sql":"SELECT COUNT(*), AVG(update_frequencyerval) FROM risk_indicators WHERE threshold_value \u003e 100;","pred_sql":"SELECT COUNT(*) AS total_count, AVG(EXTRACT(EPOCH FROM (CASE WHEN update_frequency = 'daily' THEN INTERVAL '1 day' WHEN update_frequency = 'weekly' THEN INTERVAL '1 week' WHEN update_frequency = 'monthly' THEN INTERVAL '1 month' WHEN update_frequency = 'yearly' THEN INTERVAL '1 year' ELSE INTERVAL '0' END))) AS average_update_frequency_seconds FROM risk_indicators WHERE threshold_value \u003e 100;","thinking":"","ambiguous":"False"}
{"id":674388735,"db_name":"risk_control","question":"查询所有客户的名称和注册日期。","gt_sql":"SELECT customer_name, registration_date FROM customers;","pred_sql":"SELECT customer_name, registration_date FROM customers;","thinking":"","ambiguous":"False"}
{"id":2598937105,"db_name":"risk_control","question":"获取所有风险指标的监控日志，包括实际值和是否超过阈值的信息。","gt_sql":"SELECT ri.indicator_id, ri.indicator_name, ml.log_id, ml.actual_value, ml.is_exceeding_threshold FROM risk_indicators ri JOIN risk_monitoring_logs ml ON ri.indicator_id = ml.indicator_id;","pred_sql":"SELECT ri.indicator_id, ri.indicator_name, rml.log_id, rml.actual_value, rml.is_exceeding_threshold FROM risk_indicators ri JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id;","thinking":"","ambiguous":"False"}
{"id":62865185,"db_name":"risk_control","question":"统计每个风险指标在不同数据来源下的平均值和标准差","gt_sql":"SELECT ri.indicator_id, ri.indicator_name, ri.data_source, AVG(rml.actual_value) AS avg_value, STDDEV(rml.actual_value) AS stddev_value FROM risk_indicators ri JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id GROUP BY ri.indicator_id, ri.indicator_name, ri.data_source","pred_sql":"SELECT ri.indicator_id, ri.indicator_name, ri.data_source, AVG(rm.actual_value) AS average_value, STDDEV(rm.actual_value) AS standard_deviation FROM risk_indicators ri JOIN risk_monitoring_logs rm ON ri.indicator_id = rm.indicator_id GROUP BY ri.indicator_id, ri.indicator_name, ri.data_source;","thinking":"","ambiguous":"False"}
{"id":185839438,"db_name":"risk_control","question":"获取所有审核结果为拒绝的审核记录及其对应的审核人。","gt_sql":"SELECT al.audit_id, al.audit_result, al.auditor FROM audit_logs al WHERE al.audit_result = '拒绝';","pred_sql":"SELECT audit_id, audit_result, auditor FROM audit_logs WHERE audit_result = '拒绝';","thinking":"","ambiguous":"False"}
{"id":3165460471,"db_name":"risk_control","question":"查询每个预警的类型和内容。","gt_sql":"SELECT alert_type, alert_content FROM alerts;","pred_sql":"SELECT alert_type, alert_content FROM alerts;","thinking":"","ambiguous":"False"}
{"id":3849483796,"db_name":"risk_control","question":"查询所有未处理状态的预警信息，包括相关的风险事件描述和最近的审核记录。","gt_sql":"SELECT a.alert_id, a.alert_type, a.alert_content, e.event_description, al.audit_result, al.audit_comments FROM alerts a JOIN risk_events e ON a.event_id = e.event_id LEFT JOIN (SELECT alert_id, audit_result, audit_comments, ROW_NUMBER() OVER (PARTITION BY alert_id ORDER BY audit_time DESC) as rn FROM audit_logs) al ON a.alert_id = al.alert_id AND al.rn = 1 WHERE a.status = '未处理' ORDER BY a.alert_time DESC;","pred_sql":"SELECT a.alert_id, a.alert_type, a.alert_content, re.event_description, al.audit_result, al.audit_comments FROM alerts a JOIN risk_events re ON a.event_id = re.event_id LEFT JOIN (SELECT DISTINCT ON (alert_id) * FROM audit_logs ORDER BY alert_id, audit_time DESC) al ON a.alert_id = al.alert_id WHERE a.status = '未处理';","thinking":"","ambiguous":"False"}
{"id":1990473038,"db_name":"risk_control","question":"找出所有未处理的预警，并计算其平均预警时间。","gt_sql":"SELECT AVG(EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - alert_time))) AS average_alert_time FROM alerts WHERE status = '未处理';","pred_sql":"SELECT AVG(EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - alert_time))/3600) AS average_alert_duration_hours FROM alerts WHERE status != 'processed';","thinking":"","ambiguous":"False"}
{"id":3119334868,"db_name":"risk_control","question":"计算每个客户的风险指数（风险评估次数 * 平均风险评分 + 预警次数 * 2）","gt_sql":"WITH risk_stats AS (SELECT c.customer_id, COUNT(ra.assessment_id) AS assessment_count, AVG(CASE WHEN ra.risk_level = '高' THEN 3 WHEN ra.risk_level = '中' THEN 2 ELSE 1 END) AS avg_risk_score, COUNT(a.alert_id) AS alert_count FROM customers c LEFT JOIN risk_assessments ra ON c.customer_id = ra.event_id LEFT JOIN alerts a ON c.customer_id = a.event_id GROUP BY c.customer_id) SELECT rs.customer_id, c.customer_name, c.risk_level, (rs.assessment_count * rs.avg_risk_score + rs.alert_count * 2) AS risk_index FROM risk_stats rs JOIN customers c ON rs.customer_id = c.customer_id ORDER BY risk_index DESC","pred_sql":"SELECT c.customer_id, c.customer_name, c.risk_level, (COUNT(DISTINCT ra.assessment_id) * AVG(ra.impact_score) + COUNT(DISTINCT a.alert_id) * 2) AS risk_index FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id LEFT JOIN risk_assessments ra ON t.event_id = ra.event_id LEFT JOIN alerts a ON t.event_id = a.event_id GROUP BY c.customer_id, c.customer_name, c.risk_level;","thinking":"","ambiguous":"False"}
{"id":2458967882,"db_name":"risk_control","question":"统计每种风险类型的风险事件数量，并且只统计状态为未处理的事件。","gt_sql":"SELECT event_type, COUNT(*) as event_count FROM risk_events WHERE status = '未处理' GROUP BY event_type;","pred_sql":"SELECT event_type, COUNT(*) AS event_count FROM risk_events WHERE status = '未处理' GROUP BY event_type;","thinking":"","ambiguous":"False"}
{"id":4081376750,"db_name":"risk_control","question":"哪些客户的风险等级为“低”且信用评分高于700，并列出其交易记录。","gt_sql":"SELECT t.* FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = '低' AND c.credit_score \u003e 700;","pred_sql":"SELECT t.transaction_id, t.customer_id, t.transaction_type, t.amount, t.transaction_date, t.status, t.risk_score, t.event_id FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE c.risk_level = '低' AND c.credit_score \u003e 700;","thinking":"","ambiguous":"False"}
{"id":2952805928,"db_name":"risk_control","question":"列出所有未处理的高级别预警及其相关的风险事件信息","gt_sql":"SELECT a.alert_id, a.alert_type, a.alert_content, a.alert_level, re.event_id, re.event_type, re.severity FROM alerts a LEFT JOIN risk_events re ON a.event_id = re.event_id WHERE a.status = '未处理' AND a.alert_level = '高'","pred_sql":"SELECT a.alert_id, a.alert_type, a.alert_content, a.alert_level, e.event_id, e.event_type, e.severity FROM alerts a JOIN risk_events e ON a.event_id = e.event_id WHERE a.status != 'processed' AND a.alert_level = 'high';","thinking":"","ambiguous":"False"}
{"id":790231894,"db_name":"risk_control","question":"请查询所有触发合规违规规则的预警记录及其处理状态。","gt_sql":"SELECT alert_content, status FROM alerts WHERE rule_id IN (SELECT rule_id FROM rule_configurations WHERE rule_type = '合规检查');","pred_sql":"SELECT a.alert_id, a.alert_content, a.alert_time, a.status, r.rule_name, r.rule_description FROM alerts a JOIN rule_configurations r ON a.rule_id = r.rule_id WHERE r.rule_type = '合规违规规则';","thinking":"","ambiguous":"False"}
{"id":76184048,"db_name":"risk_control","question":"请列出所有有高风险交易的客户及其风险等级，并计算其交易总金额。","gt_sql":"SELECT c.customer_id, c.risk_level, SUM(t.amount) AS total_transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = '高' GROUP BY c.customer_id, c.risk_level;","pred_sql":"SELECT c.customer_id, c.risk_level, SUM(t.amount) AS total_transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.risk_score \u003e (SELECT AVG(risk_score) FROM transactions WHERE risk_score IS NOT NULL) GROUP BY c.customer_id, c.risk_level HAVING SUM(t.amount) \u003e 0;","thinking":"","ambiguous":"False"}
{"id":291950371,"db_name":"risk_control","question":"获取所有风险报告中，报告类型为月度风险报告且审批状态为已拒绝的报告内容。","gt_sql":"SELECT report_content FROM risk_reports WHERE report_type = '月度风险报告' AND approval_status = '已拒绝';","pred_sql":"SELECT report_content FROM risk_reports WHERE report_type = '月度风险报告' AND approval_status = '已拒绝';","thinking":"","ambiguous":"False"}
{"id":2809252635,"db_name":"risk_control","question":"统计每个风险事件类型的事件数量","gt_sql":"SELECT re.event_type, COUNT(re.event_id) AS event_count FROM risk_events re GROUP BY re.event_type;","pred_sql":"SELECT event_type, COUNT(*) AS event_count FROM risk_events GROUP BY event_type;","thinking":"","ambiguous":"False"}
{"id":184311181,"db_name":"risk_control","question":"哪些客户在2023年5月4日进行了转账交易并且交易金额超过200000元？","gt_sql":"SELECT c.customer_name, t.amount, t.transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_type = '转账' AND t.amount \u003e 200000 AND t.transaction_date \u003e= '2023-05-04 00:00:00' AND t.transaction_date \u003c '2023-05-05 00:00:00';","pred_sql":"SELECT c.customer_name, t.amount, t.transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_type = '转账' AND t.amount \u003e 200000 AND t.transaction_date::date = '2023-05-04';","thinking":"","ambiguous":"False"}
{"id":1539184065,"db_name":"risk_control","question":"列出所有未处理的高级别预警，包括相关的风险事件描述和分配的处理人员","gt_sql":"SELECT a.alert_id, a.alert_content, a.alert_level, a.assigned_to, e.event_description FROM alerts a JOIN risk_events e ON a.event_id = e.event_id WHERE a.status = '未处理' AND a.alert_level = '高'","pred_sql":"SELECT a.alert_id, a.alert_content, a.alert_level, a.assigned_to, r.event_description FROM alerts a JOIN risk_events r ON a.event_id = r.event_id WHERE a.status != 'processed' AND a.alert_level = 'high';","thinking":"","ambiguous":"False"}
{"id":3408938184,"db_name":"risk_control","question":"在2023年4月的风险报告中，有哪些报告是由高志远审批的？","gt_sql":"SELECT rr.report_id, rr.report_content FROM risk_reports rr WHERE rr.approval_status = '已批准' AND rr.approved_by = '高志远' AND rr.report_date = '2023-04-01';","pred_sql":"SELECT report_id, report_content FROM risk_reports WHERE approved_by = '高志远' AND report_date BETWEEN '2023-04-01' AND '2023-04-30';","thinking":"","ambiguous":"False"}
{"id":547284006,"db_name":"risk_control","question":"对于每种交易类型，计算成功与失败交易的数量，并列出类型及数量。","gt_sql":"SELECT transaction_type, \n       COUNT(CASE WHEN status = '成功' THEN 1 END) AS success_count, \n       COUNT(CASE WHEN status = '失败' THEN 1 END) AS failure_count \nFROM transactions \nGROUP BY transaction_type;","pred_sql":"SELECT transaction_type, COUNT(CASE WHEN status = 'success' THEN 1 END) AS success_count, COUNT(CASE WHEN status = 'fail' THEN 1 END) AS fail_count FROM transactions GROUP BY transaction_type;","thinking":"","ambiguous":"False"}
{"id":2791172353,"db_name":"risk_control","question":"列出所有的风险事件及其最新的风险评估结果。","gt_sql":"SELECT re.event_id, ra.risk_level FROM risk_events re LEFT JOIN risk_assessments ra ON re.event_id = ra.event_id ORDER BY ra.assessment_date DESC;","pred_sql":"SELECT re.event_id, ra.risk_level FROM risk_events re LEFT JOIN (SELECT event_id, risk_level, ROW_NUMBER() OVER (PARTITION BY event_id ORDER BY assessment_date DESC) AS rn FROM risk_assessments) ra ON re.event_id = ra.event_id AND ra.rn = 1;","thinking":"","ambiguous":"False"}
{"id":616009086,"db_name":"risk_control","question":"找出所有在过去一年内既有高风险评估又有大额交易（超过50万）的客户，显示客户名称、风险评估次数和大额交易次数。","gt_sql":"SELECT c.customer_name, COUNT(DISTINCT ra.assessment_id) as high_risk_assessment_count, COUNT(DISTINCT t.transaction_id) as large_transaction_count FROM customers c JOIN transactions t ON c.customer_id = t.customer_id JOIN risk_assessments ra ON t.event_id = ra.event_id WHERE ra.risk_level = '高' AND t.amount \u003e 500000 AND t.transaction_date \u003e= date('now') - INTERVAL '1 year' GROUP BY c.customer_id, c.customer_name HAVING COUNT(DISTINCT ra.assessment_id) \u003e 0 AND COUNT(DISTINCT t.transaction_id) \u003e 0 ORDER BY high_risk_assessment_count DESC, large_transaction_count DESC;","pred_sql":"SELECT c.customer_name, COUNT(DISTINCT ra.assessment_id) AS high_risk_assessment_count, COUNT(DISTINCT t.transaction_id) AS large_transaction_count FROM customers c LEFT JOIN risk_assessments ra ON ra.event_id IN (SELECT event_id FROM transactions WHERE customer_id = c.customer_id) AND ra.risk_level = 'high' AND ra.assessment_date \u003e= CURRENT_DATE - INTERVAL '1 year' LEFT JOIN transactions t ON t.customer_id = c.customer_id AND t.amount \u003e 500000 AND t.transaction_date \u003e= CURRENT_DATE - INTERVAL '1 year' GROUP BY c.customer_id, c.customer_name HAVING COUNT(DISTINCT ra.assessment_id) \u003e 0 AND COUNT(DISTINCT t.transaction_id) \u003e 0;","thinking":"","ambiguous":"False"}
{"id":2755424699,"db_name":"risk_control","question":"获取特定客户 '恒基能源有限公司' 的所有交易记录。","gt_sql":"SELECT * FROM transactions WHERE customer_id = 'CU2534';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":3357225905,"db_name":"risk_control","question":"查找每个风险事件的最高严重程度。","gt_sql":"SELECT event_id, MAX(severity) AS max_severity FROM risk_events GROUP BY event_id;","pred_sql":"SELECT event_id, MAX(severity) AS highest_severity FROM risk_events GROUP BY event_id;","thinking":"","ambiguous":"False"}
{"id":2507883319,"db_name":"risk_control","question":"统计每个风险等级的客户数量和他们的平均交易金额","gt_sql":"SELECT c.risk_level, COUNT(DISTINCT c.customer_id) as customer_count, AVG(t.amount) as avg_transaction_amount FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.risk_level","pred_sql":"SELECT c.risk_level, COUNT(DISTINCT c.customer_id) AS customer_count, AVG(t.amount) AS avg_transaction_amount FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.risk_level;","thinking":"","ambiguous":"False"}
{"id":2171757699,"db_name":"risk_control","question":"查找所有审核人张强审核的预警记录及其审核结果。","gt_sql":"SELECT audit_time, audit_result FROM audit_logs WHERE auditor = '张强';","pred_sql":"SELECT a.audit_time, a.audit_result FROM audit_logs a JOIN alerts al ON a.alert_id = al.alert_id WHERE a.auditor = '张强';","thinking":"","ambiguous":"False"}
{"id":1791933892,"db_name":"risk_control","question":"获取所有监控记录的实际值和是否超过阈值的信息，关联风险指标。","gt_sql":"SELECT ml.log_id, ml.actual_value, ml.is_exceeding_threshold, ri.indicator_name FROM risk_monitoring_logs ml JOIN risk_indicators ri ON ml.indicator_id = ri.indicator_id;","pred_sql":"SELECT rml.log_id, rml.actual_value, rml.is_exceeding_threshold, ri.indicator_name FROM risk_monitoring_logs rml JOIN risk_indicators ri ON rml.indicator_id = ri.indicator_id;","thinking":"","ambiguous":"False"}
{"id":4281611752,"db_name":"risk_control","question":"统计每个风险指标在2023年超过阈值的次数和平均超出幅度，仅考虑超过阈值的情况。","gt_sql":"SELECT ri.indicator_name, COUNT(*) as exceed_count, AVG((rml.actual_value - ri.threshold_value) / ri.threshold_value * 100) as avg_exceed_percentage FROM risk_indicators ri JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.is_exceeding_threshold = true AND EXTRACT(YEAR FROM rml.monitoring_date) = 2023 GROUP BY ri.indicator_id, ri.indicator_name ORDER BY exceed_count DESC;","pred_sql":"SELECT ri.indicator_name, COUNT(*) AS exceed_count, AVG((rml.actual_value - ri.threshold_value) / ri.threshold_value * 100) AS avg_exceed_percentage FROM risk_monitoring_logs rml JOIN risk_indicators ri ON rml.indicator_id = ri.indicator_id WHERE rml.is_exceeding_threshold = true AND rml.monitoring_date \u003e= '2023-01-01' AND rml.monitoring_date \u003c '2024-01-01' GROUP BY ri.indicator_name;","thinking":"","ambiguous":"False"}
{"id":2403947927,"db_name":"risk_control","question":"查询2023年内所有预警信息及其处理状态。","gt_sql":"SELECT a.alert_id, a.alert_content, a.status FROM alerts a WHERE a.alert_time \u003e= '2023-01-01' AND a.alert_time \u003c '2024-01-01';","pred_sql":"SELECT alert_id, alert_content, status FROM alerts WHERE alert_time \u003e= '2023-01-01' AND alert_time \u003c '2024-01-01';","thinking":"","ambiguous":"False"}
{"id":3007794799,"db_name":"risk_control","question":"查询每种风险指标的最新监控记录及其实际值。","gt_sql":"SELECT ri.indicator_id, ri.indicator_name, ml.monitoring_date, ml.actual_value FROM risk_indicators ri JOIN risk_monitoring_logs ml ON ri.indicator_id = ml.indicator_id ORDER BY ml.monitoring_date DESC;","pred_sql":"SELECT ri.indicator_id, ri.indicator_name, rml.monitoring_date, rml.actual_value FROM risk_indicators ri LEFT JOIN (SELECT indicator_id, MAX(monitoring_date) AS max_date FROM risk_monitoring_logs GROUP BY indicator_id) latest ON ri.indicator_id = latest.indicator_id LEFT JOIN risk_monitoring_logs rml ON latest.indicator_id = rml.indicator_id AND latest.max_date = rml.monitoring_date;","thinking":"","ambiguous":"False"}
{"id":3478580962,"db_name":"risk_control","question":"计算每个风险指标在过去一年内超过阈值的次数和百分比，并找出超过次数最多的前10个指标。","gt_sql":"WITH indicator_stats AS (SELECT ri.indicator_id, ri.indicator_name, ri.threshold_value, COUNT(*) as total_checks, SUM(CASE WHEN rml.is_exceeding_threshold THEN 1 ELSE 0 END) as times_exceeded FROM risk_indicators ri JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.monitoring_date \u003e= date('now') - INTERVAL '1 year' GROUP BY ri.indicator_id, ri.indicator_name, ri.threshold_value) SELECT indicator_name, threshold_value, times_exceeded, total_checks, ROUND(times_exceeded / total_checks * 100, 2) as exceed_percentage FROM indicator_stats ORDER BY times_exceeded DESC LIMIT 10;","pred_sql":"SELECT ri.indicator_name, ri.threshold_value, COUNT(rml.log_id) FILTER (WHERE rml.is_exceeding_threshold = true) AS exceed_count, COUNT(rml.log_id) AS total_checks, ROUND(COUNT(rml.log_id) FILTER (WHERE rml.is_exceeding_threshold = true) * 100.0 / NULLIF(COUNT(rml.log_id), 0), 2) AS exceed_percentage FROM risk_indicators ri LEFT JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id AND rml.monitoring_date \u003e= CURRENT_DATE - INTERVAL '1 year' GROUP BY ri.indicator_id, ri.indicator_name, ri.threshold_value ORDER BY exceed_count DESC NULLS LAST, exceed_percentage DESC NULLS LAST LIMIT 10;","thinking":"","ambiguous":"False"}
{"id":2835641813,"db_name":"risk_control","question":"统计每种风险等级的客户数量。","gt_sql":"SELECT risk_level, COUNT(customer_id) AS customer_count FROM customers GROUP BY risk_level;","pred_sql":"SELECT risk_level, COUNT(*) AS customer_count FROM customers GROUP BY risk_level;","thinking":"","ambiguous":"False"}
{"id":3556405805,"db_name":"risk_control","question":"查找所有客户的交易风险评分及其状态。","gt_sql":"SELECT customer_id, risk_score, status FROM transactions;","pred_sql":"SELECT c.customer_id, t.risk_score, t.status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id;","thinking":"","ambiguous":"False"}
{"id":1912282533,"db_name":"risk_control","question":"查询所有风险评估结果为高风险，但相关交易风险评分低于50的情况","gt_sql":"SELECT ra.assessment_id, ra.risk_level, t.transaction_id, t.risk_score FROM risk_assessments ra JOIN transactions t ON ra.event_id = t.event_id WHERE ra.risk_level = '高' AND t.risk_score \u003c 50","pred_sql":"SELECT ra.assessment_id, ra.risk_level, t.transaction_id, t.risk_score FROM risk_assessments ra JOIN transactions t ON ra.event_id = t.event_id WHERE ra.risk_level = 'high' AND t.risk_score \u003c 50;","thinking":"","ambiguous":"False"}
{"id":966675168,"db_name":"risk_control","question":"统计每种交易类型的成功交易数量，找出最常见的交易类型。","gt_sql":"SELECT transaction_type, COUNT(*) as success_count FROM transactions WHERE status = '成功' GROUP BY transaction_type ORDER BY success_count DESC LIMIT 1;","pred_sql":"SELECT transaction_type, COUNT(*) AS success_count FROM transactions WHERE status = 'success' GROUP BY transaction_type ORDER BY success_count DESC;","thinking":"","ambiguous":"False"}
{"id":1657330121,"db_name":"risk_control","question":"查找所有交易失败的记录，并且关联的风险事件状态为已解决。","gt_sql":"SELECT t.transaction_id, t.amount, re.status FROM transactions t JOIN risk_events re ON t.event_id = re.event_id WHERE t.status = '失败' AND re.status = '已解决';","pred_sql":"SELECT t.transaction_id, t.amount, t.status FROM transactions t JOIN risk_events re ON t.event_id = re.event_id WHERE t.status = 'failed' AND re.status = 'resolved';","thinking":"","ambiguous":"False"}
{"id":2427884877,"db_name":"risk_control","question":"请找出所有被标记为处理中状态的交易记录及其对应的客户信息。","gt_sql":"SELECT t.transaction_id, c.customer_name FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.status = '处理中';","pred_sql":"SELECT t.transaction_id, c.customer_name FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.status = '处理中';","thinking":"","ambiguous":"False"}
{"id":2050953540,"db_name":"risk_control","question":"列出所有交易及其相关的风险事件，要求交易金额超过1000。","gt_sql":"SELECT t.transaction_id, t.amount, re.event_description FROM transactions t JOIN risk_events re ON t.event_id = re.event_id WHERE t.amount \u003e 1000;","pred_sql":"SELECT t.transaction_id, t.amount, r.event_description FROM transactions t JOIN risk_events r ON t.event_id = r.event_id WHERE t.amount \u003e 1000;","thinking":"","ambiguous":"False"}
{"id":2088100618,"db_name":"risk_control","question":"找出所有在最近一年内进行过大额交易（金额超过100000）且客户风险等级为高的交易及其相关风险事件信息","gt_sql":"SELECT t.transaction_id, t.amount, t.transaction_date, c.customer_name, re.event_type, re.event_description FROM transactions t JOIN customers c ON t.customer_id = c.customer_id JOIN risk_events re ON t.event_id = re.event_id WHERE t.amount \u003e 100000 AND c.risk_level = '高' AND t.transaction_date \u003e= datetime('now') - INTERVAL '1 year'","pred_sql":"SELECT t.transaction_id, t.amount, t.transaction_date, c.customer_name, e.event_type, e.event_description FROM transactions t JOIN customers c ON t.customer_id = c.customer_id JOIN risk_events e ON t.event_id = e.event_id WHERE t.amount \u003e 100000 AND c.risk_level = '高' AND t.transaction_date \u003e= CURRENT_DATE - INTERVAL '1 year';","thinking":"","ambiguous":"False"}
{"id":4242999593,"db_name":"risk_control","question":"查找所有有缓解计划的风险评估记录。","gt_sql":"SELECT assessment_id, mitigation_plan FROM risk_assessments WHERE mitigation_plan IS NOT NULL;","pred_sql":"SELECT assessment_id, mitigation_plan FROM risk_assessments WHERE mitigation_plan IS NOT NULL;","thinking":"","ambiguous":"False"}
{"id":4243946175,"db_name":"risk_control","question":"查找所有高风险客户的交易记录及其风险评分。","gt_sql":"SELECT t.transaction_id, t.risk_score FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE c.risk_level = '高';","pred_sql":"SELECT t.transaction_id, t.risk_score FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE c.risk_level = 'high';","thinking":"","ambiguous":"False"}
{"id":1679294343,"db_name":"risk_control","question":"查询所有风险监控日志的实际值及其对应的风险指标名称，要求实际值低于阈值。","gt_sql":"SELECT rml.actual_value, ri.indicator_name FROM risk_monitoring_logs rml JOIN risk_indicators ri ON rml.indicator_id = ri.indicator_id WHERE rml.actual_value \u003c ri.threshold_value;","pred_sql":"SELECT rml.actual_value, ri.indicator_name FROM risk_monitoring_logs rml JOIN risk_indicators ri ON rml.indicator_id = ri.indicator_id WHERE rml.actual_value \u003c ri.threshold_value;","thinking":"","ambiguous":"False"}
{"id":1824329950,"db_name":"risk_control","question":"列出所有已拒绝的风险报告，并显示对应的风险事件类型和状态。","gt_sql":"SELECT rr.report_content, re.event_type, re.status FROM risk_reports rr JOIN risk_events re ON rr.event_id = re.event_id WHERE rr.approval_status = '已拒绝';","pred_sql":"SELECT r.report_content, e.event_type, e.status FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id WHERE r.approval_status = 'REJECTED';","thinking":"","ambiguous":"False"}
{"id":888703769,"db_name":"risk_control","question":"哪些企业在2021年注册并且其信用评分高于700，同时在过去一年内有过交易记录？","gt_sql":"SELECT DISTINCT c.customer_name, c.credit_score, c.registration_date, t.transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.customer_type = '企业' AND c.registration_date \u003e= '2021-01-01' AND c.registration_date \u003c '2022-01-01' AND c.credit_score \u003e 700 AND t.transaction_date \u003e= datetime('now') - INTERVAL '1 year';","pred_sql":"SELECT DISTINCT c.customer_name, c.credit_score, c.registration_date, MAX(t.transaction_date) AS last_transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.registration_date BETWEEN '2021-01-01' AND '2021-12-31' AND c.credit_score \u003e 700 AND t.transaction_date \u003e= (CURRENT_DATE - INTERVAL '1 year') GROUP BY c.customer_name, c.credit_score, c.registration_date;","thinking":"","ambiguous":"False"}
{"id":411280576,"db_name":"risk_control","question":"查找所有由'陈强'处理的预警及其相关的风险事件和交易信息","gt_sql":"SELECT a.alert_id, a.alert_type, a.alert_content, re.event_id, re.event_type, t.transaction_id, t.amount FROM alerts a LEFT JOIN risk_events re ON a.event_id = re.event_id LEFT JOIN transactions t ON re.event_id = t.event_id WHERE a.assigned_to = '陈强'","pred_sql":"SELECT a.alert_id, a.alert_type, a.alert_content, r.event_id, r.event_type, t.transaction_id, t.amount FROM alerts a LEFT JOIN risk_events r ON a.event_id = r.event_id LEFT JOIN transactions t ON r.event_id = t.event_id WHERE a.assigned_to = '陈强';","thinking":"","ambiguous":"False"}
{"id":452369014,"db_name":"risk_control","question":"获取所有报告内容包含合规的风险报告。","gt_sql":"SELECT * FROM risk_reports WHERE report_content LIKE '%合规%';","pred_sql":"SELECT report_id, report_type, report_date, report_content, author, approval_status, approved_by, event_id FROM risk_reports WHERE report_content LIKE '%合规%';","thinking":"","ambiguous":"False"}
{"id":865900816,"db_name":"risk_control","question":"统计每个月风险事件的数量、平均严重程度，以及相关的预警数量","gt_sql":"SELECT DATE_TRUNC('month', re.occurrence_time) as month, COUNT(DISTINCT re.event_id) as event_count, AVG(re.severity) as avg_severity, COUNT(a.alert_id) as alert_count FROM risk_events re LEFT JOIN alerts a ON re.event_id = a.event_id GROUP BY DATE_TRUNC('month', re.occurrence_time) ORDER BY month","pred_sql":"SELECT TO_CHAR(re.occurrence_time, 'YYYY-MM') AS month, COUNT(DISTINCT re.event_id) AS event_count, AVG(re.severity) AS avg_severity, COUNT(DISTINCT a.alert_id) AS alert_count FROM risk_events re LEFT JOIN alerts a ON re.event_id = a.event_id GROUP BY TO_CHAR(re.occurrence_time, 'YYYY-MM') ORDER BY month;","thinking":"","ambiguous":"False"}
{"id":92424187,"db_name":"risk_control","question":"获取所有风险指标的名称和阈值。","gt_sql":"SELECT indicator_name, threshold_value FROM risk_indicators;","pred_sql":"SELECT indicator_name, threshold_value FROM risk_indicators;","thinking":"","ambiguous":"False"}
{"id":2998508313,"db_name":"risk_control","question":"列出所有风险指标的最新监控记录及其是否超过阈值的信息","gt_sql":"SELECT ri.indicator_name, rml.* FROM risk_indicators ri LEFT JOIN LATERAL (SELECT * FROM risk_monitoring_logs WHERE indicator_id = ri.indicator_id ORDER BY monitoring_date DESC LIMIT 1) rml ON true","pred_sql":"SELECT ri.indicator_name, ri.indicator_id, rml.log_id, rml.monitoring_date, rml.actual_value, rml.is_exceeding_threshold, rml.notes FROM risk_indicators ri JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs WHERE indicator_id = ri.indicator_id);","thinking":"","ambiguous":"False"}
{"id":1024168357,"db_name":"risk_control","question":"获取所有交易金额大于10万的交易及其对应的客户信息。","gt_sql":"SELECT t.transaction_id, t.amount, c.customer_name, c.customer_type FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.amount \u003e 100000;","pred_sql":"SELECT t.transaction_id, t.amount, c.customer_name, c.customer_type FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.amount \u003e 100000;","thinking":"","ambiguous":"False"}
{"id":2422412797,"db_name":"risk_control","question":"获取所有审批状态为已批准的风险报告。","gt_sql":"SELECT * FROM risk_reports WHERE approval_status = '已批准';","pred_sql":"SELECT report_id, report_type, report_date, report_content, author, approval_status, approved_by, event_id FROM risk_reports WHERE approval_status = '已批准';","thinking":"","ambiguous":"False"}
{"id":3918852865,"db_name":"risk_control","question":"统计每种交易类型的平均风险评分","gt_sql":"SELECT transaction_type, AVG(risk_score) as avg_risk_score FROM transactions GROUP BY transaction_type ORDER BY avg_risk_score DESC","pred_sql":"SELECT transaction_type, AVG(risk_score) AS average_risk_score FROM transactions GROUP BY transaction_type;","thinking":"","ambiguous":"False"}
{"id":2671276850,"db_name":"risk_control","question":"计算每种风险事件类型的平均处理时间（从创建到解决）和每个处理阶段（未处理、处理中、已解决）的平均持续时间","gt_sql":"WITH event_timelines AS (SELECT event_id, event_type, created_at, MAX(CASE WHEN status = '处理中' THEN occurrence_time END) as processing_start, MAX(CASE WHEN status = '已解决' THEN occurrence_time END) as resolved_time FROM risk_events GROUP BY event_id, event_type, created_at) SELECT event_type, AVG(EXTRACT(EPOCH FROM (resolved_time - created_at))/3600) as avg_total_time_hours, AVG(EXTRACT(EPOCH FROM (processing_start - created_at))/3600) as avg_unprocessed_time_hours, AVG(EXTRACT(EPOCH FROM (resolved_time - processing_start))/3600) as avg_processing_time_hours FROM event_timelines WHERE resolved_time IS NOT NULL GROUP BY event_type","pred_sql":"SELECT re.event_type, AVG(EXTRACT(EPOCH FROM (a.alert_time - re.created_at))) / 3600 AS avg_total_processing_hours, AVG(CASE WHEN a.status = '未处理' THEN EXTRACT(EPOCH FROM (COALESCE(LEAD(a.alert_time) OVER (PARTITION BY a.event_id ORDER BY a.alert_time), CURRENT_TIMESTAMP) - a.alert_time)) / 3600 ELSE NULL END) AS avg_unprocessed_hours, AVG(CASE WHEN a.status = '处理中' THEN EXTRACT(EPOCH FROM (COALESCE(LEAD(a.alert_time) OVER (PARTITION BY a.event_id ORDER BY a.alert_time), CURRENT_TIMESTAMP) - a.alert_time)) / 3600 ELSE NULL END) AS avg_processing_hours, AVG(CASE WHEN a.status = '已解决' THEN EXTRACT(EPOCH FROM (a.alert_time - LAG(a.alert_time) OVER (PARTITION BY a.event_id ORDER BY a.alert_time))) / 3600 ELSE NULL END) AS avg_resolved_hours FROM risk_events re JOIN alerts a ON re.event_id = a.event_id GROUP BY re.event_type HAVING COUNT(DISTINCT a.event_id) \u003e 0;","thinking":"","ambiguous":"False"}
{"id":3873676880,"db_name":"risk_control","question":"列出每种预警类型的数量及其对应的平均处理时间。","gt_sql":"SELECT alert_type, COUNT(*) AS alert_count, AVG(EXTRACT(EPOCH FROM (resolved_time - alert_time))) AS avg_processing_time FROM (SELECT a.alert_type, a.alert_time, l.audit_time AS resolved_time FROM alerts a LEFT JOIN audit_logs l ON a.alert_id = l.alert_id WHERE a.status = '已解决') AS resolved_alerts GROUP BY alert_type;","pred_sql":"SELECT a.alert_type, COUNT(*) AS alert_count, AVG(EXTRACT(EPOCH FROM (al.audit_time - a.alert_time))/60) AS avg_processing_time_minutes FROM alerts a JOIN audit_logs al ON a.alert_id = al.alert_id WHERE al.audit_type = 'ALERT_PROCESSING' GROUP BY a.alert_type;","thinking":"","ambiguous":"False"}
{"id":3957865555,"db_name":"risk_control","question":"统计每个风险事件类型的平均处理时间（从创建到解决）","gt_sql":"SELECT event_type, AVG(EXTRACT(EPOCH FROM (CASE WHEN status = '已解决' THEN CURRENT_TIMESTAMP ELSE NULL END - created_at))/86400) as avg_resolution_days FROM risk_events WHERE status = '已解决' GROUP BY event_type","pred_sql":"SELECT event_type, AVG(EXTRACT(EPOCH FROM (r.status_change_time - e.created_at))/86400)::numeric(10,2) AS avg_processing_days FROM risk_events e JOIN (SELECT event_id, MAX(audit_time) AS status_change_time FROM audit_logs WHERE audit_type = 'STATUS_CHANGE' AND audit_result = 'RESOLVED' GROUP BY event_id) r ON e.event_id = r.event_id GROUP BY event_type;","thinking":"","ambiguous":"False"}
{"id":4127521896,"db_name":"risk_control","question":"找出所有触发规则的预警信息及其对应的风险事件状态。","gt_sql":"SELECT a.alert_content, re.status FROM alerts a JOIN risk_events re ON a.event_id = re.event_id WHERE a.rule_id IS NOT NULL;","pred_sql":"SELECT a.alert_id, a.alert_content, a.alert_time, a.status AS alert_status, e.event_id, e.status AS event_status FROM alerts a JOIN risk_events e ON a.event_id = e.event_id WHERE a.rule_id IS NOT NULL;","thinking":"","ambiguous":"False"}
{"id":4089186720,"db_name":"risk_control","question":"查询所有在2023年进行过高风险交易（风险评分大于80）且产生过高级别预警的客户，显示客户名称、高风险交易次数和高级别预警次数。","gt_sql":"SELECT c.customer_name, COUNT(DISTINCT t.transaction_id) as high_risk_transactions, COUNT(DISTINCT a.alert_id) as high_level_alerts FROM customers c JOIN transactions t ON c.customer_id = t.customer_id LEFT JOIN alerts a ON t.event_id = a.event_id WHERE t.risk_score \u003e 80 AND a.alert_level = '高' AND EXTRACT(YEAR FROM t.transaction_date) = 2023 GROUP BY c.customer_id, c.customer_name HAVING COUNT(DISTINCT t.transaction_id) \u003e 0 AND COUNT(DISTINCT a.alert_id) \u003e 0 ORDER BY high_risk_transactions DESC, high_level_alerts DESC;","pred_sql":"SELECT c.customer_name, COUNT(DISTINCT t.transaction_id) AS high_risk_transaction_count, COUNT(DISTINCT a.alert_id) AS high_level_alert_count FROM customers c JOIN transactions t ON c.customer_id = t.customer_id JOIN alerts a ON t.event_id = a.event_id WHERE t.risk_score \u003e 80 AND t.transaction_date BETWEEN '2023-01-01' AND '2023-12-31' AND a.alert_level = 'HIGH' GROUP BY c.customer_id, c.customer_name HAVING COUNT(DISTINCT t.transaction_id) \u003e 0 AND COUNT(DISTINCT a.alert_id) \u003e 0;","thinking":"","ambiguous":"False"}
{"id":907497664,"db_name":"risk_control","question":"列出每个风险事件的严重程度及其关联的风险评估结果。","gt_sql":"SELECT re.event_id, re.severity, ra.risk_level FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id;","pred_sql":"SELECT re.event_id, re.severity, ra.risk_level AS assessment_result FROM risk_events re LEFT JOIN risk_assessments ra ON re.event_id = ra.event_id;","thinking":"","ambiguous":"False"}
{"id":4046233588,"db_name":"risk_control","question":"查询所有与特定风险事件关联的交易记录。","gt_sql":"SELECT transaction_id, transaction_type FROM transactions WHERE event_id = 'RE9297';","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":950586637,"db_name":"risk_control","question":"统计每种客户类型的数量","gt_sql":"SELECT c.customer_type, COUNT(c.customer_id) AS customer_count FROM customers c GROUP BY c.customer_type;","pred_sql":"SELECT customer_type, COUNT(*) AS count FROM customers GROUP BY customer_type;","thinking":"","ambiguous":"False"}
{"id":1374953478,"db_name":"risk_control","question":"获取所有风险评估及其关联的风险事件信息。","gt_sql":"SELECT ra.assessment_id, re.event_description FROM risk_assessments ra JOIN risk_events re ON ra.event_id = re.event_id;","pred_sql":"SELECT ra.assessment_id, re.event_description FROM risk_assessments ra JOIN risk_events re ON ra.event_id = re.event_id;","thinking":"","ambiguous":"False"}
{"id":3381418272,"db_name":"risk_control","question":"找出所有高风险客户中，最近30天内没有任何交易记录的客户","gt_sql":"SELECT c.customer_id, c.customer_name, c.risk_level FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id AND t.transaction_date \u003e= date('now') - INTERVAL '30 days' WHERE c.risk_level = '高' AND t.transaction_id IS NULL","pred_sql":"AMBIGUOUS_QUERY","thinking":"","ambiguous":"True"}
{"id":2179442925,"db_name":"risk_control","question":"列出所有高风险等级的客户及其最近一次交易信息，包括客户名称、风险等级、最近交易日期、交易金额和交易风险评分。","gt_sql":"SELECT c.customer_id, c.customer_name, c.risk_level, t.transaction_date, t.amount, t.risk_score FROM customers c LEFT JOIN (SELECT customer_id, transaction_date, amount, risk_score, ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY transaction_date DESC) as rn FROM transactions) t ON c.customer_id = t.customer_id WHERE c.risk_level = '高' AND t.rn = 1 ORDER BY t.risk_score DESC, t.amount DESC","pred_sql":"SELECT c.customer_id, c.customer_name, c.risk_level, t.transaction_date AS last_transaction_date, t.amount, t.risk_score FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = 'high' AND t.transaction_date = (SELECT MAX(transaction_date) FROM transactions WHERE customer_id = c.customer_id);","thinking":"","ambiguous":"False"}
{"id":1859945760,"db_name":"risk_control","question":"统计每种交易类型的成功率，并显示交易数量。","gt_sql":"SELECT t.transaction_type, COUNT(t.transaction_id) AS transaction_count, COUNT(CASE WHEN t.status = '成功' THEN 1 END) AS success_count FROM transactions t GROUP BY t.transaction_type;","pred_sql":"SELECT transaction_type, COUNT(*) AS total_transactions, SUM(CASE WHEN status = 'success' THEN 1 ELSE 0 END) AS successful_transactions FROM transactions GROUP BY transaction_type;","thinking":"","ambiguous":"False"}
{"id":2798341435,"db_name":"risk_control","question":"列出所有风险评估结果为\"高\"风险的事件，以及相关的缓解计划和负责人","gt_sql":"SELECT e.event_id, e.event_type, a.risk_level, a.mitigation_plan, a.assessor FROM risk_events e JOIN risk_assessments a ON e.event_id = a.event_id WHERE a.risk_level = '高'","pred_sql":"SELECT re.event_id, re.event_type, ra.risk_level, ra.mitigation_plan, ra.assessor FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE ra.risk_level = '高';","thinking":"","ambiguous":"False"}
{"id":2480313897,"db_name":"risk_control","question":"哪些客户的风险等级为高，并且他们的信用评分低于700？","gt_sql":"SELECT c.customer_id, c.customer_name, c.credit_score FROM customers c WHERE c.risk_level = '高' AND c.credit_score \u003c 700;","pred_sql":"SELECT customer_id, customer_name, credit_score FROM customers WHERE risk_level = '高' AND credit_score \u003c 700;","thinking":"","ambiguous":"False"}
{"id":4249746696,"db_name":"risk_control","question":"查询所有风险等级为'高'且信用评分低于600的客户","gt_sql":"SELECT * FROM customers WHERE risk_level = '高' AND credit_score \u003c 600","pred_sql":"SELECT customer_id, customer_name, customer_type, credit_score, risk_level, registration_date, last_update_date FROM customers WHERE risk_level = '高' AND credit_score \u003c 600;","thinking":"","ambiguous":"False"}
{"id":3634061359,"db_name":"risk_control","question":"查询所有客户的风险等级及其交易金额总和，要求交易状态为成功。","gt_sql":"SELECT c.customer_id, c.risk_level, SUM(t.amount) AS total_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.status = '成功' GROUP BY c.customer_id, c.risk_level;","pred_sql":"SELECT c.customer_id, c.risk_level, SUM(t.amount) AS total_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.status = 'success' GROUP BY c.customer_id, c.risk_level;","thinking":"","ambiguous":"False"}
{"id":1094205818,"db_name":"risk_control","question":"查询所有已批准的风险报告及其相关的风险事件详情","gt_sql":"SELECT rr.report_id, rr.report_type, rr.approval_status, re.event_type, re.event_description FROM risk_reports rr JOIN risk_events re ON rr.event_id = re.event_id WHERE rr.approval_status = '已批准'","pred_sql":"SELECT r.report_id, r.report_type, r.approval_status, e.event_type, e.event_description FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id WHERE r.approval_status = 'approved';","thinking":"","ambiguous":"False"}
{"id":4008892599,"db_name":"risk_control","question":"哪位作者提交的风险报告最多？","gt_sql":"SELECT author, COUNT(*) as report_count FROM risk_reports GROUP BY author ORDER BY report_count DESC LIMIT 1","pred_sql":"SELECT author AS \"作者的名称\", COUNT(*) AS \"提交的风险报告数量\" FROM risk_reports GROUP BY author ORDER BY COUNT(*) DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1522060162,"db_name":"risk_control","question":"列出所有未处理的风险事件及其报告人。","gt_sql":"SELECT event_id, event_type, reporter FROM risk_events WHERE status = '未处理';","pred_sql":"SELECT event_id, event_type, reporter FROM risk_events WHERE status != 'processed';","thinking":"","ambiguous":"False"}
{"id":2054103027,"db_name":"risk_control","question":"列出所有客户及其最后更新日期，筛选出注册日期在2021年之后的客户。","gt_sql":"SELECT c.customer_name, c.last_update_date FROM customers c WHERE c.registration_date \u003e '2021-01-01';","pred_sql":"SELECT customer_name, last_update_date FROM customers WHERE registration_date \u003e '2020-12-31';","thinking":"","ambiguous":"False"}
{"id":3283769605,"db_name":"risk_control","question":"查询所有由'高志远'审批的风险报告及其相关的风险事件信息","gt_sql":"SELECT rr.*, re.event_type, re.event_description FROM risk_reports rr LEFT JOIN risk_events re ON rr.event_id = re.event_id WHERE rr.approved_by = '高志远'","pred_sql":"SELECT r.report_id, r.report_type, r.report_date, r.report_content, r.author, r.approval_status, e.event_id, e.event_type, e.event_description FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id WHERE r.approved_by = '高志远';","thinking":"","ambiguous":"False"}
{"id":747719750,"db_name":"risk_control","question":"查询所有风险指标的当前值、阈值和最后更新时间","gt_sql":"SELECT ri.indicator_id, ri.indicator_name, ri.threshold_value, rml.actual_value, rml.monitoring_date as last_update_time FROM risk_indicators ri LEFT JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs WHERE indicator_id = ri.indicator_id)","pred_sql":"SELECT ri.indicator_id, ri.indicator_name, ri.threshold_value, rml.actual_value, rml.monitoring_date FROM risk_indicators ri LEFT JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs WHERE indicator_id = ri.indicator_id) OR rml.monitoring_date IS NULL;","thinking":"","ambiguous":"False"}
{"id":334580003,"db_name":"risk_control","question":"查询所有风险监控日志与其相关的风险指标。","gt_sql":"SELECT ml.log_id, ml.actual_value, ri.indicator_name FROM risk_monitoring_logs ml JOIN risk_indicators ri ON ml.indicator_id = ri.indicator_id;","pred_sql":"SELECT rml.log_id, rml.actual_value, ri.indicator_name FROM risk_monitoring_logs rml JOIN risk_indicators ri ON rml.indicator_id = ri.indicator_id;","thinking":"","ambiguous":"False"}
{"id":388467912,"db_name":"risk_control","question":"获取风险评估中影响程度评分和发生概率评分的平均值。","gt_sql":"SELECT AVG(impact_score) AS avg_impact, AVG(probability_score) AS avg_probability FROM risk_assessments;","pred_sql":"SELECT AVG(impact_score) AS avg_impact_score, AVG(probability_score) AS avg_probability_score FROM risk_assessments;","thinking":"","ambiguous":"False"}
{"id":3589660339,"db_name":"risk_control","question":"列出所有风险事件及其相关的风险评估，要求评估人不为空。","gt_sql":"SELECT re.event_id, re.event_description, ra.assessor FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE ra.assessor IS NOT NULL;","pred_sql":"SELECT re.event_id, re.event_description, ra.assessor FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE ra.assessor IS NOT NULL;","thinking":"","ambiguous":"False"}
{"id":1785182803,"db_name":"risk_control","question":"请找出所有客户中，交易类型为“退款”的记录，并计算其交易金额的总和。","gt_sql":"SELECT SUM(amount) FROM transactions WHERE transaction_type = '退款';","pred_sql":"SELECT SUM(amount) FROM transactions WHERE transaction_type = '退款';","thinking":"","ambiguous":"False"}
{"id":3949045999,"db_name":"risk_control","question":"列出所有风险指标及其最新的监控记录","gt_sql":"SELECT ri.*, rml.actual_value, rml.monitoring_date FROM risk_indicators ri LEFT JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs WHERE indicator_id = ri.indicator_id)","pred_sql":"SELECT ri.indicator_id, ri.indicator_name, ri.indicator_description, ri.measurement_unit, ri.threshold_value, rml.monitoring_date, rml.actual_value, rml.is_exceeding_threshold FROM risk_indicators ri LEFT JOIN (SELECT indicator_id, monitoring_date, actual_value, is_exceeding_threshold FROM risk_monitoring_logs WHERE (indicator_id, monitoring_date) IN (SELECT indicator_id, MAX(monitoring_date) FROM risk_monitoring_logs GROUP BY indicator_id)) rml ON ri.indicator_id = rml.indicator_id;","thinking":"","ambiguous":"False"}
{"id":1365503712,"db_name":"risk_control","question":"计算每个风险类型的平均缓解计划执行时间","gt_sql":"SELECT re.event_type, AVG(ra.assessment_date - re.occurrence_time) as avg_mitigation_time FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id GROUP BY re.event_type","pred_sql":"SELECT re.event_type, AVG(EXTRACT(EPOCH FROM (ra.assessment_date - re.occurrence_time))/3600) AS avg_mitigation_hours FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id GROUP BY re.event_type;","thinking":"","ambiguous":"False"}
{"id":454781039,"db_name":"risk_control","question":"统计每种风险类型下的风险事件数量。","gt_sql":"SELECT event_type, COUNT(*) as event_count FROM risk_events GROUP BY event_type;","pred_sql":"SELECT event_type, COUNT(*) AS event_count FROM risk_events GROUP BY event_type ORDER BY event_count DESC;","thinking":"","ambiguous":"False"}
{"id":312146930,"db_name":"risk_control","question":"获取所有风险评估及其对应的风险事件和评估人。","gt_sql":"SELECT ra.assessment_id, re.event_description, ra.assessor FROM risk_assessments ra JOIN risk_events re ON ra.event_id = re.event_id;","pred_sql":"SELECT ra.assessment_id, re.event_description, ra.assessor FROM risk_assessments ra JOIN risk_events re ON ra.event_id = re.event_id;","thinking":"","ambiguous":"False"}
{"id":3050678212,"db_name":"risk_control","question":"请列出风险监控日志中，实际值超过阈值的所有记录，并计算这些记录的总数。","gt_sql":"SELECT * FROM risk_monitoring_logs WHERE is_exceeding_threshold = TRUE; SELECT COUNT(*) FROM risk_monitoring_logs WHERE is_exceeding_threshold = TRUE;","pred_sql":"SELECT * FROM risk_monitoring_logs WHERE is_exceeding_threshold = TRUE;","thinking":"","ambiguous":"False"}
{"id":2500244814,"db_name":"risk_control","question":"查找每个风险事件的评估结果及缓解计划。","gt_sql":"SELECT re.event_id, ra.assessment_id, ra.mitigation_plan FROM risk_events re LEFT JOIN risk_assessments ra ON re.event_id = ra.event_id;","pred_sql":"SELECT re.event_id, ra.assessment_id, ra.mitigation_plan FROM risk_events re LEFT JOIN risk_assessments ra ON re.event_id = ra.event_id;","thinking":"","ambiguous":"False"}
{"id":2753692877,"db_name":"risk_control","question":"查找所有已批准的风险报告及其作者信息。","gt_sql":"SELECT report_id, report_type, report_date, author FROM risk_reports WHERE approval_status = '已批准';","pred_sql":"SELECT report_id, report_type, report_date, author FROM risk_reports WHERE approval_status = 'approved';","thinking":"","ambiguous":"False"}
{"id":2701292510,"db_name":"risk_control","question":"列出所有风险等级为高但信用评分高于平均水平的客户","gt_sql":"SELECT c.* FROM customers c WHERE c.risk_level = '高' AND c.credit_score \u003e (SELECT AVG(credit_score) FROM customers)","pred_sql":"SELECT customer_id, customer_name, customer_type, credit_score, risk_level, registration_date, last_update_date FROM customers WHERE risk_level = '高' AND credit_score \u003e (SELECT AVG(credit_score) FROM customers);","thinking":"","ambiguous":"False"}
{"id":3788454929,"db_name":"risk_control","question":"获取所有预警信息的内容以及分配给谁处理。","gt_sql":"SELECT alert_id, alert_content, assigned_to FROM alerts;","pred_sql":"SELECT alert_id, alert_content, assigned_to FROM alerts;","thinking":"","ambiguous":"False"}
{"id":1494274200,"db_name":"risk_control","question":"查找所有已解决的风险事件中，解决时间最长的前10个事件，显示事件描述、严重程度、创建时间和解决时间。","gt_sql":"SELECT re.event_id, re.event_description, re.severity, re.created_at, MAX(ra.assessment_date) AS resolved_date, MAX(ra.assessment_date) - re.created_at AS resolution_time FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE re.status = '已解决' GROUP BY re.event_id, re.event_description, re.severity, re.created_at ORDER BY resolution_time DESC LIMIT 10","pred_sql":"SELECT e.event_id, e.event_description, e.severity, e.created_at, a.audit_time AS resolution_time, (a.audit_time - e.created_at) AS processing_duration FROM risk_events e JOIN audit_logs a ON e.event_id = a.event_id WHERE e.status = 'RESOLVED' AND a.audit_type = 'RISK_EVENT_RESOLUTION' ORDER BY processing_duration DESC LIMIT 10;","thinking":"","ambiguous":"False"}
{"id":2741655674,"db_name":"risk_control","question":"查找所有激活状态的规则配置及其关联的风险指标","gt_sql":"SELECT rc.*, ri.indicator_name FROM rule_configurations rc LEFT JOIN risk_indicators ri ON rc.indicator_id = ri.indicator_id WHERE rc.is_active = TRUE","pred_sql":"SELECT rc.rule_id, rc.rule_name, rc.rule_description, rc.rule_type, rc.rule_condition, rc.rule_action, rc.is_active, rc.created_at, rc.updated_at, ri.indicator_id, ri.indicator_name FROM rule_configurations rc JOIN risk_indicators ri ON rc.indicator_id = ri.indicator_id WHERE rc.is_active = true;","thinking":"","ambiguous":"False"}
{"id":4006191467,"db_name":"risk_control","question":"计算每种风险等级的客户数量，并列出风险等级及其客户总数。","gt_sql":"SELECT risk_level, COUNT(*) AS customer_count FROM customers GROUP BY risk_level;","pred_sql":"SELECT risk_level, COUNT(*) AS customer_count FROM customers GROUP BY risk_level;","thinking":"","ambiguous":"False"}
{"id":1366443289,"db_name":"risk_control","question":"获取所有未处理的风险事件及其报告人。","gt_sql":"SELECT event_id, event_description, reporter FROM risk_events WHERE status = '未处理';","pred_sql":"SELECT e.event_id, e.event_description, e.reporter FROM risk_events e WHERE e.status != 'processed';","thinking":"","ambiguous":"False"}
{"id":2713864982,"db_name":"risk_control","question":"找出所有风险事件中，严重程度为3及以上的事件，并列出其创建时间。","gt_sql":"SELECT created_at FROM risk_events WHERE severity \u003e= 3;","pred_sql":"SELECT created_at FROM risk_events WHERE severity \u003e= 3;","thinking":"","ambiguous":"False"}
{"id":4176420377,"db_name":"risk_control","question":"获取所有风险评估的缓解计划及其评估人","gt_sql":"SELECT ra.assessment_id, ra.mitigation_plan, ra.assessor FROM risk_assessments ra;","pred_sql":"SELECT assessment_id, mitigation_plan, assessor FROM risk_assessments;","thinking":"","ambiguous":"False"}
{"id":2609744326,"db_name":"risk_control","question":"列出所有未解决的高级别预警，包括相关的风险事件描述和最新的审核意见","gt_sql":"SELECT a.alert_id, a.alert_content, a.alert_level, re.event_description, al.audit_comments, al.audit_time FROM alerts a JOIN risk_events re ON a.event_id = re.event_id LEFT JOIN audit_logs al ON a.alert_id = al.alert_id WHERE a.status != '已解决' AND a.alert_level = '高' AND al.audit_time = (SELECT MAX(audit_time) FROM audit_logs WHERE alert_id = a.alert_id)","pred_sql":"SELECT a.alert_id, a.alert_content, a.alert_level, re.event_description, al.audit_comments, al.audit_time FROM alerts a JOIN risk_events re ON a.event_id = re.event_id LEFT JOIN (SELECT alert_id, audit_comments, audit_time FROM audit_logs WHERE alert_id IS NOT NULL ORDER BY audit_time DESC LIMIT 1) al ON a.alert_id = al.alert_id WHERE a.status != 'RESOLVED' AND a.alert_level = 'HIGH';","thinking":"","ambiguous":"False"}
{"id":1472140605,"db_name":"risk_control","question":"查询所有风险评估结果为\"高\"的事件及其相关的缓解计划","gt_sql":"SELECT ra.assessment_id, ra.risk_level, ra.mitigation_plan, re.event_id, re.event_type, re.event_description FROM risk_assessments ra INNER JOIN risk_events re ON ra.event_id = re.event_id WHERE ra.risk_level = '高'","pred_sql":"SELECT ra.assessment_id, ra.risk_level, ra.mitigation_plan, re.event_id, re.event_type, re.event_description FROM risk_assessments ra JOIN risk_events re ON ra.event_id = re.event_id WHERE ra.risk_level = '高';","thinking":"","ambiguous":"False"}
{"id":4016844576,"db_name":"risk_control","question":"哪些高风险等级的客户在过去一年内进行了大额交易（超过100,000）？","gt_sql":"SELECT DISTINCT c.customer_id, c.customer_name, t.amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = '高' AND t.amount \u003e 100000 AND t.transaction_date \u003e= date('now') - INTERVAL '1 year'","pred_sql":"SELECT c.customer_id, c.customer_name, t.amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = 'high' AND t.amount \u003e 100000 AND t.transaction_date \u003e= CURRENT_DATE - INTERVAL '1 year';","thinking":"","ambiguous":"False"}
{"id":1206095116,"db_name":"risk_control","question":"查询风险评估中，影响程度评分大于8且风险等级为高的评估记录。","gt_sql":"SELECT assessment_id, event_id FROM risk_assessments WHERE impact_score \u003e 8 AND risk_level = '高';","pred_sql":"SELECT assessment_id, event_id FROM risk_assessments WHERE impact_score \u003e 8 AND risk_level = '高';","thinking":"","ambiguous":"False"}
{"id":747204718,"db_name":"risk_control","question":"获取所有风险事件及其报告类型和内容。","gt_sql":"SELECT re.event_id, rr.report_type, rr.report_content FROM risk_events re JOIN risk_reports rr ON re.event_id = rr.event_id;","pred_sql":"SELECT re.event_id, rr.report_type, rr.report_content FROM risk_events re LEFT JOIN risk_reports rr ON re.event_id = rr.event_id;","thinking":"","ambiguous":"False"}
{"id":380031248,"db_name":"supervise","question":"2023年第三季度，哪些金融机构的监管报告类型为'季度报告'且审批状态为'需修改'，并且这些机构的不良贷款率超过2%？","gt_sql":"SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON fii.institution_id = npl.institution_id WHERE rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND rr.report_date BETWEEN '2023-07-01' AND '2023-09-30' AND npl.npl_ratio \u003e 2.0;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE rr.report_date BETWEEN '2023-07-01' AND '2023-09-30' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND npl.report_date BETWEEN '2023-07-01' AND '2023-09-30' AND npl.npl_ratio \u003e 2;","thinking":"","ambiguous":"False"}
{"id":796615861,"db_name":"supervise","question":"获取所有在2023年11月1日提交的监管报告。","gt_sql":"SELECT * FROM regulatory_reports WHERE submission_date = '2023-11-01';","pred_sql":"SELECT report_id, institution_id, report_date, report_type, submission_date, approval_status, comments FROM regulatory_reports WHERE submission_date = '2023-11-01';","thinking":"","ambiguous":"False"}
{"id":226307394,"db_name":"supervise","question":"2023年6月，哪些金融机构的资本充足率表中总资本充足率（total_car）低于12%，并且其不良贷款表中的不良贷款率（npl_ratio）高于2%？","gt_sql":"SELECT fii.institution_name FROM financial_institution_info fii JOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id JOIN non_performing_loans npl ON fii.institution_id = npl.institution_id WHERE car.report_date = '2023-06-01' AND npl.report_date = '2023-06-01' AND car.total_car \u003c 12 AND npl.npl_ratio \u003e 2;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE car.report_date = '2023-06-30' AND npl.report_date = '2023-06-30' AND car.total_car \u003c 12 AND npl.npl_ratio \u003e 2;","thinking":"","ambiguous":"False"}
{"id":2186232166,"db_name":"supervise","question":"市场风险暴露占总风险暴露比例最高的机构是哪家？","gt_sql":"SELECT fi.institution_name FROM risk_exposure re JOIN financial_institution_info fi ON re.institution_id = fi.institution_id ORDER BY (re.market_risk_exposure / re.total_risk_exposure) DESC LIMIT 1;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id ORDER BY (re.market_risk_exposure / NULLIF(re.total_risk_exposure, 0)) DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":3832687129,"db_name":"supervise","question":"2023年第三季度，哪些金融机构的监管报告中报告类型为'季度报告'且审批状态为'需修改'，并且这些机构的注册资本超过5000万元？","gt_sql":"SELECT fii.institution_name, rr.report_id, rr.report_type, rr.approval_status, fii.registered_capital FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND rr.submission_date \u003e= '2023-07-01' AND rr.submission_date \u003c '2023-10-01' AND fii.registered_capital \u003e 50000000;","pred_sql":"SELECT fi.institution_name, rr.report_id, rr.report_type, rr.approval_status, fi.registered_capital FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_date BETWEEN '2023-07-01' AND '2023-09-30' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND fi.registered_capital \u003e 50000000;","thinking":"","ambiguous":"False"}
{"id":3593789396,"db_name":"supervise","question":"哪家机构的风险加权资产密度（风险加权资产/总资产）最高？请显示机构名称和风险加权资产密度。","gt_sql":"SELECT fi.institution_name, (car.risk_weighted_assets / bs.total_assets * 100) AS rwa_density FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN balance_sheet bs ON fi.institution_id = bs.institution_id ORDER BY rwa_density DESC LIMIT 1","pred_sql":"SELECT fi.institution_name, (car.risk_weighted_assets / bs.total_assets) AS risk_weighted_asset_density FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN balance_sheet bs ON fi.institution_id = bs.institution_id AND car.report_date = bs.report_date ORDER BY risk_weighted_asset_density DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":3734281326,"db_name":"supervise","question":"查询流动性比率表中流动性覆盖率和净稳定资金比例的关系。","gt_sql":"SELECT liquidity_coverage_ratio, net_stable_funding_ratio FROM liquidity_ratio;","pred_sql":"SELECT liquidity_coverage_ratio, net_stable_funding_ratio FROM liquidity_ratio;","thinking":"","ambiguous":"False"}
{"id":2976622725,"db_name":"supervise","question":"哪些机构在2023年12月提交的合规记录未解决？","gt_sql":"SELECT institution_id FROM compliance_records WHERE record_date \u003e= '2023-12-01' AND record_date \u003c '2024-01-01' AND status = '未解决';","pred_sql":"SELECT DISTINCT cr.institution_id FROM compliance_records cr WHERE cr.record_date BETWEEN '2023-12-01' AND '2023-12-31' AND cr.status != 'Resolved';","thinking":"","ambiguous":"False"}
{"id":3196242817,"db_name":"supervise","question":"查询2024年所有机构的贷款总额及其对应的存款总额。","gt_sql":"SELECT institution_id, SUM(loans_and_advances) AS total_loans, SUM(deposits) AS total_deposits FROM balance_sheet WHERE EXTRACT(YEAR FROM report_date) = 2024 GROUP BY institution_id;","pred_sql":"SELECT b.institution_id, SUM(b.loans_and_advances) AS total_loans, SUM(b.deposits) AS total_deposits FROM balance_sheet b WHERE EXTRACT(YEAR FROM b.report_date) = 2024 GROUP BY b.institution_id;","thinking":"","ambiguous":"False"}
{"id":1889616376,"db_name":"supervise","question":"查找报告日期为2039年6月8日的资产负债表数据。","gt_sql":"SELECT * FROM balance_sheet WHERE report_date = '2039-06-08';","pred_sql":"SELECT institution_id, report_date, total_assets, total_liabilities, total_equity, cash_and_equivalents, loans_and_advances, deposits FROM balance_sheet WHERE report_date = '2039-06-08';","thinking":"","ambiguous":"False"}
{"id":453935379,"db_name":"supervise","question":"不良贷款率超过3%的机构有多少家？","gt_sql":"SELECT COUNT(DISTINCT institution_id) FROM non_performing_loans WHERE npl_ratio \u003e 3;","pred_sql":"SELECT COUNT(DISTINCT n.institution_id) FROM non_performing_loans n WHERE n.npl_ratio \u003e 3;","thinking":"","ambiguous":"False"}
{"id":44191459,"db_name":"supervise","question":"查询2023年3月1日的净利息收入和非利息收入。","gt_sql":"SELECT net_interest_income, non_interest_income FROM income_statement WHERE report_date = '2023-03-01';","pred_sql":"SELECT i.net_interest_income, i.non_interest_income FROM income_statement i WHERE i.report_date = '2023-03-01';","thinking":"","ambiguous":"False"}
{"id":584013962,"db_name":"supervise","question":"查询不良贷款表中不良贷款金额与贷款总额的比例。","gt_sql":"SELECT npl_amount / total_loans AS npl_ratio FROM non_performing_loans;","pred_sql":"SELECT npl_amount / total_loans AS npl_ratio FROM non_performing_loans;","thinking":"","ambiguous":"False"}
{"id":2733428482,"db_name":"supervise","question":"在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'且审批状态为'需修改'，并且这些机构在2023年的不良贷款率超过1%？","gt_sql":"SELECT fi.institution_name FROM regulatory_reports rr JOIN financial_institution_info fi ON rr.institution_id = fi.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE rr.submission_date \u003e= '2023-01-01' AND rr.submission_date \u003c '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND npl.report_date \u003e= '2023-01-01' AND npl.report_date \u003c '2024-01-01' AND npl.npl_ratio \u003e 1.00;","pred_sql":"SELECT DISTINCT f.institution_name FROM financial_institution_info f JOIN regulatory_reports r ON f.institution_id = r.institution_id JOIN non_performing_loans n ON f.institution_id = n.institution_id WHERE r.report_type = '季度报告' AND r.approval_status = '需修改' AND EXTRACT(YEAR FROM r.report_date) = 2023 AND EXTRACT(YEAR FROM n.report_date) = 2023 AND n.npl_ratio \u003e 1;","thinking":"","ambiguous":"False"}
{"id":951459633,"db_name":"supervise","question":"2023年10月1日，哪些金融机构提交了半年度报告，并且这些报告的审批状态是待审核？","gt_sql":"SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.report_date = '2023-10-01' AND rr.report_type = '半年度报告' AND rr.approval_status = '待审核';","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_date = '2023-10-01' AND rr.report_type = '半年度报告' AND rr.approval_status = '待审核';","thinking":"","ambiguous":"False"}
{"id":1829456676,"db_name":"supervise","question":"注册资本最高的五家非银行金融机构是哪些？","gt_sql":"SELECT institution_name, registered_capital FROM financial_institution_info WHERE institution_type != '商业银行' ORDER BY registered_capital DESC LIMIT 5;","pred_sql":"SELECT institution_name, registered_capital FROM financial_institution_info WHERE institution_type != '银行' ORDER BY registered_capital DESC LIMIT 5;","thinking":"","ambiguous":"False"}
{"id":1953695337,"db_name":"supervise","question":"总资产排名前500的机构中，有多少家的不良贷款率低于1%且拨备覆盖率高于200%？","gt_sql":"SELECT COUNT(*) FROM (SELECT institution_id FROM balance_sheet ORDER BY total_assets DESC LIMIT 500) AS top500 INNER JOIN non_performing_loans ON top500.institution_id = non_performing_loans.institution_id WHERE npl_ratio \u003c 1 AND provision_coverage_ratio \u003e 200;","pred_sql":"SELECT COUNT(*) AS compliant_institutions_count FROM (SELECT fi.institution_id FROM financial_institution_info fi JOIN balance_sheet bs ON fi.institution_id = bs.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id AND bs.report_date = npl.report_date WHERE bs.report_date = (SELECT MAX(report_date) FROM balance_sheet) ORDER BY bs.total_assets DESC LIMIT 500) AS top_500_assets JOIN non_performing_loans npl ON top_500_assets.institution_id = npl.institution_id WHERE npl.npl_ratio \u003c 1 AND npl.provision_coverage_ratio \u003e 200 AND npl.report_date = (SELECT MAX(report_date) FROM non_performing_loans);","thinking":"","ambiguous":"False"}
{"id":1414930652,"db_name":"supervise","question":"2023年12月1日，哪些金融机构的资本充足率表中核心一级资本充足率低于10%，并且其监管报告的审批状态为'待审核'？","gt_sql":"SELECT fii.institution_name FROM financial_institution_info fii JOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id JOIN regulatory_reports rr ON fii.institution_id = rr.institution_id WHERE car.report_date = '2023-12-01' AND car.core_tier_1_ratio \u003c 10 AND rr.approval_status = '待审核';","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE car.report_date = '2023-12-01' AND car.core_tier_1_ratio \u003c 10 AND rr.report_date = '2023-12-01' AND rr.approval_status = '待审核';","thinking":"","ambiguous":"False"}
{"id":364214965,"db_name":"supervise","question":"过去两年中，营业收入增长率最高但净利润增长率最低的机构是哪一家？","gt_sql":"WITH income_growth AS (SELECT institution_id, (MAX(net_interest_income + non_interest_income) - MIN(net_interest_income + non_interest_income)) / MIN(net_interest_income + non_interest_income) * 100 AS income_growth_rate FROM income_statement WHERE report_date \u003e= date('now') - INTERVAL '2 years' GROUP BY institution_id), profit_growth AS (SELECT institution_id, (MAX(net_profit) - MIN(net_profit)) / MIN(net_profit) * 100 AS profit_growth_rate FROM income_statement WHERE report_date \u003e= date('now') - INTERVAL '2 years' GROUP BY institution_id) SELECT fii.institution_name FROM financial_institution_info fii JOIN income_growth ig ON fii.institution_id = ig.institution_id JOIN profit_growth pg ON fii.institution_id = pg.institution_id ORDER BY ig.income_growth_rate DESC, pg.profit_growth_rate ASC LIMIT 1;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN (SELECT i1.institution_id, ((i2.non_interest_income + i2.net_interest_income) - (i1.non_interest_income + i1.net_interest_income)) / (i1.non_interest_income + i1.net_interest_income) AS revenue_growth, ((i2.net_profit - i1.net_profit) / i1.net_profit) AS profit_growth FROM income_statement i1 JOIN income_statement i2 ON i1.institution_id = i2.institution_id AND i1.report_date = (SELECT MIN(report_date) FROM income_statement WHERE report_date \u003e= CURRENT_DATE - INTERVAL '2 years') AND i2.report_date = (SELECT MAX(report_date) FROM income_statement WHERE report_date \u003e= CURRENT_DATE - INTERVAL '2 years') WHERE i1.non_interest_income + i1.net_interest_income \u003e 0 AND i1.net_profit \u003e 0) ranked ON fi.institution_id = ranked.institution_id ORDER BY ranked.revenue_growth DESC, ranked.profit_growth ASC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":419882166,"db_name":"supervise","question":"获取2023年7月1日的监管报告及其审批状态。","gt_sql":"SELECT report_id, approval_status FROM regulatory_reports WHERE report_date = '2023-07-01';","pred_sql":"SELECT report_id, approval_status FROM regulatory_reports WHERE report_date = '2023-07-01';","thinking":"","ambiguous":"False"}
{"id":3742684421,"db_name":"supervise","question":"哪些机构的核心一级资本充足率、一级资本充足率和总资本充足率均高于行业平均水平？","gt_sql":"SELECT DISTINCT fi.institution_id, fi.institution_name FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id WHERE car.core_tier_1_ratio \u003e (SELECT AVG(core_tier_1_ratio) FROM capital_adequacy_ratio) AND car.tier_1_ratio \u003e (SELECT AVG(tier_1_ratio) FROM capital_adequacy_ratio) AND car.total_car \u003e (SELECT AVG(total_car) FROM capital_adequacy_ratio);","pred_sql":"SELECT fi.institution_id, fi.institution_name FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id WHERE car.core_tier_1_ratio \u003e (SELECT AVG(core_tier_1_ratio) FROM capital_adequacy_ratio) AND car.tier_1_ratio \u003e (SELECT AVG(tier_1_ratio) FROM capital_adequacy_ratio) AND car.total_car \u003e (SELECT AVG(total_car) FROM capital_adequacy_ratio);","thinking":"","ambiguous":"False"}
{"id":2448874069,"db_name":"supervise","question":"查找2023年提交的合规记录中状态为'已解决'的记录。","gt_sql":"SELECT * FROM compliance_records WHERE record_date \u003e= '2023-01-01' AND record_date \u003c '2024-01-01' AND status = '已解决';","pred_sql":"SELECT record_id, institution_id, record_date, compliance_type, description, severity, status, resolution_date FROM compliance_records WHERE status = '已解决' AND EXTRACT(YEAR FROM record_date) = 2023;","thinking":"","ambiguous":"False"}
{"id":3679648301,"db_name":"supervise","question":"2023年第三季度提交的监管报告中，哪种报告类型的提交数量最多？","gt_sql":"SELECT report_type, COUNT(*) AS submission_count FROM regulatory_reports WHERE submission_date BETWEEN '2023-07-01' AND '2023-09-30' GROUP BY report_type ORDER BY submission_count DESC LIMIT 1","pred_sql":"SELECT report_type, COUNT(*) AS submission_count FROM regulatory_reports WHERE report_date BETWEEN '2023-07-01' AND '2023-09-30' GROUP BY report_type ORDER BY submission_count DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":293590145,"db_name":"supervise","question":"获取所有机构的资本充足率表中一级资本充足率的分布情况。","gt_sql":"SELECT tier_1_ratio FROM capital_adequacy_ratio;","pred_sql":"SELECT institution_id, report_date, tier_1_ratio FROM capital_adequacy_ratio ORDER BY institution_id, report_date;","thinking":"","ambiguous":"False"}
{"id":685587392,"db_name":"supervise","question":"获取流动性覆盖率高于100%的机构名称和报告日期。","gt_sql":"SELECT fii.institution_name, lr.report_date FROM liquidity_ratio lr JOIN financial_institution_info fii ON lr.institution_id = fii.institution_id WHERE lr.liquidity_coverage_ratio \u003e 100;","pred_sql":"SELECT fi.institution_name, lr.report_date FROM financial_institution_info fi JOIN liquidity_ratio lr ON fi.institution_id = lr.institution_id WHERE lr.liquidity_coverage_ratio \u003e 100;","thinking":"","ambiguous":"False"}
{"id":727742801,"db_name":"supervise","question":"找出在过去两年中，资产负债率波动最大的五家金融机构，并分析它们的流动性覆盖率变化趋势。","gt_sql":"WITH asset_liability_ratio AS (SELECT institution_id, report_date, total_liabilities / total_assets AS al_ratio FROM balance_sheet WHERE report_date \u003e= date('now') - INTERVAL '2 years'), al_volatility AS (SELECT institution_id, MAX(al_ratio) - MIN(al_ratio) AS al_volatility FROM asset_liability_ratio GROUP BY institution_id), liquidity_trend AS (SELECT institution_id, report_date, liquidity_coverage_ratio, ROW_NUMBER() OVER (PARTITION BY institution_id ORDER BY report_date) AS row_num FROM liquidity_ratio WHERE report_date \u003e= date('now') - INTERVAL '2 years') SELECT fi.institution_name, av.al_volatility, COALESCE(ROUND((last.liquidity_coverage_ratio - first.liquidity_coverage_ratio) / first.liquidity_coverage_ratio * 100, 2), 0) AS lcr_change_percentage FROM financial_institution_info fi JOIN al_volatility av ON fi.institution_id = av.institution_id LEFT JOIN liquidity_trend first ON fi.institution_id = first.institution_id AND first.row_num = 1 LEFT JOIN liquidity_trend last ON fi.institution_id = last.institution_id AND last.row_num = (SELECT MAX(row_num) FROM liquidity_trend WHERE institution_id = fi.institution_id) ORDER BY av.al_volatility DESC LIMIT 5","pred_sql":"SELECT fi.institution_name, (MAX(bs.total_liabilities/bs.total_assets) - MIN(bs.total_liabilities/bs.total_assets)) * 100 AS leverage_ratio_fluctuation, ((MAX(lr.liquidity_coverage_ratio) - MIN(lr.liquidity_coverage_ratio)) / NULLIF(MIN(lr.liquidity_coverage_ratio), 0)) * 100 AS lcr_change_percentage FROM financial_institution_info fi JOIN balance_sheet bs ON fi.institution_id = bs.institution_id JOIN liquidity_ratio lr ON fi.institution_id = lr.institution_id WHERE bs.report_date \u003e= CURRENT_DATE - INTERVAL '2 years' AND lr.report_date \u003e= CURRENT_DATE - INTERVAL '2 years' GROUP BY fi.institution_id, fi.institution_name ORDER BY leverage_ratio_fluctuation DESC LIMIT 5;","thinking":"","ambiguous":"False"}
{"id":3429671168,"db_name":"supervise","question":"查看2023年03月的所有合规记录及其严重程度。","gt_sql":"SELECT record_id, institution_id, record_date, resolution_date, description, severity, status, compliance_type FROM compliance_records WHERE record_date \u003e= '2023-03-01' AND record_date \u003c '2023-04-01';","pred_sql":"SELECT record_id, institution_id, record_date, resolution_date, description, severity, status, compliance_type FROM compliance_records WHERE record_date BETWEEN '2023-03-01' AND '2023-03-31';","thinking":"","ambiguous":"False"}
{"id":3200376501,"db_name":"supervise","question":"查询2024年提交的所有机构的合规记录及其严重程度。","gt_sql":"SELECT institution_id, record_date, description, severity FROM compliance_records WHERE record_date \u003e= '2024-01-01' AND record_date \u003c '2025-01-01';","pred_sql":"SELECT c.institution_id, c.record_date, c.description, c.severity FROM compliance_records c WHERE EXTRACT(YEAR FROM c.record_date) = 2024;","thinking":"","ambiguous":"False"}
{"id":1891907399,"db_name":"supervise","question":"获取2023年10月1日所有机构的监管报告类型。","gt_sql":"SELECT report_type FROM regulatory_reports WHERE report_date = '2023-10-01';","pred_sql":"SELECT report_type FROM regulatory_reports WHERE report_date = '2023-10-01';","thinking":"","ambiguous":"False"}
{"id":11596427,"db_name":"supervise","question":"查找2023年所有合规记录中严重程度为'中'的记录。","gt_sql":"SELECT * FROM compliance_records WHERE record_date \u003e= '2023-01-01' AND record_date \u003c '2024-01-01' AND severity = '中';","pred_sql":"SELECT record_id, institution_id, record_date, compliance_type, description, severity, status, resolution_date FROM compliance_records WHERE severity = '中' AND record_date BETWEEN '2023-01-01' AND '2023-12-31';","thinking":"","ambiguous":"False"}
{"id":3129849565,"db_name":"supervise","question":"查询2023年10月1日的所有合规记录及其状态。","gt_sql":"SELECT * FROM compliance_records WHERE record_date = '2023-10-01';","pred_sql":"SELECT record_id, institution_id, record_date, compliance_type, description, severity, status, resolution_date FROM compliance_records WHERE record_date = '2023-10-01';","thinking":"","ambiguous":"False"}
{"id":3154891263,"db_name":"supervise","question":"哪些机构的流动性覆盖率、净稳定资金比例和贷存比均优于行业平均水平？","gt_sql":"SELECT DISTINCT lr.institution_id FROM liquidity_ratio lr WHERE lr.liquidity_coverage_ratio \u003e (SELECT AVG(liquidity_coverage_ratio) FROM liquidity_ratio) AND lr.net_stable_funding_ratio \u003e (SELECT AVG(net_stable_funding_ratio) FROM liquidity_ratio) AND lr.loan_to_deposit_ratio \u003e (SELECT AVG(loan_to_deposit_ratio) FROM liquidity_ratio);","pred_sql":"SELECT DISTINCT lr.institution_id FROM liquidity_ratio lr WHERE lr.liquidity_coverage_ratio \u003e (SELECT AVG(liquidity_coverage_ratio) FROM liquidity_ratio) AND lr.net_stable_funding_ratio \u003e (SELECT AVG(net_stable_funding_ratio) FROM liquidity_ratio) AND lr.loan_to_deposit_ratio \u003c (SELECT AVG(loan_to_deposit_ratio) FROM liquidity_ratio);","thinking":"","ambiguous":"False"}
{"id":1874414819,"db_name":"supervise","question":"列出2023年第三季度提交的所有监管报告中，审批状态为'需修改'的报告所属机构的名称、报告类型和提交日期，并按提交日期降序排列。","gt_sql":"SELECT fii.institution_name, rr.report_type, rr.submission_date FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.approval_status = '需修改' AND rr.submission_date \u003e= '2023-07-01' AND rr.submission_date \u003c '2023-10-01' ORDER BY rr.submission_date DESC;","pred_sql":"SELECT f.institution_name, r.report_type, r.submission_date FROM financial_institution_info f JOIN regulatory_reports r ON f.institution_id = r.institution_id WHERE r.approval_status = '需修改' AND r.report_date BETWEEN '2023-07-01' AND '2023-09-30' ORDER BY r.submission_date DESC;","thinking":"","ambiguous":"False"}
{"id":495816064,"db_name":"supervise","question":"资本充足率处于行业后25%的机构中，哪些机构的不良贷款率低于行业平均水平？","gt_sql":"SELECT fii.institution_name\nFROM capital_adequacy_ratio car\nJOIN non_performing_loans npl ON car.institution_id = npl.institution_id AND car.report_date = npl.report_date\nJOIN financial_institution_info fii ON car.institution_id = fii.institution_id\nWHERE car.total_car \u003c= (SELECT PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY total_car) FROM capital_adequacy_ratio)\nAND npl.npl_ratio \u003c (SELECT AVG(npl_ratio) FROM non_performing_loans);","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE car.total_car \u003c (SELECT percentile_cont(0.25) WITHIN GROUP (ORDER BY total_car) FROM capital_adequacy_ratio) AND npl.npl_ratio \u003c (SELECT AVG(npl_ratio) FROM non_performing_loans);","thinking":"","ambiguous":"False"}
{"id":4161304037,"db_name":"supervise","question":"获取所有金融机构的注册资本与机构类型。","gt_sql":"SELECT registered_capital, institution_type FROM financial_institution_info;","pred_sql":"SELECT institution_name, registered_capital, institution_type FROM financial_institution_info;","thinking":"","ambiguous":"False"}
{"id":1631317162,"db_name":"supervise","question":"获取所有金融机构的成立日期和法定代表人。","gt_sql":"SELECT establishment_date, legal_representative FROM financial_institution_info;","pred_sql":"SELECT establishment_date, legal_representative FROM financial_institution_info;","thinking":"","ambiguous":"False"}
{"id":2784626903,"db_name":"supervise","question":"查询所有机构的合规记录中状态为已解决的记录。","gt_sql":"SELECT * FROM compliance_records WHERE status = '已解决';","pred_sql":"SELECT record_id, institution_id, record_date, compliance_type, description, severity, status, resolution_date FROM compliance_records WHERE status = '已解决';","thinking":"","ambiguous":"False"}
{"id":1450759690,"db_name":"supervise","question":"2023年7月，哪些金融机构的监管报告状态为'需修改'，并且其不良贷款率超过1%？","gt_sql":"SELECT fii.institution_name, rr.approval_status, npl.npl_ratio FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON rr.institution_id = npl.institution_id AND rr.report_date = npl.report_date WHERE rr.report_date = '2023-07-01' AND rr.approval_status = '需修改' AND npl.npl_ratio \u003e 1.00;","pred_sql":"SELECT fi.institution_name, rr.approval_status, npl.npl_ratio FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE rr.report_date BETWEEN '2023-07-01' AND '2023-07-31' AND rr.approval_status = '需修改' AND npl.report_date BETWEEN '2023-07-01' AND '2023-07-31' AND npl.npl_ratio \u003e 1;","thinking":"","ambiguous":"False"}
{"id":862814083,"db_name":"supervise","question":"哪家机构的贷款和垫款与存款的比值最接近1？","gt_sql":"SELECT institution_id FROM liquidity_ratio ORDER BY ABS(loan_to_deposit_ratio - 1) LIMIT 1;","pred_sql":"SELECT institution_id FROM balance_sheet WHERE ABS(loans_and_advances/NULLIF(deposits, 0) - 1) = (SELECT MIN(ABS(loans_and_advances/NULLIF(deposits, 0) - 1)) FROM balance_sheet WHERE deposits \u003c\u003e 0) LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":2681992996,"db_name":"supervise","question":"查询不良贷款表中贷款总额超过1000亿的机构信息。","gt_sql":"SELECT institution_id FROM non_performing_loans WHERE total_loans \u003e 100000000000;","pred_sql":"SELECT DISTINCT fi.institution_id FROM financial_institution_info fi JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE npl.total_loans \u003e 100000000000;","thinking":"","ambiguous":"False"}
{"id":3797835240,"db_name":"supervise","question":"获取2026年4月27日的资产负债表中现金及现金等价物。","gt_sql":"SELECT cash_and_equivalents FROM balance_sheet WHERE report_date = '2026-04-27';","pred_sql":"SELECT cash_and_equivalents FROM balance_sheet WHERE report_date = '2026-04-27';","thinking":"","ambiguous":"False"}
{"id":788537141,"db_name":"supervise","question":"哪些机构的核心一级资本充足率低于9%？","gt_sql":"SELECT institution_id FROM capital_adequacy_ratio WHERE core_tier_1_ratio \u003c 9;","pred_sql":"SELECT DISTINCT f.institution_id, f.institution_name FROM financial_institution_info f JOIN capital_adequacy_ratio c ON f.institution_id = c.institution_id WHERE c.core_tier_1_ratio \u003c 9;","thinking":"","ambiguous":"False"}
{"id":2511418954,"db_name":"supervise","question":"在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'并且审批状态为'已拒绝'，同时这些机构在2023年的不良贷款率超过2%？","gt_sql":"SELECT fi.institution_name, rr.report_type, rr.approval_status, npl.npl_ratio FROM regulatory_reports rr JOIN financial_institution_info fi ON rr.institution_id = fi.institution_id JOIN non_performing_loans npl ON rr.institution_id = npl.institution_id WHERE rr.submission_date \u003e= '2023-01-01' AND rr.submission_date \u003c '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝' AND npl.report_date \u003e= '2023-01-01' AND npl.report_date \u003c '2024-01-01' AND npl.npl_ratio \u003e 2.00;","pred_sql":"SELECT fi.institution_name, rr.report_type, rr.approval_status, npl.npl_ratio FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE rr.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝' AND npl.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND npl.npl_ratio \u003e 2;","thinking":"","ambiguous":"False"}
{"id":133973236,"db_name":"supervise","question":"风险加权资产占总资产比例最高的十家机构中，有多少家同时存在较高的市场风险暴露？","gt_sql":"SELECT COUNT(*) FROM (SELECT institution_id FROM capital_adequacy_ratio ORDER BY risk_weighted_assets / (SELECT total_assets FROM balance_sheet WHERE balance_sheet.institution_id = capital_adequacy_ratio.institution_id AND balance_sheet.report_date = capital_adequacy_ratio.report_date) DESC LIMIT 10) AS top_institutions WHERE institution_id IN (SELECT institution_id FROM risk_exposure WHERE market_risk_exposure \u003e (SELECT AVG(market_risk_exposure) FROM risk_exposure));","pred_sql":"SELECT COUNT(*) AS high_risk_institution_count FROM (SELECT b.institution_id FROM balance_sheet b JOIN capital_adequacy_ratio c ON b.institution_id = c.institution_id AND b.report_date = c.report_date JOIN risk_exposure r ON b.institution_id = r.institution_id AND b.report_date = r.report_date WHERE c.risk_weighted_assets / b.total_assets \u003e (SELECT AVG(c2.risk_weighted_assets / b2.total_assets) * 1.5 FROM balance_sheet b2 JOIN capital_adequacy_ratio c2 ON b2.institution_id = c2.institution_id AND b2.report_date = c2.report_date) AND r.market_risk_exposure \u003e (SELECT AVG(market_risk_exposure) * 1.5 FROM risk_exposure) ORDER BY c.risk_weighted_assets / b.total_assets DESC LIMIT 10) AS subquery;","thinking":"","ambiguous":"False"}
{"id":580723534,"db_name":"supervise","question":"平均每家金融机构的分支机构数量是多少？","gt_sql":"SELECT AVG(branch_count) AS average_branch_count FROM (SELECT institution_id, COUNT(*) AS branch_count FROM financial_institution_info GROUP BY institution_id) AS branch_counts;","pred_sql":"SELECT AVG(branch_count) AS average_branches_per_institution FROM (SELECT institution_id, COUNT(*) AS branch_count FROM financial_institution_branches GROUP BY institution_id) AS branch_counts;","thinking":"","ambiguous":"False"}
{"id":627590872,"db_name":"supervise","question":"哪些机构的市场风险暴露占比超过20%且核心一级资本充足率低于8.5%？","gt_sql":"SELECT fi.institution_id, fi.institution_name FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE car.core_tier_1_ratio \u003c 8.5 AND (re.market_risk_exposure / re.total_risk_exposure) \u003e 0.2;","pred_sql":"SELECT fi.institution_id, fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id WHERE (re.market_risk_exposure / NULLIF(re.total_risk_exposure, 0)) \u003e 0.2 AND car.core_tier_1_ratio \u003c 8.5;","thinking":"","ambiguous":"False"}
{"id":3208012990,"db_name":"supervise","question":"2023年12月1日，哪些金融机构的核心一级资本充足率低于10%，并且它们的总资本充足率也低于12%？请列出这些金融机构的名称、核心一级资本充足率、一级资本充足率和总资本充足率。","gt_sql":"SELECT fii.institution_name, car.core_tier_1_ratio, car.tier_1_ratio, car.total_car FROM capital_adequacy_ratio car JOIN financial_institution_info fii ON car.institution_id = fii.institution_id WHERE car.report_date = '2023-12-01' AND car.core_tier_1_ratio \u003c 10 AND car.total_car \u003c 12;","pred_sql":"SELECT f.institution_name, c.core_tier_1_ratio, c.tier_1_ratio, c.total_car FROM financial_institution_info f JOIN capital_adequacy_ratio c ON f.institution_id = c.institution_id WHERE c.report_date = '2023-12-01' AND c.core_tier_1_ratio \u003c 10 AND c.total_car \u003c 12;","thinking":"","ambiguous":"False"}
{"id":377707744,"db_name":"supervise","question":"2023年发生的严重程度为\"高\"的合规问题有多少起？","gt_sql":"SELECT COUNT(*) FROM compliance_records WHERE record_date \u003e= '2023-01-01' AND record_date \u003c '2024-01-01' AND severity = '高';","pred_sql":"SELECT COUNT(*) FROM compliance_records WHERE severity = '高' AND EXTRACT(YEAR FROM record_date) = 2023;","thinking":"","ambiguous":"False"}
{"id":2467976254,"db_name":"supervise","question":"现金及现金等价物占总资产比例最高的机构是哪家？","gt_sql":"SELECT fii.institution_name FROM balance_sheet bs JOIN financial_institution_info fii ON bs.institution_id = fii.institution_id ORDER BY (bs.cash_and_equivalents / bs.total_assets) DESC LIMIT 1;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN balance_sheet bs ON fi.institution_id = bs.institution_id ORDER BY (bs.cash_and_equivalents / bs.total_assets) DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":416448494,"db_name":"supervise","question":"市场风险暴露占总风险暴露比例超过40%的金融机构有哪些？","gt_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE (re.market_risk_exposure / re.total_risk_exposure) \u003e 0.4;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE (re.market_risk_exposure / NULLIF(re.total_risk_exposure, 0)) \u003e 0.4;","thinking":"","ambiguous":"False"}
{"id":1582694445,"db_name":"supervise","question":"2023年监管报告中，哪些机构的信息披露最为透明？","gt_sql":"SELECT fi.institution_name, rr.approval_status, rr.comments \nFROM regulatory_reports rr \nJOIN financial_institution_info fi ON rr.institution_id = fi.institution_id \nWHERE rr.report_date \u003e= '2023-01-01' AND rr.report_date \u003c '2024-01-01' \nORDER BY rr.approval_status DESC, rr.comments DESC;","pred_sql":"SELECT fi.institution_name, rr.approval_status, rr.comments FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND rr.report_type = 'Disclosure' ORDER BY rr.approval_status DESC, rr.comments DESC;","thinking":"","ambiguous":"False"}
{"id":3631241992,"db_name":"supervise","question":"在2023年，哪些金融机构的资本充足率表中核心一级资本充足率低于8%，并且其监管报告的审批状态为'已批准'？","gt_sql":"SELECT fii.institution_name FROM financial_institution_info fii JOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id JOIN regulatory_reports rr ON fii.institution_id = rr.institution_id WHERE car.report_date \u003e= '2023-01-01' AND car.report_date \u003c '2024-01-01' AND car.core_tier_1_ratio \u003c 8 AND rr.approval_status = '已批准';","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE car.core_tier_1_ratio \u003c 8 AND car.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND rr.approval_status = '已批准' AND rr.report_date BETWEEN '2023-01-01' AND '2023-12-31';","thinking":"","ambiguous":"False"}
{"id":3632342709,"db_name":"supervise","question":"查询2024年1月所有机构的操作风险暴露和信用风险暴露。","gt_sql":"SELECT institution_id, credit_risk_exposure, operational_risk_exposure FROM risk_exposure WHERE report_date \u003e= '2024-01-01' AND report_date \u003c '2024-02-01';","pred_sql":"SELECT r.institution_id, r.credit_risk_exposure, r.operational_risk_exposure FROM risk_exposure r WHERE r.report_date BETWEEN '2024-01-01' AND '2024-01-31';","thinking":"","ambiguous":"False"}
{"id":2274602916,"db_name":"supervise","question":"获取2023年4月2日的合规记录及其严重程度。","gt_sql":"SELECT record_id, institution_id, record_date, resolution_date, description, severity, status, compliance_type FROM compliance_records WHERE record_date = '2023-04-02';","pred_sql":"SELECT record_id, institution_id, record_date, resolution_date, description, severity, status, compliance_type FROM compliance_records WHERE record_date = '2023-04-02';","thinking":"","ambiguous":"False"}
{"id":3547022021,"db_name":"supervise","question":"不良贷款率的变化趋势是否领先于或滞后于宏观经济指标的变化？","gt_sql":"SELECT npl.report_date, npl.npl_ratio, car.total_car FROM non_performing_loans npl JOIN capital_adequacy_ratio car ON npl.institution_id = car.institution_id AND npl.report_date = car.report_date ORDER BY npl.report_date;","pred_sql":"SELECT npl.report_date, npl.npl_ratio, car.total_car FROM non_performing_loans npl JOIN capital_adequacy_ratio car ON npl.institution_id = car.institution_id AND npl.report_date = car.report_date ORDER BY npl.report_date;","thinking":"","ambiguous":"False"}
{"id":4106988075,"db_name":"supervise","question":"查找各机构的拨备覆盖率，要求大于150%。","gt_sql":"SELECT institution_id, provision_coverage_ratio FROM non_performing_loans WHERE provision_coverage_ratio \u003e 150","pred_sql":"ERROR: 向LLM发送请求失败","thinking":"","ambiguous":"False"}
{"id":1714782457,"db_name":"supervise","question":"获取2023年12月22日的所有关联交易记录。","gt_sql":"SELECT * FROM related_party_transactions WHERE transaction_date = '2023-12-22';","pred_sql":"SELECT transaction_id, institution_id, transaction_date, related_party, transaction_type, transaction_amount, approval_status FROM related_party_transactions WHERE transaction_date = '2023-12-22';","thinking":"","ambiguous":"False"}
{"id":663454855,"db_name":"supervise","question":"哪些金融机构的流动性覆盖率高于110%且不良贷款率低于1.5%？","gt_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN liquidity_ratio lr ON fi.institution_id = lr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE lr.liquidity_coverage_ratio \u003e 110 AND npl.npl_ratio \u003c 1.5;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN liquidity_ratio lr ON fi.institution_id = lr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE lr.liquidity_coverage_ratio \u003e 110 AND npl.npl_ratio \u003c 1.5;","thinking":"","ambiguous":"False"}
{"id":1930062711,"db_name":"supervise","question":"在2023年提交的监管报告中，哪些机构的报告类型为'季度报告'且审批状态为'需修改'，并且这些机构的不良贷款率超过2%？","gt_sql":"SELECT r.institution_id, f.institution_name, r.report_type, r.approval_status, n.npl_ratio FROM regulatory_reports r JOIN financial_institution_info f ON r.institution_id = f.institution_id JOIN non_performing_loans n ON r.institution_id = n.institution_id WHERE r.submission_date \u003e= '2023-01-01' AND r.submission_date \u003c '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '需修改' AND n.npl_ratio \u003e 2.00;","pred_sql":"SELECT fi.institution_id, fi.institution_name, rr.report_type, rr.approval_status, npl.npl_ratio FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE rr.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND npl.npl_ratio \u003e 2;","thinking":"","ambiguous":"False"}
{"id":166707732,"db_name":"supervise","question":"过去两年中，平均净利润率（净利润/营业收入）最高的五家机构是哪些？","gt_sql":"SELECT institution_id, AVG(net_profit / (net_interest_income + non_interest_income)) AS avg_net_profit_margin FROM income_statement WHERE report_date \u003e= date('now') - INTERVAL '2 years' GROUP BY institution_id ORDER BY avg_net_profit_margin DESC LIMIT 5;","pred_sql":"SELECT i.institution_id, AVG(i.net_profit / (i.net_interest_income + i.non_interest_income)) AS avg_profit_margin FROM income_statement i WHERE i.report_date \u003e= CURRENT_DATE - INTERVAL '2 years' GROUP BY i.institution_id ORDER BY avg_profit_margin DESC LIMIT 5;","thinking":"","ambiguous":"False"}
{"id":833967887,"db_name":"supervise","question":"2023年，各类型金融机构的平均不良贷款率是多少？","gt_sql":"SELECT fi.institution_type, AVG(npl.npl_ratio) as avg_npl_ratio\n           FROM non_performing_loans npl\n           JOIN financial_institution_info fi ON npl.institution_id = fi.institution_id\n           WHERE EXTRACT(YEAR FROM npl.report_date) = 2023\n           GROUP BY fi.institution_type","pred_sql":"SELECT fi.institution_type, AVG(npl.npl_ratio) AS avg_npl_ratio FROM financial_institution_info fi JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE EXTRACT(YEAR FROM npl.report_date) = 2023 GROUP BY fi.institution_type;","thinking":"","ambiguous":"False"}
{"id":4204116228,"db_name":"supervise","question":"有多少家金融机构的市场风险暴露增速超过50%但资本充足率提升不足1个百分点？","gt_sql":"SELECT COUNT(DISTINCT re.institution_id) FROM risk_exposure re JOIN capital_adequacy_ratio car ON re.institution_id = car.institution_id AND re.report_date = car.report_date WHERE re.market_risk_exposure \u003e (SELECT market_risk_exposure * 1.5 FROM risk_exposure WHERE institution_id = re.institution_id AND report_date \u003c re.report_date ORDER BY report_date DESC LIMIT 1) AND car.total_car \u003c (SELECT total_car + 1 FROM capital_adequacy_ratio WHERE institution_id = car.institution_id AND report_date \u003c car.report_date ORDER BY report_date DESC LIMIT 1);","pred_sql":"SELECT COUNT(DISTINCT re1.institution_id) FROM risk_exposure re1 JOIN risk_exposure re2 ON re1.institution_id = re2.institution_id AND re1.report_date \u003c re2.report_date JOIN capital_adequacy_ratio car1 ON re1.institution_id = car1.institution_id AND re1.report_date = car1.report_date JOIN capital_adequacy_ratio car2 ON re2.institution_id = car2.institution_id AND re2.report_date = car2.report_date WHERE (re2.market_risk_exposure - re1.market_risk_exposure)/NULLIF(re1.market_risk_exposure,0) \u003e 0.5 AND (car2.total_car - car1.total_car) \u003c 1.0;","thinking":"","ambiguous":"False"}
{"id":771560804,"db_name":"supervise","question":"获取资产负债表中所有机构的总资产和总负债。","gt_sql":"SELECT institution_id, SUM(total_assets) AS total_assets, SUM(total_liabilities) AS total_liabilities FROM balance_sheet GROUP BY institution_id;","pred_sql":"SELECT institution_id, total_assets, total_liabilities FROM balance_sheet;","thinking":"","ambiguous":"False"}
{"id":1414769749,"db_name":"supervise","question":"2023年7月，哪些金融机构的监管报告状态为'需修改'，并且其关联交易金额超过500万元？","gt_sql":"SELECT fii.institution_name, rr.approval_status, rpt.transaction_amount FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN related_party_transactions rpt ON rr.institution_id = rpt.institution_id WHERE rr.approval_status = '需修改' AND rr.report_date = '2023-07-01' AND rpt.transaction_amount \u003e 5000000;","pred_sql":"SELECT f.institution_name, r.approval_status, t.transaction_amount FROM financial_institution_info f JOIN regulatory_reports r ON f.institution_id = r.institution_id JOIN related_party_transactions t ON f.institution_id = t.institution_id WHERE r.report_date BETWEEN '2023-07-01' AND '2023-07-31' AND r.approval_status = '需修改' AND t.transaction_amount \u003e 5000000;","thinking":"","ambiguous":"False"}
{"id":2946947084,"db_name":"supervise","question":"总资产超过1万亿元的机构中，平均资本充足率是多少？","gt_sql":"SELECT AVG(total_car) FROM capital_adequacy_ratio WHERE institution_id IN (SELECT institution_id FROM balance_sheet WHERE total_assets \u003e 10000000000000);","pred_sql":"SELECT AVG(car.total_car) AS average_capital_adequacy_ratio FROM capital_adequacy_ratio car JOIN balance_sheet bs ON car.institution_id = bs.institution_id AND car.report_date = bs.report_date WHERE bs.total_assets \u003e 1000000000000;","thinking":"","ambiguous":"False"}
{"id":68375114,"db_name":"supervise","question":"查询2023年10月1日的所有风险暴露表记录。","gt_sql":"SELECT * FROM risk_exposure WHERE report_date = '2023-10-01';","pred_sql":"SELECT risk_exposure_id, institution_id, report_date, credit_risk_exposure, market_risk_exposure, operational_risk_exposure, total_risk_exposure FROM risk_exposure WHERE report_date = '2023-10-01';","thinking":"","ambiguous":"False"}
{"id":1086344523,"db_name":"supervise","question":"2023年6月1日，哪些金融机构的关联交易金额超过500万元，并且其监管报告的审批状态为'已批准'？","gt_sql":"SELECT fii.institution_name FROM financial_institution_info fii JOIN related_party_transactions rpt ON fii.institution_id = rpt.institution_id JOIN regulatory_reports rr ON fii.institution_id = rr.institution_id WHERE rpt.transaction_amount \u003e 5000000 AND rpt.transaction_date = '2023-06-01' AND rr.approval_status = '已批准';","pred_sql":"SELECT DISTINCT f.institution_name FROM financial_institution_info f JOIN related_party_transactions r ON f.institution_id = r.institution_id JOIN regulatory_reports rr ON f.institution_id = rr.institution_id WHERE r.transaction_date = '2023-06-01' AND r.transaction_amount \u003e 5000000 AND rr.approval_status = '已批准';","thinking":"","ambiguous":"False"}
{"id":1266365033,"db_name":"supervise","question":"总资产规模与资本充足率之间是否存在显著关系？","gt_sql":"SELECT corr(b.total_assets, c.total_car) AS correlation_coefficient\nFROM balance_sheet b\nJOIN capital_adequacy_ratio c ON b.institution_id = c.institution_id AND b.report_date = c.report_date;","pred_sql":"SELECT CORR(b.total_assets, c.total_car) AS correlation_coefficient FROM balance_sheet b JOIN capital_adequacy_ratio c ON b.institution_id = c.institution_id AND b.report_date = c.report_date;","thinking":"","ambiguous":"False"}
{"id":152560977,"db_name":"supervise","question":"2023年，哪些金融机构的关联交易审批未通过的比例超过20%？","gt_sql":"WITH transaction_stats AS (\n             SELECT institution_id,\n                    COUNT(*) as total_transactions,\n                    SUM(CASE WHEN approval_status != '已批准' THEN 1 ELSE 0 END) as unapproved_transactions\n             FROM related_party_transactions\n             WHERE EXTRACT(YEAR FROM transaction_date) = 2023\n             GROUP BY institution_id\n           )\n           SELECT fi.institution_name,\n                  (ts.unapproved_transactions / NULLIF(ts.total_transactions, 0)) * 100 as unapproved_ratio\n           FROM transaction_stats ts\n           JOIN financial_institution_info fi ON ts.institution_id = fi.institution_id\n           WHERE (ts.unapproved_transactions / NULLIF(ts.total_transactions, 0)) \u003e 0.2\n           ORDER BY unapproved_ratio DESC","pred_sql":"SELECT fi.institution_name, COUNT(CASE WHEN rpt.approval_status != 'Approved' THEN 1 END) * 100.0 / COUNT(*) AS rejection_percentage FROM financial_institution_info fi JOIN related_party_transactions rpt ON fi.institution_id = rpt.institution_id WHERE EXTRACT(YEAR FROM rpt.transaction_date) = 2023 GROUP BY fi.institution_id, fi.institution_name HAVING COUNT(CASE WHEN rpt.approval_status != 'Approved' THEN 1 END) * 100.0 / COUNT(*) \u003e 20;","thinking":"","ambiguous":"False"}
{"id":3829846580,"db_name":"supervise","question":"2023年7月1日，哪些金融机构的监管报告中报告类型为'季度报告'且审批状态为'需修改'，并且这些机构的不良贷款率超过2%？","gt_sql":"SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON fii.institution_id = npl.institution_id WHERE rr.report_date = '2023-07-01' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND npl.npl_ratio \u003e 2.00;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE rr.report_date = '2023-07-01' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND npl.report_date = '2023-07-01' AND npl.npl_ratio \u003e 2;","thinking":"","ambiguous":"False"}
{"id":3809349460,"db_name":"supervise","question":"查找2023年中各机构的审批状态和合规记录。","gt_sql":"SELECT r.institution_id, r.approval_status, c.compliance_type, c.severity, c.status \nFROM regulatory_reports r \nJOIN compliance_records c ON r.institution_id = c.institution_id \nWHERE EXTRACT(YEAR FROM r.report_date) = 2023;","pred_sql":"SELECT fi.institution_id, rr.approval_status, cr.compliance_type, cr.severity, cr.status FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id AND EXTRACT(YEAR FROM rr.report_date) = 2023 JOIN compliance_records cr ON fi.institution_id = cr.institution_id AND EXTRACT(YEAR FROM cr.record_date) = 2023;","thinking":"","ambiguous":"False"}
{"id":3887529815,"db_name":"supervise","question":"在2023年10月1日，哪些金融机构的监管报告类型为'半年度报告'，并且其不良贷款率超过2%？","gt_sql":"SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON rr.institution_id = npl.institution_id WHERE rr.report_date = '2023-10-01' AND rr.report_type = '半年度报告' AND npl.npl_ratio \u003e 2.0;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE rr.report_date = '2023-10-01' AND rr.report_type = '半年度报告' AND npl.npl_ratio \u003e 2;","thinking":"","ambiguous":"False"}
{"id":1095324516,"db_name":"supervise","question":"查询所有机构在2023年5月的流动性覆盖率和净稳定资金比例。","gt_sql":"SELECT institution_id, liquidity_coverage_ratio, net_stable_funding_ratio FROM liquidity_ratio WHERE report_date \u003e= '2023-05-01' AND report_date \u003c '2023-06-01';","pred_sql":"SELECT f.institution_id, l.liquidity_coverage_ratio, l.net_stable_funding_ratio FROM financial_institution_info f JOIN liquidity_ratio l ON f.institution_id = l.institution_id WHERE l.report_date BETWEEN '2023-05-01' AND '2023-05-31';","thinking":"","ambiguous":"False"}
{"id":2608079409,"db_name":"supervise","question":"统计各机构2023年3月1日的非利息收入总和。","gt_sql":"SELECT institution_id, SUM(non_interest_income) AS total_non_interest_income FROM income_statement WHERE report_date = '2023-03-01' GROUP BY institution_id;","pred_sql":"SELECT i.institution_id, SUM(s.non_interest_income) AS total_non_interest_income FROM financial_institution_info i JOIN income_statement s ON i.institution_id = s.institution_id WHERE s.report_date = '2023-03-01' GROUP BY i.institution_id;","thinking":"","ambiguous":"False"}
{"id":1384996686,"db_name":"supervise","question":"获取所有机构在2023年2月1日的风险暴露信息。","gt_sql":"SELECT * FROM risk_exposure WHERE report_date = '2023-02-01';","pred_sql":"SELECT risk_exposure_id, institution_id, report_date, credit_risk_exposure, market_risk_exposure, operational_risk_exposure, total_risk_exposure FROM risk_exposure WHERE report_date = '2023-02-01';","thinking":"","ambiguous":"False"}
{"id":2903384914,"db_name":"supervise","question":"2023年，关联交易金额超过5亿元且为\"资产转移\"类型的交易有多少笔？","gt_sql":"SELECT COUNT(*) FROM related_party_transactions WHERE transaction_amount \u003e 500000000 AND transaction_type = '资产转移' AND EXTRACT(YEAR FROM transaction_date) = 2023;","pred_sql":"SELECT COUNT(*) FROM related_party_transactions WHERE transaction_type = '资产转移' AND transaction_amount \u003e 500000000 AND EXTRACT(YEAR FROM transaction_date) = 2023;","thinking":"","ambiguous":"False"}
{"id":1640671061,"db_name":"supervise","question":"2023年8月1日，哪些金融机构的监管报告审批状态为'需修改'，并且其关联交易金额超过500万元？","gt_sql":"SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN related_party_transactions rpt ON rr.institution_id = rpt.institution_id WHERE rr.approval_status = '需修改' AND rr.submission_date = '2023-08-01' AND rpt.transaction_amount \u003e 5000000;","pred_sql":"SELECT DISTINCT f.institution_name FROM financial_institution_info f JOIN regulatory_reports r ON f.institution_id = r.institution_id JOIN related_party_transactions t ON f.institution_id = t.institution_id WHERE r.report_date = '2023-08-01' AND r.approval_status = '需修改' AND t.transaction_amount \u003e 5000000;","thinking":"","ambiguous":"False"}
{"id":3904574419,"db_name":"supervise","question":"在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'且审批状态为'已拒绝'，并且这些机构在2023年第一季度的净利润超过1000万元？","gt_sql":"SELECT r.institution_id, f.institution_name FROM regulatory_reports r JOIN financial_institution_info f ON r.institution_id = f.institution_id JOIN income_statement i ON r.institution_id = i.institution_id WHERE r.submission_date \u003e= '2023-01-01' AND r.submission_date \u003c '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '已拒绝' AND i.report_date \u003e= '2023-01-01' AND i.report_date \u003c '2023-04-01' AND i.net_profit \u003e 10000000;","pred_sql":"SELECT DISTINCT fi.institution_id, fi.institution_name FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN income_statement is ON fi.institution_id = is.institution_id WHERE rr.report_type = '季度报告' AND rr.approval_status = '已拒绝' AND EXTRACT(YEAR FROM rr.report_date) = 2023 AND EXTRACT(QUARTER FROM is.report_date) = 1 AND EXTRACT(YEAR FROM is.report_date) = 2023 AND is.net_profit \u003e 10000000;","thinking":"","ambiguous":"False"}
{"id":493525183,"db_name":"supervise","question":"2023年7月1日，哪些金融机构提交了季度报告，并且这些报告的审批状态是需要修改的？","gt_sql":"SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.report_date = '2023-07-01' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改';","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_date = '2023-07-01' AND rr.report_type = '季度报告' AND rr.approval_status = '需要修改';","thinking":"","ambiguous":"False"}
{"id":3146074594,"db_name":"supervise","question":"查询所有机构的合规记录中合规类型为内控管理的记录。","gt_sql":"SELECT * FROM compliance_records WHERE compliance_type = '内控管理';","pred_sql":"SELECT record_id, institution_id, record_date, compliance_type, description, severity, status, resolution_date FROM compliance_records WHERE compliance_type = '内控管理';","thinking":"","ambiguous":"False"}
{"id":2337714646,"db_name":"supervise","question":"2023年10月，哪些金融机构的监管报告类型为'半年度报告'且审批状态为'待审核'，并且这些机构的不良贷款率超过1%？","gt_sql":"SELECT fii.institution_name, rr.report_type, rr.approval_status, npl.npl_ratio FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON fii.institution_id = npl.institution_id WHERE rr.report_type = '半年度报告' AND rr.approval_status = '待审核' AND rr.report_date \u003e= '2023-10-01' AND rr.report_date \u003c '2023-11-01' AND npl.npl_ratio \u003e 1.00;","pred_sql":"SELECT f.institution_name, r.report_type, r.approval_status, n.npl_ratio FROM financial_institution_info f JOIN regulatory_reports r ON f.institution_id = r.institution_id JOIN non_performing_loans n ON f.institution_id = n.institution_id WHERE r.report_date BETWEEN '2023-10-01' AND '2023-10-31' AND r.report_type = '半年度报告' AND r.approval_status = '待审核' AND n.npl_ratio \u003e 1;","thinking":"","ambiguous":"False"}
{"id":2791588181,"db_name":"supervise","question":"各机构类型中，不良贷款率的中位数是多少？","gt_sql":"SELECT institution_type, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY npl_ratio) AS median_npl_ratio FROM non_performing_loans JOIN financial_institution_info ON non_performing_loans.institution_id = financial_institution_info.institution_id GROUP BY institution_type;","pred_sql":"SELECT fi.institution_type, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY npl.npl_ratio) AS median_npl_ratio FROM financial_institution_info fi JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id GROUP BY fi.institution_type;","thinking":"","ambiguous":"False"}
{"id":833263523,"db_name":"supervise","question":"查询资本充足率表中核心一级资本充足率低于8%的记录。","gt_sql":"SELECT * FROM capital_adequacy_ratio WHERE core_tier_1_ratio \u003c 8;","pred_sql":"SELECT car_id, institution_id, report_date, core_tier_1_ratio, tier_1_ratio, total_car, risk_weighted_assets FROM capital_adequacy_ratio WHERE core_tier_1_ratio \u003c 8;","thinking":"","ambiguous":"False"}
{"id":3179741002,"db_name":"supervise","question":"在2023年提交的监管报告中，哪些金融机构的报告类型为'半年度报告'且审批状态为'待审核'，并且这些金融机构的注册资本超过5000万元？","gt_sql":"SELECT r.institution_id, f.institution_name, f.registered_capital, r.report_type, r.approval_status FROM regulatory_reports r JOIN financial_institution_info f ON r.institution_id = f.institution_id WHERE r.submission_date \u003e= '2023-01-01' AND r.submission_date \u003c '2024-01-01' AND r.report_type = '半年度报告' AND r.approval_status = '待审核' AND f.registered_capital \u003e 50000000;","pred_sql":"SELECT fi.institution_id, fi.institution_name, fi.registered_capital, rr.report_type, rr.approval_status FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND rr.report_type = '半年度报告' AND rr.approval_status = '待审核' AND fi.registered_capital \u003e 50000000;","thinking":"","ambiguous":"False"}
{"id":2065261887,"db_name":"supervise","question":"2023年6月1日，哪些金融机构的关联交易金额超过500万元且审批状态为待审批？","gt_sql":"SELECT fii.institution_name FROM financial_institution_info fii JOIN related_party_transactions rpt ON fii.institution_id = rpt.institution_id WHERE rpt.transaction_date = '2023-06-01' AND rpt.transaction_amount \u003e 5000000 AND rpt.approval_status = '待审批';","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN related_party_transactions rpt ON fi.institution_id = rpt.institution_id WHERE rpt.transaction_date = '2023-06-01' AND rpt.transaction_amount \u003e 5000000 AND rpt.approval_status = '待审批';","thinking":"","ambiguous":"False"}
{"id":2360476437,"db_name":"supervise","question":"哪些机构的存贷比高于行业平均水平，但流动性覆盖率低于行业平均水平？","gt_sql":"SELECT lr.institution_id FROM liquidity_ratio lr WHERE lr.loan_to_deposit_ratio \u003e (SELECT AVG(loan_to_deposit_ratio) FROM liquidity_ratio) AND lr.liquidity_coverage_ratio \u003c (SELECT AVG(liquidity_coverage_ratio) FROM liquidity_ratio);","pred_sql":"SELECT DISTINCT lr.institution_id FROM liquidity_ratio lr JOIN (SELECT AVG(loan_to_deposit_ratio) AS avg_loan_deposit, AVG(liquidity_coverage_ratio) AS avg_liquidity FROM liquidity_ratio) AS industry_avg ON lr.loan_to_deposit_ratio \u003e industry_avg.avg_loan_deposit AND lr.liquidity_coverage_ratio \u003c industry_avg.avg_liquidity;","thinking":"","ambiguous":"False"}
{"id":1635102268,"db_name":"supervise","question":"在2023年4月1日，哪些机构的利息净收入超过10亿？","gt_sql":"SELECT f.institution_name FROM financial_institution_info f JOIN income_statement i ON f.institution_id = i.institution_id WHERE i.report_date = '2023-04-01' AND i.net_interest_income \u003e 10000000000;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN income_statement i ON fi.institution_id = i.institution_id WHERE i.report_date = '2023-04-01' AND i.net_interest_income \u003e 1000000000;","thinking":"","ambiguous":"False"}
{"id":890576370,"db_name":"supervise","question":"在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'需修改'，同时这些机构在2023年的不良贷款率超过1%？","gt_sql":"SELECT r.institution_id, r.report_id, r.report_type, r.approval_status, n.npl_ratio FROM regulatory_reports r JOIN non_performing_loans n ON r.institution_id = n.institution_id WHERE r.submission_date \u003e= '2023-01-01' AND r.submission_date \u003c '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '需修改' AND n.report_date \u003e= '2023-01-01' AND n.report_date \u003c '2024-01-01' AND n.npl_ratio \u003e 1.00;","pred_sql":"SELECT r.institution_id, r.report_id, r.report_type, r.approval_status, n.npl_ratio FROM regulatory_reports r JOIN non_performing_loans n ON r.institution_id = n.institution_id AND EXTRACT(YEAR FROM r.report_date) = 2023 AND EXTRACT(YEAR FROM n.report_date) = 2023 WHERE r.report_type = '季度报告' AND r.approval_status = '需修改' AND n.npl_ratio \u003e 1;","thinking":"","ambiguous":"False"}
{"id":1878253672,"db_name":"supervise","question":"2023年10月1日，哪些金融机构的总风险暴露超过了3000亿元，并且其核心一级资本充足率低于8%？","gt_sql":"SELECT fii.institution_name, re.total_risk_exposure, car.core_tier_1_ratio FROM financial_institution_info fii JOIN risk_exposure re ON fii.institution_id = re.institution_id JOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id WHERE re.report_date = '2023-10-01' AND re.total_risk_exposure \u003e 300000000000 AND car.core_tier_1_ratio \u003c 8","pred_sql":"SELECT fi.institution_name, re.total_risk_exposure, car.core_tier_1_ratio FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id WHERE re.report_date = '2023-10-01' AND car.report_date = '2023-10-01' AND re.total_risk_exposure \u003e 300000000000 AND car.core_tier_1_ratio \u003c 8;","thinking":"","ambiguous":"False"}
{"id":860852233,"db_name":"supervise","question":"有多少家金融机构的市场风险暴露和信用风险暴露的比例在过去一年中发生了显著变化？","gt_sql":"SELECT COUNT(DISTINCT re.institution_id) FROM risk_exposure re JOIN risk_exposure re_prev ON re.institution_id = re_prev.institution_id AND re.report_date = date('now') - INTERVAL '1 year' AND re_prev.report_date = date('now') - INTERVAL '2 years' WHERE (re.market_risk_exposure / re.credit_risk_exposure) / (re_prev.market_risk_exposure / re_prev.credit_risk_exposure) \u003e 1.1 OR (re.market_risk_exposure / re.credit_risk_exposure) / (re_prev.market_risk_exposure / re_prev.credit_risk_exposure) \u003c 0.9;","pred_sql":"SELECT COUNT(DISTINCT re.institution_id) FROM risk_exposure re JOIN (SELECT institution_id, (market_risk_exposure/NULLIF(credit_risk_exposure,0)) AS ratio FROM risk_exposure WHERE report_date \u003e= CURRENT_DATE - INTERVAL '1 year' AND report_date \u003c CURRENT_DATE - INTERVAL '11 months') AS old ON re.institution_id = old.institution_id WHERE re.report_date \u003e= CURRENT_DATE - INTERVAL '1 month' AND ABS((re.market_risk_exposure/NULLIF(re.credit_risk_exposure,0)) - old.ratio) \u003e 0.1 * old.ratio;","thinking":"","ambiguous":"False"}
{"id":3387337626,"db_name":"supervise","question":"哪些机构的贷款总额超过其存款总额？","gt_sql":"SELECT b.institution_id FROM balance_sheet b WHERE b.loans_and_advances \u003e b.deposits;","pred_sql":"SELECT DISTINCT b.institution_id FROM balance_sheet b WHERE b.loans_and_advances \u003e b.deposits;","thinking":"","ambiguous":"False"}
{"id":1310122613,"db_name":"supervise","question":"在2023年提交的所有监管报告中，哪些机构的报告类型为季度报告且审批状态为已拒绝？请列出这些机构的名称、报告日期和审批状态。","gt_sql":"SELECT fii.institution_name, rr.report_date, rr.approval_status FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date \u003e= '2023-01-01' AND rr.submission_date \u003c= '2023-12-31' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';","pred_sql":"SELECT fi.institution_name, rr.report_date, rr.approval_status FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';","thinking":"","ambiguous":"False"}
{"id":663309404,"db_name":"supervise","question":"哪些机构在2023年4月1日的非利息收入超过2亿？","gt_sql":"SELECT f.institution_name FROM financial_institution_info f JOIN income_statement i ON f.institution_id = i.institution_id WHERE i.report_date = '2023-04-01' AND i.non_interest_income \u003e 200000000;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN income_statement is ON fi.institution_id = is.institution_id WHERE is.report_date = '2023-04-01' AND is.non_interest_income \u003e 200000000;","thinking":"","ambiguous":"False"}
{"id":3052564664,"db_name":"supervise","question":"过去一年中，哪家机构的关联交易笔数最多？","gt_sql":"SELECT institution_id, COUNT(*) AS transaction_count FROM related_party_transactions WHERE transaction_date \u003e= date('now') - INTERVAL '1 year' GROUP BY institution_id ORDER BY transaction_count DESC LIMIT 1;","pred_sql":"SELECT r.institution_id, COUNT(*) AS transaction_count FROM related_party_transactions r WHERE r.transaction_date \u003e= CURRENT_DATE - INTERVAL '1 year' GROUP BY r.institution_id ORDER BY transaction_count DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":3564915606,"db_name":"supervise","question":"哪家机构的信用风险暴露占总风险暴露的比例最高？请显示机构名称和该比例。","gt_sql":"SELECT fi.institution_name, (re.credit_risk_exposure / re.total_risk_exposure * 100) AS credit_risk_percentage FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id ORDER BY credit_risk_percentage DESC LIMIT 1","pred_sql":"SELECT fi.institution_name, (re.credit_risk_exposure / re.total_risk_exposure * 100) AS credit_risk_percentage FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id ORDER BY credit_risk_percentage DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":197691923,"db_name":"supervise","question":"找出在2023年有风险暴露记录的所有机构。","gt_sql":"SELECT DISTINCT institution_id FROM risk_exposure WHERE report_date \u003e= '2023-01-01' AND report_date \u003c '2024-01-01';","pred_sql":"SELECT DISTINCT institution_id FROM risk_exposure WHERE report_date BETWEEN '2023-01-01' AND '2023-12-31';","thinking":"","ambiguous":"False"}
{"id":4129983532,"db_name":"supervise","question":"哪些机构的风险加权资产在2023年11月超过1200亿元？","gt_sql":"SELECT institution_id FROM capital_adequacy_ratio WHERE report_date = '2023-11-01' AND risk_weighted_assets \u003e 120000000000;","pred_sql":"SELECT DISTINCT c.institution_id FROM capital_adequacy_ratio c WHERE c.report_date BETWEEN '2023-11-01' AND '2023-11-30' AND c.risk_weighted_assets \u003e 120000000000;","thinking":"","ambiguous":"False"}
{"id":2233736633,"db_name":"supervise","question":"合规问题的解决时间与问题的严重程度之间是否存在相关性？","gt_sql":"SELECT severity, AVG(resolution_date - record_date) AS avg_resolution_time FROM compliance_records GROUP BY severity;","pred_sql":"SELECT severity, AVG(resolution_date - record_date) AS avg_resolution_time FROM compliance_records WHERE resolution_date IS NOT NULL GROUP BY severity ORDER BY severity;","thinking":"","ambiguous":"False"}
{"id":2305237654,"db_name":"supervise","question":"流动性覆盖率和净稳定资金比例都高于监管要求的机构有多少家？","gt_sql":"SELECT COUNT(DISTINCT institution_id) FROM liquidity_ratio WHERE liquidity_coverage_ratio \u003e 100 AND net_stable_funding_ratio \u003e 100;","pred_sql":"SELECT COUNT(DISTINCT lr.institution_id) FROM liquidity_ratio lr WHERE lr.liquidity_coverage_ratio \u003e 100 AND lr.net_stable_funding_ratio \u003e 100;","thinking":"","ambiguous":"False"}
{"id":2186326450,"db_name":"supervise","question":"总资产排名前1000的机构中，平均不良贷款率、平均拨备覆盖率和平均资本充足率分别是多少？","gt_sql":"SELECT AVG(npl_ratio) AS average_npl_ratio, AVG(provision_coverage_ratio) AS average_provision_coverage_ratio, AVG(total_car) AS average_total_car FROM (SELECT b.institution_id, n.npl_ratio, n.provision_coverage_ratio, c.total_car FROM balance_sheet b JOIN non_performing_loans n ON b.institution_id = n.institution_id AND b.report_date = n.report_date JOIN capital_adequacy_ratio c ON b.institution_id = c.institution_id AND b.report_date = c.report_date ORDER BY b.total_assets DESC LIMIT 1000) AS top_institutions;","pred_sql":"SELECT AVG(npl.npl_ratio) AS avg_npl_ratio, AVG(npl.provision_coverage_ratio) AS avg_provision_coverage_ratio, AVG(car.total_car) AS avg_capital_adequacy_ratio FROM financial_institution_info fi JOIN balance_sheet bs ON fi.institution_id = bs.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id AND bs.report_date = npl.report_date JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id AND bs.report_date = car.report_date WHERE bs.report_date = (SELECT MAX(report_date) FROM balance_sheet) ORDER BY bs.total_assets DESC LIMIT 1000;","thinking":"","ambiguous":"False"}
{"id":2638456489,"db_name":"supervise","question":"2023年7月1日，哪些金融机构的监管报告类型为季度报告，并且其不良贷款率超过1.5%？","gt_sql":"SELECT fii.institution_name, rr.report_type, npl.npl_ratio FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON rr.institution_id = npl.institution_id WHERE rr.report_date = '2023-07-01' AND rr.report_type = '季度报告' AND npl.npl_ratio \u003e 1.5;","pred_sql":"SELECT fi.institution_name, rr.report_type, npl.npl_ratio FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE rr.report_date = '2023-07-01' AND rr.report_type = '季度报告' AND npl.report_date = '2023-07-01' AND npl.npl_ratio \u003e 1.5;","thinking":"","ambiguous":"False"}
{"id":3113756288,"db_name":"supervise","question":"2024年1月1日，哪些金融机构的监管报告类型为'年度报告'且审批状态为'已批准'，并且这些机构的不良贷款率超过1%？","gt_sql":"SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON fii.institution_id = npl.institution_id WHERE rr.report_date = '2024-01-01' AND rr.report_type = '年度报告' AND rr.approval_status = '已批准' AND npl.report_date = '2024-01-01' AND npl.npl_ratio \u003e 1.0;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE rr.report_date = '2024-01-01' AND rr.report_type = '年度报告' AND rr.approval_status = '已批准' AND npl.npl_ratio \u003e 1;","thinking":"","ambiguous":"False"}
{"id":1220868379,"db_name":"supervise","question":"流动性指标与资产负债结构（如贷存比）之间的关系如何？","gt_sql":"SELECT lr.liquidity_coverage_ratio, lr.net_stable_funding_ratio, lr.loan_to_deposit_ratio FROM liquidity_ratio lr;","pred_sql":"SELECT lr.liquidity_coverage_ratio AS short_term_liquidity_risk, lr.net_stable_funding_ratio AS long_term_funding_stability, lr.loan_to_deposit_ratio AS loan_deposit_structure FROM liquidity_ratio lr JOIN balance_sheet bs ON lr.institution_id = bs.institution_id AND lr.report_date = bs.report_date;","thinking":"","ambiguous":"False"}
{"id":576576905,"db_name":"supervise","question":"在2023年12月，不良贷款率超过1.5%的机构有哪些？","gt_sql":"SELECT fi.institution_name FROM non_performing_loans npl JOIN financial_institution_info fi ON npl.institution_id = fi.institution_id WHERE npl.report_date \u003e= '2023-12-01' AND npl.report_date \u003c '2024-01-01' AND npl.npl_ratio \u003e 1.5;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE npl.report_date BETWEEN '2023-12-01' AND '2023-12-31' AND npl.npl_ratio \u003e 1.5;","thinking":"","ambiguous":"False"}
{"id":4037291156,"db_name":"supervise","question":"贷存比超过75%且流动性覆盖率低于120%的机构有哪些？","gt_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN liquidity_ratio lr ON fi.institution_id = lr.institution_id WHERE lr.loan_to_deposit_ratio \u003e 75 AND lr.liquidity_coverage_ratio \u003c 120;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN liquidity_ratio lr ON fi.institution_id = lr.institution_id WHERE lr.loan_to_deposit_ratio \u003e 75 AND lr.liquidity_coverage_ratio \u003c 120;","thinking":"","ambiguous":"False"}
{"id":163054391,"db_name":"supervise","question":"获取监管报告中报告类型为半年度报告的所有记录。","gt_sql":"SELECT * FROM regulatory_reports WHERE report_type = '半年度报告';","pred_sql":"SELECT report_id, institution_id, report_date, report_type, submission_date, approval_status, comments FROM regulatory_reports WHERE report_type = '半年度报告';","thinking":"","ambiguous":"False"}
{"id":3390154129,"db_name":"supervise","question":"合规问题解决用时最长的五个案例是哪些？","gt_sql":"SELECT * FROM compliance_records ORDER BY resolution_date - record_date DESC LIMIT 5;","pred_sql":"SELECT record_id AS \"案例的唯一标识\", institution_name AS \"所属机构\", record_date AS \"创建日期\", compliance_type AS \"合规类型\", description AS \"问题描述\", severity AS \"严重程度\", status AS \"当前状态\", resolution_date AS \"解决日期\" FROM compliance_records JOIN financial_institution_info ON compliance_records.institution_id = financial_institution_info.institution_id WHERE resolution_date IS NOT NULL ORDER BY (resolution_date - record_date) DESC LIMIT 5;","thinking":"","ambiguous":"False"}
{"id":1510688156,"db_name":"supervise","question":"在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'已拒绝'，同时这些机构在2023年的不良贷款率超过2%？","gt_sql":"SELECT r.institution_id, r.report_id, r.report_type, r.approval_status, n.npl_ratio FROM regulatory_reports r JOIN non_performing_loans n ON r.institution_id = n.institution_id WHERE r.submission_date \u003e= '2023-01-01' AND r.submission_date \u003c '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '已拒绝' AND n.report_date \u003e= '2023-01-01' AND n.report_date \u003c '2024-01-01' AND n.npl_ratio \u003e 2.00;","pred_sql":"SELECT r.institution_id, r.report_id, r.report_type, r.approval_status, n.npl_ratio FROM regulatory_reports r JOIN non_performing_loans n ON r.institution_id = n.institution_id AND EXTRACT(YEAR FROM r.report_date) = 2023 AND EXTRACT(YEAR FROM n.report_date) = 2023 WHERE r.report_type = '季度报告' AND r.approval_status = '已拒绝' AND n.npl_ratio \u003e 2;","thinking":"","ambiguous":"False"}
{"id":776982448,"db_name":"supervise","question":"在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'已拒绝'？请列出这些机构的名称、报告ID、报告日期和备注信息。","gt_sql":"SELECT fii.institution_name, rr.report_id, rr.report_date, rr.comments FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date \u003e= '2023-01-01' AND rr.submission_date \u003c '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';","pred_sql":"SELECT f.institution_name, r.report_id, r.report_date, r.comments FROM financial_institution_info f JOIN regulatory_reports r ON f.institution_id = r.institution_id WHERE r.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND r.report_type = '季度报告' AND r.approval_status = '已拒绝';","thinking":"","ambiguous":"False"}
{"id":3735593182,"db_name":"supervise","question":"哪些机构的贷款与存款比率在60%到80%之间？","gt_sql":"SELECT f.institution_name FROM financial_institution_info f JOIN liquidity_ratio l ON f.institution_id = l.institution_id WHERE l.loan_to_deposit_ratio BETWEEN 60 AND 80;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN liquidity_ratio lr ON fi.institution_id = lr.institution_id WHERE lr.loan_to_deposit_ratio BETWEEN 60 AND 80;","thinking":"","ambiguous":"False"}
{"id":1403047777,"db_name":"supervise","question":"核心一级资本充足率与总资本充足率的差值最小的机构是哪些？","gt_sql":"SELECT institution_id FROM capital_adequacy_ratio ORDER BY ABS(core_tier_1_ratio - total_car) LIMIT 1;","pred_sql":"SELECT institution_id FROM capital_adequacy_ratio WHERE ABS(core_tier_1_ratio - total_car) = (SELECT MIN(ABS(core_tier_1_ratio - total_car)) FROM capital_adequacy_ratio);","thinking":"","ambiguous":"False"}
{"id":2008864858,"db_name":"supervise","question":"展示2024年所有机构的总负债及其注册资本。","gt_sql":"SELECT b.institution_id, b.total_liabilities, f.registered_capital FROM balance_sheet b JOIN financial_institution_info f ON b.institution_id = f.institution_id WHERE EXTRACT(YEAR FROM b.report_date) = 2024;","pred_sql":"SELECT f.institution_id, b.total_liabilities, f.registered_capital FROM financial_institution_info f JOIN balance_sheet b ON f.institution_id = b.institution_id WHERE EXTRACT(YEAR FROM b.report_date) = 2024;","thinking":"","ambiguous":"False"}
{"id":4061107202,"db_name":"supervise","question":"信用风险暴露与不良贷款率之间是否存在显著相关性？","gt_sql":"SELECT corr(npl_ratio, credit_risk_exposure) AS correlation_coefficient FROM non_performing_loans JOIN risk_exposure USING (institution_id, report_date);","pred_sql":"SELECT CORR(re.credit_risk_exposure, npl.npl_ratio) AS correlation_coefficient FROM risk_exposure re JOIN non_performing_loans npl ON re.institution_id = npl.institution_id AND re.report_date = npl.report_date;","thinking":"","ambiguous":"False"}
{"id":1821132508,"db_name":"supervise","question":"在2023年，哪些金融机构的年度报告已批准，并且其总资本充足率（CAR）超过10%？","gt_sql":"SELECT fii.institution_name FROM financial_institution_info fii JOIN regulatory_reports rr ON fii.institution_id = rr.institution_id JOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id WHERE rr.report_type = '年度报告' AND rr.approval_status = '已批准' AND car.report_date \u003e= '2023-01-01' AND car.report_date \u003c '2024-01-01' AND car.total_car \u003e 10;","pred_sql":"SELECT f.institution_name FROM financial_institution_info f JOIN capital_adequacy_ratio c ON f.institution_id = c.institution_id JOIN regulatory_reports r ON f.institution_id = r.institution_id WHERE c.total_car \u003e 10 AND r.report_type = 'Annual' AND r.approval_status = 'Approved' AND EXTRACT(YEAR FROM c.report_date) = 2023 AND EXTRACT(YEAR FROM r.report_date) = 2023;","thinking":"","ambiguous":"False"}
{"id":1128459706,"db_name":"supervise","question":"获取2023年6月1日不良贷款表中不良贷款率及其机构。","gt_sql":"SELECT npl_ratio, institution_id FROM non_performing_loans WHERE report_date = '2023-06-01';","pred_sql":"SELECT npl_ratio, institution_id FROM non_performing_loans WHERE report_date = '2023-06-01';","thinking":"","ambiguous":"False"}
{"id":4259113020,"db_name":"supervise","question":"哪些机构在2023年05月的市场风险暴露超过200亿元？","gt_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE re.report_date = '2023-05-01' AND re.market_risk_exposure \u003e 20000000000;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE re.market_risk_exposure \u003e 20000000000 AND re.report_date BETWEEN '2023-05-01' AND '2023-05-31';","thinking":"","ambiguous":"False"}
{"id":3886257211,"db_name":"supervise","question":"在2024年提交的监管报告中，哪些金融机构的报告类型为'年度报告'并且审批状态为'已批准'？请列出这些机构的名称、报告日期和审批状态。","gt_sql":"SELECT fii.institution_name, rr.report_date, rr.approval_status FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date \u003e= '2024-01-01' AND rr.report_type = '年度报告' AND rr.approval_status = '已批准';","pred_sql":"SELECT fi.institution_name, rr.report_date, rr.approval_status FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_type = '年度报告' AND rr.approval_status = '已批准' AND rr.report_date \u003e= '2024-01-01' AND rr.report_date \u003c= '2024-12-31';","thinking":"","ambiguous":"False"}
{"id":1168290373,"db_name":"supervise","question":"获取2023年11月1日的资本充足率详细信息。","gt_sql":"SELECT * FROM capital_adequacy_ratio WHERE report_date = '2023-11-01';","pred_sql":"SELECT car_id, institution_id, report_date, core_tier_1_ratio, tier_1_ratio, total_car, risk_weighted_assets FROM capital_adequacy_ratio WHERE report_date = '2023-11-01';","thinking":"","ambiguous":"False"}
{"id":2077067574,"db_name":"supervise","question":"净稳定资金比例与核心一级资本充足率之间是否存在相关性？","gt_sql":"SELECT corr(l.net_stable_funding_ratio, c.core_tier_1_ratio) AS correlation\nFROM liquidity_ratio l\nJOIN capital_adequacy_ratio c ON l.institution_id = c.institution_id AND l.report_date = c.report_date;","pred_sql":"SELECT CORR(lr.net_stable_funding_ratio, car.core_tier_1_ratio) AS correlation_coefficient FROM liquidity_ratio lr JOIN capital_adequacy_ratio car ON lr.institution_id = car.institution_id AND lr.report_date = car.report_date;","thinking":"","ambiguous":"False"}
{"id":2225198432,"db_name":"supervise","question":"请列出在2024年提交的所有监管报告中，报告类型为'年度报告'且审批状态为'已批准'的机构名称及其对应的报告日期。","gt_sql":"SELECT fii.institution_name, rr.report_date FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date \u003e= '2024-01-01' AND rr.submission_date \u003c '2025-01-01' AND rr.report_type = '年度报告' AND rr.approval_status = '已批准';","pred_sql":"SELECT fi.institution_name, rr.report_date FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_date BETWEEN '2024-01-01' AND '2024-12-31' AND rr.report_type = '年度报告' AND rr.approval_status = '已批准';","thinking":"","ambiguous":"False"}
{"id":1600202324,"db_name":"supervise","question":"获取2023年11月1日资本充足率表中的所有数据。","gt_sql":"SELECT * FROM capital_adequacy_ratio WHERE report_date = '2023-11-01';","pred_sql":"SELECT car_id, institution_id, report_date, core_tier_1_ratio, tier_1_ratio, total_car, risk_weighted_assets FROM capital_adequacy_ratio WHERE report_date = '2023-11-01';","thinking":"","ambiguous":"False"}
{"id":1999653381,"db_name":"supervise","question":"查询机构ID为2162的资本充足率详细信息。","gt_sql":"SELECT core_tier_1_ratio, tier_1_ratio, total_car, risk_weighted_assets, report_date FROM capital_adequacy_ratio WHERE institution_id = 2162;","pred_sql":"SELECT core_tier_1_ratio, tier_1_ratio, total_car, risk_weighted_assets, report_date FROM capital_adequacy_ratio WHERE institution_id = 2162;","thinking":"","ambiguous":"False"}
{"id":4241341417,"db_name":"supervise","question":"展示2023年所有机构的贷款总额和不良贷款金额。","gt_sql":"SELECT institution_id, SUM(total_loans) AS total_loans_2023, SUM(npl_amount) AS total_npl_amount_2023 FROM non_performing_loans WHERE EXTRACT(YEAR FROM report_date) = 2023 GROUP BY institution_id;","pred_sql":"SELECT n.institution_id, SUM(n.total_loans) AS total_loans, SUM(n.npl_amount) AS npl_amount FROM non_performing_loans n WHERE EXTRACT(YEAR FROM n.report_date) = 2023 GROUP BY n.institution_id;","thinking":"","ambiguous":"False"}
{"id":885949604,"db_name":"supervise","question":"市场风险暴露占比与机构的交易类业务收入占比之间是否存在正相关关系？","gt_sql":"SELECT corr(market_risk_exposure / total_risk_exposure, non_interest_income / (net_interest_income + non_interest_income)) AS correlation\nFROM risk_exposure\nJOIN income_statement USING (institution_id, report_date);","pred_sql":"SELECT CORR(re.credit_risk_exposure/re.total_risk_exposure, (is.net_interest_income + is.non_interest_income)/is.net_profit) AS correlation_coefficient FROM risk_exposure re JOIN income_statement is ON re.institution_id = is.institution_id AND re.report_date = is.report_date JOIN financial_institution_info fi ON re.institution_id = fi.institution_id WHERE re.total_risk_exposure \u003e 0 AND is.net_profit \u003e 0;","thinking":"","ambiguous":"False"}
{"id":2230661366,"db_name":"supervise","question":"哪家机构的贷款损失准备金占不良贷款比例最高？","gt_sql":"SELECT institution_id, provision_coverage_ratio FROM non_performing_loans ORDER BY provision_coverage_ratio DESC LIMIT 1;","pred_sql":"SELECT fi.institution_id, npl.provision_coverage_ratio FROM financial_institution_info fi JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id ORDER BY npl.provision_coverage_ratio DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":2148224764,"db_name":"supervise","question":"查询所有机构在2023年中提交的流动性比率和资本充足率的报告。","gt_sql":"SELECT lr.institution_id, lr.report_date, lr.liquidity_coverage_ratio, lr.net_stable_funding_ratio, lr.loan_to_deposit_ratio, car.core_tier_1_ratio, car.tier_1_ratio, car.total_car FROM liquidity_ratio lr JOIN capital_adequacy_ratio car ON lr.institution_id = car.institution_id AND lr.report_date = car.report_date WHERE lr.report_date \u003e= '2023-01-01' AND lr.report_date \u003c '2024-01-01';","pred_sql":"SELECT lr.institution_id, lr.report_date, lr.liquidity_coverage_ratio, lr.net_stable_funding_ratio, lr.loan_to_deposit_ratio, car.core_tier_1_ratio, car.tier_1_ratio, car.total_car FROM liquidity_ratio lr JOIN capital_adequacy_ratio car ON lr.institution_id = car.institution_id AND lr.report_date = car.report_date WHERE EXTRACT(YEAR FROM lr.report_date) = 2023 AND EXTRACT(MONTH FROM lr.report_date) = 6;","thinking":"","ambiguous":"False"}
{"id":1163520286,"db_name":"supervise","question":"2023年4月1日，哪些机构的营业支出最多？","gt_sql":"SELECT f.institution_name FROM financial_institution_info f JOIN income_statement i ON f.institution_id = i.institution_id WHERE i.report_date = '2023-04-01' ORDER BY i.operating_expenses DESC LIMIT 1;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN income_statement i ON fi.institution_id = i.institution_id WHERE i.report_date = '2023-04-01' ORDER BY i.operating_expenses DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":3770945123,"db_name":"supervise","question":"查看2023年每个机构的非利息收入和净利润。","gt_sql":"SELECT institution_id, SUM(non_interest_income) AS total_non_interest_income, SUM(net_profit) AS total_net_profit FROM income_statement WHERE report_date \u003e= '2023-01-01' AND report_date \u003c '2024-01-01' GROUP BY institution_id;","pred_sql":"SELECT i.institution_id, SUM(s.non_interest_income) AS total_non_interest_income, SUM(s.net_profit) AS total_net_profit FROM financial_institution_info i JOIN income_statement s ON i.institution_id = s.institution_id WHERE EXTRACT(YEAR FROM s.report_date) = 2023 GROUP BY i.institution_id;","thinking":"","ambiguous":"False"}
{"id":3353540268,"db_name":"supervise","question":"在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'且审批状态为'已拒绝'，并且这些机构在2023年的不良贷款率超过2%？","gt_sql":"SELECT fi.institution_name, rr.report_type, rr.approval_status, npl.npl_ratio FROM regulatory_reports rr JOIN financial_institution_info fi ON rr.institution_id = fi.institution_id JOIN non_performing_loans npl ON rr.institution_id = npl.institution_id WHERE rr.submission_date \u003e= '2023-01-01' AND rr.submission_date \u003c '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝' AND npl.report_date \u003e= '2023-01-01' AND npl.report_date \u003c '2024-01-01' AND npl.npl_ratio \u003e 2.00;","pred_sql":"SELECT fi.institution_name, rr.report_type, rr.approval_status, npl.npl_ratio FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE rr.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝' AND npl.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND npl.npl_ratio \u003e 2;","thinking":"","ambiguous":"False"}
{"id":2078748822,"db_name":"supervise","question":"哪些机构在2023年12月的核心一级资本充足率低于9%？","gt_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id WHERE car.report_date = '2023-12-01' AND car.core_tier_1_ratio \u003c 9;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id WHERE car.report_date = '2023-12-31' AND car.core_tier_1_ratio \u003c 9;","thinking":"","ambiguous":"False"}
{"id":953035312,"db_name":"supervise","question":"哪些机构在2023年11月的流动性覆盖率低于110%？","gt_sql":"SELECT institution_id FROM liquidity_ratio WHERE report_date = '2023-11-01' AND liquidity_coverage_ratio \u003c 110;","pred_sql":"SELECT DISTINCT lr.institution_id FROM liquidity_ratio lr WHERE lr.report_date BETWEEN '2023-11-01' AND '2023-11-30' AND lr.liquidity_coverage_ratio \u003c 110;","thinking":"","ambiguous":"False"}
{"id":2823110481,"db_name":"supervise","question":"查找2023年3月1日所有机构的市场风险暴露及其拨备覆盖率。","gt_sql":"SELECT re.market_risk_exposure, npl.provision_coverage_ratio FROM risk_exposure re JOIN non_performing_loans npl ON re.institution_id = npl.institution_id WHERE re.report_date = '2023-03-01' AND npl.report_date = '2023-03-01';","pred_sql":"SELECT r.market_risk_exposure, n.provision_coverage_ratio FROM risk_exposure r JOIN non_performing_loans n ON r.institution_id = n.institution_id AND r.report_date = n.report_date WHERE r.report_date = '2023-03-01';","thinking":"","ambiguous":"False"}
{"id":1671662541,"db_name":"supervise","question":"查询所有金融机构的法人代表及其联系方式。","gt_sql":"SELECT legal_representative, contact_number FROM financial_institution_info;","pred_sql":"SELECT legal_representative, contact_number FROM financial_institution_info;","thinking":"","ambiguous":"False"}
{"id":2071522801,"db_name":"supervise","question":"2023年关联交易中，哪家金融机构的交易对手最多样化？","gt_sql":"SELECT fi.institution_name, COUNT(DISTINCT rpt.related_party) AS distinct_related_parties FROM financial_institution_info fi JOIN related_party_transactions rpt ON fi.institution_id = rpt.institution_id WHERE EXTRACT(YEAR FROM rpt.transaction_date) = 2023 GROUP BY fi.institution_name ORDER BY distinct_related_parties DESC LIMIT 1;","pred_sql":"SELECT fi.institution_name, COUNT(DISTINCT rpt.related_party) AS counterparty_count FROM financial_institution_info fi JOIN related_party_transactions rpt ON fi.institution_id = rpt.institution_id WHERE EXTRACT(YEAR FROM rpt.transaction_date) = 2023 GROUP BY fi.institution_id, fi.institution_name ORDER BY counterparty_count DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":205800859,"db_name":"supervise","question":"各地区金融机构的平均流动性覆盖率是多少？哪个地区表现最好？","gt_sql":"SELECT fi.address AS region, AVG(lr.liquidity_coverage_ratio) AS avg_liquidity_coverage_ratio\nFROM liquidity_ratio lr\nJOIN financial_institution_info fi ON lr.institution_id = fi.institution_id\nGROUP BY fi.address\nORDER BY avg_liquidity_coverage_ratio DESC\nLIMIT 1;","pred_sql":"SELECT f.institution_type AS region_name, AVG(l.liquidity_coverage_ratio) AS avg_liquidity_coverage_ratio FROM financial_institution_info f JOIN liquidity_ratio l ON f.institution_id = l.institution_id GROUP BY f.institution_type ORDER BY avg_liquidity_coverage_ratio DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":3274370781,"db_name":"supervise","question":"2023年各季度监管报告的平均字数有何变化？","gt_sql":"SELECT EXTRACT(QUARTER FROM report_date) AS quarter, AVG(LENGTH(comments)) AS avg_word_count FROM regulatory_reports WHERE EXTRACT(YEAR FROM report_date) = 2023 GROUP BY quarter ORDER BY quarter;","pred_sql":"SELECT EXTRACT(QUARTER FROM report_date) AS quarter, AVG(LENGTH(comments)) AS avg_word_count FROM regulatory_reports WHERE report_date BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY quarter ORDER BY quarter;","thinking":"","ambiguous":"False"}
{"id":1230704489,"db_name":"supervise","question":"哪家机构的拨备覆盖率最高？请显示机构名称和拨备覆盖率。","gt_sql":"SELECT fi.institution_name, npl.provision_coverage_ratio FROM financial_institution_info fi JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id ORDER BY npl.provision_coverage_ratio DESC LIMIT 1","pred_sql":"SELECT f.institution_name, n.provision_coverage_ratio FROM financial_institution_info f JOIN non_performing_loans n ON f.institution_id = n.institution_id ORDER BY n.provision_coverage_ratio DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1986352436,"db_name":"supervise","question":"查询所有金融机构的法定代表人及其联系方式。","gt_sql":"SELECT legal_representative, contact_number FROM financial_institution_info;","pred_sql":"SELECT legal_representative, contact_number FROM financial_institution_info;","thinking":"","ambiguous":"False"}
{"id":171565062,"db_name":"supervise","question":"在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'需修改'？请列出这些机构的名称、报告日期和提交日期。","gt_sql":"SELECT fii.institution_name, rr.report_date, rr.submission_date FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND EXTRACT(YEAR FROM rr.submission_date) = 2023;","pred_sql":"SELECT fi.institution_name, rr.report_date, rr.submission_date FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND rr.submission_date BETWEEN '2023-01-01' AND '2023-12-31';","thinking":"","ambiguous":"False"}
{"id":1038814840,"db_name":"supervise","question":"哪些金融机构的资本充足率超过12%且不良贷款率低于2%？","gt_sql":"SELECT fi.institution_name, car.total_car, npl.npl_ratio FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE car.total_car \u003e 12 AND npl.npl_ratio \u003c 2","pred_sql":"SELECT fi.institution_name, car.total_car, npl.npl_ratio FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE car.total_car \u003e 12 AND npl.npl_ratio \u003c 2;","thinking":"","ambiguous":"False"}
{"id":1181628181,"db_name":"supervise","question":"净稳定资金比例和贷存比都处于较好水平的前十家机构是哪些？","gt_sql":"SELECT institution_id FROM liquidity_ratio ORDER BY net_stable_funding_ratio DESC, loan_to_deposit_ratio ASC LIMIT 10;","pred_sql":"SELECT DISTINCT fi.institution_id FROM financial_institution_info fi JOIN liquidity_ratio lr ON fi.institution_id = lr.institution_id WHERE lr.net_stable_funding_ratio \u003e (SELECT AVG(net_stable_funding_ratio) FROM liquidity_ratio) AND lr.loan_to_deposit_ratio \u003c (SELECT AVG(loan_to_deposit_ratio) FROM liquidity_ratio) ORDER BY (lr.net_stable_funding_ratio - (SELECT AVG(net_stable_funding_ratio) FROM liquidity_ratio)) + ((SELECT AVG(loan_to_deposit_ratio) FROM liquidity_ratio) - lr.loan_to_deposit_ratio) DESC LIMIT 10;","thinking":"","ambiguous":"False"}
{"id":3568939453,"db_name":"supervise","question":"哪些机构在2023年的风险暴露表中显示信用风险暴露超过500亿？","gt_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE re.report_date \u003e= '2023-01-01' AND re.report_date \u003c '2024-01-01' AND re.credit_risk_exposure \u003e 500000000000;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE re.credit_risk_exposure \u003e 50000000000 AND EXTRACT(YEAR FROM re.report_date) = 2023;","thinking":"","ambiguous":"False"}
{"id":716682341,"db_name":"supervise","question":"不良贷款率超过2%的机构有哪些？","gt_sql":"SELECT fi.institution_name FROM non_performing_loans npl JOIN financial_institution_info fi ON npl.institution_id = fi.institution_id WHERE npl.npl_ratio \u003e 2;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE npl.npl_ratio \u003e 0.02;","thinking":"","ambiguous":"False"}
{"id":2344870041,"db_name":"supervise","question":"获取2023年5月1日的资本充足率表记录。","gt_sql":"SELECT * FROM capital_adequacy_ratio WHERE report_date = '2023-05-01';","pred_sql":"SELECT car_id, institution_id, report_date, core_tier_1_ratio, tier_1_ratio, total_car, risk_weighted_assets FROM capital_adequacy_ratio WHERE report_date = '2023-05-01';","thinking":"","ambiguous":"False"}
{"id":79705771,"db_name":"supervise","question":"展示2023年合规记录中每个机构的严重程度分布。","gt_sql":"SELECT institution_id, severity, COUNT(*) AS severity_count FROM compliance_records WHERE EXTRACT(YEAR FROM record_date) = 2023 GROUP BY institution_id, severity;","pred_sql":"SELECT c.institution_id, c.severity, COUNT(*) AS record_count FROM compliance_records c WHERE EXTRACT(YEAR FROM c.record_date) = 2023 GROUP BY c.institution_id, c.severity ORDER BY c.institution_id, c.severity;","thinking":"","ambiguous":"False"}
{"id":3897795864,"db_name":"supervise","question":"在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'已拒绝'？请列出这些机构的名称、报告日期和备注。","gt_sql":"SELECT fii.institution_name, rr.report_date, rr.comments FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date \u003e= '2023-01-01' AND rr.submission_date \u003c '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';","pred_sql":"SELECT fi.institution_name, rr.report_date, rr.comments FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';","thinking":"","ambiguous":"False"}
{"id":3910780788,"db_name":"supervise","question":"列出所有机构的关联交易及其金额。","gt_sql":"SELECT institution_id, transaction_id, transaction_amount FROM related_party_transactions;","pred_sql":"SELECT rpt.institution_id, rpt.transaction_id, rpt.transaction_amount FROM related_party_transactions rpt;","thinking":"","ambiguous":"False"}
{"id":463284912,"db_name":"supervise","question":"2023年10月1日，哪些金融机构的监管报告类型为'半年度报告'，并且其关联交易的总金额超过1000万元？","gt_sql":"SELECT fi.institution_name, rr.report_type, SUM(rpt.transaction_amount) AS total_transaction_amount FROM regulatory_reports rr JOIN financial_institution_info fi ON rr.institution_id = fi.institution_id JOIN related_party_transactions rpt ON rr.institution_id = rpt.institution_id WHERE rr.report_date = '2023-10-01' AND rr.report_type = '半年度报告' GROUP BY fi.institution_name, rr.report_type HAVING SUM(rpt.transaction_amount) \u003e 10000000;","pred_sql":"SELECT f.institution_name, r.report_type, SUM(t.transaction_amount) AS total_transaction_amount FROM financial_institution_info f JOIN regulatory_reports r ON f.institution_id = r.institution_id JOIN related_party_transactions t ON f.institution_id = t.institution_id WHERE r.report_date = '2023-10-01' AND r.report_type = '半年度报告' GROUP BY f.institution_name, r.report_type HAVING SUM(t.transaction_amount) \u003e 10000000;","thinking":"","ambiguous":"False"}
{"id":3023341474,"db_name":"supervise","question":"在2023年提交的所有监管报告中，哪些机构的报告类型为季度报告且审批状态为已拒绝？请列出这些机构的名称、报告ID、报告日期和备注。","gt_sql":"SELECT fii.institution_name, rr.report_id, rr.report_date, rr.comments FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date \u003e= '2023-01-01' AND rr.submission_date \u003c= '2023-12-31' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';","pred_sql":"SELECT f.institution_name, r.report_id, r.report_date, r.comments FROM financial_institution_info f JOIN regulatory_reports r ON f.institution_id = r.institution_id WHERE r.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND r.report_type = '季度报告' AND r.approval_status = '已拒绝';","thinking":"","ambiguous":"False"}
{"id":100349185,"db_name":"supervise","question":"在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'并且审批状态为'已拒绝'？请列出这些机构的名称、报告类型、审批状态和提交日期。","gt_sql":"SELECT fii.institution_name, rr.report_type, rr.approval_status, rr.submission_date FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date \u003e= '2023-01-01' AND rr.submission_date \u003c '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';","pred_sql":"SELECT fi.institution_name, rr.report_type, rr.approval_status, rr.submission_date FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';","thinking":"","ambiguous":"False"}
{"id":1713055268,"db_name":"supervise","question":"不良贷款率与地区经济发展水平是否存在相关性？","gt_sql":"SELECT npl_ratio, address FROM non_performing_loans JOIN financial_institution_info ON non_performing_loans.institution_id = financial_institution_info.institution_id;","pred_sql":"SELECT n.npl_ratio, f.address FROM non_performing_loans n JOIN financial_institution_info f ON n.institution_id = f.institution_id;","thinking":"","ambiguous":"False"}
{"id":1241000114,"db_name":"supervise","question":"找出在2024年提交的所有金融机构的监管报告及其审批状态。","gt_sql":"SELECT report_id, institution_id, report_date, report_type, approval_status FROM regulatory_reports WHERE submission_date \u003e= '2024-01-01' AND submission_date \u003c '2025-01-01';","pred_sql":"SELECT report_id, institution_id, submission_date, report_type, approval_status FROM regulatory_reports WHERE submission_date BETWEEN '2024-01-01' AND '2024-12-31';","thinking":"","ambiguous":"False"}
{"id":2918395057,"db_name":"supervise","question":"各机构类型中，流动性覆盖率的中位数是多少？","gt_sql":"SELECT institution_type, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY liquidity_coverage_ratio) AS median_liquidity_coverage_ratio FROM liquidity_ratio lr JOIN financial_institution_info fii ON lr.institution_id = fii.institution_id GROUP BY institution_type;","pred_sql":"SELECT fi.institution_type, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY lr.liquidity_coverage_ratio) AS median_liquidity_coverage_ratio FROM financial_institution_info fi JOIN liquidity_ratio lr ON fi.institution_id = lr.institution_id GROUP BY fi.institution_type;","thinking":"","ambiguous":"False"}
{"id":3292170043,"db_name":"supervise","question":"在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'且审批状态为'已拒绝'，并且这些机构在2023年6月1日的资本充足率表中，核心一级资本充足率低于8%？","gt_sql":"SELECT r.institution_id, r.report_id, r.report_type, r.approval_status, c.core_tier_1_ratio FROM regulatory_reports r JOIN capital_adequacy_ratio c ON r.institution_id = c.institution_id WHERE r.submission_date \u003e= '2023-01-01' AND r.submission_date \u003c '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '已拒绝' AND c.report_date = '2023-06-01' AND c.core_tier_1_ratio \u003c 8;","pred_sql":"SELECT r.report_id, r.institution_id, r.report_type, r.approval_status, c.core_tier_1_ratio FROM regulatory_reports r JOIN capital_adequacy_ratio c ON r.institution_id = c.institution_id WHERE r.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND r.report_type = '季度报告' AND r.approval_status = '已拒绝' AND c.report_date = '2023-06-01' AND c.core_tier_1_ratio \u003c 8;","thinking":"","ambiguous":"False"}
{"id":759134662,"db_name":"supervise","question":"2023年第三季度，资本充足率top10的机构中，平均不良贷款率是多少？","gt_sql":"SELECT AVG(npl_ratio) AS average_npl_ratio FROM (SELECT npl.institution_id, npl.npl_ratio FROM non_performing_loans npl JOIN capital_adequacy_ratio car ON npl.institution_id = car.institution_id AND npl.report_date = car.report_date WHERE npl.report_date \u003e= '2023-07-01' AND npl.report_date \u003c '2023-10-01' ORDER BY car.total_car DESC LIMIT 10) AS top_institutions;","pred_sql":"SELECT AVG(npl.npl_ratio) AS average_npl_ratio FROM capital_adequacy_ratio car JOIN non_performing_loans npl ON car.institution_id = npl.institution_id AND car.report_date = npl.report_date WHERE car.report_date BETWEEN '2023-07-01' AND '2023-09-30' AND car.institution_id IN (SELECT institution_id FROM capital_adequacy_ratio WHERE report_date BETWEEN '2023-07-01' AND '2023-09-30' ORDER BY total_car DESC LIMIT 10);","thinking":"","ambiguous":"False"}
{"id":4264132838,"db_name":"supervise","question":"未解决的合规问题数量最多的机构是哪家？","gt_sql":"SELECT fii.institution_name FROM compliance_records cr JOIN financial_institution_info fii ON cr.institution_id = fii.institution_id WHERE cr.status = '未解决' GROUP BY fii.institution_name ORDER BY COUNT(*) DESC LIMIT 1;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN compliance_records cr ON fi.institution_id = cr.institution_id WHERE cr.status != 'Resolved' GROUP BY fi.institution_id, fi.institution_name ORDER BY COUNT(cr.record_id) DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":2605714275,"db_name":"supervise","question":"展示2023年在关联交易中金额超过500万的记录。","gt_sql":"SELECT * FROM related_party_transactions WHERE transaction_date \u003e= '2023-01-01' AND transaction_date \u003c '2024-01-01' AND transaction_amount \u003e 5000000;","pred_sql":"SELECT transaction_id, institution_id, transaction_date, related_party, transaction_type, transaction_amount, approval_status FROM related_party_transactions WHERE transaction_amount \u003e 5000000 AND transaction_date BETWEEN '2023-01-01' AND '2023-12-31';","thinking":"","ambiguous":"False"}
{"id":1937284507,"db_name":"supervise","question":"哪些机构的市场风险暴露占总风险暴露的比例超过25%？","gt_sql":"SELECT institution_id FROM risk_exposure WHERE market_risk_exposure / total_risk_exposure \u003e 0.25;","pred_sql":"SELECT DISTINCT re.institution_id FROM risk_exposure re WHERE (re.market_risk_exposure / NULLIF(re.total_risk_exposure, 0)) \u003e 0.25;","thinking":"","ambiguous":"False"}
{"id":2934397812,"db_name":"supervise","question":"2023年8月，哪些金融机构的关联交易金额超过500万元且审批状态为待审批？请列出机构名称、交易金额和交易类型。","gt_sql":"SELECT fii.institution_name, rpt.transaction_amount, rpt.transaction_type FROM related_party_transactions rpt JOIN financial_institution_info fii ON rpt.institution_id = fii.institution_id WHERE rpt.transaction_date \u003e= '2023-08-01' AND rpt.transaction_date \u003c '2023-09-01' AND rpt.transaction_amount \u003e 5000000 AND rpt.approval_status = '待审批';","pred_sql":"SELECT fi.institution_name, rpt.transaction_amount, rpt.transaction_type FROM financial_institution_info fi JOIN related_party_transactions rpt ON fi.institution_id = rpt.institution_id WHERE rpt.transaction_date BETWEEN '2023-08-01' AND '2023-08-31' AND rpt.transaction_amount \u003e 5000000 AND rpt.approval_status = '待审批';","thinking":"","ambiguous":"False"}
{"id":508885744,"db_name":"supervise","question":"在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'需修改'，同时这些机构在2023年第一季度的净利润超过5000万元？","gt_sql":"SELECT r.institution_id, f.institution_name FROM regulatory_reports r JOIN financial_institution_info f ON r.institution_id = f.institution_id JOIN income_statement i ON r.institution_id = i.institution_id WHERE r.report_type = '季度报告' AND r.approval_status = '需修改' AND r.submission_date \u003e= '2023-01-01' AND r.submission_date \u003c '2024-01-01' AND i.report_date \u003e= '2023-01-01' AND i.report_date \u003c '2023-04-01' AND i.net_profit \u003e 50000000;","pred_sql":"SELECT DISTINCT fi.institution_id, fi.institution_name FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN income_statement is ON fi.institution_id = is.institution_id WHERE rr.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND is.report_date BETWEEN '2023-01-01' AND '2023-03-31' AND is.net_profit \u003e 50000000;","thinking":"","ambiguous":"False"}
{"id":1632272828,"db_name":"supervise","question":"哪些机构的不良贷款率、拨备覆盖率和资本充足率均处于行业中位数以上？","gt_sql":"SELECT fi.institution_name FROM financial_institution_info fi WHERE fi.institution_id IN (SELECT npl.institution_id FROM non_performing_loans npl WHERE npl.npl_ratio \u003e (SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY npl_ratio) FROM non_performing_loans) AND npl.provision_coverage_ratio \u003e (SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY provision_coverage_ratio) FROM non_performing_loans) AND npl.institution_id IN (SELECT car.institution_id FROM capital_adequacy_ratio car WHERE car.total_car \u003e (SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY total_car) FROM capital_adequacy_ratio)));","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id WHERE npl.npl_ratio \u003e (SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY npl_ratio) FROM non_performing_loans) AND npl.provision_coverage_ratio \u003e (SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY provision_coverage_ratio) FROM non_performing_loans) AND car.total_car \u003e (SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY total_car) FROM capital_adequacy_ratio);","thinking":"","ambiguous":"False"}
{"id":1799492050,"db_name":"supervise","question":"关联交易中涉及金额最大的关联方是谁？","gt_sql":"SELECT related_party FROM related_party_transactions ORDER BY transaction_amount DESC LIMIT 1;","pred_sql":"SELECT related_party FROM related_party_transactions GROUP BY related_party ORDER BY SUM(transaction_amount) DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":2216482912,"db_name":"supervise","question":"哪些机构在2023年10月1日的审批状态为待审批？","gt_sql":"SELECT f.institution_name FROM financial_institution_info f JOIN related_party_transactions r ON f.institution_id = r.institution_id WHERE r.transaction_date = '2023-10-01' AND r.approval_status = '待审批';","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_date = '2023-10-01' AND rr.approval_status = '待审批';","thinking":"","ambiguous":"False"}
{"id":1256154419,"db_name":"supervise","question":"哪些机构在2023年05月的总风险暴露高于150亿？","gt_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE re.report_date = '2023-05-01' AND re.total_risk_exposure \u003e 150000000000;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE re.report_date BETWEEN '2023-05-01' AND '2023-05-31' AND re.total_risk_exposure \u003e 15000000000;","thinking":"","ambiguous":"False"}
{"id":4262674456,"db_name":"supervise","question":"在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'且审批状态为'需修改'，并且这些金融机构的注册资本超过5000万元？","gt_sql":"SELECT r.institution_id, f.institution_name, f.registered_capital FROM regulatory_reports r JOIN financial_institution_info f ON r.institution_id = f.institution_id WHERE r.submission_date \u003e= '2023-01-01' AND r.submission_date \u003c '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '需修改' AND f.registered_capital \u003e 50000000;","pred_sql":"SELECT fi.institution_id, fi.institution_name, fi.registered_capital FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND fi.registered_capital \u003e 50000000;","thinking":"","ambiguous":"False"}
{"id":710647517,"db_name":"supervise","question":"查询2023年11月所有机构的市场风险暴露与信用风险暴露。","gt_sql":"SELECT institution_id, report_date, market_risk_exposure, credit_risk_exposure FROM risk_exposure WHERE report_date \u003e= '2023-11-01' AND report_date \u003c '2023-12-01';","pred_sql":"SELECT re.institution_id, re.report_date, re.market_risk_exposure, re.credit_risk_exposure FROM risk_exposure re WHERE re.report_date BETWEEN '2023-11-01' AND '2023-11-30';","thinking":"","ambiguous":"False"}
{"id":58767252,"db_name":"supervise","question":"获取2023年9月1日所有机构的风险暴露和相关的信用风险暴露。","gt_sql":"SELECT institution_id, credit_risk_exposure FROM risk_exposure WHERE report_date = '2023-09-01';","pred_sql":"SELECT r.institution_id, r.credit_risk_exposure FROM risk_exposure r WHERE r.report_date = '2023-09-01';","thinking":"","ambiguous":"False"}
{"id":637645661,"db_name":"supervise","question":"2023年5月，哪些金融机构的关联交易金额超过500万元且审批状态为已批准？","gt_sql":"SELECT fii.institution_name, rpt.transaction_amount, rpt.approval_status FROM related_party_transactions rpt JOIN financial_institution_info fii ON rpt.institution_id = fii.institution_id WHERE rpt.transaction_amount \u003e 5000000 AND rpt.approval_status = '已批准' AND rpt.transaction_date \u003e= '2023-05-01' AND rpt.transaction_date \u003c '2023-06-01';","pred_sql":"SELECT f.institution_name, r.transaction_amount, r.approval_status FROM financial_institution_info f JOIN related_party_transactions r ON f.institution_id = r.institution_id WHERE r.transaction_date BETWEEN '2023-05-01' AND '2023-05-31' AND r.transaction_amount \u003e 5000000 AND r.approval_status = '已批准';","thinking":"","ambiguous":"False"}
{"id":3688064451,"db_name":"supervise","question":"查询资本充足率表中风险加权资产超过8000亿元的机构。","gt_sql":"SELECT institution_id FROM capital_adequacy_ratio WHERE risk_weighted_assets \u003e 800000000000;","pred_sql":"SELECT DISTINCT c.institution_id FROM capital_adequacy_ratio c WHERE c.risk_weighted_assets \u003e 800000000000;","thinking":"","ambiguous":"False"}
{"id":3547661219,"db_name":"supervise","question":"有多少家注册资本低于10亿元的金融机构的资产规模已经超过1000亿元？","gt_sql":"SELECT COUNT(*) FROM financial_institution_info fii JOIN balance_sheet bs ON fii.institution_id = bs.institution_id WHERE fii.registered_capital \u003c 1000000000 AND bs.total_assets \u003e 100000000000;","pred_sql":"SELECT COUNT(DISTINCT fi.institution_id) FROM financial_institution_info fi JOIN balance_sheet bs ON fi.institution_id = bs.institution_id WHERE fi.registered_capital \u003c 1000000000 AND bs.total_assets \u003e 100000000000;","thinking":"","ambiguous":"False"}
{"id":162610329,"db_name":"supervise","question":"2023年第三季度，哪些金融机构的资本充足率表中总资本充足率低于12%，并且其不良贷款率超过2%？","gt_sql":"SELECT fii.institution_name, car.total_car, npl.npl_ratio FROM capital_adequacy_ratio car JOIN non_performing_loans npl ON car.institution_id = npl.institution_id AND car.report_date = npl.report_date JOIN financial_institution_info fii ON car.institution_id = fii.institution_id WHERE car.report_date BETWEEN '2023-07-01' AND '2023-09-30' AND car.total_car \u003c 12 AND npl.npl_ratio \u003e 2;","pred_sql":"SELECT fi.institution_name, car.total_car, npl.npl_ratio FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE car.report_date BETWEEN '2023-07-01' AND '2023-09-30' AND npl.report_date BETWEEN '2023-07-01' AND '2023-09-30' AND car.total_car \u003c 12 AND npl.npl_ratio \u003e 2;","thinking":"","ambiguous":"False"}
{"id":1552788455,"db_name":"supervise","question":"查找所有机构的报告日期及其审批状态。","gt_sql":"SELECT report_date, approval_status FROM regulatory_reports;","pred_sql":"SELECT report_date, approval_status FROM regulatory_reports;","thinking":"","ambiguous":"False"}
{"id":116844122,"db_name":"supervise","question":"在2024年，哪个机构的资产负债表中总资产最高？","gt_sql":"SELECT fi.institution_name FROM balance_sheet bs JOIN financial_institution_info fi ON bs.institution_id = fi.institution_id WHERE bs.report_date \u003e= '2024-01-01' AND bs.report_date \u003c '2025-01-01' ORDER BY bs.total_assets DESC LIMIT 1;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN balance_sheet bs ON fi.institution_id = bs.institution_id WHERE EXTRACT(YEAR FROM bs.report_date) = 2024 ORDER BY bs.total_assets DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":4240691021,"db_name":"supervise","question":"2023年发生的严重合规问题中，平均解决时间最长的合规类型是什么？","gt_sql":"SELECT compliance_type, AVG(resolution_date - record_date) AS avg_resolution_time FROM compliance_records WHERE EXTRACT(YEAR FROM record_date) = 2023 AND severity = '严重' GROUP BY compliance_type ORDER BY avg_resolution_time DESC LIMIT 1","pred_sql":"SELECT compliance_type, AVG(resolution_date - record_date) AS avg_resolution_time FROM compliance_records WHERE severity = 'severe' AND record_date \u003e= '2023-01-01' AND record_date \u003c= '2023-12-31' AND resolution_date IS NOT NULL GROUP BY compliance_type ORDER BY avg_resolution_time DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":1677817776,"db_name":"supervise","question":"2023年10月1日，哪些金融机构的监管报告类型为'半年度报告'，并且其关联交易金额超过500万元？","gt_sql":"SELECT fii.institution_name, rr.report_type, rpt.transaction_amount FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN related_party_transactions rpt ON rr.institution_id = rpt.institution_id WHERE rr.report_date = '2023-10-01' AND rr.report_type = '半年度报告' AND rpt.transaction_amount \u003e 5000000;","pred_sql":"SELECT f.institution_name, r.report_type, t.transaction_amount FROM financial_institution_info f JOIN regulatory_reports r ON f.institution_id = r.institution_id JOIN related_party_transactions t ON f.institution_id = t.institution_id WHERE r.report_date = '2023-10-01' AND r.report_type = '半年度报告' AND t.transaction_amount \u003e 5000000;","thinking":"","ambiguous":"False"}
{"id":1301409349,"db_name":"supervise","question":"查询2023年1月1日的利润表中非利息收入的平均值。","gt_sql":"SELECT AVG(non_interest_income) FROM income_statement WHERE report_date = '2023-01-01';","pred_sql":"SELECT AVG(non_interest_income) FROM income_statement WHERE report_date = '2023-01-01';","thinking":"","ambiguous":"False"}
{"id":948022455,"db_name":"supervise","question":"查看2023年06月的所有不良贷款记录及其金额。","gt_sql":"SELECT report_date, npl_amount FROM non_performing_loans WHERE report_date \u003e= '2023-06-01' AND report_date \u003c '2023-07-01';","pred_sql":"SELECT report_date, npl_amount FROM non_performing_loans WHERE report_date BETWEEN '2023-06-01' AND '2023-06-30';","thinking":"","ambiguous":"False"}
{"id":3714986713,"db_name":"supervise","question":"查询不良贷款表中拨备覆盖率小于200%的机构。","gt_sql":"SELECT institution_id FROM non_performing_loans WHERE provision_coverage_ratio \u003c 200;","pred_sql":"SELECT DISTINCT n.institution_id FROM non_performing_loans n WHERE n.provision_coverage_ratio \u003c 200;","thinking":"","ambiguous":"False"}
{"id":3771907244,"db_name":"supervise","question":"2023年第四季度，净利润top10的机构中，平均资本充足率是多少？","gt_sql":"SELECT AVG(total_car) AS average_capital_adequacy_ratio FROM capital_adequacy_ratio WHERE institution_id IN (SELECT institution_id FROM income_statement WHERE report_date BETWEEN '2023-10-01' AND '2023-12-31' ORDER BY net_profit DESC LIMIT 10);","pred_sql":"SELECT AVG(car.total_car) AS average_capital_adequacy_ratio FROM financial_institution_info fi JOIN income_statement inc ON fi.institution_id = inc.institution_id JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id AND inc.report_date = car.report_date WHERE inc.report_date BETWEEN '2023-10-01' AND '2023-12-31' AND fi.institution_id IN (SELECT institution_id FROM income_statement WHERE report_date BETWEEN '2023-10-01' AND '2023-12-31' ORDER BY net_profit DESC LIMIT 10);","thinking":"","ambiguous":"False"}
{"id":1867865451,"db_name":"supervise","question":"哪些机构的合规记录的描述中提到了客户投诉？","gt_sql":"SELECT f.institution_name FROM financial_institution_info f JOIN compliance_records c ON f.institution_id = c.institution_id WHERE c.description LIKE '%客户投诉%';","pred_sql":"SELECT DISTINCT f.institution_name FROM financial_institution_info f JOIN compliance_records c ON f.institution_id = c.institution_id WHERE c.description ILIKE '%客户投诉%';","thinking":"","ambiguous":"False"}
{"id":246993905,"db_name":"supervise","question":"提供2023年07月各机构的利息净收入与非利息收入。","gt_sql":"SELECT institution_id, net_interest_income, non_interest_income FROM income_statement WHERE report_date = '2023-07-01';","pred_sql":"SELECT i.institution_id, i.net_interest_income, i.non_interest_income FROM income_statement i JOIN financial_institution_info f ON i.institution_id = f.institution_id WHERE EXTRACT(YEAR FROM i.report_date) = 2023 AND EXTRACT(MONTH FROM i.report_date) = 7;","thinking":"","ambiguous":"False"}
{"id":1509764635,"db_name":"supervise","question":"在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'已拒绝'，同时这些机构在2023年的不良贷款率超过1%？","gt_sql":"SELECT r.institution_id, r.report_id, r.report_type, r.approval_status, n.npl_ratio FROM regulatory_reports r JOIN non_performing_loans n ON r.institution_id = n.institution_id WHERE r.submission_date \u003e= '2023-01-01' AND r.submission_date \u003c '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '已拒绝' AND n.report_date \u003e= '2023-01-01' AND n.report_date \u003c '2024-01-01' AND n.npl_ratio \u003e 1.00;","pred_sql":"SELECT DISTINCT f.institution_id, r.report_id, r.report_type, r.approval_status, n.npl_ratio FROM financial_institution_info f JOIN regulatory_reports r ON f.institution_id = r.institution_id JOIN non_performing_loans n ON f.institution_id = n.institution_id WHERE r.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND r.report_type = '季度报告' AND r.approval_status = '已拒绝' AND n.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND n.npl_ratio \u003e 1;","thinking":"","ambiguous":"False"}
{"id":3372111545,"db_name":"supervise","question":"查找2023年3月1日的不良贷款及其拨备覆盖率。","gt_sql":"SELECT npl_amount, provision_coverage_ratio FROM non_performing_loans WHERE report_date = '2023-03-01';","pred_sql":"SELECT npl_amount, provision_coverage_ratio FROM non_performing_loans WHERE report_date = '2023-03-01';","thinking":"","ambiguous":"False"}
{"id":1509942542,"db_name":"supervise","question":"各项监管指标（如资本充足率、流动性覆盖率等）的达标情况与机构规模是否相关？","gt_sql":"SELECT fii.institution_id, fii.registered_capital, car.total_car, lr.liquidity_coverage_ratio, npl.npl_ratio\nFROM financial_institution_info fii\nJOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id\nJOIN liquidity_ratio lr ON fii.institution_id = lr.institution_id\nJOIN non_performing_loans npl ON fii.institution_id = npl.institution_id\nWHERE car.report_date = lr.report_date AND lr.report_date = npl.report_date;","pred_sql":"SELECT fi.institution_id, fi.registered_capital, car.total_car AS capital_adequacy_ratio, lr.liquidity_coverage_ratio, npl.npl_ratio FROM financial_institution_info fi LEFT JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id LEFT JOIN liquidity_ratio lr ON fi.institution_id = lr.institution_id LEFT JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE car.report_date = (SELECT MAX(report_date) FROM capital_adequacy_ratio WHERE institution_id = fi.institution_id) AND lr.report_date = (SELECT MAX(report_date) FROM liquidity_ratio WHERE institution_id = fi.institution_id) AND npl.report_date = (SELECT MAX(report_date) FROM non_performing_loans WHERE institution_id = fi.institution_id);","thinking":"","ambiguous":"False"}
{"id":2196231862,"db_name":"supervise","question":"哪些金融机构在2023年提交了季度报告，并且这些报告的审批状态是已拒绝？","gt_sql":"SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date \u003e= '2023-01-01' AND rr.submission_date \u003c '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';","pred_sql":"SELECT DISTINCT f.institution_name FROM financial_institution_info f JOIN regulatory_reports r ON f.institution_id = r.institution_id WHERE r.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND r.report_type = 'Quarterly' AND r.approval_status = 'Rejected';","thinking":"","ambiguous":"False"}
{"id":2728172184,"db_name":"supervise","question":"有多少家金融机构的贷款增速连续两年超过20%但资本充足率持续下降？","gt_sql":"SELECT COUNT(DISTINCT b1.institution_id) FROM balance_sheet b1 JOIN balance_sheet b2 ON b1.institution_id = b2.institution_id AND b1.report_date = b2.report_date + INTERVAL '1 year' JOIN capital_adequacy_ratio c1 ON b1.institution_id = c1.institution_id AND b1.report_date = c1.report_date JOIN capital_adequacy_ratio c2 ON b1.institution_id = c2.institution_id AND b1.report_date = c2.report_date + INTERVAL '1 year' WHERE (b2.loans_and_advances - b1.loans_and_advances) / b1.loans_and_advances \u003e 0.2 AND (b1.loans_and_advances - b2.loans_and_advances) / b2.loans_and_advances \u003e 0.2 AND c2.total_car \u003c c1.total_car;","pred_sql":"SELECT COUNT(DISTINCT fi.institution_id) FROM financial_institution_info fi JOIN non_performing_loans npl1 ON fi.institution_id = npl1.institution_id JOIN non_performing_loans npl2 ON fi.institution_id = npl2.institution_id AND npl2.report_date = (npl1.report_date + INTERVAL '1 year') JOIN capital_adequacy_ratio car1 ON fi.institution_id = car1.institution_id AND car1.report_date = npl1.report_date JOIN capital_adequacy_ratio car2 ON fi.institution_id = car2.institution_id AND car2.report_date = npl2.report_date WHERE (npl2.total_loans - npl1.total_loans)/npl1.total_loans \u003e 0.2 AND car2.total_car \u003c car1.total_car;","thinking":"","ambiguous":"False"}
{"id":3768872221,"db_name":"supervise","question":"2023年第三季度，哪些金融机构的监管报告类型为季度报告且审批状态为需修改？","gt_sql":"SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND rr.submission_date \u003e= '2023-07-01' AND rr.submission_date \u003c '2023-10-01';","pred_sql":"SELECT DISTINCT f.institution_name FROM financial_institution_info f JOIN regulatory_reports r ON f.institution_id = r.institution_id WHERE r.report_type = '季度报告' AND r.approval_status = '需修改' AND r.report_date BETWEEN '2023-07-01' AND '2023-09-30';","thinking":"","ambiguous":"False"}
{"id":2784905980,"db_name":"supervise","question":"2023年7月1日，哪些金融机构的监管报告类型为'季度报告'，并且其不良贷款率超过1%？","gt_sql":"SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON rr.institution_id = npl.institution_id WHERE rr.report_date = '2023-07-01' AND rr.report_type = '季度报告' AND npl.npl_ratio \u003e 1.00 AND npl.report_date = '2023-07-01';","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE rr.report_date = '2023-07-01' AND rr.report_type = '季度报告' AND npl.report_date = '2023-07-01' AND npl.npl_ratio \u003e 0.01;","thinking":"","ambiguous":"False"}
{"id":678545000,"db_name":"supervise","question":"哪些机构在2023年10月进行了关联交易？","gt_sql":"SELECT DISTINCT institution_id FROM related_party_transactions","pred_sql":"SELECT DISTINCT rpt.institution_id FROM related_party_transactions rpt WHERE rpt.transaction_date BETWEEN '2023-10-01' AND '2023-10-31';","thinking":"","ambiguous":"False"}
{"id":3037348782,"db_name":"supervise","question":"在2023年7月1日，哪些金融机构的监管报告类型为'季度报告'，并且其不良贷款率超过2%？","gt_sql":"SELECT fii.institution_name FROM financial_institution_info fii JOIN regulatory_reports rr ON fii.institution_id = rr.institution_id JOIN non_performing_loans npl ON fii.institution_id = npl.institution_id WHERE rr.report_type = '季度报告' AND rr.report_date = '2023-07-01' AND npl.report_date = '2023-07-01' AND npl.npl_ratio \u003e 2.0;","pred_sql":"SELECT fi.institution_name FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE rr.report_date = '2023-07-01' AND rr.report_type = '季度报告' AND npl.report_date = '2023-07-01' AND npl.npl_ratio \u003e 2;","thinking":"","ambiguous":"False"}
{"id":1162073522,"db_name":"supervise","question":"风险加权资产的构成是否随着资本充足率的变化而调整？","gt_sql":"SELECT c.report_date, c.total_car, c.risk_weighted_assets FROM capital_adequacy_ratio c ORDER BY c.report_date;","pred_sql":"SELECT car.report_date, car.total_car, car.risk_weighted_assets FROM capital_adequacy_ratio car ORDER BY car.report_date;","thinking":"","ambiguous":"False"}
{"id":1324283532,"db_name":"supervise","question":"查询2023年每个机构的流动性覆盖率及其审批状态。","gt_sql":"SELECT lr.institution_id, lr.liquidity_coverage_ratio, rr.approval_status FROM liquidity_ratio lr JOIN regulatory_reports rr ON lr.institution_id = rr.institution_id AND lr.report_date = rr.report_date WHERE EXTRACT(YEAR FROM lr.report_date) = 2023;","pred_sql":"SELECT lr.institution_id, lr.liquidity_coverage_ratio, rr.approval_status FROM liquidity_ratio lr JOIN regulatory_reports rr ON lr.institution_id = rr.institution_id AND lr.report_date = rr.report_date WHERE EXTRACT(YEAR FROM lr.report_date) = 2023 AND rr.report_type = 'Liquidity Coverage Ratio Report';","thinking":"","ambiguous":"False"}
{"id":3789302325,"db_name":"supervise","question":"2023年7月1日之后，哪些金融机构提交了季度报告，并且这些报告的审批状态为'需修改'？请列出机构名称、报告日期和审批状态。","gt_sql":"SELECT fii.institution_name, rr.report_date, rr.approval_status FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND rr.submission_date \u003e '2023-07-01';","pred_sql":"SELECT fi.institution_name, rr.report_date, rr.approval_status FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE rr.report_date \u003e '2023-07-01' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改';","thinking":"","ambiguous":"False"}
{"id":3524683857,"db_name":"supervise","question":"2023年第二季度提交的监管报告中，有多少份被拒绝？","gt_sql":"SELECT COUNT(*) FROM regulatory_reports WHERE report_type = '季度报告' AND submission_date BETWEEN '2023-04-01' AND '2023-06-30' AND approval_status = '已拒绝'","pred_sql":"SELECT COUNT(*) FROM regulatory_reports WHERE approval_status = 'rejected' AND report_date BETWEEN '2023-04-01' AND '2023-06-30';","thinking":"","ambiguous":"False"}
{"id":1676740080,"db_name":"supervise","question":"获取2023年10月1日的所有风险暴露记录及其金额。","gt_sql":"SELECT * FROM risk_exposure WHERE report_date = '2023-10-01';","pred_sql":"SELECT risk_exposure_id, institution_id, report_date, credit_risk_exposure, market_risk_exposure, operational_risk_exposure, total_risk_exposure FROM risk_exposure WHERE report_date = '2023-10-01';","thinking":"","ambiguous":"False"}
{"id":3743576610,"db_name":"supervise","question":"哪家机构的贷款和垫款增长率最高？请显示机构名称和增长率（假设有两个时间点的数据）。","gt_sql":"WITH loan_growth AS (SELECT institution_id, (MAX(loans_and_advances) - MIN(loans_and_advances)) / MIN(loans_and_advances) * 100 AS growth_rate FROM balance_sheet GROUP BY institution_id) SELECT fi.institution_name, lg.growth_rate FROM financial_institution_info fi JOIN loan_growth lg ON fi.institution_id = lg.institution_id ORDER BY lg.growth_rate DESC LIMIT 1","pred_sql":"SELECT fii.institution_name, ((bs2.loans_and_advances - bs1.loans_and_advances) / bs1.loans_and_advances) * 100 AS growth_rate FROM balance_sheet bs1 JOIN balance_sheet bs2 ON bs1.institution_id = bs2.institution_id JOIN financial_institution_info fii ON bs1.institution_id = fii.institution_id WHERE bs1.report_date \u003c bs2.report_date ORDER BY growth_rate DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":763017611,"db_name":"supervise","question":"2023年，哪些金融机构的市场风险资本占比（市场风险资本/总资本）超过15%？","gt_sql":"SELECT fi.institution_name,\n                  (re.market_risk_exposure / NULLIF(car.risk_weighted_assets, 0)) * 100 as market_risk_capital_ratio\n           FROM risk_exposure re\n           JOIN capital_adequacy_ratio car ON re.institution_id = car.institution_id\n           JOIN financial_institution_info fi ON re.institution_id = fi.institution_id\n           WHERE EXTRACT(YEAR FROM re.report_date) = 2023\n           AND EXTRACT(YEAR FROM car.report_date) = 2023\n           AND (re.market_risk_exposure / NULLIF(car.risk_weighted_assets, 0)) \u003e 0.15\n           ORDER BY market_risk_capital_ratio DESC","pred_sql":"SELECT f.institution_name, (r.market_risk_exposure / (b.total_equity + b.total_liabilities)) * 100 AS market_risk_capital_ratio FROM financial_institution_info f JOIN risk_exposure r ON f.institution_id = r.institution_id JOIN balance_sheet b ON f.institution_id = b.institution_id AND r.report_date = b.report_date WHERE EXTRACT(YEAR FROM r.report_date) = 2023 AND (r.market_risk_exposure / (b.total_equity + b.total_liabilities)) * 100 \u003e 15;","thinking":"","ambiguous":"False"}
{"id":227811783,"db_name":"supervise","question":"列出2023年提交的所有监管报告中，审批状态为'需修改'的报告所属机构的名称、报告类型和提交日期，并按提交日期降序排列。","gt_sql":"SELECT fii.institution_name, rr.report_type, rr.submission_date FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.approval_status = '需修改' AND EXTRACT(YEAR FROM rr.submission_date) = 2023 ORDER BY rr.submission_date DESC;","pred_sql":"SELECT f.institution_name, r.report_type, r.submission_date FROM financial_institution_info f JOIN regulatory_reports r ON f.institution_id = r.institution_id WHERE r.approval_status = '需修改' AND r.report_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY r.submission_date DESC;","thinking":"","ambiguous":"False"}
{"id":636265180,"db_name":"supervise","question":"在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'需修改'，同时这些机构在2023年的关联交易中是否有交易金额超过1000万元的记录？","gt_sql":"SELECT DISTINCT fi.institution_name FROM regulatory_reports rr JOIN financial_institution_info fi ON rr.institution_id = fi.institution_id JOIN related_party_transactions rpt ON rr.institution_id = rpt.institution_id WHERE rr.submission_date \u003e= '2023-01-01' AND rr.submission_date \u003c '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND rpt.transaction_date \u003e= '2023-01-01' AND rpt.transaction_date \u003c '2024-01-01' AND rpt.transaction_amount \u003e 1000;","pred_sql":"SELECT DISTINCT fi.institution_name FROM financial_institution_info fi JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id JOIN related_party_transactions rpt ON fi.institution_id = rpt.institution_id WHERE rr.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND rpt.transaction_date BETWEEN '2023-01-01' AND '2023-12-31' AND rpt.transaction_amount \u003e 10000000;","thinking":"","ambiguous":"False"}
{"id":3904345596,"db_name":"supervise","question":"流动性覆盖率与机构的国际化程度是否存在关联？","gt_sql":"SELECT lr.liquidity_coverage_ratio, fii.institution_type FROM liquidity_ratio lr JOIN financial_institution_info fii ON lr.institution_id = fii.institution_id;","pred_sql":"SELECT l.liquidity_coverage_ratio, f.institution_type FROM liquidity_ratio l JOIN financial_institution_info f ON l.institution_id = f.institution_id;","thinking":"","ambiguous":"False"}
{"id":2375076145,"db_name":"supervise","question":"哪些机构的关联交易在2023年10月金额超过1000万元？","gt_sql":"SELECT DISTINCT institution_id FROM related_party_transactions WHERE transaction_date \u003e= '2023-10-01' AND transaction_date \u003c '2023-11-01' AND transaction_amount \u003e 10000000;","pred_sql":"SELECT DISTINCT f.institution_id FROM financial_institution_info f JOIN related_party_transactions r ON f.institution_id = r.institution_id WHERE r.transaction_date BETWEEN '2023-10-01' AND '2023-10-31' AND r.transaction_amount \u003e 10000000;","thinking":"","ambiguous":"False"}
{"id":1557709908,"db_name":"supervise","question":"2023年以来，哪家机构的关联交易审批未通过率最高？","gt_sql":"SELECT fi.institution_name, COUNT(rpt.approval_status) FILTER (WHERE rpt.approval_status = '未通过') * 1.0 / COUNT(rpt.approval_status) AS failure_rate FROM related_party_transactions rpt JOIN financial_institution_info fi ON rpt.institution_id = fi.institution_id WHERE rpt.transaction_date \u003e= '2023-01-01' GROUP BY fi.institution_name ORDER BY failure_rate DESC LIMIT 1;","pred_sql":"SELECT fii.institution_name, COUNT(CASE WHEN rpt.approval_status != 'Approved' THEN 1 END) * 100.0 / COUNT(*) AS rejection_rate FROM financial_institution_info fii JOIN related_party_transactions rpt ON fii.institution_id = rpt.institution_id WHERE rpt.transaction_date \u003e= '2023-01-01' GROUP BY fii.institution_id, fii.institution_name ORDER BY rejection_rate DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":963481309,"db_name":"supervise","question":"2023年，哪家机构的操作风险暴露占总风险暴露的比例最高？","gt_sql":"SELECT fi.institution_name, re.operational_risk_exposure / re.total_risk_exposure AS op_risk_ratio FROM risk_exposure re JOIN financial_institution_info fi ON re.institution_id = fi.institution_id WHERE EXTRACT(YEAR FROM re.report_date) = 2023 ORDER BY op_risk_ratio DESC LIMIT 1;","pred_sql":"SELECT fi.institution_name, (re.operational_risk_exposure / re.total_risk_exposure) * 100 AS operational_risk_ratio FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE EXTRACT(YEAR FROM re.report_date) = 2023 ORDER BY operational_risk_ratio DESC LIMIT 1;","thinking":"","ambiguous":"False"}
{"id":3447512985,"db_name":"supervise","question":"哪些机构的年度报告在2023年中有备注信息？","gt_sql":"SELECT DISTINCT institution_id FROM regulatory_reports WHERE report_date \u003e= '2023-01-01' AND report_date \u003c '2024-01-01' AND comments IS NOT NULL;","pred_sql":"SELECT DISTINCT r.institution_id FROM regulatory_reports r WHERE r.report_date BETWEEN '2023-01-01' AND '2023-12-31' AND r.comments IS NOT NULL AND r.report_type = 'Annual';","thinking":"","ambiguous":"False"}
{"id":3623964040,"db_name":"supervise","question":"获取2023年3月1日的不良贷款数据及其机构名称。","gt_sql":"SELECT npl.*, fi.institution_name FROM non_performing_loans npl JOIN financial_institution_info fi ON npl.institution_id = fi.institution_id WHERE npl.report_date = '2023-03-01';","pred_sql":"SELECT n.npl_id, n.institution_id, n.report_date, n.total_loans, n.npl_amount, n.npl_ratio, n.provision_coverage_ratio, f.institution_name FROM non_performing_loans n JOIN financial_institution_info f ON n.institution_id = f.institution_id WHERE n.report_date = '2023-03-01';","thinking":"","ambiguous":"False"}
{"id":478636896,"db_name":"supervise","question":"哪些机构的法定代表人是王姓？","gt_sql":"SELECT institution_name FROM financial_institution_info WHERE legal_representative LIKE '王%';","pred_sql":"SELECT institution_name FROM financial_institution_info WHERE legal_representative LIKE '王%';","thinking":"","ambiguous":"False"}
{"id":1733036868,"db_name":"supervise","question":"2023年第一季度，哪些金融机构的监管报告中包含关于资本充足率的详细数据，并且这些机构的总资本充足率超过10%？","gt_sql":"SELECT fii.institution_name, car.total_car FROM financial_institution_info fii JOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id WHERE car.report_date \u003e= '2023-01-01' AND car.report_date \u003c '2023-04-01' AND car.total_car \u003e 10.0;","pred_sql":"SELECT fi.institution_name, car.total_car FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN regulatory_reports rr ON fi.institution_id = rr.institution_id WHERE car.report_date BETWEEN '2023-01-01' AND '2023-03-31' AND rr.report_date BETWEEN '2023-01-01' AND '2023-03-31' AND car.total_car \u003e 10 AND rr.report_type LIKE '%资本充足率%';","thinking":"","ambiguous":"False"}
