[
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-13' AND d.name = '客户服务部' AND (a.check_out - a.check_in) > '15:00:00';",
    "question": "在2024年10月13日，哪些员工在客户服务部工作并且当天的工作时间超过了15小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-13'",
      "AND",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'15:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-13'",
      "AND",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'15:00:00';"
    ],
    "question_toks": [
      "在2024年10月13日，哪些员工在客户服务部工作并且当天的工作时间超过了15小时？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-10-11' AND a.check_in > '09:00:00';",
    "question": "2024年10月11日，哪些员工在清华大学毕业并且当天迟到（上班时间晚于09:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月11日，哪些员工在清华大学毕业并且当天迟到（上班时间晚于09:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT COUNT(*) FROM attendance_records WHERE employee_id = 'H03961' AND date >= '2024-01-01' AND date <= '2024-12-31' AND check_in > '09:00:00';",
    "question": "在2024年，员工H03961的考勤记录中，有多少天的上班时间晚于9:00？",
    "query_toks": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "attendance_records",
      "WHERE",
      "employee_id",
      "=",
      "'H03961'",
      "AND",
      "date",
      ">=",
      "'2024-01-01'",
      "AND",
      "date",
      "<=",
      "'2024-12-31'",
      "AND",
      "check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "attendance_records",
      "WHERE",
      "employee_id",
      "=",
      "'H03961'",
      "AND",
      "date",
      ">=",
      "'2024-01-01'",
      "AND",
      "date",
      "<=",
      "'2024-12-31'",
      "AND",
      "check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年，员工H03961的考勤记录中，有多少天的上班时间晚于9:00？"
    ],
    "result_fields": [
      "COUNT(*)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-24' AND a.check_in < '08:30:00' AND p.rating = 'A+';",
    "question": "2024年9月24日，哪些员工在8:30之前打卡上班，并且他们的绩效等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-24'",
      "AND",
      "a.check_in",
      "<",
      "'08:30:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-24'",
      "AND",
      "a.check_in",
      "<",
      "'08:30:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2024年9月24日，哪些员工在8:30之前打卡上班，并且他们的绩效等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-05';",
    "question": "请列出在2024年10月5日所有员工的姓名、部门名称以及他们的上班和下班时间。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-05';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-05';"
    ],
    "question_toks": [
      "请列出在2024年10月5日所有员工的姓名、部门名称以及他们的上班和下班时间。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-21' ORDER BY d.name;",
    "question": "查询2024年9月21日所有员工的姓名、部门名称、上班时间和下班时间，并按部门名称排序。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-21'",
      "ORDER",
      "BY",
      "d.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-21'",
      "ORDER",
      "BY",
      "d.name;"
    ],
    "question_toks": [
      "查询2024年9月21日所有员工的姓名、部门名称、上班时间和下班时间，并按部门名称排序。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT COUNT(*) FILTER (WHERE end_date - start_date < 90 AND status = '离职') / COUNT(*) * 100 AS离职比例 FROM probation_employees;",
    "question": "试用期未满三个月就离职的员工比例是多少？",
    "query_toks": [
      "SELECT",
      "COUNT(*)",
      "FILTER",
      "(WHERE",
      "end_date",
      "-",
      "start_date",
      "<",
      "90",
      "AND",
      "status",
      "=",
      "'离职')",
      "/",
      "COUNT(*)",
      "*",
      "100",
      "AS离职比例",
      "FROM",
      "probation_employees;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*)",
      "FILTER",
      "(WHERE",
      "end_date",
      "-",
      "start_date",
      "<",
      "90",
      "AND",
      "status",
      "=",
      "'离职')",
      "/",
      "COUNT(*)",
      "*",
      "100",
      "AS离职比例",
      "FROM",
      "probation_employees;"
    ],
    "question_toks": [
      "试用期未满三个月就离职的员工比例是多少？"
    ],
    "result_fields": [
      "COUNT(*) FILTER (WHERE end_date - start_date < 90 AND status = '离职') / COUNT(*) * 100 AS离职比例"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-08' AND d.name = '客户服务部' AND a.check_in > '09:00:00';",
    "question": "2024年10月8日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-08'",
      "AND",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-08'",
      "AND",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月8日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.hire_date FROM employees e JOIN probation_employees p ON e.employee_id = p.employee_id WHERE p.status = '在职';",
    "question": "列出所有试用期员工的姓名和他们的入职日期。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.hire_date",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "probation_employees",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "p.status",
      "=",
      "'在职';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.hire_date",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "probation_employees",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "p.status",
      "=",
      "'在职';"
    ],
    "question_toks": [
      "列出所有试用期员工的姓名和他们的入职日期。"
    ],
    "result_fields": [
      "e.name",
      "e.hire_date"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name, e.name AS employee_name, a.check_in, e.remaining_annual_leave FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-22' AND a.check_in > '09:00:00' AND e.remaining_annual_leave < 5;",
    "question": "2024年9月22日，哪些部门的员工在上班时间（check_in）晚于09:00，并且这些员工的剩余年假天数少于5天？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name,",
      "a.check_in,",
      "e.remaining_annual_leave",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-22'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "e.remaining_annual_leave",
      "<",
      "5;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name,",
      "a.check_in,",
      "e.remaining_annual_leave",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-22'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "e.remaining_annual_leave",
      "<",
      "5;"
    ],
    "question_toks": [
      "2024年9月22日，哪些部门的员工在上班时间（check_in）晚于09:00，并且这些员工的剩余年假天数少于5天？"
    ],
    "result_fields": [
      "d.name",
      "e.name",
      "a.check_in",
      "e.remaining_annual_leave"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE e.hire_date >= '2023-01-01' AND e.hire_date < '2024-01-01' AND a.date = '2024-10-05';",
    "question": "2023年入职的员工中，哪些人在2024年10月5日有考勤记录，并且他们的绩效等级是什么？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2024-01-01'",
      "AND",
      "a.date",
      "=",
      "'2024-10-05';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2024-01-01'",
      "AND",
      "a.date",
      "=",
      "'2024-10-05';"
    ],
    "question_toks": [
      "2023年入职的员工中，哪些人在2024年10月5日有考勤记录，并且他们的绩效等级是什么？"
    ],
    "result_fields": [
      "e.name",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.hire_date, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE e.hire_date >= '2023-01-01' AND e.hire_date < '2024-01-01' AND a.date = '2024-09-26';",
    "question": "2023年入职的员工中，哪些人在2024年9月26日有考勤记录，并且他们的绩效等级是什么？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.hire_date,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2024-01-01'",
      "AND",
      "a.date",
      "=",
      "'2024-09-26';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.hire_date,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2024-01-01'",
      "AND",
      "a.date",
      "=",
      "'2024-09-26';"
    ],
    "question_toks": [
      "2023年入职的员工中，哪些人在2024年9月26日有考勤记录，并且他们的绩效等级是什么？"
    ],
    "result_fields": [
      "e.name",
      "e.hire_date",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT COUNT(*) FROM attendance_records WHERE employee_id = 'H05598' AND date >= '2024-01-01' AND date <= '2024-12-31' AND check_out < '18:00:00';",
    "question": "在2024年，员工H05598的考勤记录中，下班时间早于18:00的有多少天？",
    "query_toks": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "attendance_records",
      "WHERE",
      "employee_id",
      "=",
      "'H05598'",
      "AND",
      "date",
      ">=",
      "'2024-01-01'",
      "AND",
      "date",
      "<=",
      "'2024-12-31'",
      "AND",
      "check_out",
      "<",
      "'18:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "attendance_records",
      "WHERE",
      "employee_id",
      "=",
      "'H05598'",
      "AND",
      "date",
      ">=",
      "'2024-01-01'",
      "AND",
      "date",
      "<=",
      "'2024-12-31'",
      "AND",
      "check_out",
      "<",
      "'18:00:00';"
    ],
    "question_toks": [
      "在2024年，员工H05598的考勤记录中，下班时间早于18:00的有多少天？"
    ],
    "result_fields": [
      "COUNT(*)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-28' AND ar.check_in > '09:00:00';",
    "question": "2024年9月28日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且这些员工所在的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-28'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-28'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月28日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且这些员工所在的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-12' AND a.check_in > '09:00:00' AND d.name = '运营部';",
    "question": "2024年10月12日，哪些员工在运营部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'运营部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'运营部';"
    ],
    "question_toks": [
      "2024年10月12日，哪些员工在运营部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-11' AND ar.check_in > '09:00:00';",
    "question": "2024年10月11日，哪些员工在上班时间（check_in）晚于09:00，并且他们的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-11'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-11'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月11日，哪些员工在上班时间（check_in）晚于09:00，并且他们的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-21' AND d.name = '销售部' AND a.check_in > '09:00:00';",
    "question": "2024年9月21日，哪些员工在销售部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-21'",
      "AND",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-21'",
      "AND",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月21日，哪些员工在销售部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-12-11' AND pe.rating = 'C';",
    "question": "2023年12月11日，哪些员工在绩效评估中获得了C评级，并且他们的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-12-11'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-12-11'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "question_toks": [
      "2023年12月11日，哪些员工在绩效评估中获得了C评级，并且他们的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-22' AND ar.check_in > '09:00:00';",
    "question": "2024年9月22日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且这些员工所属的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-22'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-22'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月22日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且这些员工所属的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT a.employee_id, e.name, a.award_name, pe.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2023 AND a.award_name = '创新奖' AND pe.rating = 'A+';",
    "question": "2023年有哪些员工获得了创新奖，并且他们的绩效评估等级为A+？",
    "query_toks": [
      "SELECT",
      "a.employee_id,",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "a.award_name",
      "=",
      "'创新奖'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.employee_id,",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "a.award_name",
      "=",
      "'创新奖'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2023年有哪些员工获得了创新奖，并且他们的绩效评估等级为A+？"
    ],
    "result_fields": [
      "a.employee_id",
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-10-09' AND a.check_in > '08:30:00';",
    "question": "2024年10月9日，哪些员工在客户服务部工作并且当天迟到（上班时间晚于08:30:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-09'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-09'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00';"
    ],
    "question_toks": [
      "2024年10月9日，哪些员工在客户服务部工作并且当天迟到（上班时间晚于08:30:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT COUNT(DISTINCT pe.employee_id) FROM probation_employees pe JOIN awards a ON pe.employee_id = a.employee_id WHERE pe.status = '在职' AND a.award_name = '优秀员工' AND a.year = 2023;",
    "question": "2023年有多少员工在试用期内获得了优秀员工奖？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "pe.employee_id)",
      "FROM",
      "probation_employees",
      "pe",
      "JOIN",
      "awards",
      "a",
      "ON",
      "pe.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "pe.status",
      "=",
      "'在职'",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "pe.employee_id)",
      "FROM",
      "probation_employees",
      "pe",
      "JOIN",
      "awards",
      "a",
      "ON",
      "pe.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "pe.status",
      "=",
      "'在职'",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "question_toks": [
      "2023年有多少员工在试用期内获得了优秀员工奖？"
    ],
    "result_fields": [
      "COUNT(DISTINCT pe.employee_id)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE e.hire_date BETWEEN '2021-01-01' AND '2021-12-31' AND a.year = 2022;",
    "question": "2021年入职的员工中，有哪些人在2022年获得了奖项？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.hire_date",
      "BETWEEN",
      "'2021-01-01'",
      "AND",
      "'2021-12-31'",
      "AND",
      "a.year",
      "=",
      "2022;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.hire_date",
      "BETWEEN",
      "'2021-01-01'",
      "AND",
      "'2021-12-31'",
      "AND",
      "a.year",
      "=",
      "2022;"
    ],
    "question_toks": [
      "2021年入职的员工中，有哪些人在2022年获得了奖项？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT employee_id FROM attendance_records GROUP BY employee_id HAVING COUNT(DISTINCT date) > 1;",
    "question": "哪些员工的考勤记录显示他们可能同时在多个项目中工作？",
    "query_toks": [
      "SELECT",
      "employee_id",
      "FROM",
      "attendance_records",
      "GROUP",
      "BY",
      "employee_id",
      "HAVING",
      "COUNT(DISTINCT",
      "date)",
      ">",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "employee_id",
      "FROM",
      "attendance_records",
      "GROUP",
      "BY",
      "employee_id",
      "HAVING",
      "COUNT(DISTINCT",
      "date)",
      ">",
      "1;"
    ],
    "question_toks": [
      "哪些员工的考勤记录显示他们可能同时在多个项目中工作？"
    ],
    "result_fields": [
      "employee_id"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name, e.name AS employee_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-24' AND ar.check_in > '09:30:00' AND e.remaining_annual_leave < 10;",
    "question": "2024年9月24日，哪些部门的员工在上班时间晚于9:30打卡，并且这些员工的年假剩余天数少于10天？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-24'",
      "AND",
      "ar.check_in",
      ">",
      "'09:30:00'",
      "AND",
      "e.remaining_annual_leave",
      "<",
      "10;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-24'",
      "AND",
      "ar.check_in",
      ">",
      "'09:30:00'",
      "AND",
      "e.remaining_annual_leave",
      "<",
      "10;"
    ],
    "question_toks": [
      "2024年9月24日，哪些部门的员工在上班时间晚于9:30打卡，并且这些员工的年假剩余天数少于10天？"
    ],
    "result_fields": [
      "d.name",
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-19' AND d.name = '销售部' AND a.check_in > '09:00:00';",
    "question": "2024年9月19日，哪些员工在销售部工作并且当天迟到（即上班时间晚于09:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-19'",
      "AND",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-19'",
      "AND",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月19日，哪些员工在销售部工作并且当天迟到（即上班时间晚于09:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name, e.name AS employee_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-26' AND ar.check_in > '09:00:00' AND pe.rating = 'C';",
    "question": "2024年9月26日，哪些部门的员工在上班时间（check_in）晚于09:00，并且他们的绩效等级为C？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-26'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-26'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "question_toks": [
      "2024年9月26日，哪些部门的员工在上班时间（check_in）晚于09:00，并且他们的绩效等级为C？"
    ],
    "result_fields": [
      "d.name",
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE e.hire_date >= '2021-01-01' AND e.hire_date < '2022-01-01' AND a.year = 2021 AND pe.rating = 'B';",
    "question": "2021年入职的员工中，哪些人在2021年获得了奖项，并且他们的绩效评估等级为B？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2021-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2022-01-01'",
      "AND",
      "a.year",
      "=",
      "2021",
      "AND",
      "pe.rating",
      "=",
      "'B';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2021-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2022-01-01'",
      "AND",
      "a.year",
      "=",
      "2021",
      "AND",
      "pe.rating",
      "=",
      "'B';"
    ],
    "question_toks": [
      "2021年入职的员工中，哪些人在2021年获得了奖项，并且他们的绩效评估等级为B？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND a.date = '2024-10-03' AND a.check_in > '09:00:00';",
    "question": "2024年10月3日，哪些员工在销售部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月3日，哪些员工在销售部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, p.status FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN probation_employees p ON e.employee_id = p.employee_id WHERE a.year = 2020 AND a.award_name = '优秀员工' AND p.status = '在职';",
    "question": "2020年获得'优秀员工'奖项的员工中，哪些人目前仍在试用期内？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "p.status",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "probation_employees",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2020",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "p.status",
      "=",
      "'在职';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "p.status",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "probation_employees",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2020",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "p.status",
      "=",
      "'在职';"
    ],
    "question_toks": [
      "2020年获得'优秀员工'奖项的员工中，哪些人目前仍在试用期内？"
    ],
    "result_fields": [
      "e.name",
      "p.status"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE e.hire_date >= '2023-01-01' AND e.hire_date < '2024-01-01' AND a.year = 2023 AND pe.rating = 'A+';",
    "question": "2023年入职的员工中，哪些员工在2023年获得了奖项，并且他们的绩效评估等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2024-01-01'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2024-01-01'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2023年入职的员工中，哪些员工在2023年获得了奖项，并且他们的绩效评估等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN probation_employees p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-19' AND p.status = '在职';",
    "question": "请列出在2024年9月19日所有员工的姓名、部门名称以及他们的考勤记录（包括上班和下班时间），并且这些员工必须是在试用期内的。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "probation_employees",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-19'",
      "AND",
      "p.status",
      "=",
      "'在职';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "probation_employees",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-19'",
      "AND",
      "p.status",
      "=",
      "'在职';"
    ],
    "question_toks": [
      "请列出在2024年9月19日所有员工的姓名、部门名称以及他们的考勤记录（包括上班和下班时间），并且这些员工必须是在试用期内的。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.employee_id, e.name, e.hire_date, e.remaining_annual_leave, COUNT(a.id) AS days_used_annual_leave\nFROM employees e\nLEFT JOIN attendance_records a ON e.employee_id = a.employee_id\nGROUP BY e.employee_id, e.name, e.hire_date, e.remaining_annual_leave;",
    "question": "对于每个员工，如何计算其入职后的年假使用情况？",
    "query_toks": [
      "SELECT",
      "e.employee_id,",
      "e.name,",
      "e.hire_date,",
      "e.remaining_annual_leave,",
      "COUNT(a.id)",
      "AS",
      "days_used_annual_leave",
      "FROM",
      "employees",
      "e",
      "LEFT",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "GROUP",
      "BY",
      "e.employee_id,",
      "e.name,",
      "e.hire_date,",
      "e.remaining_annual_leave;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.employee_id,",
      "e.name,",
      "e.hire_date,",
      "e.remaining_annual_leave,",
      "COUNT(a.id)",
      "AS",
      "days_used_annual_leave",
      "FROM",
      "employees",
      "e",
      "LEFT",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "GROUP",
      "BY",
      "e.employee_id,",
      "e.name,",
      "e.hire_date,",
      "e.remaining_annual_leave;"
    ],
    "question_toks": [
      "对于每个员工，如何计算其入职后的年假使用情况？"
    ],
    "result_fields": [
      "e.employee_id",
      "e.name",
      "e.hire_date",
      "e.remaining_annual_leave",
      "COUNT(a.id)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.date, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN awards aw ON e.employee_id = aw.employee_id WHERE aw.year = 2022 AND aw.award_name = '技术突破奖' AND EXTRACT(HOUR FROM (a.check_out - a.check_in)) >= 10;",
    "question": "2022年获得'技术突破奖'的员工中，哪些人每天的工作时间超过10小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.date,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "awards",
      "aw",
      "ON",
      "e.employee_id",
      "=",
      "aw.employee_id",
      "WHERE",
      "aw.year",
      "=",
      "2022",
      "AND",
      "aw.award_name",
      "=",
      "'技术突破奖'",
      "AND",
      "EXTRACT(HOUR",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      ">=",
      "10;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.date,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "awards",
      "aw",
      "ON",
      "e.employee_id",
      "=",
      "aw.employee_id",
      "WHERE",
      "aw.year",
      "=",
      "2022",
      "AND",
      "aw.award_name",
      "=",
      "'技术突破奖'",
      "AND",
      "EXTRACT(HOUR",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      ">=",
      "10;"
    ],
    "question_toks": [
      "2022年获得'技术突破奖'的员工中，哪些人每天的工作时间超过10小时？"
    ],
    "result_fields": [
      "e.name",
      "a.date",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-20' AND d.name = '质量控制部' AND EXTRACT(HOUR FROM (a.check_out - a.check_in)) > 8;",
    "question": "2024年9月20日，哪些员工在质量控制部工作并且当天上班时间超过8小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "EXTRACT(HOUR",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      ">",
      "8;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "EXTRACT(HOUR",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      ">",
      "8;"
    ],
    "question_toks": [
      "2024年9月20日，哪些员工在质量控制部工作并且当天上班时间超过8小时？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE a.date = '2024-09-25' AND e.university = '清华大学' AND a.check_in < '09:00:00';",
    "question": "2024年9月25日，哪些员工在清华大学毕业并且当天上班时间早于09:00？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-25'",
      "AND",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.check_in",
      "<",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-25'",
      "AND",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.check_in",
      "<",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月25日，哪些员工在清华大学毕业并且当天上班时间早于09:00？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN (SELECT employee_id, AVG(EXTRACT(EPOCH FROM (check_out - check_in)) / 3600) AS avg_work_hours FROM attendance_records GROUP BY employee_id) a ON e.employee_id = a.employee_id WHERE pe.rating = 'A+' ORDER BY a.avg_work_hours DESC LIMIT 1;",
    "question": "绩效评级为A+的员工中，平均每天工作时长最长的是谁？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "(SELECT",
      "employee_id,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(check_out",
      "-",
      "check_in))",
      "/",
      "3600)",
      "AS",
      "avg_work_hours",
      "FROM",
      "attendance_records",
      "GROUP",
      "BY",
      "employee_id)",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "pe.rating",
      "=",
      "'A+'",
      "ORDER",
      "BY",
      "a.avg_work_hours",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "(SELECT",
      "employee_id,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(check_out",
      "-",
      "check_in))",
      "/",
      "3600)",
      "AS",
      "avg_work_hours",
      "FROM",
      "attendance_records",
      "GROUP",
      "BY",
      "employee_id)",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "pe.rating",
      "=",
      "'A+'",
      "ORDER",
      "BY",
      "a.avg_work_hours",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "绩效评级为A+的员工中，平均每天工作时长最长的是谁？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-04' AND d.name = '销售部' AND a.check_in > '09:00:00';",
    "question": "2024年10月4日，哪些员工在销售部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-04'",
      "AND",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-04'",
      "AND",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月4日，哪些员工在销售部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-18' AND a.check_in > '09:00:00' AND p.rating = 'D';",
    "question": "在2024年9月18日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且他们的绩效评估等级为D？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-18'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-18'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "question_toks": [
      "在2024年9月18日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且他们的绩效评估等级为D？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-25' AND a.check_in > '08:30:00' AND p.rating = 'B+';",
    "question": "2024年9月25日，哪些员工在上班时间（check_in）晚于08:30:00，并且他们的绩效等级为B+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-25'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-25'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "question_toks": [
      "2024年9月25日，哪些员工在上班时间（check_in）晚于08:30:00，并且他们的绩效等级为B+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT * FROM interviews WHERE interview_date >= '2024-01-01' AND interview_date <= '2024-12-31' ORDER BY interview_count DESC;",
    "question": "查询2024年所有员工的面试记录，并按面试次数排序。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "interviews",
      "WHERE",
      "interview_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "interview_date",
      "<=",
      "'2024-12-31'",
      "ORDER",
      "BY",
      "interview_count",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "interviews",
      "WHERE",
      "interview_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "interview_date",
      "<=",
      "'2024-12-31'",
      "ORDER",
      "BY",
      "interview_count",
      "DESC;"
    ],
    "question_toks": [
      "查询2024年所有员工的面试记录，并按面试次数排序。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-10' AND a.check_in > '08:30:00' AND p.rating = 'A+';",
    "question": "2024年10月10日，哪些员工在上班时间（check_in）晚于08:30:00，并且他们的绩效等级（rating）为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-10'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-10'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2024年10月10日，哪些员工在上班时间（check_in）晚于08:30:00，并且他们的绩效等级（rating）为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name, e.name AS employee_name, a.check_in, e.remaining_annual_leave FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-27' AND a.check_in > '09:00:00' AND e.remaining_annual_leave < 10;",
    "question": "2024年9月27日，哪些部门的员工在上班时间晚于9:00打卡，并且这些员工的年假剩余天数少于10天？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name,",
      "a.check_in,",
      "e.remaining_annual_leave",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-27'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "e.remaining_annual_leave",
      "<",
      "10;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name,",
      "a.check_in,",
      "e.remaining_annual_leave",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-27'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "e.remaining_annual_leave",
      "<",
      "10;"
    ],
    "question_toks": [
      "2024年9月27日，哪些部门的员工在上班时间晚于9:00打卡，并且这些员工的年假剩余天数少于10天？"
    ],
    "result_fields": [
      "d.name",
      "e.name",
      "a.check_in",
      "e.remaining_annual_leave"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, p.evaluation_date FROM employees e JOIN performance_evaluations p ON e.employee_id = p.employee_id;",
    "question": "查询所有员工的姓名和他们的绩效评估日期。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "p.evaluation_date",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "p.evaluation_date",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id;"
    ],
    "question_toks": [
      "查询所有员工的姓名和他们的绩效评估日期。"
    ],
    "result_fields": [
      "e.name",
      "p.evaluation_date"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-07' AND a.check_in > '09:00:00' AND a.check_out < '17:00:00';",
    "question": "2024年10月7日，哪些员工在上班时间（check_in）晚于9:00并且在下班时间（check_out）早于17:00？请列出他们的姓名、部门名称和考勤记录。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-07'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "a.check_out",
      "<",
      "'17:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-07'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "a.check_out",
      "<",
      "'17:00:00';"
    ],
    "question_toks": [
      "2024年10月7日，哪些员工在上班时间（check_in）晚于9:00并且在下班时间（check_out）早于17:00？请列出他们的姓名、部门名称和考勤记录。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, d.name AS department_name, ar.check_in, ar.check_out FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-05';",
    "question": "请查询2024年10月5日所有员工的考勤记录，并显示他们的姓名、部门名称和当天的上班及下班时间。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "ar.check_in,",
      "ar.check_out",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-05';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "ar.check_in,",
      "ar.check_out",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-05';"
    ],
    "question_toks": [
      "请查询2024年10月5日所有员工的考勤记录，并显示他们的姓名、部门名称和当天的上班及下班时间。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "ar.check_in",
      "ar.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.department_id, AVG(i.interview_count) AS avg_interview_count FROM employees e JOIN interviews i ON e.employee_id = i.employee_id GROUP BY e.department_id ORDER BY avg_interview_count DESC LIMIT 1;",
    "question": "哪个部门的员工平均面试次数最多？",
    "query_toks": [
      "SELECT",
      "e.department_id,",
      "AVG(i.interview_count)",
      "AS",
      "avg_interview_count",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "interviews",
      "i",
      "ON",
      "e.employee_id",
      "=",
      "i.employee_id",
      "GROUP",
      "BY",
      "e.department_id",
      "ORDER",
      "BY",
      "avg_interview_count",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.department_id,",
      "AVG(i.interview_count)",
      "AS",
      "avg_interview_count",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "interviews",
      "i",
      "ON",
      "e.employee_id",
      "=",
      "i.employee_id",
      "GROUP",
      "BY",
      "e.department_id",
      "ORDER",
      "BY",
      "avg_interview_count",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "哪个部门的员工平均面试次数最多？"
    ],
    "result_fields": [
      "e.department_id",
      "AVG(i.interview_count)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.date, a.check_in, a.check_out, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-27' AND p.rating = 'A+';",
    "question": "哪些员工在2024年9月27日有考勤记录，并且他们的绩效等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "a.check_in,",
      "a.check_out,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-27'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "a.check_in,",
      "a.check_out,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-27'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "哪些员工在2024年9月27日有考勤记录，并且他们的绩效等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.date",
      "a.check_in",
      "a.check_out",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN awards aw ON e.employee_id = aw.employee_id WHERE aw.award_name = '最佳团队奖' AND aw.year = 2024 AND a.date = '2024-10-09' AND a.check_in > '09:00:00';",
    "question": "2024年获得最佳团队奖的员工中，哪些人在2024年10月9日的考勤记录中迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "awards",
      "aw",
      "ON",
      "e.employee_id",
      "=",
      "aw.employee_id",
      "WHERE",
      "aw.award_name",
      "=",
      "'最佳团队奖'",
      "AND",
      "aw.year",
      "=",
      "2024",
      "AND",
      "a.date",
      "=",
      "'2024-10-09'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "awards",
      "aw",
      "ON",
      "e.employee_id",
      "=",
      "aw.employee_id",
      "WHERE",
      "aw.award_name",
      "=",
      "'最佳团队奖'",
      "AND",
      "aw.year",
      "=",
      "2024",
      "AND",
      "a.date",
      "=",
      "'2024-10-09'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年获得最佳团队奖的员工中，哪些人在2024年10月9日的考勤记录中迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-14' AND a.check_in > '09:00:00' AND d.name = '质量控制部';",
    "question": "2024年10月14日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-14'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'质量控制部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-14'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'质量控制部';"
    ],
    "question_toks": [
      "2024年10月14日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_out, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-24' AND a.check_out > '13:00:00' AND p.rating = 'B+';",
    "question": "2024年9月24日，哪些员工在下午1点之后才下班，并且他们的绩效等级为B+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_out,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-24'",
      "AND",
      "a.check_out",
      ">",
      "'13:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_out,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-24'",
      "AND",
      "a.check_out",
      ">",
      "'13:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "question_toks": [
      "2024年9月24日，哪些员工在下午1点之后才下班，并且他们的绩效等级为B+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_out",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-08' AND ar.check_in > '09:00:00';",
    "question": "在2024年10月8日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于上午9:00），并且这些员工所在的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-08'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-08'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年10月8日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于上午9:00），并且这些员工所在的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.year = 2022;",
    "question": "请列出2022年获得过奖项的所有员工的名字、部门名称以及他们获得的奖项名称。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.year",
      "=",
      "2022;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.year",
      "=",
      "2022;"
    ],
    "question_toks": [
      "请列出2022年获得过奖项的所有员工的名字、部门名称以及他们获得的奖项名称。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.award_name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-12' AND a.check_in > '09:00:00' AND p.rating = 'D';",
    "question": "在2024年10月12日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且他们的绩效评估等级为D？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "question_toks": [
      "在2024年10月12日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且他们的绩效评估等级为D？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-10-13' AND a.check_in < '09:30:00';",
    "question": "2024年10月13日，哪些员工在清华大学毕业并且当天上班时间早于09:30？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-10-13'",
      "AND",
      "a.check_in",
      "<",
      "'09:30:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-10-13'",
      "AND",
      "a.check_in",
      "<",
      "'09:30:00';"
    ],
    "question_toks": [
      "2024年10月13日，哪些员工在清华大学毕业并且当天上班时间早于09:30？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-09-22';",
    "question": "2024年9月22日，哪些员工在客户服务部工作并且当天有考勤记录？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-22';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-22';"
    ],
    "question_toks": [
      "2024年9月22日，哪些员工在客户服务部工作并且当天有考勤记录？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.award_name = '质量改进奖' AND a.year = 2023 AND pe.rating = 'A+';",
    "question": "2023年有哪些员工获得了'质量改进奖'，并且他们的绩效评估等级为'A+'？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'质量改进奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'质量改进奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2023年有哪些员工获得了'质量改进奖'，并且他们的绩效评估等级为'A+'？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, d.name AS department_name FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-05' AND a.check_in > '08:30:00' AND d.manager_id = 'H05487';",
    "question": "2024年10月5日，哪些员工在上班时间（check_in）晚于08:30，并且他们的部门负责人是H05487？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-05'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00'",
      "AND",
      "d.manager_id",
      "=",
      "'H05487';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-05'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00'",
      "AND",
      "d.manager_id",
      "=",
      "'H05487';"
    ],
    "question_toks": [
      "2024年10月5日，哪些员工在上班时间（check_in）晚于08:30，并且他们的部门负责人是H05487？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-02' AND d.name = '行政部' AND (a.check_out - a.check_in) > '09:00:00';",
    "question": "2024年10月2日，哪些员工在行政部工作并且当天上班时间超过9小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-02'",
      "AND",
      "d.name",
      "=",
      "'行政部'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-02'",
      "AND",
      "d.name",
      "=",
      "'行政部'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月2日，哪些员工在行政部工作并且当天上班时间超过9小时？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name, e.name AS employee_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-03-31' AND pe.rating = 'D';",
    "question": "2023年3月31日，哪些部门的员工在绩效评估中获得了D评级？请列出部门名称和员工姓名。",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-03-31'",
      "AND",
      "pe.rating",
      "=",
      "'D';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-03-31'",
      "AND",
      "pe.rating",
      "=",
      "'D';"
    ],
    "question_toks": [
      "2023年3月31日，哪些部门的员工在绩效评估中获得了D评级？请列出部门名称和员工姓名。"
    ],
    "result_fields": [
      "d.name",
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT name, car_plate FROM employees WHERE employee_type = '正式员工';",
    "question": "列出所有正式员工的姓名和他们的车牌号。",
    "query_toks": [
      "SELECT",
      "name,",
      "car_plate",
      "FROM",
      "employees",
      "WHERE",
      "employee_type",
      "=",
      "'正式员工';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "name,",
      "car_plate",
      "FROM",
      "employees",
      "WHERE",
      "employee_type",
      "=",
      "'正式员工';"
    ],
    "question_toks": [
      "列出所有正式员工的姓名和他们的车牌号。"
    ],
    "result_fields": [
      "name",
      "car_plate"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-19' AND d.name = '质量控制部' AND a.check_in > '09:00:00';",
    "question": "在2024年9月19日，哪些员工在质量控制部工作并且他们的考勤记录显示他们当天迟到了？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-19'",
      "AND",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-19'",
      "AND",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年9月19日，哪些员工在质量控制部工作并且他们的考勤记录显示他们当天迟到了？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '客户满意度奖' AND a.year = 2022 AND ar.date = '2024-10-12' AND ar.check_in > '09:00:00';",
    "question": "2022年获得'客户满意度奖'的员工中，哪些人在2024年10月12日的考勤记录中迟到了？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'客户满意度奖'",
      "AND",
      "a.year",
      "=",
      "2022",
      "AND",
      "ar.date",
      "=",
      "'2024-10-12'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'客户满意度奖'",
      "AND",
      "a.year",
      "=",
      "2022",
      "AND",
      "ar.date",
      "=",
      "'2024-10-12'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2022年获得'客户满意度奖'的员工中，哪些人在2024年10月12日的考勤记录中迟到了？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, d.name AS department_name FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-11' AND a.check_in > '09:00:00' AND d.manager_id = 'H00842';",
    "question": "2024年10月11日，哪些员工的考勤记录显示他们上班时间晚于09:00，并且他们的部门负责人是H00842？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.manager_id",
      "=",
      "'H00842';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.manager_id",
      "=",
      "'H00842';"
    ],
    "question_toks": [
      "2024年10月11日，哪些员工的考勤记录显示他们上班时间晚于09:00，并且他们的部门负责人是H00842？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.award_name = '领导力奖' AND a.year = 2023;",
    "question": "请列出2023年获得'领导力奖'的员工姓名及其所属部门名称。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "question_toks": [
      "请列出2023年获得'领导力奖'的员工姓名及其所属部门名称。"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN awards aw ON e.employee_id = aw.employee_id WHERE aw.award_name = '领导力奖' AND aw.year = 2023 AND a.date = '2024-10-09' AND a.check_in > '09:00:00';",
    "question": "2023年获得'领导力奖'的员工中，哪些人在2024年10月9日的考勤记录中迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "awards",
      "aw",
      "ON",
      "e.employee_id",
      "=",
      "aw.employee_id",
      "WHERE",
      "aw.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "aw.year",
      "=",
      "2023",
      "AND",
      "a.date",
      "=",
      "'2024-10-09'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "awards",
      "aw",
      "ON",
      "e.employee_id",
      "=",
      "aw.employee_id",
      "WHERE",
      "aw.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "aw.year",
      "=",
      "2023",
      "AND",
      "a.date",
      "=",
      "'2024-10-09'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2023年获得'领导力奖'的员工中，哪些人在2024年10月9日的考勤记录中迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, d.manager_id FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-02' AND ar.check_in BETWEEN '09:00:00' AND '10:00:00' AND e.employee_type = '实习生';",
    "question": "在2024年10月2日，哪些实习生在早上9点到10点之间打卡上班，并且他们的部门负责人是谁？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "d.manager_id",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-02'",
      "AND",
      "ar.check_in",
      "BETWEEN",
      "'09:00:00'",
      "AND",
      "'10:00:00'",
      "AND",
      "e.employee_type",
      "=",
      "'实习生';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "d.manager_id",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-02'",
      "AND",
      "ar.check_in",
      "BETWEEN",
      "'09:00:00'",
      "AND",
      "'10:00:00'",
      "AND",
      "e.employee_type",
      "=",
      "'实习生';"
    ],
    "question_toks": [
      "在2024年10月2日，哪些实习生在早上9点到10点之间打卡上班，并且他们的部门负责人是谁？"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "d.manager_id"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name FROM departments d JOIN employees e ON d.department_id = e.department_id GROUP BY d.name ORDER BY AVG(EXTRACT(YEAR FROM AGE(date('now'), e.birth_date))) DESC LIMIT 1;",
    "question": "哪个部门的员工平均年龄最大？",
    "query_toks": [
      "SELECT",
      "d.name",
      "FROM",
      "departments",
      "d",
      "JOIN",
      "employees",
      "e",
      "ON",
      "d.department_id",
      "=",
      "e.department_id",
      "GROUP",
      "BY",
      "d.name",
      "ORDER",
      "BY",
      "AVG(EXTRACT(YEAR",
      "FROM",
      "AGE(date('now'),",
      "e.birth_date)))",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "FROM",
      "departments",
      "d",
      "JOIN",
      "employees",
      "e",
      "ON",
      "d.department_id",
      "=",
      "e.department_id",
      "GROUP",
      "BY",
      "d.name",
      "ORDER",
      "BY",
      "AVG(EXTRACT(YEAR",
      "FROM",
      "AGE(date('now'),",
      "e.birth_date)))",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "哪个部门的员工平均年龄最大？"
    ],
    "result_fields": [
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-16' AND p.rating = 'C';",
    "question": "哪些员工在2024年9月16日有考勤记录，并且他们的绩效等级为C？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-16'",
      "AND",
      "p.rating",
      "=",
      "'C';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-16'",
      "AND",
      "p.rating",
      "=",
      "'C';"
    ],
    "question_toks": [
      "哪些员工在2024年9月16日有考勤记录，并且他们的绩效等级为C？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-08' AND d.name = '研发部' AND a.check_in > '09:00:00';",
    "question": "2024年10月8日，哪些员工在研发部工作并且当天迟到（即上班时间晚于09:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-08'",
      "AND",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-08'",
      "AND",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月8日，哪些员工在研发部工作并且当天迟到（即上班时间晚于09:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND a.date = '2024-09-20' AND a.check_in > '09:00:00';",
    "question": "2024年9月20日，哪些员工在财务部工作并且当天迟到（即上班时间晚于09:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月20日，哪些员工在财务部工作并且当天迟到（即上班时间晚于09:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '人力资源部' AND a.date = '2024-10-05' AND EXTRACT(HOUR FROM (a.check_out - a.check_in)) >= 8;",
    "question": "2024年10月5日，哪些员工在人力资源部工作并且当天上班时间超过8小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'人力资源部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-05'",
      "AND",
      "EXTRACT(HOUR",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      ">=",
      "8;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'人力资源部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-05'",
      "AND",
      "EXTRACT(HOUR",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      ">=",
      "8;"
    ],
    "question_toks": [
      "2024年10月5日，哪些员工在人力资源部工作并且当天上班时间超过8小时？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.date, a.check_in, a.check_out, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-14' AND p.rating = 'A+';",
    "question": "哪些员工在2024年10月14日有考勤记录，并且他们的绩效等级是A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "a.check_in,",
      "a.check_out,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-14'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "a.check_in,",
      "a.check_out,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-14'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "哪些员工在2024年10月14日有考勤记录，并且他们的绩效等级是A+？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.date",
      "a.check_in",
      "a.check_out",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-27' AND d.name = '行政部' AND a.check_in > '09:00:00';",
    "question": "2024年9月27日，哪些员工在行政部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-27'",
      "AND",
      "d.name",
      "=",
      "'行政部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-27'",
      "AND",
      "d.name",
      "=",
      "'行政部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月27日，哪些员工在行政部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name, COUNT(e.employee_id) AS employee_count FROM departments d LEFT JOIN employees e ON d.department_id = e.department_id GROUP BY d.name;",
    "question": "列出所有部门的名称及其对应的员工数量。",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "COUNT(e.employee_id)",
      "AS",
      "employee_count",
      "FROM",
      "departments",
      "d",
      "LEFT",
      "JOIN",
      "employees",
      "e",
      "ON",
      "d.department_id",
      "=",
      "e.department_id",
      "GROUP",
      "BY",
      "d.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "COUNT(e.employee_id)",
      "AS",
      "employee_count",
      "FROM",
      "departments",
      "d",
      "LEFT",
      "JOIN",
      "employees",
      "e",
      "ON",
      "d.department_id",
      "=",
      "e.department_id",
      "GROUP",
      "BY",
      "d.name;"
    ],
    "question_toks": [
      "列出所有部门的名称及其对应的员工数量。"
    ],
    "result_fields": [
      "d.name",
      "COUNT(e.employee_id)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE pe.rating = 'A+' ORDER BY e.hire_date DESC LIMIT 1;",
    "question": "入职时间最短但已获得A+绩效的员工是谁？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "pe.rating",
      "=",
      "'A+'",
      "ORDER",
      "BY",
      "e.hire_date",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "pe.rating",
      "=",
      "'A+'",
      "ORDER",
      "BY",
      "e.hire_date",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "入职时间最短但已获得A+绩效的员工是谁？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.employee_id, e.name, e.department_id, a.total_hours, d.avg_hours, ABS(a.total_hours - d.avg_hours) AS difference\nFROM (\n    SELECT employee_id, SUM(EXTRACT(EPOCH FROM (check_out - check_in)) / 3600) AS total_hours\n    FROM attendance_records\n    GROUP BY employee_id\n) a\nJOIN employees e ON a.employee_id = e.employee_id\nJOIN (\n    SELECT e.department_id, AVG(a.total_hours) AS avg_hours\n    FROM (\n        SELECT employee_id, SUM(EXTRACT(EPOCH FROM (check_out - check_in)) / 3600) AS total_hours\n        FROM attendance_records\n        GROUP BY employee_id\n    ) a\n    JOIN employees e ON a.employee_id = e.employee_id\n    GROUP BY e.department_id\n) d ON e.department_id = d.department_id\nORDER BY difference DESC;",
    "question": "哪些员工的出勤时间与其所属部门的平均出勤时间差异最大？",
    "query_toks": [
      "SELECT",
      "e.employee_id,",
      "e.name,",
      "e.department_id,",
      "a.total_hours,",
      "d.avg_hours,",
      "ABS(a.total_hours",
      "-",
      "d.avg_hours)",
      "AS",
      "difference",
      "FROM",
      "(",
      "SELECT",
      "employee_id,",
      "SUM(EXTRACT(EPOCH",
      "FROM",
      "(check_out",
      "-",
      "check_in))",
      "/",
      "3600)",
      "AS",
      "total_hours",
      "FROM",
      "attendance_records",
      "GROUP",
      "BY",
      "employee_id",
      ")",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "(",
      "SELECT",
      "e.department_id,",
      "AVG(a.total_hours)",
      "AS",
      "avg_hours",
      "FROM",
      "(",
      "SELECT",
      "employee_id,",
      "SUM(EXTRACT(EPOCH",
      "FROM",
      "(check_out",
      "-",
      "check_in))",
      "/",
      "3600)",
      "AS",
      "total_hours",
      "FROM",
      "attendance_records",
      "GROUP",
      "BY",
      "employee_id",
      ")",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "GROUP",
      "BY",
      "e.department_id",
      ")",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "ORDER",
      "BY",
      "difference",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.employee_id,",
      "e.name,",
      "e.department_id,",
      "a.total_hours,",
      "d.avg_hours,",
      "ABS(a.total_hours",
      "-",
      "d.avg_hours)",
      "AS",
      "difference",
      "FROM",
      "(",
      "SELECT",
      "employee_id,",
      "SUM(EXTRACT(EPOCH",
      "FROM",
      "(check_out",
      "-",
      "check_in))",
      "/",
      "3600)",
      "AS",
      "total_hours",
      "FROM",
      "attendance_records",
      "GROUP",
      "BY",
      "employee_id",
      ")",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "(",
      "SELECT",
      "e.department_id,",
      "AVG(a.total_hours)",
      "AS",
      "avg_hours",
      "FROM",
      "(",
      "SELECT",
      "employee_id,",
      "SUM(EXTRACT(EPOCH",
      "FROM",
      "(check_out",
      "-",
      "check_in))",
      "/",
      "3600)",
      "AS",
      "total_hours",
      "FROM",
      "attendance_records",
      "GROUP",
      "BY",
      "employee_id",
      ")",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "GROUP",
      "BY",
      "e.department_id",
      ")",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "ORDER",
      "BY",
      "difference",
      "DESC;"
    ],
    "question_toks": [
      "哪些员工的出勤时间与其所属部门的平均出勤时间差异最大？"
    ],
    "result_fields": [
      "e.employee_id",
      "e.name",
      "e.department_id",
      "a.total_hours",
      "d.avg_hours",
      "ABS(a.total_hours - d.avg_hours)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out, (a.check_out - a.check_in) AS work_duration FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-05' AND d.name = '研发部' AND (a.check_out - a.check_in) > '10:00:00';",
    "question": "2024年10月5日，哪些员工在研发部工作并且当天的工作时长超过10小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out,",
      "(a.check_out",
      "-",
      "a.check_in)",
      "AS",
      "work_duration",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-05'",
      "AND",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'10:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out,",
      "(a.check_out",
      "-",
      "a.check_in)",
      "AS",
      "work_duration",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-05'",
      "AND",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'10:00:00';"
    ],
    "question_toks": [
      "2024年10月5日，哪些员工在研发部工作并且当天的工作时长超过10小时？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out",
      "(a.check_out - a.check_in)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, pe.rating AS performance_rating FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id LEFT JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-12';",
    "question": "请找出在2024年10月12日有考勤记录的员工姓名、部门名称以及他们的绩效等级。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "pe.rating",
      "AS",
      "performance_rating",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "LEFT",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-12';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "pe.rating",
      "AS",
      "performance_rating",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "LEFT",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-12';"
    ],
    "question_toks": [
      "请找出在2024年10月12日有考勤记录的员工姓名、部门名称以及他们的绩效等级。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-11' AND a.check_in > '09:00:00' AND d.name = '销售部';",
    "question": "2024年10月11日，哪些员工在销售部工作并且当天迟到（即上班时间晚于09:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'销售部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'销售部';"
    ],
    "question_toks": [
      "2024年10月11日，哪些员工在销售部工作并且当天迟到（即上班时间晚于09:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, d.name AS department_name, ar.check_in, a.award_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN awards a ON ar.employee_id = a.employee_id WHERE ar.date = '2024-09-26' AND ar.check_in > '09:00:00';",
    "question": "在2024年9月26日，哪些员工在上班时间（check_in）晚于9:00并且在当天获得了奖项？请列出他们的姓名、部门名称、上班时间和奖项名称。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "ar.check_in,",
      "a.award_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "awards",
      "a",
      "ON",
      "ar.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-26'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "ar.check_in,",
      "a.award_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "awards",
      "a",
      "ON",
      "ar.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-26'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年9月26日，哪些员工在上班时间（check_in）晚于9:00并且在当天获得了奖项？请列出他们的姓名、部门名称、上班时间和奖项名称。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "ar.check_in",
      "a.award_name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-05' AND a.check_in > '09:00:00' AND p.rating = 'A+';",
    "question": "2024年10月5日，哪些员工在上班时间晚于9:00并且他们的绩效等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-05'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-05'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2024年10月5日，哪些员工在上班时间晚于9:00并且他们的绩效等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-07' AND d.name = '人力资源部' AND a.check_in > '09:00:00';",
    "question": "2024年10月7日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于09:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-07'",
      "AND",
      "d.name",
      "=",
      "'人力资源部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-07'",
      "AND",
      "d.name",
      "=",
      "'人力资源部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月7日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于09:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, d.name AS department_name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-11' AND e.employee_type = '实习生' AND a.check_in < '09:00:00';",
    "question": "在2024年10月11日，哪些实习生的考勤记录显示他们当天没有迟到（即上班时间在09:00之前）？请列出他们的姓名、部门名称和上班时间。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "e.employee_type",
      "=",
      "'实习生'",
      "AND",
      "a.check_in",
      "<",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "e.employee_type",
      "=",
      "'实习生'",
      "AND",
      "a.check_in",
      "<",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年10月11日，哪些实习生的考勤记录显示他们当天没有迟到（即上班时间在09:00之前）？请列出他们的姓名、部门名称和上班时间。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.award_name = '优秀员工' AND pe.rating = 'A+' AND a.year = 2023;",
    "question": "2023年有哪些员工获得了优秀员工奖，并且他们的绩效评估等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "pe.rating",
      "=",
      "'A+'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "pe.rating",
      "=",
      "'A+'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "question_toks": [
      "2023年有哪些员工获得了优秀员工奖，并且他们的绩效评估等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.department_id, COUNT(DISTINCT pe.employee_id) AS core_talent_count\nFROM employees e\nJOIN probation_employees pe ON e.employee_id = pe.employee_id\nWHERE pe.status = '转正' AND pe.end_date >= datetime('now') - INTERVAL '5 years'\nGROUP BY e.department_id;",
    "question": "近五年内，每个部门为公司培养的高潜力人才中，有多少最终成长为公司的核心骨干？",
    "query_toks": [
      "SELECT",
      "e.department_id,",
      "COUNT(DISTINCT",
      "pe.employee_id)",
      "AS",
      "core_talent_count",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "probation_employees",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "pe.status",
      "=",
      "'转正'",
      "AND",
      "pe.end_date",
      ">=",
      "datetime('now')",
      "-",
      "INTERVAL",
      "'5",
      "years'",
      "GROUP",
      "BY",
      "e.department_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.department_id,",
      "COUNT(DISTINCT",
      "pe.employee_id)",
      "AS",
      "core_talent_count",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "probation_employees",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "pe.status",
      "=",
      "'转正'",
      "AND",
      "pe.end_date",
      ">=",
      "datetime('now')",
      "-",
      "INTERVAL",
      "'5",
      "years'",
      "GROUP",
      "BY",
      "e.department_id;"
    ],
    "question_toks": [
      "近五年内，每个部门为公司培养的高潜力人才中，有多少最终成长为公司的核心骨干？"
    ],
    "result_fields": [
      "e.department_id",
      "COUNT(DISTINCT pe.employee_id)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '新人奖' AND a.year = 2024 AND ar.date = '2024-10-08';",
    "question": "2024年获得新人奖的员工中，哪些人在2024年10月8日有考勤记录？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'新人奖'",
      "AND",
      "a.year",
      "=",
      "2024",
      "AND",
      "ar.date",
      "=",
      "'2024-10-08';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'新人奖'",
      "AND",
      "a.year",
      "=",
      "2024",
      "AND",
      "ar.date",
      "=",
      "'2024-10-08';"
    ],
    "question_toks": [
      "2024年获得新人奖的员工中，哪些人在2024年10月8日有考勤记录？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-02' AND a.check_in > '09:00:00' AND p.rating = 'A+';",
    "question": "2024年10月2日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-02'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-02'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2024年10月2日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.award_name = '新人奖' AND a.year = 2024;",
    "question": "请列出在2024年获得'新人奖'的员工姓名及其所在部门的名称。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.award_name",
      "=",
      "'新人奖'",
      "AND",
      "a.year",
      "=",
      "2024;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.award_name",
      "=",
      "'新人奖'",
      "AND",
      "a.year",
      "=",
      "2024;"
    ],
    "question_toks": [
      "请列出在2024年获得'新人奖'的员工姓名及其所在部门的名称。"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT AVG(EXTRACT(YEAR FROM age(first_management_position_date, hire_date))) AS average_years_to_management\nFROM (\n    SELECT e.employee_id, e.hire_date, MIN(e.hire_date) AS first_management_position_date\n    FROM employees e\n    WHERE e.position LIKE '%管理%'\n    GROUP BY e.employee_id, e.hire_date\n) AS subquery;",
    "question": "从入职到首次获得管理职位，员工平均需要多长时间？",
    "query_toks": [
      "SELECT",
      "AVG(EXTRACT(YEAR",
      "FROM",
      "age(first_management_position_date,",
      "hire_date)))",
      "AS",
      "average_years_to_management",
      "FROM",
      "(",
      "SELECT",
      "e.employee_id,",
      "e.hire_date,",
      "MIN(e.hire_date)",
      "AS",
      "first_management_position_date",
      "FROM",
      "employees",
      "e",
      "WHERE",
      "e.position",
      "LIKE",
      "'%管理%'",
      "GROUP",
      "BY",
      "e.employee_id,",
      "e.hire_date",
      ")",
      "AS",
      "subquery;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "AVG(EXTRACT(YEAR",
      "FROM",
      "age(first_management_position_date,",
      "hire_date)))",
      "AS",
      "average_years_to_management",
      "FROM",
      "(",
      "SELECT",
      "e.employee_id,",
      "e.hire_date,",
      "MIN(e.hire_date)",
      "AS",
      "first_management_position_date",
      "FROM",
      "employees",
      "e",
      "WHERE",
      "e.position",
      "LIKE",
      "'%管理%'",
      "GROUP",
      "BY",
      "e.employee_id,",
      "e.hire_date",
      ")",
      "AS",
      "subquery;"
    ],
    "question_toks": [
      "从入职到首次获得管理职位，员工平均需要多长时间？"
    ],
    "result_fields": [
      "AVG(EXTRACT(YEAR"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '研发部' AND a.date = '2024-10-06' AND EXTRACT(EPOCH FROM (a.check_out - a.check_in)) / 3600 > 10;",
    "question": "2024年10月6日，哪些员工在研发部工作并且他们的考勤记录显示他们当天的工作时长超过10小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-06'",
      "AND",
      "EXTRACT(EPOCH",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      "/",
      "3600",
      ">",
      "10;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-06'",
      "AND",
      "EXTRACT(EPOCH",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      "/",
      "3600",
      ">",
      "10;"
    ],
    "question_toks": [
      "2024年10月6日，哪些员工在研发部工作并且他们的考勤记录显示他们当天的工作时长超过10小时？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.award_name = '技术突破奖' AND pe.rating = 'A+' AND a.year = 2023;",
    "question": "2023年有哪些员工获得了技术突破奖，并且他们的绩效评估等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'技术突破奖'",
      "AND",
      "pe.rating",
      "=",
      "'A+'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'技术突破奖'",
      "AND",
      "pe.rating",
      "=",
      "'A+'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "question_toks": [
      "2023年有哪些员工获得了技术突破奖，并且他们的绩效评估等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-17' AND a.check_in > '09:00:00' AND p.rating = 'D';",
    "question": "2024年9月17日，哪些员工在上班时间迟到并且他们的绩效等级为D？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-17'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-17'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "question_toks": [
      "2024年9月17日，哪些员工在上班时间迟到并且他们的绩效等级为D？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '项目管理奖' AND a.year = 2024 AND ar.date = '2024-10-03';",
    "question": "2024年获得'项目管理奖'的员工中，哪些人在2024年10月3日有考勤记录？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'项目管理奖'",
      "AND",
      "a.year",
      "=",
      "2024",
      "AND",
      "ar.date",
      "=",
      "'2024-10-03';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'项目管理奖'",
      "AND",
      "a.year",
      "=",
      "2024",
      "AND",
      "ar.date",
      "=",
      "'2024-10-03';"
    ],
    "question_toks": [
      "2024年获得'项目管理奖'的员工中，哪些人在2024年10月3日有考勤记录？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.hire_date, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE a.award_name = '领导力奖' AND a.year = 2023 AND e.hire_date > '2017-01-01';",
    "question": "2023年获得领导力奖的员工中，哪些人是在2017年之后入职的？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.hire_date,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "e.hire_date",
      ">",
      "'2017-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.hire_date,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "e.hire_date",
      ">",
      "'2017-01-01';"
    ],
    "question_toks": [
      "2023年获得领导力奖的员工中，哪些人是在2017年之后入职的？"
    ],
    "result_fields": [
      "e.name",
      "e.hire_date",
      "a.award_name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-09-16' AND (a.check_out - a.check_in) > '08:00:00';",
    "question": "在2024年9月16日，哪些员工在清华大学毕业并且当天上班时间超过8小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-09-16'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'08:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-09-16'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'08:00:00';"
    ],
    "question_toks": [
      "在2024年9月16日，哪些员工在清华大学毕业并且当天上班时间超过8小时？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2023 AND a.award_name = '领导力奖' AND pe.evaluation_date = '2023-06-04' AND pe.rating = 'D';",
    "question": "2023年获得领导力奖的员工中，哪些人是在2023年6月4日进行的绩效评估中评级为D的？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "pe.evaluation_date",
      "=",
      "'2023-06-04'",
      "AND",
      "pe.rating",
      "=",
      "'D';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "pe.evaluation_date",
      "=",
      "'2023-06-04'",
      "AND",
      "pe.rating",
      "=",
      "'D';"
    ],
    "question_toks": [
      "2023年获得领导力奖的员工中，哪些人是在2023年6月4日进行的绩效评估中评级为D的？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-10-12' AND a.check_in > '09:00:00';",
    "question": "2024年10月12日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月12日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-21' AND a.check_in > '09:00:00' AND p.rating = 'B';",
    "question": "在2024年9月21日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效评估等级为B？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-21'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-21'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B';"
    ],
    "question_toks": [
      "在2024年9月21日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效评估等级为B？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-24' AND ar.check_in > '09:00:00' AND pe.rating = 'C';",
    "question": "2024年9月24日，哪些部门的员工在上班时间（check_in）晚于09:00，并且这些员工的绩效等级为C？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-24'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-24'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "question_toks": [
      "2024年9月24日，哪些部门的员工在上班时间（check_in）晚于09:00，并且这些员工的绩效等级为C？"
    ],
    "result_fields": [
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-05' AND d.name = '行政部' AND EXTRACT(HOUR FROM (a.check_out - a.check_in)) >= 9;",
    "question": "2024年10月5日，哪些员工在行政部工作并且当天上班时间超过9小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-05'",
      "AND",
      "d.name",
      "=",
      "'行政部'",
      "AND",
      "EXTRACT(HOUR",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      ">=",
      "9;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-05'",
      "AND",
      "d.name",
      "=",
      "'行政部'",
      "AND",
      "EXTRACT(HOUR",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      ">=",
      "9;"
    ],
    "question_toks": [
      "2024年10月5日，哪些员工在行政部工作并且当天上班时间超过9小时？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND a.date = '2024-10-06' AND a.check_in > '09:00:00';",
    "question": "在2024年10月6日，哪些员工在财务部工作并且他们的考勤记录显示他们当天有迟到（即上班时间晚于09:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-06'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-06'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年10月6日，哪些员工在财务部工作并且他们的考勤记录显示他们当天有迟到（即上班时间晚于09:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, d.manager_id FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.rating = 'A+' AND pe.evaluation_date >= '2023-01-01' AND pe.evaluation_date < '2024-01-01';",
    "question": "哪些员工在2023年获得了'A+'的绩效评级，并且他们的部门负责人是谁？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "d.manager_id",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.rating",
      "=",
      "'A+'",
      "AND",
      "pe.evaluation_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "pe.evaluation_date",
      "<",
      "'2024-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "d.manager_id",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.rating",
      "=",
      "'A+'",
      "AND",
      "pe.evaluation_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "pe.evaluation_date",
      "<",
      "'2024-01-01';"
    ],
    "question_toks": [
      "哪些员工在2023年获得了'A+'的绩效评级，并且他们的部门负责人是谁？"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "d.manager_id"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-28' AND a.check_in > '09:00:00' AND p.rating = 'A';",
    "question": "在2024年9月28日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效评估等级为A？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-28'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-28'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A';"
    ],
    "question_toks": [
      "在2024年9月28日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效评估等级为A？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT ar.id, ar.employee_id, ar.date, ar.check_in, ar.check_out FROM attendance_records ar JOIN awards a ON ar.employee_id = a.employee_id WHERE a.award_name = '销售冠军' AND a.year = 2023 AND ar.date = '2024-10-01';",
    "question": "2023年获得'销售冠军'奖项的员工在2024年10月1日的考勤记录是什么？",
    "query_toks": [
      "SELECT",
      "ar.id,",
      "ar.employee_id,",
      "ar.date,",
      "ar.check_in,",
      "ar.check_out",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "awards",
      "a",
      "ON",
      "ar.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'销售冠军'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "ar.date",
      "=",
      "'2024-10-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ar.id,",
      "ar.employee_id,",
      "ar.date,",
      "ar.check_in,",
      "ar.check_out",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "awards",
      "a",
      "ON",
      "ar.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'销售冠军'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "ar.date",
      "=",
      "'2024-10-01';"
    ],
    "question_toks": [
      "2023年获得'销售冠军'奖项的员工在2024年10月1日的考勤记录是什么？"
    ],
    "result_fields": [
      "ar.id",
      "ar.employee_id",
      "ar.date",
      "ar.check_in",
      "ar.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.department_id, e.employee_id, e.name, MIN(pe.evaluation_date - e.hire_date) AS time_to_first_A_plus FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE pe.rating = 'A+' GROUP BY e.department_id, e.employee_id, e.name ORDER BY e.department_id, time_to_first_A_plus LIMIT 1;",
    "question": "每个部门中，从入职到首次获得A+绩效评级用时最短的员工是谁？",
    "query_toks": [
      "SELECT",
      "e.department_id,",
      "e.employee_id,",
      "e.name,",
      "MIN(pe.evaluation_date",
      "-",
      "e.hire_date)",
      "AS",
      "time_to_first_A_plus",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "pe.rating",
      "=",
      "'A+'",
      "GROUP",
      "BY",
      "e.department_id,",
      "e.employee_id,",
      "e.name",
      "ORDER",
      "BY",
      "e.department_id,",
      "time_to_first_A_plus",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.department_id,",
      "e.employee_id,",
      "e.name,",
      "MIN(pe.evaluation_date",
      "-",
      "e.hire_date)",
      "AS",
      "time_to_first_A_plus",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "pe.rating",
      "=",
      "'A+'",
      "GROUP",
      "BY",
      "e.department_id,",
      "e.employee_id,",
      "e.name",
      "ORDER",
      "BY",
      "e.department_id,",
      "time_to_first_A_plus",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "每个部门中，从入职到首次获得A+绩效评级用时最短的员工是谁？"
    ],
    "result_fields": [
      "e.department_id",
      "e.employee_id",
      "e.name",
      "MIN(pe.evaluation_date - e.hire_date)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-22' AND ar.check_in > '09:00:00';",
    "question": "2024年9月22日，哪些员工的考勤记录显示他们迟到（即上班时间晚于9:00），并且这些员工所在的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-22'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-22'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月22日，哪些员工的考勤记录显示他们迟到（即上班时间晚于9:00），并且这些员工所在的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2024 AND a.award_name = '优秀员工' AND pe.rating = 'A+';",
    "question": "哪些员工在2024年获得了'优秀员工'奖项，并且他们的绩效评估等级为'A+'？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2024",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2024",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "哪些员工在2024年获得了'优秀员工'奖项，并且他们的绩效评估等级为'A+'？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, pe.rating FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-10-29';",
    "question": "请列出在2023年10月29日进行绩效评估的所有员工的姓名、部门名称以及他们的绩效等级。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "pe.rating",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-10-29';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "pe.rating",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-10-29';"
    ],
    "question_toks": [
      "请列出在2023年10月29日进行绩效评估的所有员工的姓名、部门名称以及他们的绩效等级。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-09-17' AND (a.check_out - a.check_in) > '09:00:00';",
    "question": "2024年9月17日，哪些员工在清华大学毕业并且当天上班时间超过9小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-09-17'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-09-17'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月17日，哪些员工在清华大学毕业并且当天上班时间超过9小时？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2022-06-16' AND pe.rating = 'C';",
    "question": "2022年6月16日，哪些员工在绩效评估中获得了C评级，并且他们的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2022-06-16'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2022-06-16'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "question_toks": [
      "2022年6月16日，哪些员工在绩效评估中获得了C评级，并且他们的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.award_name = '优秀员工' AND a.year = 2022 AND pe.evaluation_date = '2022-10-30' AND pe.rating = 'A+';",
    "question": "2022年获得'优秀员工'奖的员工中，哪些人在2022年10月30日的绩效评估中获得了A+评级？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "a.year",
      "=",
      "2022",
      "AND",
      "pe.evaluation_date",
      "=",
      "'2022-10-30'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "a.year",
      "=",
      "2022",
      "AND",
      "pe.evaluation_date",
      "=",
      "'2022-10-30'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2022年获得'优秀员工'奖的员工中，哪些人在2022年10月30日的绩效评估中获得了A+评级？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-15' AND a.check_in > '09:00:00' AND p.rating = 'B';",
    "question": "2024年9月15日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为B？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-15'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-15'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B';"
    ],
    "question_toks": [
      "2024年9月15日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为B？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.position FROM employees e JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部';",
    "question": "找出所有在销售部工作的员工的姓名和职位。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.position",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'销售部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.position",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'销售部';"
    ],
    "question_toks": [
      "找出所有在销售部工作的员工的姓名和职位。"
    ],
    "result_fields": [
      "e.name",
      "e.position"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-23' AND a.check_in > '09:00:00' AND p.rating = 'D';",
    "question": "在2024年9月23日，哪些员工的考勤记录显示他们没有在9:00之前打卡上班，并且他们的绩效评估等级为D？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-23'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-23'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "question_toks": [
      "在2024年9月23日，哪些员工的考勤记录显示他们没有在9:00之前打卡上班，并且他们的绩效评估等级为D？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2024-10-14' AND pe.rating = 'D' AND d.name = '客户服务部';",
    "question": "2024年10月14日，哪些员工在客户服务部工作并且绩效评估等级为D？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2024-10-14'",
      "AND",
      "pe.rating",
      "=",
      "'D'",
      "AND",
      "d.name",
      "=",
      "'客户服务部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2024-10-14'",
      "AND",
      "pe.rating",
      "=",
      "'D'",
      "AND",
      "d.name",
      "=",
      "'客户服务部';"
    ],
    "question_toks": [
      "2024年10月14日，哪些员工在客户服务部工作并且绩效评估等级为D？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.hire_date, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE a.award_name = '领导力奖' AND a.year = 2023 AND e.hire_date >= '2019-01-01';",
    "question": "2023年获得领导力奖的员工中，哪些人是在2019年或之后入职的？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.hire_date,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "e.hire_date",
      ">=",
      "'2019-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.hire_date,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "e.hire_date",
      ">=",
      "'2019-01-01';"
    ],
    "question_toks": [
      "2023年获得领导力奖的员工中，哪些人是在2019年或之后入职的？"
    ],
    "result_fields": [
      "e.name",
      "e.hire_date",
      "a.award_name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name, e.name AS employee_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-20' AND ar.check_in > '09:00:00' AND pe.rating = 'A+';",
    "question": "在2024年9月20日，哪些部门的员工在上班时间（check_in）晚于9:00，并且这些员工的绩效等级（rating）为A+？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-20'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-20'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "在2024年9月20日，哪些部门的员工在上班时间（check_in）晚于9:00，并且这些员工的绩效等级（rating）为A+？"
    ],
    "result_fields": [
      "d.name",
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.employee_id, e.name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN awards a ON e.employee_id = a.employee_id WHERE pe.rating IN ('B', 'C') AND a.award_name IN ('最佳团队奖', '最佳同事评价奖')",
    "question": "哪些员工虽然绩效一般，但在同事评价或团队贡献方面表现突出？",
    "query_toks": [
      "SELECT",
      "e.employee_id,",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "pe.rating",
      "IN",
      "('B',",
      "'C')",
      "AND",
      "a.award_name",
      "IN",
      "('最佳团队奖',",
      "'最佳同事评价奖')"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.employee_id,",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "pe.rating",
      "IN",
      "('B',",
      "'C')",
      "AND",
      "a.award_name",
      "IN",
      "('最佳团队奖',",
      "'最佳同事评价奖')"
    ],
    "question_toks": [
      "哪些员工虽然绩效一般，但在同事评价或团队贡献方面表现突出？"
    ],
    "result_fields": [
      "e.employee_id",
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-20' AND a.check_in BETWEEN '08:00:00' AND '09:00:00' AND p.rating = 'B';",
    "question": "2024年9月20日，哪些员工在8点到9点之间打卡上班，并且他们的绩效等级为B？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "a.check_in",
      "BETWEEN",
      "'08:00:00'",
      "AND",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "a.check_in",
      "BETWEEN",
      "'08:00:00'",
      "AND",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B';"
    ],
    "question_toks": [
      "2024年9月20日，哪些员工在8点到9点之间打卡上班，并且他们的绩效等级为B？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.employee_id, e.name FROM employees e JOIN (SELECT employee_id, MAX(evaluation_date) AS last_evaluation_date FROM performance_evaluations WHERE evaluation_date < '2024-01-01' GROUP BY employee_id) pe ON e.employee_id = pe.employee_id JOIN performance_evaluations pe2 ON pe.employee_id = pe2.employee_id AND pe.last_evaluation_date = pe2.evaluation_date WHERE pe2.rating = 'B';",
    "question": "哪些员工的最后一次绩效评估是在2024年之前且评级为B？",
    "query_toks": [
      "SELECT",
      "e.employee_id,",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "(SELECT",
      "employee_id,",
      "MAX(evaluation_date)",
      "AS",
      "last_evaluation_date",
      "FROM",
      "performance_evaluations",
      "WHERE",
      "evaluation_date",
      "<",
      "'2024-01-01'",
      "GROUP",
      "BY",
      "employee_id)",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe2",
      "ON",
      "pe.employee_id",
      "=",
      "pe2.employee_id",
      "AND",
      "pe.last_evaluation_date",
      "=",
      "pe2.evaluation_date",
      "WHERE",
      "pe2.rating",
      "=",
      "'B';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.employee_id,",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "(SELECT",
      "employee_id,",
      "MAX(evaluation_date)",
      "AS",
      "last_evaluation_date",
      "FROM",
      "performance_evaluations",
      "WHERE",
      "evaluation_date",
      "<",
      "'2024-01-01'",
      "GROUP",
      "BY",
      "employee_id)",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe2",
      "ON",
      "pe.employee_id",
      "=",
      "pe2.employee_id",
      "AND",
      "pe.last_evaluation_date",
      "=",
      "pe2.evaluation_date",
      "WHERE",
      "pe2.rating",
      "=",
      "'B';"
    ],
    "question_toks": [
      "哪些员工的最后一次绩效评估是在2024年之前且评级为B？"
    ],
    "result_fields": [
      "e.employee_id",
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-19' AND a.check_in > '09:00:00' AND p.rating = 'B+';",
    "question": "在2024年9月19日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为B+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-19'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-19'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "question_toks": [
      "在2024年9月19日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为B+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out, (a.check_out - a.check_in) AS work_duration FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-24' AND (a.check_out - a.check_in) > '12:00:00';",
    "question": "在2024年9月24日，哪些员工的考勤记录显示他们当天的工作时间超过了12小时，并且这些员工所在部门的名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out,",
      "(a.check_out",
      "-",
      "a.check_in)",
      "AS",
      "work_duration",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-24'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'12:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out,",
      "(a.check_out",
      "-",
      "a.check_in)",
      "AS",
      "work_duration",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-24'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'12:00:00';"
    ],
    "question_toks": [
      "在2024年9月24日，哪些员工的考勤记录显示他们当天的工作时间超过了12小时，并且这些员工所在部门的名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.check_in",
      "a.check_out",
      "(a.check_out - a.check_in)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-09-29' AND a.check_in < '09:00:00';",
    "question": "2024年9月29日，哪些员工在清华大学毕业并且当天上班时间早于09:00？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-09-29'",
      "AND",
      "a.check_in",
      "<",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-09-29'",
      "AND",
      "a.check_in",
      "<",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月29日，哪些员工在清华大学毕业并且当天上班时间早于09:00？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-11' AND a.check_in > '09:00:00' AND p.rating = 'A';",
    "question": "在2024年10月11日，哪些员工在上班时间（check_in）晚于9:00并且他们的绩效等级为A？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A';"
    ],
    "question_toks": [
      "在2024年10月11日，哪些员工在上班时间（check_in）晚于9:00并且他们的绩效等级为A？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT date, check_in, check_out FROM attendance_records WHERE employee_id = 'H03961';",
    "question": "查询某个员工（例如H03961）的考勤记录，包括日期、上班时间和下班时间。",
    "query_toks": [
      "SELECT",
      "date,",
      "check_in,",
      "check_out",
      "FROM",
      "attendance_records",
      "WHERE",
      "employee_id",
      "=",
      "'H03961';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "date,",
      "check_in,",
      "check_out",
      "FROM",
      "attendance_records",
      "WHERE",
      "employee_id",
      "=",
      "'H03961';"
    ],
    "question_toks": [
      "查询某个员工（例如H03961）的考勤记录，包括日期、上班时间和下班时间。"
    ],
    "result_fields": [
      "date",
      "check_in",
      "check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '厦门大学' AND a.date = '2024-09-23' AND a.check_in > '09:00:00';",
    "question": "2024年9月23日，哪些员工在厦门大学毕业并且当天迟到了？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'厦门大学'",
      "AND",
      "a.date",
      "=",
      "'2024-09-23'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'厦门大学'",
      "AND",
      "a.date",
      "=",
      "'2024-09-23'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月23日，哪些员工在厦门大学毕业并且当天迟到了？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-19' AND a.check_in > '09:00:00' AND p.rating = 'D';",
    "question": "2024年9月19日，哪些员工在上班时间（check_in）晚于09:00，并且他们的绩效等级为D？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-19'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-19'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "question_toks": [
      "2024年9月19日，哪些员工在上班时间（check_in）晚于09:00，并且他们的绩效等级为D？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.date, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-10-11' AND a.check_in > '08:30:00';",
    "question": "2024年10月11日，哪些员工在清华大学毕业并且当天迟到（即上班时间晚于08:30）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00';"
    ],
    "question_toks": [
      "2024年10月11日，哪些员工在清华大学毕业并且当天迟到（即上班时间晚于08:30）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.date",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-10' AND a.check_in > '09:00:00' AND p.rating = 'D';",
    "question": "2024年10月10日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为D？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-10'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-10'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "question_toks": [
      "2024年10月10日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为D？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE e.hire_date >= '2024-01-01' AND a.award_name = '新人奖' AND pe.rating = 'A' AND a.year = 2024;",
    "question": "2024年入职的员工中，哪些人在2024年获得了'新人奖'，并且他们的绩效等级是'A'？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "a.award_name",
      "=",
      "'新人奖'",
      "AND",
      "pe.rating",
      "=",
      "'A'",
      "AND",
      "a.year",
      "=",
      "2024;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "a.award_name",
      "=",
      "'新人奖'",
      "AND",
      "pe.rating",
      "=",
      "'A'",
      "AND",
      "a.year",
      "=",
      "2024;"
    ],
    "question_toks": [
      "2024年入职的员工中，哪些人在2024年获得了'新人奖'，并且他们的绩效等级是'A'？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-26' AND a.check_in BETWEEN '08:00:00' AND '09:00:00' AND p.rating = 'B+';",
    "question": "2024年9月26日，哪些员工在早上8点到9点之间打卡上班，并且他们的绩效等级为B+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-26'",
      "AND",
      "a.check_in",
      "BETWEEN",
      "'08:00:00'",
      "AND",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-26'",
      "AND",
      "a.check_in",
      "BETWEEN",
      "'08:00:00'",
      "AND",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "question_toks": [
      "2024年9月26日，哪些员工在早上8点到9点之间打卡上班，并且他们的绩效等级为B+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '创新奖' AND a.year = 2023 AND ar.date = '2024-09-25';",
    "question": "2023年获得创新奖的员工中，哪些人在2024年9月25日有考勤记录？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'创新奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "ar.date",
      "=",
      "'2024-09-25';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'创新奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "ar.date",
      "=",
      "'2024-09-25';"
    ],
    "question_toks": [
      "2023年获得创新奖的员工中，哪些人在2024年9月25日有考勤记录？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-24' AND a.check_in > '09:00:00' AND p.rating = 'D';",
    "question": "在2024年9月24日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为D？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-24'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-24'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "question_toks": [
      "在2024年9月24日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为D？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name, AVG(e.remaining_annual_leave) AS avg_annual_leave FROM departments d JOIN employees e ON d.department_id = e.department_id WHERE d.manager_id = 'H03372' GROUP BY d.name;",
    "question": "在2024年，哪个部门的经理是员工H03372，并且该部门员工的平均年假是多少？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "AVG(e.remaining_annual_leave)",
      "AS",
      "avg_annual_leave",
      "FROM",
      "departments",
      "d",
      "JOIN",
      "employees",
      "e",
      "ON",
      "d.department_id",
      "=",
      "e.department_id",
      "WHERE",
      "d.manager_id",
      "=",
      "'H03372'",
      "GROUP",
      "BY",
      "d.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "AVG(e.remaining_annual_leave)",
      "AS",
      "avg_annual_leave",
      "FROM",
      "departments",
      "d",
      "JOIN",
      "employees",
      "e",
      "ON",
      "d.department_id",
      "=",
      "e.department_id",
      "WHERE",
      "d.manager_id",
      "=",
      "'H03372'",
      "GROUP",
      "BY",
      "d.name;"
    ],
    "question_toks": [
      "在2024年，哪个部门的经理是员工H03372，并且该部门员工的平均年假是多少？"
    ],
    "result_fields": [
      "d.name",
      "AVG(e.remaining_annual_leave)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.date, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-12' AND p.rating = 'A+';",
    "question": "哪些员工在2024年10月12日有考勤记录，并且他们的绩效评估等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.date,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.date,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "哪些员工在2024年10月12日有考勤记录，并且他们的绩效评估等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.date",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.date, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN awards aw ON e.employee_id = aw.employee_id WHERE aw.award_name = '质量改进奖' AND aw.year = 2023 AND a.date = '2024-10-03' AND a.check_in > '09:00:00';",
    "question": "2023年获得'质量改进奖'的员工中，哪些人在2024年10月3日的考勤记录中迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.date,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "awards",
      "aw",
      "ON",
      "e.employee_id",
      "=",
      "aw.employee_id",
      "WHERE",
      "aw.award_name",
      "=",
      "'质量改进奖'",
      "AND",
      "aw.year",
      "=",
      "2023",
      "AND",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.date,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "awards",
      "aw",
      "ON",
      "e.employee_id",
      "=",
      "aw.employee_id",
      "WHERE",
      "aw.award_name",
      "=",
      "'质量改进奖'",
      "AND",
      "aw.year",
      "=",
      "2023",
      "AND",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2023年获得'质量改进奖'的员工中，哪些人在2024年10月3日的考勤记录中迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.date",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, d.name AS department_name, pe.rating FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE ar.date = '2024-09-15' AND d.name = '财务部' AND pe.rating = 'A+';",
    "question": "在2024年9月15日，哪些员工在财务部工作并且他们的绩效等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "d.name",
      "AS",
      "department_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-15'",
      "AND",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "d.name",
      "AS",
      "department_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-15'",
      "AND",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "在2024年9月15日，哪些员工在财务部工作并且他们的绩效等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "d.name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND a.date = '2024-09-21' AND a.check_in > '09:00:00';",
    "question": "2024年9月21日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于09:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-21'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-21'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月21日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于09:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-25' AND d.name = '销售部' AND (a.check_out - a.check_in) > '08:00:00';",
    "question": "2024年9月25日，哪些员工在销售部工作并且当天上班时间超过8小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-25'",
      "AND",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'08:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-25'",
      "AND",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'08:00:00';"
    ],
    "question_toks": [
      "2024年9月25日，哪些员工在销售部工作并且当天上班时间超过8小时？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2022 AND a.award_name = '技术突破奖' AND pe.evaluation_date > '2022-07-13';",
    "question": "2022年获得'技术突破奖'的员工中，哪些人同时在2022年7月13日之后进行了绩效评估，并且他们的绩效等级是什么？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2022",
      "AND",
      "a.award_name",
      "=",
      "'技术突破奖'",
      "AND",
      "pe.evaluation_date",
      ">",
      "'2022-07-13';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2022",
      "AND",
      "a.award_name",
      "=",
      "'技术突破奖'",
      "AND",
      "pe.evaluation_date",
      ">",
      "'2022-07-13';"
    ],
    "question_toks": [
      "2022年获得'技术突破奖'的员工中，哪些人同时在2022年7月13日之后进行了绩效评估，并且他们的绩效等级是什么？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-11' AND a.check_in > '09:00:00' AND d.name = '财务部';",
    "question": "在2024年10月11日，哪些员工在财务部工作并且当天迟到（即上班时间晚于09:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'财务部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'财务部';"
    ],
    "question_toks": [
      "在2024年10月11日，哪些员工在财务部工作并且当天迟到（即上班时间晚于09:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-12' AND a.check_in > '09:00:00' AND d.name = '研发部';",
    "question": "2024年10月12日，哪些员工在研发部工作并且当天上班时间晚于9:00？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'研发部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'研发部';"
    ],
    "question_toks": [
      "2024年10月12日，哪些员工在研发部工作并且当天上班时间晚于9:00？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name FROM departments d JOIN employees e ON d.department_id = e.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE pe.evaluation_date = '2023-08-06' AND pe.rating = 'C';",
    "question": "2023年8月6日，哪些部门的员工在绩效评估中获得了C评级？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "departments",
      "d",
      "JOIN",
      "employees",
      "e",
      "ON",
      "d.department_id",
      "=",
      "e.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-08-06'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "departments",
      "d",
      "JOIN",
      "employees",
      "e",
      "ON",
      "d.department_id",
      "=",
      "e.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-08-06'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "question_toks": [
      "2023年8月6日，哪些部门的员工在绩效评估中获得了C评级？"
    ],
    "result_fields": [
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-01' AND (a.check_out - a.check_in) > '12:00:00';",
    "question": "在2024年10月1日，哪些员工的考勤记录显示他们当天的工作时间超过了12小时，并且这些员工所属的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-01'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'12:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-01'",
      "AND",
      "(a.check_out",
      "-",
      "a.check_in)",
      ">",
      "'12:00:00';"
    ],
    "question_toks": [
      "在2024年10月1日，哪些员工的考勤记录显示他们当天的工作时间超过了12小时，并且这些员工所属的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-09' AND a.check_in > '09:00:00' AND p.rating = 'A+';",
    "question": "2024年10月9日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-09'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-09'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2024年10月9日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-24' AND a.check_in > '09:00:00' AND d.name = '人力资源部';",
    "question": "2024年9月24日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-24'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'人力资源部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-24'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'人力资源部';"
    ],
    "question_toks": [
      "2024年9月24日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND a.date = '2024-10-02' AND a.check_in > '09:00:00';",
    "question": "在2024年10月2日，哪些员工在销售部工作并且他们的考勤记录显示他们当天迟到了？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-02'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-02'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年10月2日，哪些员工在销售部工作并且他们的考勤记录显示他们当天迟到了？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_out, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-11' AND a.check_out > '21:00:00' AND p.rating = 'B+';",
    "question": "在2024年10月11日，哪些员工的考勤记录显示他们没有按时下班（即下班时间晚于21:00），并且他们的绩效评估等级为B+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_out,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_out",
      ">",
      "'21:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_out,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-11'",
      "AND",
      "a.check_out",
      ">",
      "'21:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "question_toks": [
      "在2024年10月11日，哪些员工的考勤记录显示他们没有按时下班（即下班时间晚于21:00），并且他们的绩效评估等级为B+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_out",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, d.name AS department_name, e.hire_date FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.rating = 'B' AND pe.evaluation_date >= '2022-01-01' AND pe.evaluation_date < '2023-01-01' ORDER BY e.hire_date;",
    "question": "请列出2022年绩效评估等级为B的员工姓名、部门名称以及他们的入职日期，并按入职日期排序。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "e.hire_date",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.rating",
      "=",
      "'B'",
      "AND",
      "pe.evaluation_date",
      ">=",
      "'2022-01-01'",
      "AND",
      "pe.evaluation_date",
      "<",
      "'2023-01-01'",
      "ORDER",
      "BY",
      "e.hire_date;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "e.hire_date",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.rating",
      "=",
      "'B'",
      "AND",
      "pe.evaluation_date",
      ">=",
      "'2022-01-01'",
      "AND",
      "pe.evaluation_date",
      "<",
      "'2023-01-01'",
      "ORDER",
      "BY",
      "e.hire_date;"
    ],
    "question_toks": [
      "请列出2022年绩效评估等级为B的员工姓名、部门名称以及他们的入职日期，并按入职日期排序。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "e.hire_date"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-22' AND d.name = '客户服务部';",
    "question": "请列出在2024年9月22日考勤记录中，所有员工的姓名、部门名称以及他们的上班和下班时间，并且这些员工必须是在客户服务部工作。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-22'",
      "AND",
      "d.name",
      "=",
      "'客户服务部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-22'",
      "AND",
      "d.name",
      "=",
      "'客户服务部';"
    ],
    "question_toks": [
      "请列出在2024年9月22日考勤记录中，所有员工的姓名、部门名称以及他们的上班和下班时间，并且这些员工必须是在客户服务部工作。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name, e.name AS employee_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-09-20' AND ar.check_in > '09:00:00' AND pe.rating = 'B';",
    "question": "2024年9月20日，哪些部门的员工在上班时间（check_in）晚于09:00并且他们的绩效等级为B？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-20'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "pe.rating",
      "=",
      "'B';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-20'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "pe.rating",
      "=",
      "'B';"
    ],
    "question_toks": [
      "2024年9月20日，哪些部门的员工在上班时间（check_in）晚于09:00并且他们的绩效等级为B？"
    ],
    "result_fields": [
      "d.name",
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id WHERE ar.date = '2024-10-02' ORDER BY ar.check_in LIMIT 1;",
    "question": "2024年10月2日最早到岗的员工是谁？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-02'",
      "ORDER",
      "BY",
      "ar.check_in",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-02'",
      "ORDER",
      "BY",
      "ar.check_in",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "2024年10月2日最早到岗的员工是谁？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.date, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE e.hire_date >= '2023-01-01' AND e.hire_date < '2024-01-01' AND a.date = '2024-10-10' AND p.rating = 'B+';",
    "question": "2023年入职的员工中，哪些人在2024年10月10日有考勤记录，并且他们的绩效评估等级为B+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2024-01-01'",
      "AND",
      "a.date",
      "=",
      "'2024-10-10'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2024-01-01'",
      "AND",
      "a.date",
      "=",
      "'2024-10-10'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "question_toks": [
      "2023年入职的员工中，哪些人在2024年10月10日有考勤记录，并且他们的绩效评估等级为B+？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.date",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.date, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND a.date = '2024-10-04' AND a.check_in > '09:00:00';",
    "question": "2024年10月4日，哪些员工在财务部工作并且他们的考勤记录显示迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-04'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-04'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月4日，哪些员工在财务部工作并且他们的考勤记录显示迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.date",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.date, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-17' AND p.rating = 'A+';",
    "question": "哪些员工在2024年9月17日有考勤记录，并且他们的绩效等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.date,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-17'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.date,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-17'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "哪些员工在2024年9月17日有考勤记录，并且他们的绩效等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.date",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name\nFROM probation_employees pe\nJOIN employees e ON pe.employee_id = e.employee_id\nJOIN departments d ON e.department_id = d.department_id\nGROUP BY pe.employee_id, d.name\nORDER BY COUNT(*) DESC\nLIMIT 3;",
    "question": "试用期延长次数最多的三名员工分别来自哪些部门？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "probation_employees",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "GROUP",
      "BY",
      "pe.employee_id,",
      "d.name",
      "ORDER",
      "BY",
      "COUNT(*)",
      "DESC",
      "LIMIT",
      "3;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "probation_employees",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "GROUP",
      "BY",
      "pe.employee_id,",
      "d.name",
      "ORDER",
      "BY",
      "COUNT(*)",
      "DESC",
      "LIMIT",
      "3;"
    ],
    "question_toks": [
      "试用期延长次数最多的三名员工分别来自哪些部门？"
    ],
    "result_fields": [
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-04' AND d.name = '财务部' AND a.check_in > '09:00:00';",
    "question": "2024年10月4日，哪些员工在财务部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-04'",
      "AND",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-04'",
      "AND",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月4日，哪些员工在财务部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.award_name = '优秀员工' AND a.year = 2023;",
    "question": "请列出2023年所有获得'优秀员工'奖项的员工姓名及其所在部门的名称。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "question_toks": [
      "请列出2023年所有获得'优秀员工'奖项的员工姓名及其所在部门的名称。"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT COUNT(DISTINCT pe.employee_id) FROM probation_employees pe JOIN awards a ON pe.employee_id = a.employee_id WHERE pe.status = '在职' AND a.award_name = '客户满意度奖' AND a.year = 2023;",
    "question": "2023年有多少员工在试用期内获得了客户满意度奖？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "pe.employee_id)",
      "FROM",
      "probation_employees",
      "pe",
      "JOIN",
      "awards",
      "a",
      "ON",
      "pe.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "pe.status",
      "=",
      "'在职'",
      "AND",
      "a.award_name",
      "=",
      "'客户满意度奖'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "pe.employee_id)",
      "FROM",
      "probation_employees",
      "pe",
      "JOIN",
      "awards",
      "a",
      "ON",
      "pe.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "pe.status",
      "=",
      "'在职'",
      "AND",
      "a.award_name",
      "=",
      "'客户满意度奖'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "question_toks": [
      "2023年有多少员工在试用期内获得了客户满意度奖？"
    ],
    "result_fields": [
      "COUNT(DISTINCT pe.employee_id)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-24' AND a.check_in > '09:00:00' AND p.rating = 'C';",
    "question": "在2024年9月24日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00:00），并且他们的绩效等级为C？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-24'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'C';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-24'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'C';"
    ],
    "question_toks": [
      "在2024年9月24日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00:00），并且他们的绩效等级为C？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id;",
    "question": "列出所有获得过奖项的员工的姓名和奖项名称。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id;"
    ],
    "question_toks": [
      "列出所有获得过奖项的员工的姓名和奖项名称。"
    ],
    "result_fields": [
      "e.name",
      "a.award_name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-13' AND a.check_in < '08:30:00' AND d.name = '法务部';",
    "question": "在2024年10月13日，哪些员工在法务部工作并且他们的考勤记录显示他们在8:30之前打卡上班？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-13'",
      "AND",
      "a.check_in",
      "<",
      "'08:30:00'",
      "AND",
      "d.name",
      "=",
      "'法务部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-13'",
      "AND",
      "a.check_in",
      "<",
      "'08:30:00'",
      "AND",
      "d.name",
      "=",
      "'法务部';"
    ],
    "question_toks": [
      "在2024年10月13日，哪些员工在法务部工作并且他们的考勤记录显示他们在8:30之前打卡上班？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-17' AND d.name = '质量控制部' AND EXTRACT(HOUR FROM (a.check_out - a.check_in)) >= 9;",
    "question": "2024年9月17日，哪些员工在质量控制部工作并且当天上班时间超过9小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-17'",
      "AND",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "EXTRACT(HOUR",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      ">=",
      "9;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-17'",
      "AND",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "EXTRACT(HOUR",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      ">=",
      "9;"
    ],
    "question_toks": [
      "2024年9月17日，哪些员工在质量控制部工作并且当天上班时间超过9小时？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-26' AND e.remaining_annual_leave > 10;",
    "question": "请列出2024年9月26日所有员工的姓名、部门名称以及他们的考勤记录（包括上班和下班时间），并且这些员工的年假剩余天数大于10天。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-26'",
      "AND",
      "e.remaining_annual_leave",
      ">",
      "10;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-26'",
      "AND",
      "e.remaining_annual_leave",
      ">",
      "10;"
    ],
    "question_toks": [
      "请列出2024年9月26日所有员工的姓名、部门名称以及他们的考勤记录（包括上班和下班时间），并且这些员工的年假剩余天数大于10天。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '财务部' AND a.date = '2024-10-09' AND a.check_in > '09:00:00';",
    "question": "2024年10月9日，哪些员工在财务部工作并且当天考勤记录显示他们迟到了？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-09'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-09'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月9日，哪些员工在财务部工作并且当天考勤记录显示他们迟到了？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-10' AND d.name = '客户服务部' AND a.check_in > '09:00:00';",
    "question": "2024年10月10日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-10'",
      "AND",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-10'",
      "AND",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月10日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.employee_id, e.name, COUNT(a.id) AS active_projects_count\nFROM employees e\nJOIN awards a ON e.employee_id = a.employee_id\nWHERE a.award_name = '创新奖'\nGROUP BY e.employee_id, e.name\nORDER BY active_projects_count DESC;",
    "question": "哪些员工在公司内部的创新孵化项目中表现最为活跃？这些项目对公司的长远发展有何影响？",
    "query_toks": [
      "SELECT",
      "e.employee_id,",
      "e.name,",
      "COUNT(a.id)",
      "AS",
      "active_projects_count",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'创新奖'",
      "GROUP",
      "BY",
      "e.employee_id,",
      "e.name",
      "ORDER",
      "BY",
      "active_projects_count",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.employee_id,",
      "e.name,",
      "COUNT(a.id)",
      "AS",
      "active_projects_count",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'创新奖'",
      "GROUP",
      "BY",
      "e.employee_id,",
      "e.name",
      "ORDER",
      "BY",
      "active_projects_count",
      "DESC;"
    ],
    "question_toks": [
      "哪些员工在公司内部的创新孵化项目中表现最为活跃？这些项目对公司的长远发展有何影响？"
    ],
    "result_fields": [
      "e.employee_id",
      "e.name",
      "COUNT(a.id)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-25' AND ar.check_in > '09:00:00';",
    "question": "在2024年9月25日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且这些员工所在的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-25'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-25'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年9月25日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且这些员工所在的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-28' AND d.name = '客户服务部' AND p.rating = 'A+';",
    "question": "2024年9月28日，哪些员工在客户服务部工作并且他们的绩效等级是A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-28'",
      "AND",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-28'",
      "AND",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2024年9月28日，哪些员工在客户服务部工作并且他们的绩效等级是A+？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-07' AND a.check_in > '09:00:00' AND d.name = '法务部';",
    "question": "2024年10月7日，哪些员工在法务部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-07'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'法务部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-07'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'法务部';"
    ],
    "question_toks": [
      "2024年10月7日，哪些员工在法务部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, ar.check_in, ar.check_out FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-14';",
    "question": "请列出在2024年10月14日考勤记录中，所有员工的姓名、部门名称以及他们的上班和下班时间。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "ar.check_in,",
      "ar.check_out",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-14';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "ar.check_in,",
      "ar.check_out",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-14';"
    ],
    "question_toks": [
      "请列出在2024年10月14日考勤记录中，所有员工的姓名、部门名称以及他们的上班和下班时间。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "ar.check_in",
      "ar.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT DISTINCT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '优秀员工' AND a.year = 2021 AND ar.date > '2021-01-01';",
    "question": "2021年获得优秀员工的员工中，哪些人在2021年1月1日之后有过考勤记录？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "a.year",
      "=",
      "2021",
      "AND",
      "ar.date",
      ">",
      "'2021-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "a.year",
      "=",
      "2021",
      "AND",
      "ar.date",
      ">",
      "'2021-01-01';"
    ],
    "question_toks": [
      "2021年获得优秀员工的员工中，哪些人在2021年1月1日之后有过考勤记录？"
    ],
    "result_fields": [
      "DISTINCT e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT AVG(e.remaining_annual_leave) AS avg_remaining_annual_leave FROM awards a JOIN employees e ON a.employee_id = e.employee_id WHERE a.year = 2024 AND a.award_name = '领导力奖' AND e.hire_date > '2017-01-01';",
    "question": "2024年获得领导力奖的员工中，哪些人是在2017年之后入职的，并且他们的平均剩余年假天数是多少？",
    "query_toks": [
      "SELECT",
      "AVG(e.remaining_annual_leave)",
      "AS",
      "avg_remaining_annual_leave",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2024",
      "AND",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "e.hire_date",
      ">",
      "'2017-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "AVG(e.remaining_annual_leave)",
      "AS",
      "avg_remaining_annual_leave",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2024",
      "AND",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "e.hire_date",
      ">",
      "'2017-01-01';"
    ],
    "question_toks": [
      "2024年获得领导力奖的员工中，哪些人是在2017年之后入职的，并且他们的平均剩余年假天数是多少？"
    ],
    "result_fields": [
      "AVG(e.remaining_annual_leave)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.employee_id, e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE a.award_name IN ('创新奖', '关键决策奖')",
    "question": "哪些员工虽然履历看似普通，但在关键决策或创新突破中起到了决定性作用？",
    "query_toks": [
      "SELECT",
      "e.employee_id,",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "IN",
      "('创新奖',",
      "'关键决策奖')"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.employee_id,",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "IN",
      "('创新奖',",
      "'关键决策奖')"
    ],
    "question_toks": [
      "哪些员工虽然履历看似普通，但在关键决策或创新突破中起到了决定性作用？"
    ],
    "result_fields": [
      "e.employee_id",
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-12-07' AND pe.rating = 'B';",
    "question": "在2023年12月7日进行的绩效评估中，哪些员工获得了B评级，并且他们的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-12-07'",
      "AND",
      "pe.rating",
      "=",
      "'B';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-12-07'",
      "AND",
      "pe.rating",
      "=",
      "'B';"
    ],
    "question_toks": [
      "在2023年12月7日进行的绩效评估中，哪些员工获得了B评级，并且他们的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, d.name AS department_name, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE e.hire_date >= '2023-01-01' AND e.hire_date < '2024-01-01' AND a.year = 2023;",
    "question": "2023年入职的员工中，有哪些人在2023年获得了奖项？请列出他们的姓名、部门名称和奖项名称。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2024-01-01'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2024-01-01'",
      "AND",
      "a.year",
      "=",
      "2023;"
    ],
    "question_toks": [
      "2023年入职的员工中，有哪些人在2023年获得了奖项？请列出他们的姓名、部门名称和奖项名称。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.award_name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-25' AND d.name = '销售部' AND a.check_in > '09:00:00';",
    "question": "2024年9月25日，哪些员工在销售部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-25'",
      "AND",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-25'",
      "AND",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月25日，哪些员工在销售部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND a.date = '2024-09-20' AND a.check_in > '09:00:00';",
    "question": "2024年9月20日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月20日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-29' AND d.name = '客户服务部' AND EXTRACT(EPOCH FROM (a.check_out - a.check_in)) / 3600 > 10;",
    "question": "在2024年9月29日，哪些员工在客户服务部工作并且当天的工作时间超过10小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-29'",
      "AND",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "EXTRACT(EPOCH",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      "/",
      "3600",
      ">",
      "10;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-29'",
      "AND",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "EXTRACT(EPOCH",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      "/",
      "3600",
      ">",
      "10;"
    ],
    "question_toks": [
      "在2024年9月29日，哪些员工在客户服务部工作并且当天的工作时间超过10小时？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-04' AND a.check_in > '08:30:00' AND p.rating = 'A+';",
    "question": "2024年10月4日，哪些员工在上班时间（check_in）晚于08:30并且他们的绩效等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-04'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-04'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2024年10月4日，哪些员工在上班时间（check_in）晚于08:30并且他们的绩效等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT employee_id, COUNT(*) AS late_days FROM attendance_records WHERE check_in > '09:00:00' GROUP BY employee_id;",
    "question": "获取所有员工的考勤记录，并统计每个员工的迟到天数。",
    "query_toks": [
      "SELECT",
      "employee_id,",
      "COUNT(*)",
      "AS",
      "late_days",
      "FROM",
      "attendance_records",
      "WHERE",
      "check_in",
      ">",
      "'09:00:00'",
      "GROUP",
      "BY",
      "employee_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "employee_id,",
      "COUNT(*)",
      "AS",
      "late_days",
      "FROM",
      "attendance_records",
      "WHERE",
      "check_in",
      ">",
      "'09:00:00'",
      "GROUP",
      "BY",
      "employee_id;"
    ],
    "question_toks": [
      "获取所有员工的考勤记录，并统计每个员工的迟到天数。"
    ],
    "result_fields": [
      "employee_id",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-15' AND p.rating = 'A+';",
    "question": "哪些员工在2024年9月15日有考勤记录，并且他们的绩效等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-15'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-15'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "哪些员工在2024年9月15日有考勤记录，并且他们的绩效等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '最佳团队奖' AND a.year = 2021 AND ar.date = '2024-09-19';",
    "question": "2021年获得最佳团队奖的员工中，哪些人在2024年9月19日有考勤记录？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'最佳团队奖'",
      "AND",
      "a.year",
      "=",
      "2021",
      "AND",
      "ar.date",
      "=",
      "'2024-09-19';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'最佳团队奖'",
      "AND",
      "a.year",
      "=",
      "2021",
      "AND",
      "ar.date",
      "=",
      "'2024-09-19';"
    ],
    "question_toks": [
      "2021年获得最佳团队奖的员工中，哪些人在2024年9月19日有考勤记录？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-09-21';",
    "question": "在2024年9月21日，哪些员工在客户服务部工作并且当天有考勤记录？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-21';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-21';"
    ],
    "question_toks": [
      "在2024年9月21日，哪些员工在客户服务部工作并且当天有考勤记录？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-23' AND a.check_in < '09:30:00' AND d.name = '财务部';",
    "question": "在2024年9月23日，哪些员工在财务部工作并且他们的考勤记录显示他们在9:30之前打卡上班？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-23'",
      "AND",
      "a.check_in",
      "<",
      "'09:30:00'",
      "AND",
      "d.name",
      "=",
      "'财务部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-23'",
      "AND",
      "a.check_in",
      "<",
      "'09:30:00'",
      "AND",
      "d.name",
      "=",
      "'财务部';"
    ],
    "question_toks": [
      "在2024年9月23日，哪些员工在财务部工作并且他们的考勤记录显示他们在9:30之前打卡上班？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id WHERE a.date = '2024-10-09' AND a.check_in > '09:00:00' AND e.employee_type = '实习生';",
    "question": "2024年10月9日，哪些实习生的考勤记录显示他们上班时间晚于9:00？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-09'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "e.employee_type",
      "=",
      "'实习生';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-09'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "e.employee_type",
      "=",
      "'实习生';"
    ],
    "question_toks": [
      "2024年10月9日，哪些实习生的考勤记录显示他们上班时间晚于9:00？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.date, a.check_in, a.check_out FROM awards a1 JOIN employees e ON a1.employee_id = e.employee_id JOIN attendance_records a ON e.employee_id = a.employee_id WHERE a1.award_name = '项目管理奖' AND a1.year = 2023 AND a.date = '2024-09-23';",
    "question": "2023年获得'项目管理奖'的员工中，哪些人在2024年9月23日有考勤记录？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.date,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "awards",
      "a1",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a1.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a1.award_name",
      "=",
      "'项目管理奖'",
      "AND",
      "a1.year",
      "=",
      "2023",
      "AND",
      "a.date",
      "=",
      "'2024-09-23';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.date,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "awards",
      "a1",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a1.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a1.award_name",
      "=",
      "'项目管理奖'",
      "AND",
      "a1.year",
      "=",
      "2023",
      "AND",
      "a.date",
      "=",
      "'2024-09-23';"
    ],
    "question_toks": [
      "2023年获得'项目管理奖'的员工中，哪些人在2024年9月23日有考勤记录？"
    ],
    "result_fields": [
      "e.name",
      "a.date",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE e.hire_date >= '2022-01-01' AND e.hire_date < '2023-01-01' AND a.year = 2023 AND pe.rating = 'A+';",
    "question": "2022年入职的员工中，哪些人在2023年获得了奖项，并且他们的绩效评估等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2022-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2023-01-01'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2022-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2023-01-01'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2022年入职的员工中，哪些人在2023年获得了奖项，并且他们的绩效评估等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-13' AND d.name = '人力资源部';",
    "question": "请列出在2024年10月13日考勤记录中，所有员工的姓名、部门名称以及他们的上班和下班时间，并且这些员工必须是人力资源部的成员。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-13'",
      "AND",
      "d.name",
      "=",
      "'人力资源部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-13'",
      "AND",
      "d.name",
      "=",
      "'人力资源部';"
    ],
    "question_toks": [
      "请列出在2024年10月13日考勤记录中，所有员工的姓名、部门名称以及他们的上班和下班时间，并且这些员工必须是人力资源部的成员。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '行政部' AND a.date = '2024-09-18' AND a.check_in > '09:00:00';",
    "question": "2024年9月18日，哪些员工在行政部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'行政部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-18'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'行政部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-18'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月18日，哪些员工在行政部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT '导师计划' AS factor, COUNT(*) AS contribution FROM employees WHERE employee_id IN (SELECT employee_id FROM performance_evaluations WHERE rating = 'A+') UNION ALL SELECT '培训课程' AS factor, COUNT(*) AS contribution FROM employees WHERE employee_id IN (SELECT employee_id FROM performance_evaluations WHERE rating = 'A+') UNION ALL SELECT '轮岗经历' AS factor, COUNT(*) AS contribution FROM employees WHERE employee_id IN (SELECT employee_id FROM performance_evaluations WHERE rating = 'A+') ORDER BY contribution DESC;",
    "question": "哪些因素（如导师计划、培训课程、轮岗经历）对新员工的快速成长贡献最大？",
    "query_toks": [
      "SELECT",
      "'导师计划'",
      "AS",
      "factor,",
      "COUNT(*)",
      "AS",
      "contribution",
      "FROM",
      "employees",
      "WHERE",
      "employee_id",
      "IN",
      "(SELECT",
      "employee_id",
      "FROM",
      "performance_evaluations",
      "WHERE",
      "rating",
      "=",
      "'A+')",
      "UNION",
      "ALL",
      "SELECT",
      "'培训课程'",
      "AS",
      "factor,",
      "COUNT(*)",
      "AS",
      "contribution",
      "FROM",
      "employees",
      "WHERE",
      "employee_id",
      "IN",
      "(SELECT",
      "employee_id",
      "FROM",
      "performance_evaluations",
      "WHERE",
      "rating",
      "=",
      "'A+')",
      "UNION",
      "ALL",
      "SELECT",
      "'轮岗经历'",
      "AS",
      "factor,",
      "COUNT(*)",
      "AS",
      "contribution",
      "FROM",
      "employees",
      "WHERE",
      "employee_id",
      "IN",
      "(SELECT",
      "employee_id",
      "FROM",
      "performance_evaluations",
      "WHERE",
      "rating",
      "=",
      "'A+')",
      "ORDER",
      "BY",
      "contribution",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "'导师计划'",
      "AS",
      "factor,",
      "COUNT(*)",
      "AS",
      "contribution",
      "FROM",
      "employees",
      "WHERE",
      "employee_id",
      "IN",
      "(SELECT",
      "employee_id",
      "FROM",
      "performance_evaluations",
      "WHERE",
      "rating",
      "=",
      "'A+')",
      "UNION",
      "ALL",
      "SELECT",
      "'培训课程'",
      "AS",
      "factor,",
      "COUNT(*)",
      "AS",
      "contribution",
      "FROM",
      "employees",
      "WHERE",
      "employee_id",
      "IN",
      "(SELECT",
      "employee_id",
      "FROM",
      "performance_evaluations",
      "WHERE",
      "rating",
      "=",
      "'A+')",
      "UNION",
      "ALL",
      "SELECT",
      "'轮岗经历'",
      "AS",
      "factor,",
      "COUNT(*)",
      "AS",
      "contribution",
      "FROM",
      "employees",
      "WHERE",
      "employee_id",
      "IN",
      "(SELECT",
      "employee_id",
      "FROM",
      "performance_evaluations",
      "WHERE",
      "rating",
      "=",
      "'A+')",
      "ORDER",
      "BY",
      "contribution",
      "DESC;"
    ],
    "question_toks": [
      "哪些因素（如导师计划、培训课程、轮岗经历）对新员工的快速成长贡献最大？"
    ],
    "result_fields": [
      "'导师计划'",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '销售部' AND a.date = '2024-09-20' AND a.check_in > '08:00:00';",
    "question": "2024年9月20日，哪些员工在销售部工作并且当天迟到（即上班时间晚于08:00:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "a.check_in",
      ">",
      "'08:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'销售部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "a.check_in",
      ">",
      "'08:00:00';"
    ],
    "question_toks": [
      "2024年9月20日，哪些员工在销售部工作并且当天迟到（即上班时间晚于08:00:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.department_id, e.employee_id, e.name, MAX(AGE(date('now'), e.birth_date)) AS max_age FROM employees e GROUP BY e.department_id, e.employee_id, e.name;",
    "question": "每个部门中年龄最大的员工是谁？",
    "query_toks": [
      "SELECT",
      "e.department_id,",
      "e.employee_id,",
      "e.name,",
      "MAX(AGE(date('now'),",
      "e.birth_date))",
      "AS",
      "max_age",
      "FROM",
      "employees",
      "e",
      "GROUP",
      "BY",
      "e.department_id,",
      "e.employee_id,",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.department_id,",
      "e.employee_id,",
      "e.name,",
      "MAX(AGE(date('now'),",
      "e.birth_date))",
      "AS",
      "max_age",
      "FROM",
      "employees",
      "e",
      "GROUP",
      "BY",
      "e.department_id,",
      "e.employee_id,",
      "e.name;"
    ],
    "question_toks": [
      "每个部门中年龄最大的员工是谁？"
    ],
    "result_fields": [
      "e.department_id",
      "e.employee_id",
      "e.name",
      "MAX(AGE(date('now'), e.birth_date))"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-30' AND d.name = '人力资源部' AND a.check_in > '09:00:00';",
    "question": "在2024年9月30日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-30'",
      "AND",
      "d.name",
      "=",
      "'人力资源部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-30'",
      "AND",
      "d.name",
      "=",
      "'人力资源部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年9月30日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-18' AND d.name = '研发部' AND a.check_in > '09:00:00';",
    "question": "2024年9月18日，哪些员工在研发部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-18'",
      "AND",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-18'",
      "AND",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月18日，哪些员工在研发部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-28' AND a.check_in > '09:30:00' AND p.rating = 'A+';",
    "question": "2024年9月28日，哪些员工在上班时间（check_in）晚于09:30并且他们的绩效等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-28'",
      "AND",
      "a.check_in",
      ">",
      "'09:30:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-28'",
      "AND",
      "a.check_in",
      ">",
      "'09:30:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2024年9月28日，哪些员工在上班时间（check_in）晚于09:30并且他们的绩效等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-17' AND a.check_in > '09:00:00' AND p.rating = 'B';",
    "question": "在2024年9月17日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且他们的绩效等级为B？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-17'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-17'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B';"
    ],
    "question_toks": [
      "在2024年9月17日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且他们的绩效等级为B？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.date, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-22' AND p.rating = 'D';",
    "question": "哪些员工在2024年9月22日有考勤记录，并且他们的绩效等级为D？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-22'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-22'",
      "AND",
      "p.rating",
      "=",
      "'D';"
    ],
    "question_toks": [
      "哪些员工在2024年9月22日有考勤记录，并且他们的绩效等级为D？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.date",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.date, a.check_in, a.check_out, p.rating FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-03' AND p.rating = 'A+';",
    "question": "哪些员工在2024年10月3日有考勤记录，并且他们的绩效等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "a.check_in,",
      "a.check_out,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.date,",
      "a.check_in,",
      "a.check_out,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "哪些员工在2024年10月3日有考勤记录，并且他们的绩效等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.date",
      "a.check_in",
      "a.check_out",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-10-07' AND a.check_in > '09:00:00';",
    "question": "2024年10月7日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-07'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-07'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月7日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT ar.employee_id, ar.date, ar.check_in, ar.check_out, pe.rating FROM attendance_records ar JOIN performance_evaluations pe ON ar.employee_id = pe.employee_id;",
    "question": "显示每位员工的考勤记录及其绩效评估评级。",
    "query_toks": [
      "SELECT",
      "ar.employee_id,",
      "ar.date,",
      "ar.check_in,",
      "ar.check_out,",
      "pe.rating",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "ar.employee_id",
      "=",
      "pe.employee_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ar.employee_id,",
      "ar.date,",
      "ar.check_in,",
      "ar.check_out,",
      "pe.rating",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "ar.employee_id",
      "=",
      "pe.employee_id;"
    ],
    "question_toks": [
      "显示每位员工的考勤记录及其绩效评估评级。"
    ],
    "result_fields": [
      "ar.employee_id",
      "ar.date",
      "ar.check_in",
      "ar.check_out",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN awards a ON e.employee_id = a.employee_id WHERE ar.date = '2024-10-05' AND ar.check_in > '09:00:00' AND a.year = 2021;",
    "question": "在2024年10月5日，哪些员工的考勤记录显示他们迟到（即上班时间晚于9:00），并且这些员工在2021年获得了奖项？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-05'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "a.year",
      "=",
      "2021;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-05'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "a.year",
      "=",
      "2021;"
    ],
    "question_toks": [
      "在2024年10月5日，哪些员工的考勤记录显示他们迟到（即上班时间晚于9:00），并且这些员工在2021年获得了奖项？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND a.date = '2024-09-25' AND a.check_in > '08:30:00';",
    "question": "2024年9月25日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于08:30:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-25'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-25'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00';"
    ],
    "question_toks": [
      "2024年9月25日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于08:30:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "WITH QuarterlyPerformance AS (SELECT EXTRACT(YEAR FROM evaluation_date) AS year, EXTRACT(QUARTER FROM evaluation_date) AS quarter, employee_id, RANK() OVER (PARTITION BY EXTRACT(YEAR FROM evaluation_date), EXTRACT(QUARTER FROM evaluation_date) ORDER BY rating DESC) AS performance_rank FROM performance_evaluations WHERE evaluation_date >= date('now') - INTERVAL '3 years'), QuarterlyAttendance AS (SELECT EXTRACT(YEAR FROM date) AS year, EXTRACT(QUARTER FROM date) AS quarter, employee_id, COUNT(*) FILTER (WHERE check_in IS NOT NULL AND check_out IS NOT NULL) AS full_attendance_days, COUNT(*) AS total_days, RANK() OVER (PARTITION BY EXTRACT(YEAR FROM date), EXTRACT(QUARTER FROM date) ORDER BY COUNT(*) FILTER (WHERE check_in IS NOT NULL AND check_out IS NOT NULL) DESC) AS attendance_rank FROM attendance_records WHERE date >= date('now') - INTERVAL '3 years' GROUP BY EXTRACT(YEAR FROM date), EXTRACT(QUARTER FROM date), employee_id) SELECT qp.year, qp.quarter, qp.employee_id FROM QuarterlyPerformance qp JOIN QuarterlyAttendance qa ON qp.year = qa.year AND qp.quarter = qa.quarter AND qp.employee_id = qa.employee_id WHERE qp.performance_rank = 1 AND qa.attendance_rank = 1;",
    "question": "过去三年中，每个季度产出最高的员工是否也是最严格遵守工作时间的？",
    "query_toks": [
      "WITH",
      "QuarterlyPerformance",
      "AS",
      "(SELECT",
      "EXTRACT(YEAR",
      "FROM",
      "evaluation_date)",
      "AS",
      "year,",
      "EXTRACT(QUARTER",
      "FROM",
      "evaluation_date)",
      "AS",
      "quarter,",
      "employee_id,",
      "RANK()",
      "OVER",
      "(PARTITION",
      "BY",
      "EXTRACT(YEAR",
      "FROM",
      "evaluation_date),",
      "EXTRACT(QUARTER",
      "FROM",
      "evaluation_date)",
      "ORDER",
      "BY",
      "rating",
      "DESC)",
      "AS",
      "performance_rank",
      "FROM",
      "performance_evaluations",
      "WHERE",
      "evaluation_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'3",
      "years'),",
      "QuarterlyAttendance",
      "AS",
      "(SELECT",
      "EXTRACT(YEAR",
      "FROM",
      "date)",
      "AS",
      "year,",
      "EXTRACT(QUARTER",
      "FROM",
      "date)",
      "AS",
      "quarter,",
      "employee_id,",
      "COUNT(*)",
      "FILTER",
      "(WHERE",
      "check_in",
      "IS",
      "NOT",
      "NULL",
      "AND",
      "check_out",
      "IS",
      "NOT",
      "NULL)",
      "AS",
      "full_attendance_days,",
      "COUNT(*)",
      "AS",
      "total_days,",
      "RANK()",
      "OVER",
      "(PARTITION",
      "BY",
      "EXTRACT(YEAR",
      "FROM",
      "date),",
      "EXTRACT(QUARTER",
      "FROM",
      "date)",
      "ORDER",
      "BY",
      "COUNT(*)",
      "FILTER",
      "(WHERE",
      "check_in",
      "IS",
      "NOT",
      "NULL",
      "AND",
      "check_out",
      "IS",
      "NOT",
      "NULL)",
      "DESC)",
      "AS",
      "attendance_rank",
      "FROM",
      "attendance_records",
      "WHERE",
      "date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'3",
      "years'",
      "GROUP",
      "BY",
      "EXTRACT(YEAR",
      "FROM",
      "date),",
      "EXTRACT(QUARTER",
      "FROM",
      "date),",
      "employee_id)",
      "SELECT",
      "qp.year,",
      "qp.quarter,",
      "qp.employee_id",
      "FROM",
      "QuarterlyPerformance",
      "qp",
      "JOIN",
      "QuarterlyAttendance",
      "qa",
      "ON",
      "qp.year",
      "=",
      "qa.year",
      "AND",
      "qp.quarter",
      "=",
      "qa.quarter",
      "AND",
      "qp.employee_id",
      "=",
      "qa.employee_id",
      "WHERE",
      "qp.performance_rank",
      "=",
      "1",
      "AND",
      "qa.attendance_rank",
      "=",
      "1;"
    ],
    "query_toks_no_value": [
      "WITH",
      "QuarterlyPerformance",
      "AS",
      "(SELECT",
      "EXTRACT(YEAR",
      "FROM",
      "evaluation_date)",
      "AS",
      "year,",
      "EXTRACT(QUARTER",
      "FROM",
      "evaluation_date)",
      "AS",
      "quarter,",
      "employee_id,",
      "RANK()",
      "OVER",
      "(PARTITION",
      "BY",
      "EXTRACT(YEAR",
      "FROM",
      "evaluation_date),",
      "EXTRACT(QUARTER",
      "FROM",
      "evaluation_date)",
      "ORDER",
      "BY",
      "rating",
      "DESC)",
      "AS",
      "performance_rank",
      "FROM",
      "performance_evaluations",
      "WHERE",
      "evaluation_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'3",
      "years'),",
      "QuarterlyAttendance",
      "AS",
      "(SELECT",
      "EXTRACT(YEAR",
      "FROM",
      "date)",
      "AS",
      "year,",
      "EXTRACT(QUARTER",
      "FROM",
      "date)",
      "AS",
      "quarter,",
      "employee_id,",
      "COUNT(*)",
      "FILTER",
      "(WHERE",
      "check_in",
      "IS",
      "NOT",
      "NULL",
      "AND",
      "check_out",
      "IS",
      "NOT",
      "NULL)",
      "AS",
      "full_attendance_days,",
      "COUNT(*)",
      "AS",
      "total_days,",
      "RANK()",
      "OVER",
      "(PARTITION",
      "BY",
      "EXTRACT(YEAR",
      "FROM",
      "date),",
      "EXTRACT(QUARTER",
      "FROM",
      "date)",
      "ORDER",
      "BY",
      "COUNT(*)",
      "FILTER",
      "(WHERE",
      "check_in",
      "IS",
      "NOT",
      "NULL",
      "AND",
      "check_out",
      "IS",
      "NOT",
      "NULL)",
      "DESC)",
      "AS",
      "attendance_rank",
      "FROM",
      "attendance_records",
      "WHERE",
      "date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'3",
      "years'",
      "GROUP",
      "BY",
      "EXTRACT(YEAR",
      "FROM",
      "date),",
      "EXTRACT(QUARTER",
      "FROM",
      "date),",
      "employee_id)",
      "SELECT",
      "qp.year,",
      "qp.quarter,",
      "qp.employee_id",
      "FROM",
      "QuarterlyPerformance",
      "qp",
      "JOIN",
      "QuarterlyAttendance",
      "qa",
      "ON",
      "qp.year",
      "=",
      "qa.year",
      "AND",
      "qp.quarter",
      "=",
      "qa.quarter",
      "AND",
      "qp.employee_id",
      "=",
      "qa.employee_id",
      "WHERE",
      "qp.performance_rank",
      "=",
      "1",
      "AND",
      "qa.attendance_rank",
      "=",
      "1;"
    ],
    "question_toks": [
      "过去三年中，每个季度产出最高的员工是否也是最严格遵守工作时间的？"
    ],
    "result_fields": [
      "EXTRACT(YEAR"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT a.employee_id, e.name, a.award_name, pe.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2023 AND pe.rating = 'A+';",
    "question": "2023年有哪些员工获得了奖项，并且他们的绩效评估等级为A+？",
    "query_toks": [
      "SELECT",
      "a.employee_id,",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.employee_id,",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2023年有哪些员工获得了奖项，并且他们的绩效评估等级为A+？"
    ],
    "result_fields": [
      "a.employee_id",
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '质量改进奖' AND a.year = 2022 AND ar.date = '2024-10-04' AND ar.check_in > '08:00:00';",
    "question": "2022年获得'质量改进奖'的员工中，哪些人在2024年10月4日的考勤记录中迟到了？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'质量改进奖'",
      "AND",
      "a.year",
      "=",
      "2022",
      "AND",
      "ar.date",
      "=",
      "'2024-10-04'",
      "AND",
      "ar.check_in",
      ">",
      "'08:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'质量改进奖'",
      "AND",
      "a.year",
      "=",
      "2022",
      "AND",
      "ar.date",
      "=",
      "'2024-10-04'",
      "AND",
      "ar.check_in",
      ">",
      "'08:00:00';"
    ],
    "question_toks": [
      "2022年获得'质量改进奖'的员工中，哪些人在2024年10月4日的考勤记录中迟到了？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-03' AND a.check_in > '09:00:00' AND d.name = '客户服务部';",
    "question": "2024年10月3日，哪些员工在客户服务部工作并且他们的考勤记录显示迟到（即上班时间晚于09:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'客户服务部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'客户服务部';"
    ],
    "question_toks": [
      "2024年10月3日，哪些员工在客户服务部工作并且他们的考勤记录显示迟到（即上班时间晚于09:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '人力资源部' AND a.date = '2024-10-02' AND a.check_in > '09:00:00';",
    "question": "2024年10月2日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'人力资源部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-02'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'人力资源部'",
      "AND",
      "a.date",
      "=",
      "'2024-10-02'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月2日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, p.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2023 AND a.award_name = '优秀员工' AND p.rating = 'A+';",
    "question": "2023年获得'优秀员工'奖项的员工中，哪些人的绩效等级为'A+'？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "p.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2023年获得'优秀员工'奖项的员工中，哪些人的绩效等级为'A+'？"
    ],
    "result_fields": [
      "e.name",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-05-31' AND pe.rating = 'A+';",
    "question": "2023年5月31日，哪些部门的员工在绩效评估中获得了A+评级？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-05-31'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-05-31'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2023年5月31日，哪些部门的员工在绩效评估中获得了A+评级？"
    ],
    "result_fields": [
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-02' AND a.check_in > '09:00:00' AND p.rating = 'A+';",
    "question": "2024年10月2日，哪些员工在上班时间（check_in）晚于9:00并且他们的绩效等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-02'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-02'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2024年10月2日，哪些员工在上班时间（check_in）晚于9:00并且他们的绩效等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT ar.date, ar.check_in, ar.check_out FROM attendance_records ar JOIN awards a ON ar.employee_id = a.employee_id WHERE a.award_name = '销售冠军' AND a.year = 2021 AND ar.date = '2024-09-18';",
    "question": "2021年获得'销售冠军'奖项的员工在2024年9月18日的考勤记录是什么？",
    "query_toks": [
      "SELECT",
      "ar.date,",
      "ar.check_in,",
      "ar.check_out",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "awards",
      "a",
      "ON",
      "ar.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'销售冠军'",
      "AND",
      "a.year",
      "=",
      "2021",
      "AND",
      "ar.date",
      "=",
      "'2024-09-18';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ar.date,",
      "ar.check_in,",
      "ar.check_out",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "awards",
      "a",
      "ON",
      "ar.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'销售冠军'",
      "AND",
      "a.year",
      "=",
      "2021",
      "AND",
      "ar.date",
      "=",
      "'2024-09-18';"
    ],
    "question_toks": [
      "2021年获得'销售冠军'奖项的员工在2024年9月18日的考勤记录是什么？"
    ],
    "result_fields": [
      "ar.date",
      "ar.check_in",
      "ar.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-05-27' AND pe.rating = 'A+';",
    "question": "2023年5月27日，哪些员工在绩效评估中获得了A+评级，并且他们的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-05-27'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-05-27'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2023年5月27日，哪些员工在绩效评估中获得了A+评级，并且他们的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-16' AND ar.check_in > '09:00:00';",
    "question": "在2024年9月16日，哪些员工的考勤记录显示他们迟到了，并且这些员工所属的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-16'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-16'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年9月16日，哪些员工的考勤记录显示他们迟到了，并且这些员工所属的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM employees e JOIN departments d ON e.department_id = d.department_id;",
    "question": "列出所有员工的姓名及其部门名称。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id;"
    ],
    "question_toks": [
      "列出所有员工的姓名及其部门名称。"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT * FROM employees ORDER BY hire_date ASC, position DESC LIMIT 1;",
    "question": "入职时间最长但职位级别最低的员工是谁？",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "hire_date",
      "ASC,",
      "position",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "ORDER",
      "BY",
      "hire_date",
      "ASC,",
      "position",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "入职时间最长但职位级别最低的员工是谁？"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE e.department_id = 'D00007' AND pe.rating = 'A' AND pe.evaluation_date >= '2024-01-01' AND pe.evaluation_date < '2025-01-01';",
    "question": "在2024年，部门ID为D00007的员工中，哪些人的绩效评估等级为A？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "e.department_id",
      "=",
      "'D00007'",
      "AND",
      "pe.rating",
      "=",
      "'A'",
      "AND",
      "pe.evaluation_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "pe.evaluation_date",
      "<",
      "'2025-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "e.department_id",
      "=",
      "'D00007'",
      "AND",
      "pe.rating",
      "=",
      "'A'",
      "AND",
      "pe.evaluation_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "pe.evaluation_date",
      "<",
      "'2025-01-01';"
    ],
    "question_toks": [
      "在2024年，部门ID为D00007的员工中，哪些人的绩效评估等级为A？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '创新奖' AND a.year = 2022 AND ar.date = '2024-10-12' AND ar.check_in > '09:00:00';",
    "question": "2022年获得创新奖的员工中，有哪些人在2024年10月12日的考勤记录中迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'创新奖'",
      "AND",
      "a.year",
      "=",
      "2022",
      "AND",
      "ar.date",
      "=",
      "'2024-10-12'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'创新奖'",
      "AND",
      "a.year",
      "=",
      "2022",
      "AND",
      "ar.date",
      "=",
      "'2024-10-12'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2022年获得创新奖的员工中，有哪些人在2024年10月12日的考勤记录中迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-23' AND ar.check_in > '09:00:00';",
    "question": "在2024年9月23日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且这些员工所属的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-23'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-23'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年9月23日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且这些员工所属的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT COUNT(DISTINCT a.employee_id) FROM awards a JOIN performance_evaluations p ON a.employee_id = p.employee_id WHERE a.award_name = '质量改进奖' AND a.year = 2023 AND p.rating = 'A+';",
    "question": "2023年有多少员工获得了质量改进奖，并且他们的绩效评估等级为A+？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "a.employee_id)",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "a.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'质量改进奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "a.employee_id)",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "a.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'质量改进奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2023年有多少员工获得了质量改进奖，并且他们的绩效评估等级为A+？"
    ],
    "result_fields": [
      "COUNT(DISTINCT a.employee_id)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-23' AND ar.check_in > '08:00:00' AND ar.check_out < '18:00:00';",
    "question": "2024年9月23日，哪些部门的员工在上班时间晚于8:00并且下班时间早于18:00？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-23'",
      "AND",
      "ar.check_in",
      ">",
      "'08:00:00'",
      "AND",
      "ar.check_out",
      "<",
      "'18:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-23'",
      "AND",
      "ar.check_in",
      ">",
      "'08:00:00'",
      "AND",
      "ar.check_out",
      "<",
      "'18:00:00';"
    ],
    "question_toks": [
      "2024年9月23日，哪些部门的员工在上班时间晚于8:00并且下班时间早于18:00？"
    ],
    "result_fields": [
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name, e.name AS employee_name FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN awards a ON e.employee_id = a.employee_id JOIN interviews i ON e.employee_id = i.employee_id WHERE a.award_name = '优秀员工' AND i.interview_date = '2023-10-09';",
    "question": "2023年10月9日，哪些部门的员工在面试中表现出色并获得了优秀员工奖？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "interviews",
      "i",
      "ON",
      "e.employee_id",
      "=",
      "i.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "i.interview_date",
      "=",
      "'2023-10-09';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "interviews",
      "i",
      "ON",
      "e.employee_id",
      "=",
      "i.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "i.interview_date",
      "=",
      "'2023-10-09';"
    ],
    "question_toks": [
      "2023年10月9日，哪些部门的员工在面试中表现出色并获得了优秀员工奖？"
    ],
    "result_fields": [
      "d.name",
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-12' AND a.check_in < '09:00:00' AND p.rating = 'B+';",
    "question": "在2024年10月12日，哪些员工在上午9点前打卡上班，并且他们的绩效等级为'B+'？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "a.check_in",
      "<",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "a.check_in",
      "<",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'B+';"
    ],
    "question_toks": [
      "在2024年10月12日，哪些员工在上午9点前打卡上班，并且他们的绩效等级为'B+'？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-20' AND a.check_in > '09:00:00' AND p.rating = 'A+';",
    "question": "在2024年9月20日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效评估等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "在2024年9月20日，哪些员工的考勤记录显示他们迟到了，并且他们的绩效评估等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2021 AND a.award_name = '质量改进奖' AND pe.rating = 'B+';",
    "question": "2021年获得'质量改进奖'的员工中，哪些人的绩效等级为'B+'？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2021",
      "AND",
      "a.award_name",
      "=",
      "'质量改进奖'",
      "AND",
      "pe.rating",
      "=",
      "'B+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2021",
      "AND",
      "a.award_name",
      "=",
      "'质量改进奖'",
      "AND",
      "pe.rating",
      "=",
      "'B+';"
    ],
    "question_toks": [
      "2021年获得'质量改进奖'的员工中，哪些人的绩效等级为'B+'？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-29' AND a.check_in > '08:30:00' AND d.name = '客户服务部';",
    "question": "2024年9月29日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于08:30:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-29'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00'",
      "AND",
      "d.name",
      "=",
      "'客户服务部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-29'",
      "AND",
      "a.check_in",
      ">",
      "'08:30:00'",
      "AND",
      "d.name",
      "=",
      "'客户服务部';"
    ],
    "question_toks": [
      "2024年9月29日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于08:30:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, d.manager_id FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-16' AND ar.check_in > '08:30:00';",
    "question": "2024年9月16日，哪些员工在上班时间（check_in）晚于08:30:00，并且他们的部门负责人是谁？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "d.manager_id",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-16'",
      "AND",
      "ar.check_in",
      ">",
      "'08:30:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "d.manager_id",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-16'",
      "AND",
      "ar.check_in",
      ">",
      "'08:30:00';"
    ],
    "question_toks": [
      "2024年9月16日，哪些员工在上班时间（check_in）晚于08:30:00，并且他们的部门负责人是谁？"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "d.manager_id"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.position, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE a.date = '2024-10-01' AND a.check_in > '09:00:00' AND e.position = '顾问';",
    "question": "在2024年10月1日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且他们的职位是顾问？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.position,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-01'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "e.position",
      "=",
      "'顾问';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.position,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-01'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "e.position",
      "=",
      "'顾问';"
    ],
    "question_toks": [
      "在2024年10月1日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于09:00），并且他们的职位是顾问？"
    ],
    "result_fields": [
      "e.name",
      "e.position",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-09-23' AND a.check_in > '09:00:00';",
    "question": "2024年9月23日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-23'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-23'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月23日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT a.year, e.name, a.award_name, pe.status\nFROM awards a\nJOIN employees e ON a.employee_id = e.employee_id\nLEFT JOIN probation_employees pe ON a.employee_id = pe.employee_id\nWHERE a.award_name = '创新奖' AND a.year >= EXTRACT(YEAR FROM date('now')) - 5;",
    "question": "过去五年中，每年的技术创新奖获得者，其创新成果对公司业务的实际影响如何？",
    "query_toks": [
      "SELECT",
      "a.year,",
      "e.name,",
      "a.award_name,",
      "pe.status",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "LEFT",
      "JOIN",
      "probation_employees",
      "pe",
      "ON",
      "a.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'创新奖'",
      "AND",
      "a.year",
      ">=",
      "EXTRACT(YEAR",
      "FROM",
      "date('now'))",
      "-",
      "5;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.year,",
      "e.name,",
      "a.award_name,",
      "pe.status",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "LEFT",
      "JOIN",
      "probation_employees",
      "pe",
      "ON",
      "a.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'创新奖'",
      "AND",
      "a.year",
      ">=",
      "EXTRACT(YEAR",
      "FROM",
      "date('now'))",
      "-",
      "5;"
    ],
    "question_toks": [
      "过去五年中，每年的技术创新奖获得者，其创新成果对公司业务的实际影响如何？"
    ],
    "result_fields": [
      "a.year",
      "e.name",
      "a.award_name",
      "pe.status"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-06' AND a.check_in > '09:00:00' AND d.name = '财务部';",
    "question": "2024年10月6日，哪些员工在财务部工作并且当天迟到（上班时间晚于09:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-06'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'财务部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-06'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'财务部';"
    ],
    "question_toks": [
      "2024年10月6日，哪些员工在财务部工作并且当天迟到（上班时间晚于09:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-04' AND ar.check_in > '09:00:00';",
    "question": "在2024年10月4日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且这些员工所在的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-04'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-04'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年10月4日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且这些员工所在的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-04';",
    "question": "请列出在2024年10月4日有考勤记录的员工姓名及其所属部门名称。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-04';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-04';"
    ],
    "question_toks": [
      "请列出在2024年10月4日有考勤记录的员工姓名及其所属部门名称。"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT a.employee_id, a.award_name, pe.rating, pe.evaluation_date FROM awards a JOIN performance_evaluations pe ON a.employee_id = pe.employee_id WHERE a.year = 2023 AND pe.evaluation_date >= '2023-01-01' AND pe.evaluation_date < '2024-01-01';",
    "question": "在2023年，哪些员工获得了奖项并且在同一年进行了绩效评估？请列出他们的员工ID、奖项名称、绩效等级和评估日期。",
    "query_toks": [
      "SELECT",
      "a.employee_id,",
      "a.award_name,",
      "pe.rating,",
      "pe.evaluation_date",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "a.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "pe.evaluation_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "pe.evaluation_date",
      "<",
      "'2024-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.employee_id,",
      "a.award_name,",
      "pe.rating,",
      "pe.evaluation_date",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "a.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "pe.evaluation_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "pe.evaluation_date",
      "<",
      "'2024-01-01';"
    ],
    "question_toks": [
      "在2023年，哪些员工获得了奖项并且在同一年进行了绩效评估？请列出他们的员工ID、奖项名称、绩效等级和评估日期。"
    ],
    "result_fields": [
      "a.employee_id",
      "a.award_name",
      "pe.rating",
      "pe.evaluation_date"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-10-10' AND ar.check_in > '09:30:00';",
    "question": "请列出在2024年10月10日所有迟到的员工姓名及其所属部门名称，迟到的定义为上班时间晚于上午9:30。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-10'",
      "AND",
      "ar.check_in",
      ">",
      "'09:30:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-10'",
      "AND",
      "ar.check_in",
      ">",
      "'09:30:00';"
    ],
    "question_toks": [
      "请列出在2024年10月10日所有迟到的员工姓名及其所属部门名称，迟到的定义为上班时间晚于上午9:30。"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-19';",
    "question": "请列出2024年9月19日所有员工的姓名、部门名称以及他们的上班和下班时间。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-19';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-19';"
    ],
    "question_toks": [
      "请列出2024年9月19日所有员工的姓名、部门名称以及他们的上班和下班时间。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-03' AND d.name = '行政部' AND a.check_in > '09:00:00';",
    "question": "2024年10月3日，哪些员工在行政部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "d.name",
      "=",
      "'行政部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "d.name",
      "=",
      "'行政部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月3日，哪些员工在行政部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.department_id, AVG(e.remaining_annual_leave) AS avg_remaining_annual_leave FROM employees e GROUP BY e.department_id ORDER BY avg_remaining_annual_leave DESC LIMIT 1;",
    "question": "哪个部门的员工平均剩余年假最多？",
    "query_toks": [
      "SELECT",
      "e.department_id,",
      "AVG(e.remaining_annual_leave)",
      "AS",
      "avg_remaining_annual_leave",
      "FROM",
      "employees",
      "e",
      "GROUP",
      "BY",
      "e.department_id",
      "ORDER",
      "BY",
      "avg_remaining_annual_leave",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.department_id,",
      "AVG(e.remaining_annual_leave)",
      "AS",
      "avg_remaining_annual_leave",
      "FROM",
      "employees",
      "e",
      "GROUP",
      "BY",
      "e.department_id",
      "ORDER",
      "BY",
      "avg_remaining_annual_leave",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "哪个部门的员工平均剩余年假最多？"
    ],
    "result_fields": [
      "e.department_id",
      "AVG(e.remaining_annual_leave)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-27' AND a.check_in < '10:00:00' AND p.rating = 'A+';",
    "question": "2024年9月27日，哪些员工在上午10点之前打卡上班，并且他们的绩效等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-27'",
      "AND",
      "a.check_in",
      "<",
      "'10:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-27'",
      "AND",
      "a.check_in",
      "<",
      "'10:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2024年9月27日，哪些员工在上午10点之前打卡上班，并且他们的绩效等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT interview_date, interview_count FROM interviews WHERE interview_date >= '2024-01-01' AND interview_date < '2025-01-01';",
    "question": "查询在2024年进行面试的所有员工的面试日期及次数。",
    "query_toks": [
      "SELECT",
      "interview_date,",
      "interview_count",
      "FROM",
      "interviews",
      "WHERE",
      "interview_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "interview_date",
      "<",
      "'2025-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "interview_date,",
      "interview_count",
      "FROM",
      "interviews",
      "WHERE",
      "interview_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "interview_date",
      "<",
      "'2025-01-01';"
    ],
    "question_toks": [
      "查询在2024年进行面试的所有员工的面试日期及次数。"
    ],
    "result_fields": [
      "interview_date",
      "interview_count"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-20' AND ar.check_in > '09:00:00';",
    "question": "在2024年9月20日，哪些员工的考勤记录显示他们迟到了，并且这些员工所在的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-20'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-20'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年9月20日，哪些员工的考勤记录显示他们迟到了，并且这些员工所在的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, d.name AS department_name, pe.rating FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE d.name = '研发部' AND pe.rating = 'B+' AND ar.date = '2024-09-29';",
    "question": "2024年9月29日，哪些员工在研发部工作并且他们的绩效等级为B+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "d.name",
      "AS",
      "department_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "pe.rating",
      "=",
      "'B+'",
      "AND",
      "ar.date",
      "=",
      "'2024-09-29';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "d.name",
      "AS",
      "department_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "pe.rating",
      "=",
      "'B+'",
      "AND",
      "ar.date",
      "=",
      "'2024-09-29';"
    ],
    "question_toks": [
      "2024年9月29日，哪些员工在研发部工作并且他们的绩效等级为B+？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "d.name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT ar.id, ar.employee_id, ar.date, ar.check_in, ar.check_out FROM attendance_records ar JOIN awards a ON ar.employee_id = a.employee_id WHERE a.award_name = '销售冠军' AND a.year = 2022 AND ar.date = '2024-10-10';",
    "question": "2022年获得'销售冠军'奖项的员工在2024年10月10日的考勤记录是什么？",
    "query_toks": [
      "SELECT",
      "ar.id,",
      "ar.employee_id,",
      "ar.date,",
      "ar.check_in,",
      "ar.check_out",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "awards",
      "a",
      "ON",
      "ar.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'销售冠军'",
      "AND",
      "a.year",
      "=",
      "2022",
      "AND",
      "ar.date",
      "=",
      "'2024-10-10';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ar.id,",
      "ar.employee_id,",
      "ar.date,",
      "ar.check_in,",
      "ar.check_out",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "awards",
      "a",
      "ON",
      "ar.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'销售冠军'",
      "AND",
      "a.year",
      "=",
      "2022",
      "AND",
      "ar.date",
      "=",
      "'2024-10-10';"
    ],
    "question_toks": [
      "2022年获得'销售冠军'奖项的员工在2024年10月10日的考勤记录是什么？"
    ],
    "result_fields": [
      "ar.id",
      "ar.employee_id",
      "ar.date",
      "ar.check_in",
      "ar.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.hire_date, a.award_name FROM employees e JOIN awards a ON e.employee_id = a.employee_id WHERE a.award_name = '客户满意度奖' AND a.year = 2023 AND e.hire_date > '2020-06-19';",
    "question": "2023年获得客户满意度奖的员工中，哪些人是在2020年6月19日之后入职的？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.hire_date,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'客户满意度奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "e.hire_date",
      ">",
      "'2020-06-19';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.hire_date,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'客户满意度奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "e.hire_date",
      ">",
      "'2020-06-19';"
    ],
    "question_toks": [
      "2023年获得客户满意度奖的员工中，哪些人是在2020年6月19日之后入职的？"
    ],
    "result_fields": [
      "e.name",
      "e.hire_date",
      "a.award_name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-22' AND a.check_in > '09:00:00' AND p.rating = 'A+';",
    "question": "在2024年9月22日，哪些员工在上班时间（check_in）晚于9:00并且他们的绩效评估等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-22'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-22'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "在2024年9月22日，哪些员工在上班时间（check_in）晚于9:00并且他们的绩效评估等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2022-06-20' AND pe.rating = 'C';",
    "question": "2022年6月20日，哪些部门的员工在绩效评估中获得了C评级？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2022-06-20'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2022-06-20'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "question_toks": [
      "2022年6月20日，哪些部门的员工在绩效评估中获得了C评级？"
    ],
    "result_fields": [
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.award_name = '客户满意度奖' AND a.year = 2024 AND pe.rating = 'C';",
    "question": "哪些员工在2024年获得了'客户满意度奖'，并且他们的绩效评估等级为'C'？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'客户满意度奖'",
      "AND",
      "a.year",
      "=",
      "2024",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'客户满意度奖'",
      "AND",
      "a.year",
      "=",
      "2024",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "question_toks": [
      "哪些员工在2024年获得了'客户满意度奖'，并且他们的绩效评估等级为'C'？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, AVG(EXTRACT(EPOCH FROM (ar.check_out - ar.check_in)) / 3600) AS avg_work_hours FROM employees e JOIN attendance_records ar ON e.employee_id = ar.employee_id JOIN awards a ON e.employee_id = a.employee_id WHERE a.award_name = '项目管理奖' AND a.year = 2023 GROUP BY e.name HAVING AVG(EXTRACT(EPOCH FROM (ar.check_out - ar.check_in)) / 3600) > 10;",
    "question": "2023年获得'项目管理奖'的员工中，哪些人每天的平均工作时长超过10小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(ar.check_out",
      "-",
      "ar.check_in))",
      "/",
      "3600)",
      "AS",
      "avg_work_hours",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'项目管理奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "GROUP",
      "BY",
      "e.name",
      "HAVING",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(ar.check_out",
      "-",
      "ar.check_in))",
      "/",
      "3600)",
      ">",
      "10;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(ar.check_out",
      "-",
      "ar.check_in))",
      "/",
      "3600)",
      "AS",
      "avg_work_hours",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'项目管理奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "GROUP",
      "BY",
      "e.name",
      "HAVING",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(ar.check_out",
      "-",
      "ar.check_in))",
      "/",
      "3600)",
      ">",
      "10;"
    ],
    "question_toks": [
      "2023年获得'项目管理奖'的员工中，哪些人每天的平均工作时长超过10小时？"
    ],
    "result_fields": [
      "e.name",
      "AVG(EXTRACT(EPOCH"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-03-09' AND pe.rating = 'D';",
    "question": "2023年3月9日，哪些员工在绩效评估中获得了'D'评级，并且他们的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-03-09'",
      "AND",
      "pe.rating",
      "=",
      "'D';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-03-09'",
      "AND",
      "pe.rating",
      "=",
      "'D';"
    ],
    "question_toks": [
      "2023年3月9日，哪些员工在绩效评估中获得了'D'评级，并且他们的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.employee_id, e.name, e.major, e.hire_date, pe.rating, a.award_name\nFROM employees e\nJOIN performance_evaluations pe ON e.employee_id = pe.employee_id\nLEFT JOIN awards a ON e.employee_id = a.employee_id\nWHERE e.major IS NOT NULL AND e.hire_date < date('now') - INTERVAL '5 years'\nORDER BY pe.rating DESC;",
    "question": "长期致力于某个专业领域的专家型员工，其知识的深度和广度如何影响团队的整体实力？",
    "query_toks": [
      "SELECT",
      "e.employee_id,",
      "e.name,",
      "e.major,",
      "e.hire_date,",
      "pe.rating,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "LEFT",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.major",
      "IS",
      "NOT",
      "NULL",
      "AND",
      "e.hire_date",
      "<",
      "date('now')",
      "-",
      "INTERVAL",
      "'5",
      "years'",
      "ORDER",
      "BY",
      "pe.rating",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.employee_id,",
      "e.name,",
      "e.major,",
      "e.hire_date,",
      "pe.rating,",
      "a.award_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "LEFT",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.major",
      "IS",
      "NOT",
      "NULL",
      "AND",
      "e.hire_date",
      "<",
      "date('now')",
      "-",
      "INTERVAL",
      "'5",
      "years'",
      "ORDER",
      "BY",
      "pe.rating",
      "DESC;"
    ],
    "question_toks": [
      "长期致力于某个专业领域的专家型员工，其知识的深度和广度如何影响团队的整体实力？"
    ],
    "result_fields": [
      "e.employee_id",
      "e.name",
      "e.major",
      "e.hire_date",
      "pe.rating",
      "a.award_name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, d.name AS department_name, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-08';",
    "question": "请列出在2024年10月8日考勤记录中，所有员工的姓名、部门名称以及他们的上班和下班时间。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-08';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "d.name",
      "AS",
      "department_name,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-08';"
    ],
    "question_toks": [
      "请列出在2024年10月8日考勤记录中，所有员工的姓名、部门名称以及他们的上班和下班时间。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-26' AND a.check_in > '09:00:00' AND d.name = '人力资源部';",
    "question": "2024年9月26日，哪些员工在人力资源部工作并且当天上班时间晚于9:00？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-26'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'人力资源部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-26'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'人力资源部';"
    ],
    "question_toks": [
      "2024年9月26日，哪些员工在人力资源部工作并且当天上班时间晚于9:00？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-09-28' AND a.check_in > '09:00:00' AND p.rating = 'A+';",
    "question": "在2024年9月28日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为A+？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-28'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-28'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "在2024年9月28日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的绩效评估等级为A+？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '研发部' AND a.date = '2024-09-20' AND a.check_in > '09:00:00';",
    "question": "在2024年9月20日，哪些员工在研发部工作并且他们的考勤记录显示他们迟到了？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-20'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年9月20日，哪些员工在研发部工作并且他们的考勤记录显示他们迟到了？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT d.name AS department_name, e.name AS employee_name FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE ar.date = '2024-10-13' AND ar.check_in > '09:00:00' AND pe.rating = 'A+';",
    "question": "2024年10月13日，哪些部门的员工在上班时间（check_in）晚于9:00，并且这些员工的绩效等级为'A+'？",
    "query_toks": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-13'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.name",
      "AS",
      "department_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-10-13'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "pe.rating",
      "=",
      "'A+';"
    ],
    "question_toks": [
      "2024年10月13日，哪些部门的员工在上班时间（check_in）晚于9:00，并且这些员工的绩效等级为'A+'？"
    ],
    "result_fields": [
      "d.name",
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, p.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2023 AND a.award_name = '销售冠军' AND p.rating IN ('B', 'A+', 'A')",
    "question": "2023年获得'销售冠军'奖项的员工中，哪些人的绩效评估等级为'B'或以上？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "p.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "a.award_name",
      "=",
      "'销售冠军'",
      "AND",
      "p.rating",
      "IN",
      "('B',",
      "'A+',",
      "'A')"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "p.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "a.award_name",
      "=",
      "'销售冠军'",
      "AND",
      "p.rating",
      "IN",
      "('B',",
      "'A+',",
      "'A')"
    ],
    "question_toks": [
      "2023年获得'销售冠军'奖项的员工中，哪些人的绩效评估等级为'B'或以上？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-17' AND d.name = '财务部' AND EXTRACT(HOUR FROM (a.check_out - a.check_in)) >= 9;",
    "question": "2024年9月17日，哪些员工在财务部工作并且当天上班时间超过9小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-17'",
      "AND",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "EXTRACT(HOUR",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      ">=",
      "9;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-17'",
      "AND",
      "d.name",
      "=",
      "'财务部'",
      "AND",
      "EXTRACT(HOUR",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      ">=",
      "9;"
    ],
    "question_toks": [
      "2024年9月17日，哪些员工在财务部工作并且当天上班时间超过9小时？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, e.employee_id, a.check_in, d.name AS department_name, d.manager_id FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-18' AND a.check_in > '09:00:00';",
    "question": "在2024年9月18日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的部门负责人是谁？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "e.employee_id,",
      "a.check_in,",
      "d.name",
      "AS",
      "department_name,",
      "d.manager_id",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-18'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "e.employee_id,",
      "a.check_in,",
      "d.name",
      "AS",
      "department_name,",
      "d.manager_id",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-18'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年9月18日，哪些员工的考勤记录显示他们迟到了（即上班时间晚于9:00），并且他们的部门负责人是谁？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "d.name",
      "d.manager_id"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN awards aw ON e.employee_id = aw.employee_id WHERE aw.award_name = '技术突破奖' AND aw.year = 2023 AND a.date = '2024-09-23' AND a.check_in > '09:00:00';",
    "question": "2023年获得'技术突破奖'的员工中，哪些人在2024年9月23日的考勤记录中迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "awards",
      "aw",
      "ON",
      "e.employee_id",
      "=",
      "aw.employee_id",
      "WHERE",
      "aw.award_name",
      "=",
      "'技术突破奖'",
      "AND",
      "aw.year",
      "=",
      "2023",
      "AND",
      "a.date",
      "=",
      "'2024-09-23'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "awards",
      "aw",
      "ON",
      "e.employee_id",
      "=",
      "aw.employee_id",
      "WHERE",
      "aw.award_name",
      "=",
      "'技术突破奖'",
      "AND",
      "aw.year",
      "=",
      "2023",
      "AND",
      "a.date",
      "=",
      "'2024-09-23'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2023年获得'技术突破奖'的员工中，哪些人在2024年9月23日的考勤记录中迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '运营部' AND a.date = '2024-09-26';",
    "question": "2024年9月26日，哪些员工在运营部工作并且当天有考勤记录？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'运营部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-26';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'运营部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-26';"
    ],
    "question_toks": [
      "2024年9月26日，哪些员工在运营部工作并且当天有考勤记录？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.year = 2020 AND a.award_name = '优秀员工' AND p.rating = 'C' AND p.evaluation_date >= '2023-01-01' AND p.evaluation_date < '2024-01-01';",
    "question": "2020年获得“优秀员工”奖项的员工中，哪些人在2023年的绩效评估中评级为C？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2020",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "p.rating",
      "=",
      "'C'",
      "AND",
      "p.evaluation_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "p.evaluation_date",
      "<",
      "'2024-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2020",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "p.rating",
      "=",
      "'C'",
      "AND",
      "p.evaluation_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "p.evaluation_date",
      "<",
      "'2024-01-01';"
    ],
    "question_toks": [
      "2020年获得“优秀员工”奖项的员工中，哪些人在2023年的绩效评估中评级为C？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in, p.rating FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations p ON e.employee_id = p.employee_id WHERE a.date = '2024-10-03' AND a.check_in > '09:00:00' AND p.rating = 'C';",
    "question": "2024年10月3日，哪些员工在上班时间迟到并且他们的绩效等级为C？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'C';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in,",
      "p.rating",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "p",
      "ON",
      "e.employee_id",
      "=",
      "p.employee_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "p.rating",
      "=",
      "'C';"
    ],
    "question_toks": [
      "2024年10月3日，哪些员工在上班时间迟到并且他们的绩效等级为C？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in",
      "p.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-12' AND d.name = '法务部' AND a.check_in > '09:00:00';",
    "question": "2024年10月12日，哪些员工在法务部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "d.name",
      "=",
      "'法务部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-12'",
      "AND",
      "d.name",
      "=",
      "'法务部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月12日，哪些员工在法务部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "WITH InterviewCounts AS (SELECT EXTRACT(YEAR FROM interview_date) AS year, department_id, COUNT(*) AS total_interviews FROM interviews JOIN employees ON interviews.employee_id = employees.employee_id WHERE interview_date >= date('now') - INTERVAL '5 years' GROUP BY year, department_id), HiredCounts AS (SELECT EXTRACT(YEAR FROM hire_date) AS year, department_id, COUNT(*) AS total_hired FROM employees WHERE hire_date >= date('now') - INTERVAL '5 years' GROUP BY year, department_id) SELECT ic.year, ic.department_id, (hc.total_hired / ic.total_interviews) AS hire_rate FROM InterviewCounts ic JOIN HiredCounts hc ON ic.year = hc.year AND ic.department_id = hc.department_id ORDER BY ic.year, hire_rate DESC;",
    "question": "近5年来，每年面试通过率（最终入职的比例）最高的部门是哪个？",
    "query_toks": [
      "WITH",
      "InterviewCounts",
      "AS",
      "(SELECT",
      "EXTRACT(YEAR",
      "FROM",
      "interview_date)",
      "AS",
      "year,",
      "department_id,",
      "COUNT(*)",
      "AS",
      "total_interviews",
      "FROM",
      "interviews",
      "JOIN",
      "employees",
      "ON",
      "interviews.employee_id",
      "=",
      "employees.employee_id",
      "WHERE",
      "interview_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'5",
      "years'",
      "GROUP",
      "BY",
      "year,",
      "department_id),",
      "HiredCounts",
      "AS",
      "(SELECT",
      "EXTRACT(YEAR",
      "FROM",
      "hire_date)",
      "AS",
      "year,",
      "department_id,",
      "COUNT(*)",
      "AS",
      "total_hired",
      "FROM",
      "employees",
      "WHERE",
      "hire_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'5",
      "years'",
      "GROUP",
      "BY",
      "year,",
      "department_id)",
      "SELECT",
      "ic.year,",
      "ic.department_id,",
      "(hc.total_hired",
      "/",
      "ic.total_interviews)",
      "AS",
      "hire_rate",
      "FROM",
      "InterviewCounts",
      "ic",
      "JOIN",
      "HiredCounts",
      "hc",
      "ON",
      "ic.year",
      "=",
      "hc.year",
      "AND",
      "ic.department_id",
      "=",
      "hc.department_id",
      "ORDER",
      "BY",
      "ic.year,",
      "hire_rate",
      "DESC;"
    ],
    "query_toks_no_value": [
      "WITH",
      "InterviewCounts",
      "AS",
      "(SELECT",
      "EXTRACT(YEAR",
      "FROM",
      "interview_date)",
      "AS",
      "year,",
      "department_id,",
      "COUNT(*)",
      "AS",
      "total_interviews",
      "FROM",
      "interviews",
      "JOIN",
      "employees",
      "ON",
      "interviews.employee_id",
      "=",
      "employees.employee_id",
      "WHERE",
      "interview_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'5",
      "years'",
      "GROUP",
      "BY",
      "year,",
      "department_id),",
      "HiredCounts",
      "AS",
      "(SELECT",
      "EXTRACT(YEAR",
      "FROM",
      "hire_date)",
      "AS",
      "year,",
      "department_id,",
      "COUNT(*)",
      "AS",
      "total_hired",
      "FROM",
      "employees",
      "WHERE",
      "hire_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'5",
      "years'",
      "GROUP",
      "BY",
      "year,",
      "department_id)",
      "SELECT",
      "ic.year,",
      "ic.department_id,",
      "(hc.total_hired",
      "/",
      "ic.total_interviews)",
      "AS",
      "hire_rate",
      "FROM",
      "InterviewCounts",
      "ic",
      "JOIN",
      "HiredCounts",
      "hc",
      "ON",
      "ic.year",
      "=",
      "hc.year",
      "AND",
      "ic.department_id",
      "=",
      "hc.department_id",
      "ORDER",
      "BY",
      "ic.year,",
      "hire_rate",
      "DESC;"
    ],
    "question_toks": [
      "近5年来，每年面试通过率（最终入职的比例）最高的部门是哪个？"
    ],
    "result_fields": [
      "EXTRACT(YEAR"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-10-12';",
    "question": "在2024年10月12日，哪些员工在清华大学毕业并且当天有考勤记录？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-10-12';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-10-12';"
    ],
    "question_toks": [
      "在2024年10月12日，哪些员工在清华大学毕业并且当天有考勤记录？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '领导力奖' AND a.year = 2023 AND ar.date = '2024-10-01' AND ar.check_in > '09:00:00';",
    "question": "2023年获得领导力奖的员工中，哪些人在2024年10月1日的考勤记录中迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "ar.date",
      "=",
      "'2024-10-01'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "ar.date",
      "=",
      "'2024-10-01'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2023年获得领导力奖的员工中，哪些人在2024年10月1日的考勤记录中迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '销售冠军' AND a.year = 2023 AND ar.date = '2024-09-22' AND ar.check_in > '09:00:00';",
    "question": "在2023年获得'销售冠军'奖项的员工中，哪些人在2024年9月22日的考勤记录中迟到了？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'销售冠军'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "ar.date",
      "=",
      "'2024-09-22'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'销售冠军'",
      "AND",
      "a.year",
      "=",
      "2023",
      "AND",
      "ar.date",
      "=",
      "'2024-09-22'",
      "AND",
      "ar.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2023年获得'销售冠军'奖项的员工中，哪些人在2024年9月22日的考勤记录中迟到了？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-10' AND a.check_in > '09:00:00' AND d.name = '人力资源部';",
    "question": "2024年10月10日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于09:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-10'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'人力资源部';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-10'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00'",
      "AND",
      "d.name",
      "=",
      "'人力资源部';"
    ],
    "question_toks": [
      "2024年10月10日，哪些员工在人力资源部工作并且当天迟到（即上班时间晚于09:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name FROM performance_evaluations pe JOIN employees e ON pe.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE pe.evaluation_date = '2023-04-20' AND pe.rating = 'D';",
    "question": "2023年4月20日，哪些员工在绩效评估中获得了D评级，并且他们的部门名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-04-20'",
      "AND",
      "pe.rating",
      "=",
      "'D';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name",
      "FROM",
      "performance_evaluations",
      "pe",
      "JOIN",
      "employees",
      "e",
      "ON",
      "pe.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "pe.evaluation_date",
      "=",
      "'2023-04-20'",
      "AND",
      "pe.rating",
      "=",
      "'D';"
    ],
    "question_toks": [
      "2023年4月20日，哪些员工在绩效评估中获得了D评级，并且他们的部门名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "d.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT COUNT(DISTINCT pe.employee_id) * 1.0 / COUNT(DISTINCT e.employee_id) AS award_and_performance_ratio\nFROM employees e\nLEFT JOIN (\n    SELECT a.employee_id\n    FROM awards a\n    WHERE a.year >= EXTRACT(YEAR FROM date('now')) - 2\n    INTERSECT\n    SELECT p.employee_id\n    FROM performance_evaluations p\n    WHERE p.evaluation_date >= date('now') - INTERVAL '2 years'\n) pe ON e.employee_id = pe.employee_id;",
    "question": "近两年内既获得过奖项又有绩效提升的员工比例是多少？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "pe.employee_id)",
      "*",
      "1.0",
      "/",
      "COUNT(DISTINCT",
      "e.employee_id)",
      "AS",
      "award_and_performance_ratio",
      "FROM",
      "employees",
      "e",
      "LEFT",
      "JOIN",
      "(",
      "SELECT",
      "a.employee_id",
      "FROM",
      "awards",
      "a",
      "WHERE",
      "a.year",
      ">=",
      "EXTRACT(YEAR",
      "FROM",
      "date('now'))",
      "-",
      "2",
      "INTERSECT",
      "SELECT",
      "p.employee_id",
      "FROM",
      "performance_evaluations",
      "p",
      "WHERE",
      "p.evaluation_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years'",
      ")",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "pe.employee_id)",
      "*",
      "1.0",
      "/",
      "COUNT(DISTINCT",
      "e.employee_id)",
      "AS",
      "award_and_performance_ratio",
      "FROM",
      "employees",
      "e",
      "LEFT",
      "JOIN",
      "(",
      "SELECT",
      "a.employee_id",
      "FROM",
      "awards",
      "a",
      "WHERE",
      "a.year",
      ">=",
      "EXTRACT(YEAR",
      "FROM",
      "date('now'))",
      "-",
      "2",
      "INTERSECT",
      "SELECT",
      "p.employee_id",
      "FROM",
      "performance_evaluations",
      "p",
      "WHERE",
      "p.evaluation_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years'",
      ")",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id;"
    ],
    "question_toks": [
      "近两年内既获得过奖项又有绩效提升的员工比例是多少？"
    ],
    "result_fields": [
      "COUNT(DISTINCT pe.employee_id) * 1.0 / COUNT(DISTINCT e.employee_id)"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.employee_id, e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE e.hire_date >= '2023-01-01' AND e.hire_date < '2024-01-01' AND a.award_name = '优秀员工' AND pe.rating = 'A+' AND pe.evaluation_date >= '2023-01-01' AND pe.evaluation_date < '2024-01-01';",
    "question": "2023年入职的员工中，哪些人在2023年获得了优秀员工奖，并且他们的绩效评估等级为A+？",
    "query_toks": [
      "SELECT",
      "e.employee_id,",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2024-01-01'",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "pe.rating",
      "=",
      "'A+'",
      "AND",
      "pe.evaluation_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "pe.evaluation_date",
      "<",
      "'2024-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.employee_id,",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "e.hire_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "e.hire_date",
      "<",
      "'2024-01-01'",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "pe.rating",
      "=",
      "'A+'",
      "AND",
      "pe.evaluation_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "pe.evaluation_date",
      "<",
      "'2024-01-01';"
    ],
    "question_toks": [
      "2023年入职的员工中，哪些人在2023年获得了优秀员工奖，并且他们的绩效评估等级为A+？"
    ],
    "result_fields": [
      "e.employee_id",
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '客户服务部' AND a.date = '2024-09-21' AND a.check_in > '09:00:00';",
    "question": "在2024年9月21日，哪些员工在客户服务部工作并且他们的考勤记录显示他们当天迟到了？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-21'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-21'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "在2024年9月21日，哪些员工在客户服务部工作并且他们的考勤记录显示他们当天迟到了？"
    ],
    "result_fields": [
      "e.name",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT employee_id, SUM(EXTRACT(EPOCH FROM (check_out - check_in))) AS total_work_seconds FROM attendance_records GROUP BY employee_id;",
    "question": "获取所有员工的考勤记录，并计算他们的总工作时长。",
    "query_toks": [
      "SELECT",
      "employee_id,",
      "SUM(EXTRACT(EPOCH",
      "FROM",
      "(check_out",
      "-",
      "check_in)))",
      "AS",
      "total_work_seconds",
      "FROM",
      "attendance_records",
      "GROUP",
      "BY",
      "employee_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "employee_id,",
      "SUM(EXTRACT(EPOCH",
      "FROM",
      "(check_out",
      "-",
      "check_in)))",
      "AS",
      "total_work_seconds",
      "FROM",
      "attendance_records",
      "GROUP",
      "BY",
      "employee_id;"
    ],
    "question_toks": [
      "获取所有员工的考勤记录，并计算他们的总工作时长。"
    ],
    "result_fields": [
      "employee_id",
      "SUM(EXTRACT(EPOCH"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-09-15' AND d.name = '客户服务部' AND a.check_in > '09:00:00';",
    "question": "2024年9月15日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-15'",
      "AND",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-09-15'",
      "AND",
      "d.name",
      "=",
      "'客户服务部'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月15日，哪些员工在客户服务部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.date, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN awards aw ON e.employee_id = aw.employee_id WHERE aw.award_name = '创新奖' AND aw.year = 2021 AND a.date = '2024-10-05' AND a.check_in > '09:00:00';",
    "question": "2021年获得创新奖的员工中，哪些人在2024年10月5日的考勤记录中迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.date,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "awards",
      "aw",
      "ON",
      "e.employee_id",
      "=",
      "aw.employee_id",
      "WHERE",
      "aw.award_name",
      "=",
      "'创新奖'",
      "AND",
      "aw.year",
      "=",
      "2021",
      "AND",
      "a.date",
      "=",
      "'2024-10-05'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.date,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "awards",
      "aw",
      "ON",
      "e.employee_id",
      "=",
      "aw.employee_id",
      "WHERE",
      "aw.award_name",
      "=",
      "'创新奖'",
      "AND",
      "aw.year",
      "=",
      "2021",
      "AND",
      "a.date",
      "=",
      "'2024-10-05'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2021年获得创新奖的员工中，哪些人在2024年10月5日的考勤记录中迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "a.date",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2024 AND pe.rating = 'C';",
    "question": "哪些员工在2024年获得了奖项，并且他们的绩效评估等级为C？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2024",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2024",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "question_toks": [
      "哪些员工在2024年获得了奖项，并且他们的绩效评估等级为C？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2024 AND a.award_name = '领导力奖' AND pe.rating = 'C';",
    "question": "2024年有哪些员工获得了'领导力奖'，并且他们的绩效等级是'C'？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2024",
      "AND",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2024",
      "AND",
      "a.award_name",
      "=",
      "'领导力奖'",
      "AND",
      "pe.rating",
      "=",
      "'C';"
    ],
    "question_toks": [
      "2024年有哪些员工获得了'领导力奖'，并且他们的绩效等级是'C'？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id JOIN departments d ON e.department_id = d.department_id WHERE d.name = '质量控制部' AND a.date = '2024-09-19' AND a.check_in > '09:00:00';",
    "question": "2024年9月19日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-19'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "d.name",
      "=",
      "'质量控制部'",
      "AND",
      "a.date",
      "=",
      "'2024-09-19'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年9月19日，哪些员工在质量控制部工作并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name FROM employees e JOIN awards a ON e.employee_id = a.employee_id JOIN attendance_records ar ON e.employee_id = ar.employee_id WHERE a.award_name = '项目管理奖' AND a.year = 2024 AND ar.date = '2024-09-23';",
    "question": "2024年获得'项目管理奖'的员工中，哪些人在2024年9月23日有考勤记录？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'项目管理奖'",
      "AND",
      "a.year",
      "=",
      "2024",
      "AND",
      "ar.date",
      "=",
      "'2024-09-23';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "awards",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "JOIN",
      "attendance_records",
      "ar",
      "ON",
      "e.employee_id",
      "=",
      "ar.employee_id",
      "WHERE",
      "a.award_name",
      "=",
      "'项目管理奖'",
      "AND",
      "a.year",
      "=",
      "2024",
      "AND",
      "ar.date",
      "=",
      "'2024-09-23';"
    ],
    "question_toks": [
      "2024年获得'项目管理奖'的员工中，哪些人在2024年9月23日有考勤记录？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, pe.rating AS performance_rating FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id LEFT JOIN performance_evaluations pe ON e.employee_id = pe.employee_id AND pe.evaluation_date = '2024-09-20' WHERE ar.date = '2024-09-20';",
    "question": "请列出在2024年9月20日有考勤记录的员工姓名、部门名称以及他们的绩效等级（如果有）。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "pe.rating",
      "AS",
      "performance_rating",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "LEFT",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "AND",
      "pe.evaluation_date",
      "=",
      "'2024-09-20'",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-20';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "pe.rating",
      "AS",
      "performance_rating",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "LEFT",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "AND",
      "pe.evaluation_date",
      "=",
      "'2024-09-20'",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-20';"
    ],
    "question_toks": [
      "请列出在2024年9月20日有考勤记录的员工姓名、部门名称以及他们的绩效等级（如果有）。"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "pe.rating"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name AS employee_name, d.name AS department_name, d.manager_id FROM attendance_records ar JOIN employees e ON ar.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE ar.date = '2024-09-26' AND ar.check_in > '09:30:00';",
    "question": "2024年9月26日，哪些员工在上班时间（check_in）晚于09:30:00，并且他们的部门负责人是谁？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "d.manager_id",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-26'",
      "AND",
      "ar.check_in",
      ">",
      "'09:30:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "d.name",
      "AS",
      "department_name,",
      "d.manager_id",
      "FROM",
      "attendance_records",
      "ar",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ar.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "ar.date",
      "=",
      "'2024-09-26'",
      "AND",
      "ar.check_in",
      ">",
      "'09:30:00';"
    ],
    "question_toks": [
      "2024年9月26日，哪些员工在上班时间（check_in）晚于09:30:00，并且他们的部门负责人是谁？"
    ],
    "result_fields": [
      "e.name",
      "d.name",
      "d.manager_id"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in FROM employees e JOIN attendance_records a ON e.employee_id = a.employee_id WHERE e.university = '清华大学' AND a.date = '2024-10-03' AND a.check_in > '09:00:00';",
    "question": "2024年10月3日，哪些员工在清华大学毕业并且当天迟到（即上班时间晚于9:00）？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "attendance_records",
      "a",
      "ON",
      "e.employee_id",
      "=",
      "a.employee_id",
      "WHERE",
      "e.university",
      "=",
      "'清华大学'",
      "AND",
      "a.date",
      "=",
      "'2024-10-03'",
      "AND",
      "a.check_in",
      ">",
      "'09:00:00';"
    ],
    "question_toks": [
      "2024年10月3日，哪些员工在清华大学毕业并且当天迟到（即上班时间晚于9:00）？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, e.employee_id, a.check_in, a.check_out FROM attendance_records a JOIN employees e ON a.employee_id = e.employee_id JOIN departments d ON e.department_id = d.department_id WHERE a.date = '2024-10-01' AND d.name = '研发部' AND EXTRACT(EPOCH FROM (a.check_out - a.check_in)) / 3600 > 10;",
    "question": "2024年10月1日，哪些员工在研发部工作并且当天的工作时长超过10小时？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-01'",
      "AND",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "EXTRACT(EPOCH",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      "/",
      "3600",
      ">",
      "10;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.employee_id,",
      "a.check_in,",
      "a.check_out",
      "FROM",
      "attendance_records",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "departments",
      "d",
      "ON",
      "e.department_id",
      "=",
      "d.department_id",
      "WHERE",
      "a.date",
      "=",
      "'2024-10-01'",
      "AND",
      "d.name",
      "=",
      "'研发部'",
      "AND",
      "EXTRACT(EPOCH",
      "FROM",
      "(a.check_out",
      "-",
      "a.check_in))",
      "/",
      "3600",
      ">",
      "10;"
    ],
    "question_toks": [
      "2024年10月1日，哪些员工在研发部工作并且当天的工作时长超过10小时？"
    ],
    "result_fields": [
      "e.name",
      "e.employee_id",
      "a.check_in",
      "a.check_out"
    ]
  },
  {
    "db_id": "hr",
    "query": "SELECT e.name, a.award_name, pe.rating FROM awards a JOIN employees e ON a.employee_id = e.employee_id JOIN performance_evaluations pe ON e.employee_id = pe.employee_id WHERE a.year = 2023 AND a.award_name = '优秀员工' AND pe.evaluation_date >= '2023-01-01' AND pe.evaluation_date < '2024-01-01';",
    "question": "2023年获得'优秀员工'奖项的员工中，哪些人同时在2023年有绩效评估记录，并且他们的绩效等级是什么？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "pe.evaluation_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "pe.evaluation_date",
      "<",
      "'2024-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "a.award_name,",
      "pe.rating",
      "FROM",
      "awards",
      "a",
      "JOIN",
      "employees",
      "e",
      "ON",
      "a.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "performance_evaluations",
      "pe",
      "ON",
      "e.employee_id",
      "=",
      "pe.employee_id",
      "WHERE",
      "a.year",
      "=",
      "2023",
      "AND",
      "a.award_name",
      "=",
      "'优秀员工'",
      "AND",
      "pe.evaluation_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "pe.evaluation_date",
      "<",
      "'2024-01-01';"
    ],
    "question_toks": [
      "2023年获得'优秀员工'奖项的员工中，哪些人同时在2023年有绩效评估记录，并且他们的绩效等级是什么？"
    ],
    "result_fields": [
      "e.name",
      "a.award_name",
      "pe.rating"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT d.cust_no, d.acct_bal, l.loan_balance, l.loan_type FROM deposit_account_info d JOIN loan_detail_info l ON d.cust_no = l.cust_id WHERE d.data_dt = '2024-07-19' AND l.dw_date = '2024-07-19' AND d.acct_bal > 100000 AND l.loan_balance > 500000;",
    "question": "在2024年7月19日，哪些客户的存款账户余额超过100000，并且同时拥有贷款余额超过500000的贷款？请列出这些客户的客户编号、存款账户余额、贷款余额以及贷款种类。",
    "query_toks": [
      "SELECT",
      "d.cust_no,",
      "d.acct_bal,",
      "l.loan_balance,",
      "l.loan_type",
      "FROM",
      "deposit_account_info",
      "d",
      "JOIN",
      "loan_detail_info",
      "l",
      "ON",
      "d.cust_no",
      "=",
      "l.cust_id",
      "WHERE",
      "d.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "l.dw_date",
      "=",
      "'2024-07-19'",
      "AND",
      "d.acct_bal",
      ">",
      "100000",
      "AND",
      "l.loan_balance",
      ">",
      "500000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.cust_no,",
      "d.acct_bal,",
      "l.loan_balance,",
      "l.loan_type",
      "FROM",
      "deposit_account_info",
      "d",
      "JOIN",
      "loan_detail_info",
      "l",
      "ON",
      "d.cust_no",
      "=",
      "l.cust_id",
      "WHERE",
      "d.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "l.dw_date",
      "=",
      "'2024-07-19'",
      "AND",
      "d.acct_bal",
      ">",
      "100000",
      "AND",
      "l.loan_balance",
      ">",
      "500000;"
    ],
    "question_toks": [
      "在2024年7月19日，哪些客户的存款账户余额超过100000，并且同时拥有贷款余额超过500000的贷款？请列出这些客户的客户编号、存款账户余额、贷款余额以及贷款种类。"
    ],
    "result_fields": [
      "d.cust_no",
      "d.acct_bal",
      "l.loan_balance",
      "l.loan_type"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT cust_no, wealth_bal FROM financial_products WHERE data_dt = '2024-07-02' AND currency = 'USD' AND wealth_bal > 5000000;",
    "question": "在2024年7月2日，哪些客户持有美元理财产品，并且其理财余额超过5000000美元？",
    "query_toks": [
      "SELECT",
      "cust_no,",
      "wealth_bal",
      "FROM",
      "financial_products",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-02'",
      "AND",
      "currency",
      "=",
      "'USD'",
      "AND",
      "wealth_bal",
      ">",
      "5000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "cust_no,",
      "wealth_bal",
      "FROM",
      "financial_products",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-02'",
      "AND",
      "currency",
      "=",
      "'USD'",
      "AND",
      "wealth_bal",
      ">",
      "5000000;"
    ],
    "question_toks": [
      "在2024年7月2日，哪些客户持有美元理财产品，并且其理财余额超过5000000美元？"
    ],
    "result_fields": [
      "cust_no",
      "wealth_bal"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT rs_type_name, rs_type_id FROM five_level_classification WHERE rs_type = '不良' AND data_dt = '2024-07-22';",
    "question": "请查询2024年7月22日所有属于'不良'大类的五级分类名称和对应的五级分类代码。",
    "query_toks": [
      "SELECT",
      "rs_type_name,",
      "rs_type_id",
      "FROM",
      "five_level_classification",
      "WHERE",
      "rs_type",
      "=",
      "'不良'",
      "AND",
      "data_dt",
      "=",
      "'2024-07-22';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rs_type_name,",
      "rs_type_id",
      "FROM",
      "five_level_classification",
      "WHERE",
      "rs_type",
      "=",
      "'不良'",
      "AND",
      "data_dt",
      "=",
      "'2024-07-22';"
    ],
    "question_toks": [
      "请查询2024年7月22日所有属于'不良'大类的五级分类名称和对应的五级分类代码。"
    ],
    "result_fields": [
      "rs_type_name",
      "rs_type_id"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, o.occupation_name, lr.description FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_repayment lr ON c.id = lr.loan_application_id ORDER BY lr.repayment_amount DESC;",
    "question": "获取所有用户的姓名、职业名称和还款描述，按还款金额降序排列。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "o.occupation_name,",
      "lr.description",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "c.id",
      "=",
      "lr.loan_application_id",
      "ORDER",
      "BY",
      "lr.repayment_amount",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "o.occupation_name,",
      "lr.description",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "c.id",
      "=",
      "lr.loan_application_id",
      "ORDER",
      "BY",
      "lr.repayment_amount",
      "DESC;"
    ],
    "question_toks": [
      "获取所有用户的姓名、职业名称和还款描述，按还款金额降序排列。"
    ],
    "result_fields": [
      "c.customer_name",
      "o.occupation_name",
      "lr.description"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, c.id_number, c.phone_number, c.email, c.address FROM customer c JOIN occupation o ON c.occupation_id = o.id WHERE o.occupation_name = '护士' ORDER BY c.customer_name;",
    "question": "查询所有职业为'护士'的客户的基本信息，包括客户姓名、身份证号、手机号、电子邮件和住址，并按客户姓名排序。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "c.id_number,",
      "c.phone_number,",
      "c.email,",
      "c.address",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "WHERE",
      "o.occupation_name",
      "=",
      "'护士'",
      "ORDER",
      "BY",
      "c.customer_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "c.id_number,",
      "c.phone_number,",
      "c.email,",
      "c.address",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "WHERE",
      "o.occupation_name",
      "=",
      "'护士'",
      "ORDER",
      "BY",
      "c.customer_name;"
    ],
    "question_toks": [
      "查询所有职业为'护士'的客户的基本信息，包括客户姓名、身份证号、手机号、电子邮件和住址，并按客户姓名排序。"
    ],
    "result_fields": [
      "c.customer_name",
      "c.id_number",
      "c.phone_number",
      "c.email",
      "c.address"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT COUNT(DISTINCT da.cust_no) FROM deposit_account_info da JOIN loan_detail_info ld ON da.cust_no = ld.cust_id WHERE da.data_dt = '2024-08-19' AND da.bank_nm = '沈阳分行' AND da.cust_type = '对私' AND ld.cust_type = '对私' AND ld.dw_date = '2024-07-19';",
    "question": "在2024年7月19日，沈阳分行的客户中，有多少对私客户同时拥有存款账户和贷款？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "da.cust_no)",
      "FROM",
      "deposit_account_info",
      "da",
      "JOIN",
      "loan_detail_info",
      "ld",
      "ON",
      "da.cust_no",
      "=",
      "ld.cust_id",
      "WHERE",
      "da.data_dt",
      "=",
      "'2024-08-19'",
      "AND",
      "da.bank_nm",
      "=",
      "'沈阳分行'",
      "AND",
      "da.cust_type",
      "=",
      "'对私'",
      "AND",
      "ld.cust_type",
      "=",
      "'对私'",
      "AND",
      "ld.dw_date",
      "=",
      "'2024-07-19';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "da.cust_no)",
      "FROM",
      "deposit_account_info",
      "da",
      "JOIN",
      "loan_detail_info",
      "ld",
      "ON",
      "da.cust_no",
      "=",
      "ld.cust_id",
      "WHERE",
      "da.data_dt",
      "=",
      "'2024-08-19'",
      "AND",
      "da.bank_nm",
      "=",
      "'沈阳分行'",
      "AND",
      "da.cust_type",
      "=",
      "'对私'",
      "AND",
      "ld.cust_type",
      "=",
      "'对私'",
      "AND",
      "ld.dw_date",
      "=",
      "'2024-07-19';"
    ],
    "question_toks": [
      "在2024年7月19日，沈阳分行的客户中，有多少对私客户同时拥有存款账户和贷款？"
    ],
    "result_fields": [
      "COUNT(DISTINCT da.cust_no)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.curr_code, c.curr_full_name, b.bank_name, b.bank_level FROM currency c JOIN bank_orgnization b ON c.data_dt = b.data_dt WHERE c.curr_class = '外币' AND c.data_dt = '2023-06-30';",
    "question": "查询2023年6月30日所有外币的币种代码、全名以及对应的银行机构名称和层级。",
    "query_toks": [
      "SELECT",
      "c.curr_code,",
      "c.curr_full_name,",
      "b.bank_name,",
      "b.bank_level",
      "FROM",
      "currency",
      "c",
      "JOIN",
      "bank_orgnization",
      "b",
      "ON",
      "c.data_dt",
      "=",
      "b.data_dt",
      "WHERE",
      "c.curr_class",
      "=",
      "'外币'",
      "AND",
      "c.data_dt",
      "=",
      "'2023-06-30';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.curr_code,",
      "c.curr_full_name,",
      "b.bank_name,",
      "b.bank_level",
      "FROM",
      "currency",
      "c",
      "JOIN",
      "bank_orgnization",
      "b",
      "ON",
      "c.data_dt",
      "=",
      "b.data_dt",
      "WHERE",
      "c.curr_class",
      "=",
      "'外币'",
      "AND",
      "c.data_dt",
      "=",
      "'2023-06-30';"
    ],
    "question_toks": [
      "查询2023年6月30日所有外币的币种代码、全名以及对应的银行机构名称和层级。"
    ],
    "result_fields": [
      "c.curr_code",
      "c.curr_full_name",
      "b.bank_name",
      "b.bank_level"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT deposit_id, deposit_name FROM deposit_type WHERE data_dt = '2024-07-22';",
    "question": "查找所有存款类型的产品编号和名称，要求数据日期为2024年7月22日。",
    "query_toks": [
      "SELECT",
      "deposit_id,",
      "deposit_name",
      "FROM",
      "deposit_type",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-22';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "deposit_id,",
      "deposit_name",
      "FROM",
      "deposit_type",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-22';"
    ],
    "question_toks": [
      "查找所有存款类型的产品编号和名称，要求数据日期为2024年7月22日。"
    ],
    "result_fields": [
      "deposit_id",
      "deposit_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT d.card_no, d.cust_nm, d.residential_address FROM debit_card_information d WHERE d.open_date = '2024-07-15' AND d.current_bal > 2000;",
    "question": "查询2024年7月15日开户且卡内活期余额大于2000元的借记卡信息，并显示对应的客户姓名和居住地址。",
    "query_toks": [
      "SELECT",
      "d.card_no,",
      "d.cust_nm,",
      "d.residential_address",
      "FROM",
      "debit_card_information",
      "d",
      "WHERE",
      "d.open_date",
      "=",
      "'2024-07-15'",
      "AND",
      "d.current_bal",
      ">",
      "2000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.card_no,",
      "d.cust_nm,",
      "d.residential_address",
      "FROM",
      "debit_card_information",
      "d",
      "WHERE",
      "d.open_date",
      "=",
      "'2024-07-15'",
      "AND",
      "d.current_bal",
      ">",
      "2000;"
    ],
    "question_toks": [
      "查询2024年7月15日开户且卡内活期余额大于2000元的借记卡信息，并显示对应的客户姓名和居住地址。"
    ],
    "result_fields": [
      "d.card_no",
      "d.cust_nm",
      "d.residential_address"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT customer_id, credit_score FROM loan_credit WHERE credit_date = '2003-06-22' AND credit_score > 0.75;",
    "question": "查询2003年6月22日所有信用分高于0.75的客户的客户ID和信用分",
    "query_toks": [
      "SELECT",
      "customer_id,",
      "credit_score",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_date",
      "=",
      "'2003-06-22'",
      "AND",
      "credit_score",
      ">",
      "0.75;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_id,",
      "credit_score",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_date",
      "=",
      "'2003-06-22'",
      "AND",
      "credit_score",
      ">",
      "0.75;"
    ],
    "question_toks": [
      "查询2003年6月22日所有信用分高于0.75的客户的客户ID和信用分"
    ],
    "result_fields": [
      "customer_id",
      "credit_score"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.gender, c.customer_name, lr.repayment_amount FROM customer c JOIN loan_repayment lr ON c.id = lr.loan_application_id GROUP BY c.gender, c.customer_name, lr.repayment_amount;",
    "question": "查询所有用户的姓名、性别及其还款金额，按性别分组。",
    "query_toks": [
      "SELECT",
      "c.gender,",
      "c.customer_name,",
      "lr.repayment_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "c.id",
      "=",
      "lr.loan_application_id",
      "GROUP",
      "BY",
      "c.gender,",
      "c.customer_name,",
      "lr.repayment_amount;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.gender,",
      "c.customer_name,",
      "lr.repayment_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "c.id",
      "=",
      "lr.loan_application_id",
      "GROUP",
      "BY",
      "c.gender,",
      "c.customer_name,",
      "lr.repayment_amount;"
    ],
    "question_toks": [
      "查询所有用户的姓名、性别及其还款金额，按性别分组。"
    ],
    "result_fields": [
      "c.gender",
      "c.customer_name",
      "lr.repayment_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT la.loan_amount, da.cust_name FROM loan_application la JOIN deposit_account_info da ON la.customer_id = da.cust_no ORDER BY la.loan_amount DESC LIMIT 1;",
    "question": "获取贷款金额最高的贷款申请及其客户信息。",
    "query_toks": [
      "SELECT",
      "la.loan_amount,",
      "da.cust_name",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "deposit_account_info",
      "da",
      "ON",
      "la.customer_id",
      "=",
      "da.cust_no",
      "ORDER",
      "BY",
      "la.loan_amount",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "la.loan_amount,",
      "da.cust_name",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "deposit_account_info",
      "da",
      "ON",
      "la.customer_id",
      "=",
      "da.cust_no",
      "ORDER",
      "BY",
      "la.loan_amount",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "获取贷款金额最高的贷款申请及其客户信息。"
    ],
    "result_fields": [
      "la.loan_amount",
      "da.cust_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT COUNT(DISTINCT fp.cust_no) FROM financial_products fp JOIN debit_card_information dci ON fp.cust_no = dci.cust_no WHERE fp.wealth_bal > 1000000 AND dci.card_state = '正常'",
    "question": "找出理财产品余额超过100万且借记卡状态为正常的客户数量",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "fp.cust_no)",
      "FROM",
      "financial_products",
      "fp",
      "JOIN",
      "debit_card_information",
      "dci",
      "ON",
      "fp.cust_no",
      "=",
      "dci.cust_no",
      "WHERE",
      "fp.wealth_bal",
      ">",
      "1000000",
      "AND",
      "dci.card_state",
      "=",
      "'正常'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "fp.cust_no)",
      "FROM",
      "financial_products",
      "fp",
      "JOIN",
      "debit_card_information",
      "dci",
      "ON",
      "fp.cust_no",
      "=",
      "dci.cust_no",
      "WHERE",
      "fp.wealth_bal",
      ">",
      "1000000",
      "AND",
      "dci.card_state",
      "=",
      "'正常'"
    ],
    "question_toks": [
      "找出理财产品余额超过100万且借记卡状态为正常的客户数量"
    ],
    "result_fields": [
      "COUNT(DISTINCT fp.cust_no)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT dai.cust_name, dai.ci_ref_acct, dai.act_mon_avg_bal FROM deposit_account_info dai JOIN bank_orgnization bo ON dai.org_no = bo.bank_id WHERE dai.data_dt = '2024-07-19' AND dai.acct_type_code = '活期' AND dai.org_nm = '沈阳余淮支行' AND dai.act_mon_avg_bal > 50000;",
    "question": "在2024年7月19日，哪些客户在沈阳余淮支行开设了活期存款账户，并且这些账户的实际月日均余额超过50000元？",
    "query_toks": [
      "SELECT",
      "dai.cust_name,",
      "dai.ci_ref_acct,",
      "dai.act_mon_avg_bal",
      "FROM",
      "deposit_account_info",
      "dai",
      "JOIN",
      "bank_orgnization",
      "bo",
      "ON",
      "dai.org_no",
      "=",
      "bo.bank_id",
      "WHERE",
      "dai.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "dai.acct_type_code",
      "=",
      "'活期'",
      "AND",
      "dai.org_nm",
      "=",
      "'沈阳余淮支行'",
      "AND",
      "dai.act_mon_avg_bal",
      ">",
      "50000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "dai.cust_name,",
      "dai.ci_ref_acct,",
      "dai.act_mon_avg_bal",
      "FROM",
      "deposit_account_info",
      "dai",
      "JOIN",
      "bank_orgnization",
      "bo",
      "ON",
      "dai.org_no",
      "=",
      "bo.bank_id",
      "WHERE",
      "dai.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "dai.acct_type_code",
      "=",
      "'活期'",
      "AND",
      "dai.org_nm",
      "=",
      "'沈阳余淮支行'",
      "AND",
      "dai.act_mon_avg_bal",
      ">",
      "50000;"
    ],
    "question_toks": [
      "在2024年7月19日，哪些客户在沈阳余淮支行开设了活期存款账户，并且这些账户的实际月日均余额超过50000元？"
    ],
    "result_fields": [
      "dai.cust_name",
      "dai.ci_ref_acct",
      "dai.act_mon_avg_bal"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, l.loan_amount FROM customer c JOIN loan_application l ON c.id = l.customer_id WHERE l.loan_amount > 30000 AND l.status = 'PENDING'",
    "question": "查询所有贷款申请金额超过30000元且申请状态为'PENDING'的客户姓名和贷款金额。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "l.loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "WHERE",
      "l.loan_amount",
      ">",
      "30000",
      "AND",
      "l.status",
      "=",
      "'PENDING'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "l.loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "WHERE",
      "l.loan_amount",
      ">",
      "30000",
      "AND",
      "l.status",
      "=",
      "'PENDING'"
    ],
    "question_toks": [
      "查询所有贷款申请金额超过30000元且申请状态为'PENDING'的客户姓名和贷款金额。"
    ],
    "result_fields": [
      "c.customer_name",
      "l.loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH top_20_customers AS (SELECT cust_id FROM loan_detail_info ORDER BY loan_amount DESC LIMIT 20) SELECT d.deposit_type_name, COUNT(*) AS customer_count FROM top_20_customers t JOIN loan_detail_info l ON t.cust_id = l.cust_id JOIN deposit_type d ON l.dw_date = d.data_dt GROUP BY d.deposit_type_name",
    "question": "查询贷款金额最高的前20名客户中，每种存款类型的客户数量",
    "query_toks": [
      "WITH",
      "top_20_customers",
      "AS",
      "(SELECT",
      "cust_id",
      "FROM",
      "loan_detail_info",
      "ORDER",
      "BY",
      "loan_amount",
      "DESC",
      "LIMIT",
      "20)",
      "SELECT",
      "d.deposit_type_name,",
      "COUNT(*)",
      "AS",
      "customer_count",
      "FROM",
      "top_20_customers",
      "t",
      "JOIN",
      "loan_detail_info",
      "l",
      "ON",
      "t.cust_id",
      "=",
      "l.cust_id",
      "JOIN",
      "deposit_type",
      "d",
      "ON",
      "l.dw_date",
      "=",
      "d.data_dt",
      "GROUP",
      "BY",
      "d.deposit_type_name"
    ],
    "query_toks_no_value": [
      "WITH",
      "top_20_customers",
      "AS",
      "(SELECT",
      "cust_id",
      "FROM",
      "loan_detail_info",
      "ORDER",
      "BY",
      "loan_amount",
      "DESC",
      "LIMIT",
      "20)",
      "SELECT",
      "d.deposit_type_name,",
      "COUNT(*)",
      "AS",
      "customer_count",
      "FROM",
      "top_20_customers",
      "t",
      "JOIN",
      "loan_detail_info",
      "l",
      "ON",
      "t.cust_id",
      "=",
      "l.cust_id",
      "JOIN",
      "deposit_type",
      "d",
      "ON",
      "l.dw_date",
      "=",
      "d.data_dt",
      "GROUP",
      "BY",
      "d.deposit_type_name"
    ],
    "question_toks": [
      "查询贷款金额最高的前20名客户中，每种存款类型的客户数量"
    ],
    "result_fields": [
      "cust_id"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT curr_code, curr_full_name FROM currency WHERE curr_class = '外币' ORDER BY curr_code ASC;",
    "question": "列出所有币种分类为'外币'的币种代码和币种全名，并按币种代码升序排列。",
    "query_toks": [
      "SELECT",
      "curr_code,",
      "curr_full_name",
      "FROM",
      "currency",
      "WHERE",
      "curr_class",
      "=",
      "'外币'",
      "ORDER",
      "BY",
      "curr_code",
      "ASC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "curr_code,",
      "curr_full_name",
      "FROM",
      "currency",
      "WHERE",
      "curr_class",
      "=",
      "'外币'",
      "ORDER",
      "BY",
      "curr_code",
      "ASC;"
    ],
    "question_toks": [
      "列出所有币种分类为'外币'的币种代码和币种全名，并按币种代码升序排列。"
    ],
    "result_fields": [
      "curr_code",
      "curr_full_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT la.customer_id, la.loan_amount FROM loan_application la ORDER BY la.loan_amount DESC;",
    "question": "查询所有客户及其贷款金额，按贷款金额降序排列。",
    "query_toks": [
      "SELECT",
      "la.customer_id,",
      "la.loan_amount",
      "FROM",
      "loan_application",
      "la",
      "ORDER",
      "BY",
      "la.loan_amount",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "la.customer_id,",
      "la.loan_amount",
      "FROM",
      "loan_application",
      "la",
      "ORDER",
      "BY",
      "la.loan_amount",
      "DESC;"
    ],
    "question_toks": [
      "查询所有客户及其贷款金额，按贷款金额降序排列。"
    ],
    "result_fields": [
      "la.customer_id",
      "la.loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT f.cast_type, AVG(f.wealth_sta_m_avg_bal_b) AS avg_monthly_balance FROM financial_products f WHERE f.data_dt BETWEEN '2024-07-01' AND '2024-07-31' GROUP BY f.cast_type;",
    "question": "查询2024年7月的理财月日均余额，按照客户类型进行分组。",
    "query_toks": [
      "SELECT",
      "f.cast_type,",
      "AVG(f.wealth_sta_m_avg_bal_b)",
      "AS",
      "avg_monthly_balance",
      "FROM",
      "financial_products",
      "f",
      "WHERE",
      "f.data_dt",
      "BETWEEN",
      "'2024-07-01'",
      "AND",
      "'2024-07-31'",
      "GROUP",
      "BY",
      "f.cast_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "f.cast_type,",
      "AVG(f.wealth_sta_m_avg_bal_b)",
      "AS",
      "avg_monthly_balance",
      "FROM",
      "financial_products",
      "f",
      "WHERE",
      "f.data_dt",
      "BETWEEN",
      "'2024-07-01'",
      "AND",
      "'2024-07-31'",
      "GROUP",
      "BY",
      "f.cast_type;"
    ],
    "question_toks": [
      "查询2024年7月的理财月日均余额，按照客户类型进行分组。"
    ],
    "result_fields": [
      "f.cast_type",
      "AVG(f.wealth_sta_m_avg_bal_b)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM loan_detail_info WHERE loandate_s > '2024-04-01';",
    "question": "查看贷款发放日期在2024年4月1日之后的所有贷款记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "loandate_s",
      ">",
      "'2024-04-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "loandate_s",
      ">",
      "'2024-04-01';"
    ],
    "question_toks": [
      "查看贷款发放日期在2024年4月1日之后的所有贷款记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH age_group_avg AS (SELECT CASE WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 0 AND 20 THEN '0-20' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 21 AND 40 THEN '21-40' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 41 AND 60 THEN '41-60' ELSE '61+' END as age_group, AVG(l.loan_amount) as avg_loan_amount FROM customer c JOIN loan_application l ON c.id = l.customer_id GROUP BY age_group) SELECT c.customer_name, aga.age_group, l.loan_amount, aga.avg_loan_amount FROM customer c JOIN loan_application l ON c.id = l.customer_id JOIN age_group_avg aga ON CASE WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 0 AND 20 THEN '0-20' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 21 AND 40 THEN '21-40' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 41 AND 60 THEN '41-60' ELSE '61+' END = aga.age_group WHERE l.loan_amount > aga.avg_loan_amount * 1.5 ORDER BY l.loan_amount DESC",
    "question": "找出贷款金额超过其年龄段（0-20，21-40，41-60，61+）平均贷款金额50%的客户。",
    "query_toks": [
      "WITH",
      "age_group_avg",
      "AS",
      "(SELECT",
      "CASE",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "0",
      "AND",
      "20",
      "THEN",
      "'0-20'",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "21",
      "AND",
      "40",
      "THEN",
      "'21-40'",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "41",
      "AND",
      "60",
      "THEN",
      "'41-60'",
      "ELSE",
      "'61+'",
      "END",
      "as",
      "age_group,",
      "AVG(l.loan_amount)",
      "as",
      "avg_loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "GROUP",
      "BY",
      "age_group)",
      "SELECT",
      "c.customer_name,",
      "aga.age_group,",
      "l.loan_amount,",
      "aga.avg_loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "JOIN",
      "age_group_avg",
      "aga",
      "ON",
      "CASE",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "0",
      "AND",
      "20",
      "THEN",
      "'0-20'",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "21",
      "AND",
      "40",
      "THEN",
      "'21-40'",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "41",
      "AND",
      "60",
      "THEN",
      "'41-60'",
      "ELSE",
      "'61+'",
      "END",
      "=",
      "aga.age_group",
      "WHERE",
      "l.loan_amount",
      ">",
      "aga.avg_loan_amount",
      "*",
      "1.5",
      "ORDER",
      "BY",
      "l.loan_amount",
      "DESC"
    ],
    "query_toks_no_value": [
      "WITH",
      "age_group_avg",
      "AS",
      "(SELECT",
      "CASE",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "0",
      "AND",
      "20",
      "THEN",
      "'0-20'",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "21",
      "AND",
      "40",
      "THEN",
      "'21-40'",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "41",
      "AND",
      "60",
      "THEN",
      "'41-60'",
      "ELSE",
      "'61+'",
      "END",
      "as",
      "age_group,",
      "AVG(l.loan_amount)",
      "as",
      "avg_loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "GROUP",
      "BY",
      "age_group)",
      "SELECT",
      "c.customer_name,",
      "aga.age_group,",
      "l.loan_amount,",
      "aga.avg_loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "JOIN",
      "age_group_avg",
      "aga",
      "ON",
      "CASE",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "0",
      "AND",
      "20",
      "THEN",
      "'0-20'",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "21",
      "AND",
      "40",
      "THEN",
      "'21-40'",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "41",
      "AND",
      "60",
      "THEN",
      "'41-60'",
      "ELSE",
      "'61+'",
      "END",
      "=",
      "aga.age_group",
      "WHERE",
      "l.loan_amount",
      ">",
      "aga.avg_loan_amount",
      "*",
      "1.5",
      "ORDER",
      "BY",
      "l.loan_amount",
      "DESC"
    ],
    "question_toks": [
      "找出贷款金额超过其年龄段（0-20，21-40，41-60，61+）平均贷款金额50%的客户。"
    ],
    "result_fields": [
      "CASE WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 0 AND 20 THEN '0-20' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 21 AND 40 THEN '21-40' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 41 AND 60 THEN '41-60' ELSE '61+' END",
      "AVG(l.loan_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT birth_date, gender FROM customer;",
    "question": "获取用户的出生日期和性别信息。",
    "query_toks": [
      "SELECT",
      "birth_date,",
      "gender",
      "FROM",
      "customer;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "birth_date,",
      "gender",
      "FROM",
      "customer;"
    ],
    "question_toks": [
      "获取用户的出生日期和性别信息。"
    ],
    "result_fields": [
      "birth_date",
      "gender"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT d.cust_id, d.loan_balance FROM loan_detail_info d JOIN deposit_account_info a ON d.cust_id = a.cust_no WHERE d.loan_balance > 500000 AND d.dw_date = '2024-07-19' AND a.bank_no = 'BANK_006';",
    "question": "在2024年7月19日，哪些客户在沈阳分行持有贷款，并且他们的贷款余额超过500000元？",
    "query_toks": [
      "SELECT",
      "d.cust_id,",
      "d.loan_balance",
      "FROM",
      "loan_detail_info",
      "d",
      "JOIN",
      "deposit_account_info",
      "a",
      "ON",
      "d.cust_id",
      "=",
      "a.cust_no",
      "WHERE",
      "d.loan_balance",
      ">",
      "500000",
      "AND",
      "d.dw_date",
      "=",
      "'2024-07-19'",
      "AND",
      "a.bank_no",
      "=",
      "'BANK_006';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.cust_id,",
      "d.loan_balance",
      "FROM",
      "loan_detail_info",
      "d",
      "JOIN",
      "deposit_account_info",
      "a",
      "ON",
      "d.cust_id",
      "=",
      "a.cust_no",
      "WHERE",
      "d.loan_balance",
      ">",
      "500000",
      "AND",
      "d.dw_date",
      "=",
      "'2024-07-19'",
      "AND",
      "a.bank_no",
      "=",
      "'BANK_006';"
    ],
    "question_toks": [
      "在2024年7月19日，哪些客户在沈阳分行持有贷款，并且他们的贷款余额超过500000元？"
    ],
    "result_fields": [
      "d.cust_id",
      "d.loan_balance"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ldi.reportid, ldi.loan_balance, c.curr_full_name, flc.rs_type_name FROM loan_detail_info ldi JOIN currency c ON ldi.currency_type = c.curr_code JOIN five_level_classification flc ON ldi.judgelevel = flc.rs_type_id WHERE ldi.loan_balance > 1000000;",
    "question": "查询所有贷款余额大于1000000的贷款明细信息，并显示贷款的币种全名和五级分类名称。",
    "query_toks": [
      "SELECT",
      "ldi.reportid,",
      "ldi.loan_balance,",
      "c.curr_full_name,",
      "flc.rs_type_name",
      "FROM",
      "loan_detail_info",
      "ldi",
      "JOIN",
      "currency",
      "c",
      "ON",
      "ldi.currency_type",
      "=",
      "c.curr_code",
      "JOIN",
      "five_level_classification",
      "flc",
      "ON",
      "ldi.judgelevel",
      "=",
      "flc.rs_type_id",
      "WHERE",
      "ldi.loan_balance",
      ">",
      "1000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ldi.reportid,",
      "ldi.loan_balance,",
      "c.curr_full_name,",
      "flc.rs_type_name",
      "FROM",
      "loan_detail_info",
      "ldi",
      "JOIN",
      "currency",
      "c",
      "ON",
      "ldi.currency_type",
      "=",
      "c.curr_code",
      "JOIN",
      "five_level_classification",
      "flc",
      "ON",
      "ldi.judgelevel",
      "=",
      "flc.rs_type_id",
      "WHERE",
      "ldi.loan_balance",
      ">",
      "1000000;"
    ],
    "question_toks": [
      "查询所有贷款余额大于1000000的贷款明细信息，并显示贷款的币种全名和五级分类名称。"
    ],
    "result_fields": [
      "ldi.reportid",
      "ldi.loan_balance",
      "c.curr_full_name",
      "flc.rs_type_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ldi.cust_id, c.curr_full_name, ldi.loan_balance FROM loan_detail_info ldi JOIN currency c ON ldi.currency_type = c.curr_code WHERE ldi.loan_balance > 1000000 ORDER BY ldi.loan_balance DESC;",
    "question": "查询所有贷款余额大于1000000的客户及其对应的币种全名，并按贷款余额降序排列。",
    "query_toks": [
      "SELECT",
      "ldi.cust_id,",
      "c.curr_full_name,",
      "ldi.loan_balance",
      "FROM",
      "loan_detail_info",
      "ldi",
      "JOIN",
      "currency",
      "c",
      "ON",
      "ldi.currency_type",
      "=",
      "c.curr_code",
      "WHERE",
      "ldi.loan_balance",
      ">",
      "1000000",
      "ORDER",
      "BY",
      "ldi.loan_balance",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ldi.cust_id,",
      "c.curr_full_name,",
      "ldi.loan_balance",
      "FROM",
      "loan_detail_info",
      "ldi",
      "JOIN",
      "currency",
      "c",
      "ON",
      "ldi.currency_type",
      "=",
      "c.curr_code",
      "WHERE",
      "ldi.loan_balance",
      ">",
      "1000000",
      "ORDER",
      "BY",
      "ldi.loan_balance",
      "DESC;"
    ],
    "question_toks": [
      "查询所有贷款余额大于1000000的客户及其对应的币种全名，并按贷款余额降序排列。"
    ],
    "result_fields": [
      "ldi.cust_id",
      "c.curr_full_name",
      "ldi.loan_balance"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ub.customer_id, COUNT(DISTINCT ub.behavior_type) AS behavior_type_count FROM user_behavior ub WHERE ub.behavior_date >= date('now') - INTERVAL '1 year' GROUP BY ub.customer_id ORDER BY behavior_type_count DESC LIMIT 5",
    "question": "找出过去一年内有最多不同类型用户行为的前5名客户",
    "query_toks": [
      "SELECT",
      "ub.customer_id,",
      "COUNT(DISTINCT",
      "ub.behavior_type)",
      "AS",
      "behavior_type_count",
      "FROM",
      "user_behavior",
      "ub",
      "WHERE",
      "ub.behavior_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "GROUP",
      "BY",
      "ub.customer_id",
      "ORDER",
      "BY",
      "behavior_type_count",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ub.customer_id,",
      "COUNT(DISTINCT",
      "ub.behavior_type)",
      "AS",
      "behavior_type_count",
      "FROM",
      "user_behavior",
      "ub",
      "WHERE",
      "ub.behavior_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "GROUP",
      "BY",
      "ub.customer_id",
      "ORDER",
      "BY",
      "behavior_type_count",
      "DESC",
      "LIMIT",
      "5"
    ],
    "question_toks": [
      "找出过去一年内有最多不同类型用户行为的前5名客户"
    ],
    "result_fields": [
      "ub.customer_id",
      "COUNT(DISTINCT ub.behavior_type)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT SUM(age1 + age2 + age3 + age4 + age5 + age6) AS total_overdue_amount, COUNT(*) AS account_count FROM credit_card_data WHERE corporation = 'Corp3' AND dw_date = '2024-07-03';",
    "question": "查询信用卡数据表中，法人主体为'Corp3'的账户在2024年7月3日的逾期金额总和，并统计这些账户的数量。",
    "query_toks": [
      "SELECT",
      "SUM(age1",
      "+",
      "age2",
      "+",
      "age3",
      "+",
      "age4",
      "+",
      "age5",
      "+",
      "age6)",
      "AS",
      "total_overdue_amount,",
      "COUNT(*)",
      "AS",
      "account_count",
      "FROM",
      "credit_card_data",
      "WHERE",
      "corporation",
      "=",
      "'Corp3'",
      "AND",
      "dw_date",
      "=",
      "'2024-07-03';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "SUM(age1",
      "+",
      "age2",
      "+",
      "age3",
      "+",
      "age4",
      "+",
      "age5",
      "+",
      "age6)",
      "AS",
      "total_overdue_amount,",
      "COUNT(*)",
      "AS",
      "account_count",
      "FROM",
      "credit_card_data",
      "WHERE",
      "corporation",
      "=",
      "'Corp3'",
      "AND",
      "dw_date",
      "=",
      "'2024-07-03';"
    ],
    "question_toks": [
      "查询信用卡数据表中，法人主体为'Corp3'的账户在2024年7月3日的逾期金额总和，并统计这些账户的数量。"
    ],
    "result_fields": [
      "SUM(age1 + age2 + age3 + age4 + age5 + age6)",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM loan_detail_info WHERE cust_id = '1004';",
    "question": "查询贷款明细信息中客户编号为 '1004' 的所有贷款记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "cust_id",
      "=",
      "'1004';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "cust_id",
      "=",
      "'1004';"
    ],
    "question_toks": [
      "查询贷款明细信息中客户编号为",
      "'1004'",
      "的所有贷款记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, t.transfer_amount, t.transfer_date FROM customer c JOIN transfer t ON c.id = t.source_customer_id OR c.id = t.target_customer_id;",
    "question": "查找所有客户及其对应的转账记录。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "t.transfer_amount,",
      "t.transfer_date",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "transfer",
      "t",
      "ON",
      "c.id",
      "=",
      "t.source_customer_id",
      "OR",
      "c.id",
      "=",
      "t.target_customer_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "t.transfer_amount,",
      "t.transfer_date",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "transfer",
      "t",
      "ON",
      "c.id",
      "=",
      "t.source_customer_id",
      "OR",
      "c.id",
      "=",
      "t.target_customer_id;"
    ],
    "question_toks": [
      "查找所有客户及其对应的转账记录。"
    ],
    "result_fields": [
      "c.customer_name",
      "t.transfer_amount",
      "t.transfer_date"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ub.customer_id, ub.behavior_type, lr.repayment_amount FROM user_behavior ub LEFT JOIN loan_repayment lr ON ub.customer_id = lr.loan_application_id;",
    "question": "获取所有客户的行为和贷款还款信息的关联。",
    "query_toks": [
      "SELECT",
      "ub.customer_id,",
      "ub.behavior_type,",
      "lr.repayment_amount",
      "FROM",
      "user_behavior",
      "ub",
      "LEFT",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "ub.customer_id",
      "=",
      "lr.loan_application_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ub.customer_id,",
      "ub.behavior_type,",
      "lr.repayment_amount",
      "FROM",
      "user_behavior",
      "ub",
      "LEFT",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "ub.customer_id",
      "=",
      "lr.loan_application_id;"
    ],
    "question_toks": [
      "获取所有客户的行为和贷款还款信息的关联。"
    ],
    "result_fields": [
      "ub.customer_id",
      "ub.behavior_type",
      "lr.repayment_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT dai.cust_name, dai.acct_bal, dt.deposit_name FROM deposit_account_info dai JOIN deposit_type dt ON dai.arl_pdp_code = dt.deposit_id WHERE dai.data_dt = '2024-07-21' AND dai.acct_bal > 50000;",
    "question": "查询2024年7月21日所有存款账户的客户名称、账户余额以及对应的存款类型名称，并且只显示账户余额大于50000的记录。",
    "query_toks": [
      "SELECT",
      "dai.cust_name,",
      "dai.acct_bal,",
      "dt.deposit_name",
      "FROM",
      "deposit_account_info",
      "dai",
      "JOIN",
      "deposit_type",
      "dt",
      "ON",
      "dai.arl_pdp_code",
      "=",
      "dt.deposit_id",
      "WHERE",
      "dai.data_dt",
      "=",
      "'2024-07-21'",
      "AND",
      "dai.acct_bal",
      ">",
      "50000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "dai.cust_name,",
      "dai.acct_bal,",
      "dt.deposit_name",
      "FROM",
      "deposit_account_info",
      "dai",
      "JOIN",
      "deposit_type",
      "dt",
      "ON",
      "dai.arl_pdp_code",
      "=",
      "dt.deposit_id",
      "WHERE",
      "dai.data_dt",
      "=",
      "'2024-07-21'",
      "AND",
      "dai.acct_bal",
      ">",
      "50000;"
    ],
    "question_toks": [
      "查询2024年7月21日所有存款账户的客户名称、账户余额以及对应的存款类型名称，并且只显示账户余额大于50000的记录。"
    ],
    "result_fields": [
      "dai.cust_name",
      "dai.acct_bal",
      "dt.deposit_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH customer_total AS (SELECT c.id, c.customer_name, c.province, SUM(l.loan_amount) as total_loan FROM customer c JOIN loan_application l ON c.id = l.customer_id GROUP BY c.id, c.customer_name, c.province), province_total AS (SELECT province, SUM(loan_amount) as province_total FROM loan_application l JOIN customer c ON l.customer_id = c.id GROUP BY province) SELECT ct.customer_name, ct.province, ct.total_loan, (ct.total_loan / pt.province_total * 100) as percentage FROM customer_total ct JOIN province_total pt ON ct.province = pt.province ORDER BY percentage DESC",
    "question": "计算每个客户的贷款总额占其所在省份贷款总额的百分比。",
    "query_toks": [
      "WITH",
      "customer_total",
      "AS",
      "(SELECT",
      "c.id,",
      "c.customer_name,",
      "c.province,",
      "SUM(l.loan_amount)",
      "as",
      "total_loan",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "GROUP",
      "BY",
      "c.id,",
      "c.customer_name,",
      "c.province),",
      "province_total",
      "AS",
      "(SELECT",
      "province,",
      "SUM(loan_amount)",
      "as",
      "province_total",
      "FROM",
      "loan_application",
      "l",
      "JOIN",
      "customer",
      "c",
      "ON",
      "l.customer_id",
      "=",
      "c.id",
      "GROUP",
      "BY",
      "province)",
      "SELECT",
      "ct.customer_name,",
      "ct.province,",
      "ct.total_loan,",
      "(ct.total_loan",
      "/",
      "pt.province_total",
      "*",
      "100)",
      "as",
      "percentage",
      "FROM",
      "customer_total",
      "ct",
      "JOIN",
      "province_total",
      "pt",
      "ON",
      "ct.province",
      "=",
      "pt.province",
      "ORDER",
      "BY",
      "percentage",
      "DESC"
    ],
    "query_toks_no_value": [
      "WITH",
      "customer_total",
      "AS",
      "(SELECT",
      "c.id,",
      "c.customer_name,",
      "c.province,",
      "SUM(l.loan_amount)",
      "as",
      "total_loan",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "GROUP",
      "BY",
      "c.id,",
      "c.customer_name,",
      "c.province),",
      "province_total",
      "AS",
      "(SELECT",
      "province,",
      "SUM(loan_amount)",
      "as",
      "province_total",
      "FROM",
      "loan_application",
      "l",
      "JOIN",
      "customer",
      "c",
      "ON",
      "l.customer_id",
      "=",
      "c.id",
      "GROUP",
      "BY",
      "province)",
      "SELECT",
      "ct.customer_name,",
      "ct.province,",
      "ct.total_loan,",
      "(ct.total_loan",
      "/",
      "pt.province_total",
      "*",
      "100)",
      "as",
      "percentage",
      "FROM",
      "customer_total",
      "ct",
      "JOIN",
      "province_total",
      "pt",
      "ON",
      "ct.province",
      "=",
      "pt.province",
      "ORDER",
      "BY",
      "percentage",
      "DESC"
    ],
    "question_toks": [
      "计算每个客户的贷款总额占其所在省份贷款总额的百分比。"
    ],
    "result_fields": [
      "c.id",
      "c.customer_name",
      "c.province",
      "SUM(l.loan_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH province_occupation_approval AS (SELECT c.province, o.occupation_name, COUNT(*) as total_applications, SUM(CASE WHEN la.status = 'APPROVED' THEN 1 ELSE 0 END) / COUNT(*) as approval_rate, ROW_NUMBER() OVER (PARTITION BY c.province ORDER BY SUM(CASE WHEN la.status = 'APPROVED' THEN 1 ELSE 0 END) / COUNT(*) DESC) as rank FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_application la ON c.id = la.customer_id GROUP BY c.province, o.occupation_name) SELECT province, occupation_name, approval_rate FROM province_occupation_approval WHERE rank = 1 ORDER BY approval_rate DESC",
    "question": "每个省份的贷款申请通过率最高的职业是什么？",
    "query_toks": [
      "WITH",
      "province_occupation_approval",
      "AS",
      "(SELECT",
      "c.province,",
      "o.occupation_name,",
      "COUNT(*)",
      "as",
      "total_applications,",
      "SUM(CASE",
      "WHEN",
      "la.status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "approval_rate,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "c.province",
      "ORDER",
      "BY",
      "SUM(CASE",
      "WHEN",
      "la.status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "/",
      "COUNT(*)",
      "DESC)",
      "as",
      "rank",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "c.id",
      "=",
      "la.customer_id",
      "GROUP",
      "BY",
      "c.province,",
      "o.occupation_name)",
      "SELECT",
      "province,",
      "occupation_name,",
      "approval_rate",
      "FROM",
      "province_occupation_approval",
      "WHERE",
      "rank",
      "=",
      "1",
      "ORDER",
      "BY",
      "approval_rate",
      "DESC"
    ],
    "query_toks_no_value": [
      "WITH",
      "province_occupation_approval",
      "AS",
      "(SELECT",
      "c.province,",
      "o.occupation_name,",
      "COUNT(*)",
      "as",
      "total_applications,",
      "SUM(CASE",
      "WHEN",
      "la.status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "approval_rate,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "c.province",
      "ORDER",
      "BY",
      "SUM(CASE",
      "WHEN",
      "la.status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "/",
      "COUNT(*)",
      "DESC)",
      "as",
      "rank",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "c.id",
      "=",
      "la.customer_id",
      "GROUP",
      "BY",
      "c.province,",
      "o.occupation_name)",
      "SELECT",
      "province,",
      "occupation_name,",
      "approval_rate",
      "FROM",
      "province_occupation_approval",
      "WHERE",
      "rank",
      "=",
      "1",
      "ORDER",
      "BY",
      "approval_rate",
      "DESC"
    ],
    "question_toks": [
      "每个省份的贷款申请通过率最高的职业是什么？"
    ],
    "result_fields": [
      "c.province",
      "o.occupation_name",
      "COUNT(*)",
      "SUM(CASE WHEN la.status = 'APPROVED' THEN 1 ELSE 0 END) / COUNT(*)",
      "ROW_NUMBER() OVER (PARTITION BY c.province ORDER BY SUM(CASE WHEN la.status = 'APPROVED' THEN 1 ELSE 0 END) / COUNT(*) DESC)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH branch_total AS (SELECT bank_nm, SUM(current_bal + fixed_bal) AS total_deposit FROM debit_card_information GROUP BY bank_nm), top_customers AS (SELECT bank_nm, cust_nm, current_bal + fixed_bal AS deposit, ROW_NUMBER() OVER (PARTITION BY bank_nm ORDER BY current_bal + fixed_bal DESC) AS rank FROM debit_card_information) SELECT tc.bank_nm, SUM(tc.deposit) / bt.total_deposit AS top_10_ratio FROM top_customers tc JOIN branch_total bt ON tc.bank_nm = bt.bank_nm WHERE tc.rank <= 10 GROUP BY tc.bank_nm, bt.total_deposit",
    "question": "各银行分行中，存款余额最高的前10名客户合计占该分行存款总额的比例是多少？",
    "query_toks": [
      "WITH",
      "branch_total",
      "AS",
      "(SELECT",
      "bank_nm,",
      "SUM(current_bal",
      "+",
      "fixed_bal)",
      "AS",
      "total_deposit",
      "FROM",
      "debit_card_information",
      "GROUP",
      "BY",
      "bank_nm),",
      "top_customers",
      "AS",
      "(SELECT",
      "bank_nm,",
      "cust_nm,",
      "current_bal",
      "+",
      "fixed_bal",
      "AS",
      "deposit,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "bank_nm",
      "ORDER",
      "BY",
      "current_bal",
      "+",
      "fixed_bal",
      "DESC)",
      "AS",
      "rank",
      "FROM",
      "debit_card_information)",
      "SELECT",
      "tc.bank_nm,",
      "SUM(tc.deposit)",
      "/",
      "bt.total_deposit",
      "AS",
      "top_10_ratio",
      "FROM",
      "top_customers",
      "tc",
      "JOIN",
      "branch_total",
      "bt",
      "ON",
      "tc.bank_nm",
      "=",
      "bt.bank_nm",
      "WHERE",
      "tc.rank",
      "<=",
      "10",
      "GROUP",
      "BY",
      "tc.bank_nm,",
      "bt.total_deposit"
    ],
    "query_toks_no_value": [
      "WITH",
      "branch_total",
      "AS",
      "(SELECT",
      "bank_nm,",
      "SUM(current_bal",
      "+",
      "fixed_bal)",
      "AS",
      "total_deposit",
      "FROM",
      "debit_card_information",
      "GROUP",
      "BY",
      "bank_nm),",
      "top_customers",
      "AS",
      "(SELECT",
      "bank_nm,",
      "cust_nm,",
      "current_bal",
      "+",
      "fixed_bal",
      "AS",
      "deposit,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "bank_nm",
      "ORDER",
      "BY",
      "current_bal",
      "+",
      "fixed_bal",
      "DESC)",
      "AS",
      "rank",
      "FROM",
      "debit_card_information)",
      "SELECT",
      "tc.bank_nm,",
      "SUM(tc.deposit)",
      "/",
      "bt.total_deposit",
      "AS",
      "top_10_ratio",
      "FROM",
      "top_customers",
      "tc",
      "JOIN",
      "branch_total",
      "bt",
      "ON",
      "tc.bank_nm",
      "=",
      "bt.bank_nm",
      "WHERE",
      "tc.rank",
      "<=",
      "10",
      "GROUP",
      "BY",
      "tc.bank_nm,",
      "bt.total_deposit"
    ],
    "question_toks": [
      "各银行分行中，存款余额最高的前10名客户合计占该分行存款总额的比例是多少？"
    ],
    "result_fields": [
      "bank_nm",
      "SUM(current_bal + fixed_bal)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT cust_nm, tel_no FROM debit_card_information WHERE cust_nm LIKE '%Lee%';",
    "question": "获取所有借记卡的客户名称和电话，要求客户名称包含'Lee'。",
    "query_toks": [
      "SELECT",
      "cust_nm,",
      "tel_no",
      "FROM",
      "debit_card_information",
      "WHERE",
      "cust_nm",
      "LIKE",
      "'%Lee%';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "cust_nm,",
      "tel_no",
      "FROM",
      "debit_card_information",
      "WHERE",
      "cust_nm",
      "LIKE",
      "'%Lee%';"
    ],
    "question_toks": [
      "获取所有借记卡的客户名称和电话，要求客户名称包含'Lee'。"
    ],
    "result_fields": [
      "cust_nm",
      "tel_no"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ub.customer_id, ub.behavior_type, lr.repayment_amount FROM user_behavior ub LEFT JOIN loan_repayment lr ON ub.customer_id = lr.loan_application_id;",
    "question": "查询每个客户的行为和还款记录的详情。",
    "query_toks": [
      "SELECT",
      "ub.customer_id,",
      "ub.behavior_type,",
      "lr.repayment_amount",
      "FROM",
      "user_behavior",
      "ub",
      "LEFT",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "ub.customer_id",
      "=",
      "lr.loan_application_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ub.customer_id,",
      "ub.behavior_type,",
      "lr.repayment_amount",
      "FROM",
      "user_behavior",
      "ub",
      "LEFT",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "ub.customer_id",
      "=",
      "lr.loan_application_id;"
    ],
    "question_toks": [
      "查询每个客户的行为和还款记录的详情。"
    ],
    "result_fields": [
      "ub.customer_id",
      "ub.behavior_type",
      "lr.repayment_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT DISTINCT lr.loan_application_id, lc.customer_id FROM loan_repayment lr JOIN loan_application la ON lr.loan_application_id = la.id JOIN loan_credit lc ON la.customer_id = lc.customer_id WHERE lr.repayment_date = '2021-11-10' AND lc.credit_score > 0.75;",
    "question": "2021年11月10日，哪些客户的信用评分高于0.75且进行了还款？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "lr.loan_application_id,",
      "lc.customer_id",
      "FROM",
      "loan_repayment",
      "lr",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lr.loan_application_id",
      "=",
      "la.id",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "la.customer_id",
      "=",
      "lc.customer_id",
      "WHERE",
      "lr.repayment_date",
      "=",
      "'2021-11-10'",
      "AND",
      "lc.credit_score",
      ">",
      "0.75;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "lr.loan_application_id,",
      "lc.customer_id",
      "FROM",
      "loan_repayment",
      "lr",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lr.loan_application_id",
      "=",
      "la.id",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "la.customer_id",
      "=",
      "lc.customer_id",
      "WHERE",
      "lr.repayment_date",
      "=",
      "'2021-11-10'",
      "AND",
      "lc.credit_score",
      ">",
      "0.75;"
    ],
    "question_toks": [
      "2021年11月10日，哪些客户的信用评分高于0.75且进行了还款？"
    ],
    "result_fields": [
      "DISTINCT lr.loan_application_id",
      "lc.customer_id"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM loan_repayment WHERE repayment_amount > 900;",
    "question": "查询所有还款记录中还款金额超过900的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "loan_repayment",
      "WHERE",
      "repayment_amount",
      ">",
      "900;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "loan_repayment",
      "WHERE",
      "repayment_amount",
      ">",
      "900;"
    ],
    "question_toks": [
      "查询所有还款记录中还款金额超过900的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT dci.cust_no, dci.cust_nm, dci.card_no, dci.residential_address FROM debit_card_information dci WHERE dci.data_dt = '2024-07-09' AND dci.card_state = '正常' AND dci.residential_address = '987 Willow Street';",
    "question": "在2024年7月9日，哪些客户的借记卡状态为'正常'，并且他们的居住地址在'987 Willow Street'？请列出这些客户的客户编号、客户名称、卡号和居住地址。",
    "query_toks": [
      "SELECT",
      "dci.cust_no,",
      "dci.cust_nm,",
      "dci.card_no,",
      "dci.residential_address",
      "FROM",
      "debit_card_information",
      "dci",
      "WHERE",
      "dci.data_dt",
      "=",
      "'2024-07-09'",
      "AND",
      "dci.card_state",
      "=",
      "'正常'",
      "AND",
      "dci.residential_address",
      "=",
      "'987",
      "Willow",
      "Street';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "dci.cust_no,",
      "dci.cust_nm,",
      "dci.card_no,",
      "dci.residential_address",
      "FROM",
      "debit_card_information",
      "dci",
      "WHERE",
      "dci.data_dt",
      "=",
      "'2024-07-09'",
      "AND",
      "dci.card_state",
      "=",
      "'正常'",
      "AND",
      "dci.residential_address",
      "=",
      "'987",
      "Willow",
      "Street';"
    ],
    "question_toks": [
      "在2024年7月9日，哪些客户的借记卡状态为'正常'，并且他们的居住地址在'987",
      "Willow",
      "Street'？请列出这些客户的客户编号、客户名称、卡号和居住地址。"
    ],
    "result_fields": [
      "dci.cust_no",
      "dci.cust_nm",
      "dci.card_no",
      "dci.residential_address"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ld.cust_id, ld.loan_balance FROM loan_detail_info ld;",
    "question": "查询所有客户的贷款信息及余额。",
    "query_toks": [
      "SELECT",
      "ld.cust_id,",
      "ld.loan_balance",
      "FROM",
      "loan_detail_info",
      "ld;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ld.cust_id,",
      "ld.loan_balance",
      "FROM",
      "loan_detail_info",
      "ld;"
    ],
    "question_toks": [
      "查询所有客户的贷款信息及余额。"
    ],
    "result_fields": [
      "ld.cust_id",
      "ld.loan_balance"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT lt.loan_type_name, COUNT(DISTINCT d.cust_no) AS user_count FROM loan_type lt LEFT JOIN debit_card_information d ON lt.loan_type_code = d.cust_no GROUP BY lt.loan_type_name",
    "question": "各种贷款类型中，关联的借记卡用户数量是多少？",
    "query_toks": [
      "SELECT",
      "lt.loan_type_name,",
      "COUNT(DISTINCT",
      "d.cust_no)",
      "AS",
      "user_count",
      "FROM",
      "loan_type",
      "lt",
      "LEFT",
      "JOIN",
      "debit_card_information",
      "d",
      "ON",
      "lt.loan_type_code",
      "=",
      "d.cust_no",
      "GROUP",
      "BY",
      "lt.loan_type_name"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lt.loan_type_name,",
      "COUNT(DISTINCT",
      "d.cust_no)",
      "AS",
      "user_count",
      "FROM",
      "loan_type",
      "lt",
      "LEFT",
      "JOIN",
      "debit_card_information",
      "d",
      "ON",
      "lt.loan_type_code",
      "=",
      "d.cust_no",
      "GROUP",
      "BY",
      "lt.loan_type_name"
    ],
    "question_toks": [
      "各种贷款类型中，关联的借记卡用户数量是多少？"
    ],
    "result_fields": [
      "lt.loan_type_name",
      "COUNT(DISTINCT d.cust_no)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ld.loan_type, COUNT(DISTINCT ld.cust_id) AS customer_count FROM loan_detail_info ld GROUP BY ld.loan_type;",
    "question": "获取每种贷款类型的客户数量。",
    "query_toks": [
      "SELECT",
      "ld.loan_type,",
      "COUNT(DISTINCT",
      "ld.cust_id)",
      "AS",
      "customer_count",
      "FROM",
      "loan_detail_info",
      "ld",
      "GROUP",
      "BY",
      "ld.loan_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ld.loan_type,",
      "COUNT(DISTINCT",
      "ld.cust_id)",
      "AS",
      "customer_count",
      "FROM",
      "loan_detail_info",
      "ld",
      "GROUP",
      "BY",
      "ld.loan_type;"
    ],
    "question_toks": [
      "获取每种贷款类型的客户数量。"
    ],
    "result_fields": [
      "ld.loan_type",
      "COUNT(DISTINCT ld.cust_id)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT credit_score, description FROM loan_credit WHERE credit_date = '2011-04-13';",
    "question": "查询2011年4月13日所有客户的信用分和信用描述",
    "query_toks": [
      "SELECT",
      "credit_score,",
      "description",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_date",
      "=",
      "'2011-04-13';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "credit_score,",
      "description",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_date",
      "=",
      "'2011-04-13';"
    ],
    "question_toks": [
      "查询2011年4月13日所有客户的信用分和信用描述"
    ],
    "result_fields": [
      "credit_score",
      "description"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT SUM(fp.wealth_bal) AS total_wealth_bal, SUM(fp.wealth_bal_t) AS total_wealth_bal_t FROM financial_products fp WHERE fp.data_dt = '2024-07-14' AND fp.bank_nm = '沈阳余淮支行' AND fp.cast_type = '对公';",
    "question": "查询2024年7月14日沈阳余淮支行的所有对公客户的理财余额总和以及保本理财余额总和。",
    "query_toks": [
      "SELECT",
      "SUM(fp.wealth_bal)",
      "AS",
      "total_wealth_bal,",
      "SUM(fp.wealth_bal_t)",
      "AS",
      "total_wealth_bal_t",
      "FROM",
      "financial_products",
      "fp",
      "WHERE",
      "fp.data_dt",
      "=",
      "'2024-07-14'",
      "AND",
      "fp.bank_nm",
      "=",
      "'沈阳余淮支行'",
      "AND",
      "fp.cast_type",
      "=",
      "'对公';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "SUM(fp.wealth_bal)",
      "AS",
      "total_wealth_bal,",
      "SUM(fp.wealth_bal_t)",
      "AS",
      "total_wealth_bal_t",
      "FROM",
      "financial_products",
      "fp",
      "WHERE",
      "fp.data_dt",
      "=",
      "'2024-07-14'",
      "AND",
      "fp.bank_nm",
      "=",
      "'沈阳余淮支行'",
      "AND",
      "fp.cast_type",
      "=",
      "'对公';"
    ],
    "question_toks": [
      "查询2024年7月14日沈阳余淮支行的所有对公客户的理财余额总和以及保本理财余额总和。"
    ],
    "result_fields": [
      "SUM(fp.wealth_bal)",
      "SUM(fp.wealth_bal_t)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT customer_id, credit_score FROM loan_credit WHERE credit_date = '2003-06-22' AND credit_score > 0.75;",
    "question": "查询2003年6月22日所有信用分大于0.75的客户的客户ID和信用分",
    "query_toks": [
      "SELECT",
      "customer_id,",
      "credit_score",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_date",
      "=",
      "'2003-06-22'",
      "AND",
      "credit_score",
      ">",
      "0.75;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_id,",
      "credit_score",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_date",
      "=",
      "'2003-06-22'",
      "AND",
      "credit_score",
      ">",
      "0.75;"
    ],
    "question_toks": [
      "查询2003年6月22日所有信用分大于0.75的客户的客户ID和信用分"
    ],
    "result_fields": [
      "customer_id",
      "credit_score"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT source_customer_id, target_customer_id FROM transfer;",
    "question": "获取所有客户的转账记录，并包括源客户和目标客户ID。",
    "query_toks": [
      "SELECT",
      "source_customer_id,",
      "target_customer_id",
      "FROM",
      "transfer;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "source_customer_id,",
      "target_customer_id",
      "FROM",
      "transfer;"
    ],
    "question_toks": [
      "获取所有客户的转账记录，并包括源客户和目标客户ID。"
    ],
    "result_fields": [
      "source_customer_id",
      "target_customer_id"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT loan_type_name FROM loan_type WHERE loan_type_code = 'MORTGAGE';",
    "question": "查找所有贷款类型中代码为'MORTGAGE'的名称。",
    "query_toks": [
      "SELECT",
      "loan_type_name",
      "FROM",
      "loan_type",
      "WHERE",
      "loan_type_code",
      "=",
      "'MORTGAGE';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "loan_type_name",
      "FROM",
      "loan_type",
      "WHERE",
      "loan_type_code",
      "=",
      "'MORTGAGE';"
    ],
    "question_toks": [
      "查找所有贷款类型中代码为'MORTGAGE'的名称。"
    ],
    "result_fields": [
      "loan_type_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT cust_nm, card_no FROM debit_card_information WHERE data_dt = '2024-07-05' AND card_state = '正常';",
    "question": "查询在2024年7月5日拥有正常状态的借记卡的客户名称和卡号。",
    "query_toks": [
      "SELECT",
      "cust_nm,",
      "card_no",
      "FROM",
      "debit_card_information",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-05'",
      "AND",
      "card_state",
      "=",
      "'正常';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "cust_nm,",
      "card_no",
      "FROM",
      "debit_card_information",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-05'",
      "AND",
      "card_state",
      "=",
      "'正常';"
    ],
    "question_toks": [
      "查询在2024年7月5日拥有正常状态的借记卡的客户名称和卡号。"
    ],
    "result_fields": [
      "cust_nm",
      "card_no"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT f.bank_nm, f.cast_type, COUNT(*) AS product_count FROM financial_products f GROUP BY f.bank_nm, f.cast_type;",
    "question": "统计每个银行的理财产品数目及其对应的客户类型。",
    "query_toks": [
      "SELECT",
      "f.bank_nm,",
      "f.cast_type,",
      "COUNT(*)",
      "AS",
      "product_count",
      "FROM",
      "financial_products",
      "f",
      "GROUP",
      "BY",
      "f.bank_nm,",
      "f.cast_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "f.bank_nm,",
      "f.cast_type,",
      "COUNT(*)",
      "AS",
      "product_count",
      "FROM",
      "financial_products",
      "f",
      "GROUP",
      "BY",
      "f.bank_nm,",
      "f.cast_type;"
    ],
    "question_toks": [
      "统计每个银行的理财产品数目及其对应的客户类型。"
    ],
    "result_fields": [
      "f.bank_nm",
      "f.cast_type",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT deposit_name, deposit_type_id FROM deposit_type ORDER BY deposit_name;",
    "question": "请列出所有存款类型产品名称及其对应的存款类型产品组号，并按照存款类型产品名称排序。",
    "query_toks": [
      "SELECT",
      "deposit_name,",
      "deposit_type_id",
      "FROM",
      "deposit_type",
      "ORDER",
      "BY",
      "deposit_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "deposit_name,",
      "deposit_type_id",
      "FROM",
      "deposit_type",
      "ORDER",
      "BY",
      "deposit_name;"
    ],
    "question_toks": [
      "请列出所有存款类型产品名称及其对应的存款类型产品组号，并按照存款类型产品名称排序。"
    ],
    "result_fields": [
      "deposit_name",
      "deposit_type_id"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT la.status, la.loan_amount FROM loan_application la;",
    "question": "获取所有客户的贷款申请状态及对应的贷款金额。",
    "query_toks": [
      "SELECT",
      "la.status,",
      "la.loan_amount",
      "FROM",
      "loan_application",
      "la;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "la.status,",
      "la.loan_amount",
      "FROM",
      "loan_application",
      "la;"
    ],
    "question_toks": [
      "获取所有客户的贷款申请状态及对应的贷款金额。"
    ],
    "result_fields": [
      "la.status",
      "la.loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT customer_id FROM loan_credit WHERE credit_score = 0.77;",
    "question": "查找所有信用评分为0.77的客户信息。",
    "query_toks": [
      "SELECT",
      "customer_id",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_score",
      "=",
      "0.77;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_id",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_score",
      "=",
      "0.77;"
    ],
    "question_toks": [
      "查找所有信用评分为0.77的客户信息。"
    ],
    "result_fields": [
      "customer_id"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT lt.description, lr.repayment_amount FROM loan_type lt JOIN loan_application la ON lt.id = la.loan_type_id JOIN loan_repayment lr ON la.id = lr.loan_application_id;",
    "question": "查询每个贷款类型的描述和对应的还款记录。",
    "query_toks": [
      "SELECT",
      "lt.description,",
      "lr.repayment_amount",
      "FROM",
      "loan_type",
      "lt",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lt.id",
      "=",
      "la.loan_type_id",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "la.id",
      "=",
      "lr.loan_application_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lt.description,",
      "lr.repayment_amount",
      "FROM",
      "loan_type",
      "lt",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lt.id",
      "=",
      "la.loan_type_id",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "la.id",
      "=",
      "lr.loan_application_id;"
    ],
    "question_toks": [
      "查询每个贷款类型的描述和对应的还款记录。"
    ],
    "result_fields": [
      "lt.description",
      "lr.repayment_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT rs_type_id, rs_type_name FROM five_level_classification WHERE rs_type_name = '可疑';",
    "question": "查询可疑分类的详细信息，包括分类代码和名称。",
    "query_toks": [
      "SELECT",
      "rs_type_id,",
      "rs_type_name",
      "FROM",
      "five_level_classification",
      "WHERE",
      "rs_type_name",
      "=",
      "'可疑';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rs_type_id,",
      "rs_type_name",
      "FROM",
      "five_level_classification",
      "WHERE",
      "rs_type_name",
      "=",
      "'可疑';"
    ],
    "question_toks": [
      "查询可疑分类的详细信息，包括分类代码和名称。"
    ],
    "result_fields": [
      "rs_type_id",
      "rs_type_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT card_no, closing_date FROM debit_card_information WHERE closing_date > '2024-07-05';",
    "question": "查找2024年7月5日后关闭的借记卡的卡号及关闭日期。",
    "query_toks": [
      "SELECT",
      "card_no,",
      "closing_date",
      "FROM",
      "debit_card_information",
      "WHERE",
      "closing_date",
      ">",
      "'2024-07-05';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "card_no,",
      "closing_date",
      "FROM",
      "debit_card_information",
      "WHERE",
      "closing_date",
      ">",
      "'2024-07-05';"
    ],
    "question_toks": [
      "查找2024年7月5日后关闭的借记卡的卡号及关闭日期。"
    ],
    "result_fields": [
      "card_no",
      "closing_date"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT card_type_nm, card_state FROM debit_card_information WHERE card_type_nm IS NOT NULL;",
    "question": "列出所有借记卡的卡种类和状态，要求卡种类不为空。",
    "query_toks": [
      "SELECT",
      "card_type_nm,",
      "card_state",
      "FROM",
      "debit_card_information",
      "WHERE",
      "card_type_nm",
      "IS",
      "NOT",
      "NULL;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "card_type_nm,",
      "card_state",
      "FROM",
      "debit_card_information",
      "WHERE",
      "card_type_nm",
      "IS",
      "NOT",
      "NULL;"
    ],
    "question_toks": [
      "列出所有借记卡的卡种类和状态，要求卡种类不为空。"
    ],
    "result_fields": [
      "card_type_nm",
      "card_state"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT cust_id, SUM(loan_balance) AS total_loan_balance FROM loan_detail_info WHERE dw_date = '2024-07-19' AND loan_balance > 100000 GROUP BY cust_id;",
    "question": "查询2024年7月19日所有贷款余额大于100000的客户编号及其对应的贷款余额，并统计每个客户的贷款余额总和。",
    "query_toks": [
      "SELECT",
      "cust_id,",
      "SUM(loan_balance)",
      "AS",
      "total_loan_balance",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "dw_date",
      "=",
      "'2024-07-19'",
      "AND",
      "loan_balance",
      ">",
      "100000",
      "GROUP",
      "BY",
      "cust_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "cust_id,",
      "SUM(loan_balance)",
      "AS",
      "total_loan_balance",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "dw_date",
      "=",
      "'2024-07-19'",
      "AND",
      "loan_balance",
      ">",
      "100000",
      "GROUP",
      "BY",
      "cust_id;"
    ],
    "question_toks": [
      "查询2024年7月19日所有贷款余额大于100000的客户编号及其对应的贷款余额，并统计每个客户的贷款余额总和。"
    ],
    "result_fields": [
      "cust_id",
      "SUM(loan_balance)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH customer_balances AS (SELECT d.bank_nm, d.cust_no, SUM(d.current_bal + d.fixed_bal) AS deposit_balance, SUM(CASE WHEN lt.loan_type_name IS NOT NULL THEN d.current_bal + d.fixed_bal ELSE 0 END) AS loan_balance FROM debit_card_information d LEFT JOIN loan_type lt ON d.cust_no = lt.loan_type_code GROUP BY d.bank_nm, d.cust_no) SELECT bank_nm, CORR(deposit_balance, loan_balance) AS correlation_coefficient FROM customer_balances GROUP BY bank_nm",
    "question": "各银行分行中，存款余额和贷款余额的相关系数是多少？",
    "query_toks": [
      "WITH",
      "customer_balances",
      "AS",
      "(SELECT",
      "d.bank_nm,",
      "d.cust_no,",
      "SUM(d.current_bal",
      "+",
      "d.fixed_bal)",
      "AS",
      "deposit_balance,",
      "SUM(CASE",
      "WHEN",
      "lt.loan_type_name",
      "IS",
      "NOT",
      "NULL",
      "THEN",
      "d.current_bal",
      "+",
      "d.fixed_bal",
      "ELSE",
      "0",
      "END)",
      "AS",
      "loan_balance",
      "FROM",
      "debit_card_information",
      "d",
      "LEFT",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "d.cust_no",
      "=",
      "lt.loan_type_code",
      "GROUP",
      "BY",
      "d.bank_nm,",
      "d.cust_no)",
      "SELECT",
      "bank_nm,",
      "CORR(deposit_balance,",
      "loan_balance)",
      "AS",
      "correlation_coefficient",
      "FROM",
      "customer_balances",
      "GROUP",
      "BY",
      "bank_nm"
    ],
    "query_toks_no_value": [
      "WITH",
      "customer_balances",
      "AS",
      "(SELECT",
      "d.bank_nm,",
      "d.cust_no,",
      "SUM(d.current_bal",
      "+",
      "d.fixed_bal)",
      "AS",
      "deposit_balance,",
      "SUM(CASE",
      "WHEN",
      "lt.loan_type_name",
      "IS",
      "NOT",
      "NULL",
      "THEN",
      "d.current_bal",
      "+",
      "d.fixed_bal",
      "ELSE",
      "0",
      "END)",
      "AS",
      "loan_balance",
      "FROM",
      "debit_card_information",
      "d",
      "LEFT",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "d.cust_no",
      "=",
      "lt.loan_type_code",
      "GROUP",
      "BY",
      "d.bank_nm,",
      "d.cust_no)",
      "SELECT",
      "bank_nm,",
      "CORR(deposit_balance,",
      "loan_balance)",
      "AS",
      "correlation_coefficient",
      "FROM",
      "customer_balances",
      "GROUP",
      "BY",
      "bank_nm"
    ],
    "question_toks": [
      "各银行分行中，存款余额和贷款余额的相关系数是多少？"
    ],
    "result_fields": [
      "d.bank_nm",
      "d.cust_no",
      "SUM(d.current_bal + d.fixed_bal)",
      "SUM(CASE WHEN lt.loan_type_name IS NOT NULL THEN d.current_bal + d.fixed_bal ELSE 0 END)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT DATE_TRUNC('month', t.transfer_date) AS month, SUM(t.transfer_amount) AS total_transfer, SUM(l.loan_amount) AS total_loan FROM transfer t FULL OUTER JOIN loan_detail_info l ON DATE_TRUNC('month', t.transfer_date) = DATE_TRUNC('month', l.loandate_s) GROUP BY month ORDER BY month;",
    "question": "统计每个月的转账总额和贷款发放总额",
    "query_toks": [
      "SELECT",
      "DATE_TRUNC('month',",
      "t.transfer_date)",
      "AS",
      "month,",
      "SUM(t.transfer_amount)",
      "AS",
      "total_transfer,",
      "SUM(l.loan_amount)",
      "AS",
      "total_loan",
      "FROM",
      "transfer",
      "t",
      "FULL",
      "OUTER",
      "JOIN",
      "loan_detail_info",
      "l",
      "ON",
      "DATE_TRUNC('month',",
      "t.transfer_date)",
      "=",
      "DATE_TRUNC('month',",
      "l.loandate_s)",
      "GROUP",
      "BY",
      "month",
      "ORDER",
      "BY",
      "month;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DATE_TRUNC('month',",
      "t.transfer_date)",
      "AS",
      "month,",
      "SUM(t.transfer_amount)",
      "AS",
      "total_transfer,",
      "SUM(l.loan_amount)",
      "AS",
      "total_loan",
      "FROM",
      "transfer",
      "t",
      "FULL",
      "OUTER",
      "JOIN",
      "loan_detail_info",
      "l",
      "ON",
      "DATE_TRUNC('month',",
      "t.transfer_date)",
      "=",
      "DATE_TRUNC('month',",
      "l.loandate_s)",
      "GROUP",
      "BY",
      "month",
      "ORDER",
      "BY",
      "month;"
    ],
    "question_toks": [
      "统计每个月的转账总额和贷款发放总额"
    ],
    "result_fields": [
      "DATE_TRUNC('month', t.transfer_date)",
      "SUM(t.transfer_amount)",
      "SUM(l.loan_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT customer_name, phone_number FROM customer WHERE province = '上海市';",
    "question": "查询所有上海市的客户的姓名和手机号",
    "query_toks": [
      "SELECT",
      "customer_name,",
      "phone_number",
      "FROM",
      "customer",
      "WHERE",
      "province",
      "=",
      "'上海市';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_name,",
      "phone_number",
      "FROM",
      "customer",
      "WHERE",
      "province",
      "=",
      "'上海市';"
    ],
    "question_toks": [
      "查询所有上海市的客户的姓名和手机号"
    ],
    "result_fields": [
      "customer_name",
      "phone_number"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT credit_score, credit_date FROM loan_credit WHERE customer_id = 533302;",
    "question": "查询客户ID为533302的信用评分及对应的信用日期。",
    "query_toks": [
      "SELECT",
      "credit_score,",
      "credit_date",
      "FROM",
      "loan_credit",
      "WHERE",
      "customer_id",
      "=",
      "533302;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "credit_score,",
      "credit_date",
      "FROM",
      "loan_credit",
      "WHERE",
      "customer_id",
      "=",
      "533302;"
    ],
    "question_toks": [
      "查询客户ID为533302的信用评分及对应的信用日期。"
    ],
    "result_fields": [
      "credit_score",
      "credit_date"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM transfer ORDER BY transfer_amount DESC;",
    "question": "查询所有转账记录，并按转账金额降序排列。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "transfer",
      "ORDER",
      "BY",
      "transfer_amount",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "transfer",
      "ORDER",
      "BY",
      "transfer_amount",
      "DESC;"
    ],
    "question_toks": [
      "查询所有转账记录，并按转账金额降序排列。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT customer_id, COUNT(DISTINCT behavior_type) AS unique_behavior_types FROM user_behavior GROUP BY customer_id;",
    "question": "统计每个用户的不同行为类型数量",
    "query_toks": [
      "SELECT",
      "customer_id,",
      "COUNT(DISTINCT",
      "behavior_type)",
      "AS",
      "unique_behavior_types",
      "FROM",
      "user_behavior",
      "GROUP",
      "BY",
      "customer_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_id,",
      "COUNT(DISTINCT",
      "behavior_type)",
      "AS",
      "unique_behavior_types",
      "FROM",
      "user_behavior",
      "GROUP",
      "BY",
      "customer_id;"
    ],
    "question_toks": [
      "统计每个用户的不同行为类型数量"
    ],
    "result_fields": [
      "customer_id",
      "COUNT(DISTINCT behavior_type)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT COUNT(DISTINCT da.cust_no) FROM deposit_account_info da JOIN credit_card_data cc ON da.cust_no = cc.custr_nbr WHERE da.bank_nm = '沈阳分行' AND da.data_dt = '2024-07-22' AND da.acct_bal > 100000 AND (cc.age1 > 5000 OR cc.age2 > 5000 OR cc.age3 > 5000 OR cc.age4 > 5000 OR cc.age5 > 5000 OR cc.age6 > 5000)",
    "question": "在2024年7月22日，沈阳分行的客户中，有多少客户的存款账户余额超过100000元且信用卡逾期金额超过5000元？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "da.cust_no)",
      "FROM",
      "deposit_account_info",
      "da",
      "JOIN",
      "credit_card_data",
      "cc",
      "ON",
      "da.cust_no",
      "=",
      "cc.custr_nbr",
      "WHERE",
      "da.bank_nm",
      "=",
      "'沈阳分行'",
      "AND",
      "da.data_dt",
      "=",
      "'2024-07-22'",
      "AND",
      "da.acct_bal",
      ">",
      "100000",
      "AND",
      "(cc.age1",
      ">",
      "5000",
      "OR",
      "cc.age2",
      ">",
      "5000",
      "OR",
      "cc.age3",
      ">",
      "5000",
      "OR",
      "cc.age4",
      ">",
      "5000",
      "OR",
      "cc.age5",
      ">",
      "5000",
      "OR",
      "cc.age6",
      ">",
      "5000)"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "da.cust_no)",
      "FROM",
      "deposit_account_info",
      "da",
      "JOIN",
      "credit_card_data",
      "cc",
      "ON",
      "da.cust_no",
      "=",
      "cc.custr_nbr",
      "WHERE",
      "da.bank_nm",
      "=",
      "'沈阳分行'",
      "AND",
      "da.data_dt",
      "=",
      "'2024-07-22'",
      "AND",
      "da.acct_bal",
      ">",
      "100000",
      "AND",
      "(cc.age1",
      ">",
      "5000",
      "OR",
      "cc.age2",
      ">",
      "5000",
      "OR",
      "cc.age3",
      ">",
      "5000",
      "OR",
      "cc.age4",
      ">",
      "5000",
      "OR",
      "cc.age5",
      ">",
      "5000",
      "OR",
      "cc.age6",
      ">",
      "5000)"
    ],
    "question_toks": [
      "在2024年7月22日，沈阳分行的客户中，有多少客户的存款账户余额超过100000元且信用卡逾期金额超过5000元？"
    ],
    "result_fields": [
      "COUNT(DISTINCT da.cust_no)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT card_no, cust_nm FROM debit_card_information WHERE bank_nm = '北京分行';",
    "question": "查找在北京分行开户的所有借记卡的卡号及客户名称。",
    "query_toks": [
      "SELECT",
      "card_no,",
      "cust_nm",
      "FROM",
      "debit_card_information",
      "WHERE",
      "bank_nm",
      "=",
      "'北京分行';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "card_no,",
      "cust_nm",
      "FROM",
      "debit_card_information",
      "WHERE",
      "bank_nm",
      "=",
      "'北京分行';"
    ],
    "question_toks": [
      "查找在北京分行开户的所有借记卡的卡号及客户名称。"
    ],
    "result_fields": [
      "card_no",
      "cust_nm"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH monthly_applications AS (SELECT customer_id, DATE_TRUNC('month', apply_date) as apply_month FROM loan_application), consecutive_months AS (SELECT customer_id, apply_month, LEAD(apply_month, 2) OVER (PARTITION BY customer_id ORDER BY apply_month) as next_two_month FROM monthly_applications) SELECT COUNT(DISTINCT customer_id) as customer_count FROM consecutive_months WHERE next_two_month = apply_month + INTERVAL '2 months'",
    "question": "查询连续三个月或更长时间有贷款申请的客户数量。",
    "query_toks": [
      "WITH",
      "monthly_applications",
      "AS",
      "(SELECT",
      "customer_id,",
      "DATE_TRUNC('month',",
      "apply_date)",
      "as",
      "apply_month",
      "FROM",
      "loan_application),",
      "consecutive_months",
      "AS",
      "(SELECT",
      "customer_id,",
      "apply_month,",
      "LEAD(apply_month,",
      "2)",
      "OVER",
      "(PARTITION",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "apply_month)",
      "as",
      "next_two_month",
      "FROM",
      "monthly_applications)",
      "SELECT",
      "COUNT(DISTINCT",
      "customer_id)",
      "as",
      "customer_count",
      "FROM",
      "consecutive_months",
      "WHERE",
      "next_two_month",
      "=",
      "apply_month",
      "+",
      "INTERVAL",
      "'2",
      "months'"
    ],
    "query_toks_no_value": [
      "WITH",
      "monthly_applications",
      "AS",
      "(SELECT",
      "customer_id,",
      "DATE_TRUNC('month',",
      "apply_date)",
      "as",
      "apply_month",
      "FROM",
      "loan_application),",
      "consecutive_months",
      "AS",
      "(SELECT",
      "customer_id,",
      "apply_month,",
      "LEAD(apply_month,",
      "2)",
      "OVER",
      "(PARTITION",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "apply_month)",
      "as",
      "next_two_month",
      "FROM",
      "monthly_applications)",
      "SELECT",
      "COUNT(DISTINCT",
      "customer_id)",
      "as",
      "customer_count",
      "FROM",
      "consecutive_months",
      "WHERE",
      "next_two_month",
      "=",
      "apply_month",
      "+",
      "INTERVAL",
      "'2",
      "months'"
    ],
    "question_toks": [
      "查询连续三个月或更长时间有贷款申请的客户数量。"
    ],
    "result_fields": [
      "customer_id",
      "DATE_TRUNC('month', apply_date)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT f.cust_no, f.bank_nm FROM financial_products f ORDER BY f.cust_no;",
    "question": "找出所有理财产品的客户号及其对应的银行名称，按客户号排序。",
    "query_toks": [
      "SELECT",
      "f.cust_no,",
      "f.bank_nm",
      "FROM",
      "financial_products",
      "f",
      "ORDER",
      "BY",
      "f.cust_no;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "f.cust_no,",
      "f.bank_nm",
      "FROM",
      "financial_products",
      "f",
      "ORDER",
      "BY",
      "f.cust_no;"
    ],
    "question_toks": [
      "找出所有理财产品的客户号及其对应的银行名称，按客户号排序。"
    ],
    "result_fields": [
      "f.cust_no",
      "f.bank_nm"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT occupation_code, occupation_name FROM occupation ORDER BY occupation_name;",
    "question": "获取所有职业代码及其名称，按名称排序。",
    "query_toks": [
      "SELECT",
      "occupation_code,",
      "occupation_name",
      "FROM",
      "occupation",
      "ORDER",
      "BY",
      "occupation_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "occupation_code,",
      "occupation_name",
      "FROM",
      "occupation",
      "ORDER",
      "BY",
      "occupation_name;"
    ],
    "question_toks": [
      "获取所有职业代码及其名称，按名称排序。"
    ],
    "result_fields": [
      "occupation_code",
      "occupation_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT COUNT(*) FROM financial_products fp JOIN debit_card_information dci ON fp.cust_no = dci.cust_no WHERE fp.wealth_bal > 10 * (dci.current_bal + dci.fixed_bal)",
    "question": "找出理财产品余额超过借记卡余额10倍的客户数量",
    "query_toks": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "financial_products",
      "fp",
      "JOIN",
      "debit_card_information",
      "dci",
      "ON",
      "fp.cust_no",
      "=",
      "dci.cust_no",
      "WHERE",
      "fp.wealth_bal",
      ">",
      "10",
      "*",
      "(dci.current_bal",
      "+",
      "dci.fixed_bal)"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "financial_products",
      "fp",
      "JOIN",
      "debit_card_information",
      "dci",
      "ON",
      "fp.cust_no",
      "=",
      "dci.cust_no",
      "WHERE",
      "fp.wealth_bal",
      ">",
      "10",
      "*",
      "(dci.current_bal",
      "+",
      "dci.fixed_bal)"
    ],
    "question_toks": [
      "找出理财产品余额超过借记卡余额10倍的客户数量"
    ],
    "result_fields": [
      "COUNT(*)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ld.loan_orgno, ld.loan_balance FROM loan_detail_info ld WHERE ld.loan_amount > 70000;",
    "question": "获取所有贷款金额超过70000的贷款明细，显示贷款机构号和贷款余额。",
    "query_toks": [
      "SELECT",
      "ld.loan_orgno,",
      "ld.loan_balance",
      "FROM",
      "loan_detail_info",
      "ld",
      "WHERE",
      "ld.loan_amount",
      ">",
      "70000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ld.loan_orgno,",
      "ld.loan_balance",
      "FROM",
      "loan_detail_info",
      "ld",
      "WHERE",
      "ld.loan_amount",
      ">",
      "70000;"
    ],
    "question_toks": [
      "获取所有贷款金额超过70000的贷款明细，显示贷款机构号和贷款余额。"
    ],
    "result_fields": [
      "ld.loan_orgno",
      "ld.loan_balance"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT lt.loan_type_name, ub.behavior_type FROM loan_type lt LEFT JOIN loan_repayment lr ON lt.id = lr.loan_application_id LEFT JOIN user_behavior ub ON lr.loan_application_id = ub.customer_id;",
    "question": "查询所有贷款类型及其相关的用户行为。",
    "query_toks": [
      "SELECT",
      "lt.loan_type_name,",
      "ub.behavior_type",
      "FROM",
      "loan_type",
      "lt",
      "LEFT",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "lt.id",
      "=",
      "lr.loan_application_id",
      "LEFT",
      "JOIN",
      "user_behavior",
      "ub",
      "ON",
      "lr.loan_application_id",
      "=",
      "ub.customer_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lt.loan_type_name,",
      "ub.behavior_type",
      "FROM",
      "loan_type",
      "lt",
      "LEFT",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "lt.id",
      "=",
      "lr.loan_application_id",
      "LEFT",
      "JOIN",
      "user_behavior",
      "ub",
      "ON",
      "lr.loan_application_id",
      "=",
      "ub.customer_id;"
    ],
    "question_toks": [
      "查询所有贷款类型及其相关的用户行为。"
    ],
    "result_fields": [
      "lt.loan_type_name",
      "ub.behavior_type"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT bank_level, COUNT(*) AS institution_count FROM bank_orgnization GROUP BY bank_level;",
    "question": "统计每个层级的银行机构数量。",
    "query_toks": [
      "SELECT",
      "bank_level,",
      "COUNT(*)",
      "AS",
      "institution_count",
      "FROM",
      "bank_orgnization",
      "GROUP",
      "BY",
      "bank_level;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "bank_level,",
      "COUNT(*)",
      "AS",
      "institution_count",
      "FROM",
      "bank_orgnization",
      "GROUP",
      "BY",
      "bank_level;"
    ],
    "question_toks": [
      "统计每个层级的银行机构数量。"
    ],
    "result_fields": [
      "bank_level",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT current_bal, fixed_bal FROM debit_card_information WHERE data_dt = '2024-07-15' AND bank_nm = '北京东单支行' AND cust_nm = 'Olivia Lee';",
    "question": "在2024年7月15日，北京东单支行的客户Olivia Lee持有的借记卡的卡内活期余额和卡内定期余额分别是多少？",
    "query_toks": [
      "SELECT",
      "current_bal,",
      "fixed_bal",
      "FROM",
      "debit_card_information",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-15'",
      "AND",
      "bank_nm",
      "=",
      "'北京东单支行'",
      "AND",
      "cust_nm",
      "=",
      "'Olivia",
      "Lee';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "current_bal,",
      "fixed_bal",
      "FROM",
      "debit_card_information",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-15'",
      "AND",
      "bank_nm",
      "=",
      "'北京东单支行'",
      "AND",
      "cust_nm",
      "=",
      "'Olivia",
      "Lee';"
    ],
    "question_toks": [
      "在2024年7月15日，北京东单支行的客户Olivia",
      "Lee持有的借记卡的卡内活期余额和卡内定期余额分别是多少？"
    ],
    "result_fields": [
      "current_bal",
      "fixed_bal"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, lc.description FROM loan_credit lc JOIN customer c ON lc.customer_id = c.id WHERE lc.credit_date = '2017-10-31' AND lc.credit_score > 0.85 ORDER BY lc.credit_score DESC;",
    "question": "查询2017年10月31日信用分大于0.85的客户的姓名和信用描述，并按信用分降序排列。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "lc.description",
      "FROM",
      "loan_credit",
      "lc",
      "JOIN",
      "customer",
      "c",
      "ON",
      "lc.customer_id",
      "=",
      "c.id",
      "WHERE",
      "lc.credit_date",
      "=",
      "'2017-10-31'",
      "AND",
      "lc.credit_score",
      ">",
      "0.85",
      "ORDER",
      "BY",
      "lc.credit_score",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "lc.description",
      "FROM",
      "loan_credit",
      "lc",
      "JOIN",
      "customer",
      "c",
      "ON",
      "lc.customer_id",
      "=",
      "c.id",
      "WHERE",
      "lc.credit_date",
      "=",
      "'2017-10-31'",
      "AND",
      "lc.credit_score",
      ">",
      "0.85",
      "ORDER",
      "BY",
      "lc.credit_score",
      "DESC;"
    ],
    "question_toks": [
      "查询2017年10月31日信用分大于0.85的客户的姓名和信用描述，并按信用分降序排列。"
    ],
    "result_fields": [
      "c.customer_name",
      "lc.description"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT la.loan_amount FROM loan_application la WHERE la.loan_type_id = (SELECT id FROM loan_type WHERE loan_type_code = 'CAR');",
    "question": "获取所有申请了汽车贷款的客户的贷款金额。",
    "query_toks": [
      "SELECT",
      "la.loan_amount",
      "FROM",
      "loan_application",
      "la",
      "WHERE",
      "la.loan_type_id",
      "=",
      "(SELECT",
      "id",
      "FROM",
      "loan_type",
      "WHERE",
      "loan_type_code",
      "=",
      "'CAR');"
    ],
    "query_toks_no_value": [
      "SELECT",
      "la.loan_amount",
      "FROM",
      "loan_application",
      "la",
      "WHERE",
      "la.loan_type_id",
      "=",
      "(SELECT",
      "id",
      "FROM",
      "loan_type",
      "WHERE",
      "loan_type_code",
      "=",
      "'CAR');"
    ],
    "question_toks": [
      "获取所有申请了汽车贷款的客户的贷款金额。"
    ],
    "result_fields": [
      "la.loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT lt.loan_type_name, AVG(lr.repayment_amount) as avg_repayment_amount, COUNT(lr.id) as repayment_count FROM loan_repayment lr JOIN loan_application la ON lr.loan_application_id = la.id JOIN loan_type lt ON la.loan_type_id = lt.id GROUP BY lt.loan_type_name",
    "question": "计算每种贷款类型的平均还款金额和还款次数。",
    "query_toks": [
      "SELECT",
      "lt.loan_type_name,",
      "AVG(lr.repayment_amount)",
      "as",
      "avg_repayment_amount,",
      "COUNT(lr.id)",
      "as",
      "repayment_count",
      "FROM",
      "loan_repayment",
      "lr",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lr.loan_application_id",
      "=",
      "la.id",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "GROUP",
      "BY",
      "lt.loan_type_name"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lt.loan_type_name,",
      "AVG(lr.repayment_amount)",
      "as",
      "avg_repayment_amount,",
      "COUNT(lr.id)",
      "as",
      "repayment_count",
      "FROM",
      "loan_repayment",
      "lr",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lr.loan_application_id",
      "=",
      "la.id",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "GROUP",
      "BY",
      "lt.loan_type_name"
    ],
    "question_toks": [
      "计算每种贷款类型的平均还款金额和还款次数。"
    ],
    "result_fields": [
      "lt.loan_type_name",
      "AVG(lr.repayment_amount)",
      "COUNT(lr.id)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT acc_name1, bank, category, day_opened FROM credit_card_data WHERE corporation = 'Corp3' ORDER BY day_opened DESC;",
    "question": "查询信用卡数据表中法人主体为'Corp3'的账户名称、银行、账户类别和开户日期，并按开户日期降序排列。",
    "query_toks": [
      "SELECT",
      "acc_name1,",
      "bank,",
      "category,",
      "day_opened",
      "FROM",
      "credit_card_data",
      "WHERE",
      "corporation",
      "=",
      "'Corp3'",
      "ORDER",
      "BY",
      "day_opened",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "acc_name1,",
      "bank,",
      "category,",
      "day_opened",
      "FROM",
      "credit_card_data",
      "WHERE",
      "corporation",
      "=",
      "'Corp3'",
      "ORDER",
      "BY",
      "day_opened",
      "DESC;"
    ],
    "question_toks": [
      "查询信用卡数据表中法人主体为'Corp3'的账户名称、银行、账户类别和开户日期，并按开户日期降序排列。"
    ],
    "result_fields": [
      "acc_name1",
      "bank",
      "category",
      "day_opened"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT customer_name, address FROM customer;",
    "question": "查询所有客户的姓名及其住址。",
    "query_toks": [
      "SELECT",
      "customer_name,",
      "address",
      "FROM",
      "customer;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_name,",
      "address",
      "FROM",
      "customer;"
    ],
    "question_toks": [
      "查询所有客户的姓名及其住址。"
    ],
    "result_fields": [
      "customer_name",
      "address"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH loan_sum AS (SELECT loan_orgno, SUM(loan_amount) as total_loan FROM loan_detail_info WHERE EXTRACT(YEAR FROM loandate_s) = 2023 GROUP BY loan_orgno), debit_sum AS (SELECT bank_no, SUM(current_bal) as total_debit FROM debit_card_information WHERE EXTRACT(YEAR FROM data_dt) = 2023 GROUP BY bank_no) SELECT bo.bank_name, ls.total_loan, ds.total_debit, ls.total_loan / NULLIF(ds.total_debit, 0) as loan_debit_ratio FROM bank_orgnization bo LEFT JOIN loan_sum ls ON bo.bank_id = ls.loan_orgno LEFT JOIN debit_sum ds ON bo.bank_id = ds.bank_no ORDER BY loan_debit_ratio DESC",
    "question": "2023年，各银行机构的贷款总额与其客户的借记卡总余额之比是多少？",
    "query_toks": [
      "WITH",
      "loan_sum",
      "AS",
      "(SELECT",
      "loan_orgno,",
      "SUM(loan_amount)",
      "as",
      "total_loan",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "loandate_s)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "loan_orgno),",
      "debit_sum",
      "AS",
      "(SELECT",
      "bank_no,",
      "SUM(current_bal)",
      "as",
      "total_debit",
      "FROM",
      "debit_card_information",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "data_dt)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "bank_no)",
      "SELECT",
      "bo.bank_name,",
      "ls.total_loan,",
      "ds.total_debit,",
      "ls.total_loan",
      "/",
      "NULLIF(ds.total_debit,",
      "0)",
      "as",
      "loan_debit_ratio",
      "FROM",
      "bank_orgnization",
      "bo",
      "LEFT",
      "JOIN",
      "loan_sum",
      "ls",
      "ON",
      "bo.bank_id",
      "=",
      "ls.loan_orgno",
      "LEFT",
      "JOIN",
      "debit_sum",
      "ds",
      "ON",
      "bo.bank_id",
      "=",
      "ds.bank_no",
      "ORDER",
      "BY",
      "loan_debit_ratio",
      "DESC"
    ],
    "query_toks_no_value": [
      "WITH",
      "loan_sum",
      "AS",
      "(SELECT",
      "loan_orgno,",
      "SUM(loan_amount)",
      "as",
      "total_loan",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "loandate_s)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "loan_orgno),",
      "debit_sum",
      "AS",
      "(SELECT",
      "bank_no,",
      "SUM(current_bal)",
      "as",
      "total_debit",
      "FROM",
      "debit_card_information",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "data_dt)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "bank_no)",
      "SELECT",
      "bo.bank_name,",
      "ls.total_loan,",
      "ds.total_debit,",
      "ls.total_loan",
      "/",
      "NULLIF(ds.total_debit,",
      "0)",
      "as",
      "loan_debit_ratio",
      "FROM",
      "bank_orgnization",
      "bo",
      "LEFT",
      "JOIN",
      "loan_sum",
      "ls",
      "ON",
      "bo.bank_id",
      "=",
      "ls.loan_orgno",
      "LEFT",
      "JOIN",
      "debit_sum",
      "ds",
      "ON",
      "bo.bank_id",
      "=",
      "ds.bank_no",
      "ORDER",
      "BY",
      "loan_debit_ratio",
      "DESC"
    ],
    "question_toks": [
      "2023年，各银行机构的贷款总额与其客户的借记卡总余额之比是多少？"
    ],
    "result_fields": [
      "loan_orgno",
      "SUM(loan_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM loan_repayment WHERE repayment_amount = (SELECT repayment_amount FROM loan_repayment ORDER BY ABS(repayment_amount - (SELECT AVG(repayment_amount) FROM loan_repayment)) LIMIT 1);",
    "question": "找出还款金额最接近平均值的记录",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "loan_repayment",
      "WHERE",
      "repayment_amount",
      "=",
      "(SELECT",
      "repayment_amount",
      "FROM",
      "loan_repayment",
      "ORDER",
      "BY",
      "ABS(repayment_amount",
      "-",
      "(SELECT",
      "AVG(repayment_amount)",
      "FROM",
      "loan_repayment))",
      "LIMIT",
      "1);"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "loan_repayment",
      "WHERE",
      "repayment_amount",
      "=",
      "(SELECT",
      "repayment_amount",
      "FROM",
      "loan_repayment",
      "ORDER",
      "BY",
      "ABS(repayment_amount",
      "-",
      "(SELECT",
      "AVG(repayment_amount)",
      "FROM",
      "loan_repayment))",
      "LIMIT",
      "1);"
    ],
    "question_toks": [
      "找出还款金额最接近平均值的记录"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT DISTINCT l.customer_id FROM loan_credit l JOIN financial_products f ON l.credit_date = f.data_dt WHERE l.credit_score > 0.8 AND f.data_dt >= '2024-07-01' AND f.data_dt < '2024-08-01';",
    "question": "在2024年7月，哪些客户的信用评分高于0.8，并且在该月内进行了至少一次理财产品的购买？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "l.customer_id",
      "FROM",
      "loan_credit",
      "l",
      "JOIN",
      "financial_products",
      "f",
      "ON",
      "l.credit_date",
      "=",
      "f.data_dt",
      "WHERE",
      "l.credit_score",
      ">",
      "0.8",
      "AND",
      "f.data_dt",
      ">=",
      "'2024-07-01'",
      "AND",
      "f.data_dt",
      "<",
      "'2024-08-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "l.customer_id",
      "FROM",
      "loan_credit",
      "l",
      "JOIN",
      "financial_products",
      "f",
      "ON",
      "l.credit_date",
      "=",
      "f.data_dt",
      "WHERE",
      "l.credit_score",
      ">",
      "0.8",
      "AND",
      "f.data_dt",
      ">=",
      "'2024-07-01'",
      "AND",
      "f.data_dt",
      "<",
      "'2024-08-01';"
    ],
    "question_toks": [
      "在2024年7月，哪些客户的信用评分高于0.8，并且在该月内进行了至少一次理财产品的购买？"
    ],
    "result_fields": [
      "DISTINCT l.customer_id"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT EXTRACT(YEAR FROM apply_date) as year, EXTRACT(MONTH FROM apply_date) as month, COUNT(CASE WHEN status = 'APPROVED' THEN 1 END) / COUNT(*) as approval_rate FROM loan_application GROUP BY year, month ORDER BY year, month",
    "question": "计算每个月的贷款申请通过率（状态为'APPROVED'的申请数除以总申请数）。",
    "query_toks": [
      "SELECT",
      "EXTRACT(YEAR",
      "FROM",
      "apply_date)",
      "as",
      "year,",
      "EXTRACT(MONTH",
      "FROM",
      "apply_date)",
      "as",
      "month,",
      "COUNT(CASE",
      "WHEN",
      "status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "approval_rate",
      "FROM",
      "loan_application",
      "GROUP",
      "BY",
      "year,",
      "month",
      "ORDER",
      "BY",
      "year,",
      "month"
    ],
    "query_toks_no_value": [
      "SELECT",
      "EXTRACT(YEAR",
      "FROM",
      "apply_date)",
      "as",
      "year,",
      "EXTRACT(MONTH",
      "FROM",
      "apply_date)",
      "as",
      "month,",
      "COUNT(CASE",
      "WHEN",
      "status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "approval_rate",
      "FROM",
      "loan_application",
      "GROUP",
      "BY",
      "year,",
      "month",
      "ORDER",
      "BY",
      "year,",
      "month"
    ],
    "question_toks": [
      "计算每个月的贷款申请通过率（状态为'APPROVED'的申请数除以总申请数）。"
    ],
    "result_fields": [
      "EXTRACT(YEAR"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH new_customers AS (SELECT DISTINCT ON (cust_id) cust_id, loan_orgno, loan_amount FROM loan_detail_info WHERE loandate_s BETWEEN '2024-01-01' AND '2024-03-31' AND cust_id NOT IN (SELECT cust_id FROM loan_detail_info WHERE loandate_s < '2024-01-01')) SELECT bo.bank_name, COUNT(nc.cust_id) as new_customer_count, AVG(nc.loan_amount) as avg_loan_amount FROM bank_orgnization bo LEFT JOIN new_customers nc ON bo.bank_id = nc.loan_orgno GROUP BY bo.bank_name ORDER BY new_customer_count DESC",
    "question": "2024年第一季度，各银行机构的新增客户数量和这些新客户的平均贷款金额是多少？",
    "query_toks": [
      "WITH",
      "new_customers",
      "AS",
      "(SELECT",
      "DISTINCT",
      "ON",
      "(cust_id)",
      "cust_id,",
      "loan_orgno,",
      "loan_amount",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "loandate_s",
      "BETWEEN",
      "'2024-01-01'",
      "AND",
      "'2024-03-31'",
      "AND",
      "cust_id",
      "NOT",
      "IN",
      "(SELECT",
      "cust_id",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "loandate_s",
      "<",
      "'2024-01-01'))",
      "SELECT",
      "bo.bank_name,",
      "COUNT(nc.cust_id)",
      "as",
      "new_customer_count,",
      "AVG(nc.loan_amount)",
      "as",
      "avg_loan_amount",
      "FROM",
      "bank_orgnization",
      "bo",
      "LEFT",
      "JOIN",
      "new_customers",
      "nc",
      "ON",
      "bo.bank_id",
      "=",
      "nc.loan_orgno",
      "GROUP",
      "BY",
      "bo.bank_name",
      "ORDER",
      "BY",
      "new_customer_count",
      "DESC"
    ],
    "query_toks_no_value": [
      "WITH",
      "new_customers",
      "AS",
      "(SELECT",
      "DISTINCT",
      "ON",
      "(cust_id)",
      "cust_id,",
      "loan_orgno,",
      "loan_amount",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "loandate_s",
      "BETWEEN",
      "'2024-01-01'",
      "AND",
      "'2024-03-31'",
      "AND",
      "cust_id",
      "NOT",
      "IN",
      "(SELECT",
      "cust_id",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "loandate_s",
      "<",
      "'2024-01-01'))",
      "SELECT",
      "bo.bank_name,",
      "COUNT(nc.cust_id)",
      "as",
      "new_customer_count,",
      "AVG(nc.loan_amount)",
      "as",
      "avg_loan_amount",
      "FROM",
      "bank_orgnization",
      "bo",
      "LEFT",
      "JOIN",
      "new_customers",
      "nc",
      "ON",
      "bo.bank_id",
      "=",
      "nc.loan_orgno",
      "GROUP",
      "BY",
      "bo.bank_name",
      "ORDER",
      "BY",
      "new_customer_count",
      "DESC"
    ],
    "question_toks": [
      "2024年第一季度，各银行机构的新增客户数量和这些新客户的平均贷款金额是多少？"
    ],
    "result_fields": [
      "DISTINCT ON (cust_id) cust_id",
      "loan_orgno",
      "loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT dai.bank_nm, AVG(la.loan_term) as avg_loan_term, AVG(la.loan_amount) as avg_loan_amount FROM loan_application la JOIN deposit_account_info dai ON la.customer_id = dai.cust_noeger GROUP BY dai.bank_nm",
    "question": "计算每个管辖行的平均贷款期限和平均贷款金额。",
    "query_toks": [
      "SELECT",
      "dai.bank_nm,",
      "AVG(la.loan_term)",
      "as",
      "avg_loan_term,",
      "AVG(la.loan_amount)",
      "as",
      "avg_loan_amount",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "la.customer_id",
      "=",
      "dai.cust_noeger",
      "GROUP",
      "BY",
      "dai.bank_nm"
    ],
    "query_toks_no_value": [
      "SELECT",
      "dai.bank_nm,",
      "AVG(la.loan_term)",
      "as",
      "avg_loan_term,",
      "AVG(la.loan_amount)",
      "as",
      "avg_loan_amount",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "la.customer_id",
      "=",
      "dai.cust_noeger",
      "GROUP",
      "BY",
      "dai.bank_nm"
    ],
    "question_toks": [
      "计算每个管辖行的平均贷款期限和平均贷款金额。"
    ],
    "result_fields": [
      "dai.bank_nm",
      "AVG(la.loan_term)",
      "AVG(la.loan_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT customer_id, credit_score, credit_date FROM loan_credit;",
    "question": "获取所有客户的信用评分及信用日期。",
    "query_toks": [
      "SELECT",
      "customer_id,",
      "credit_score,",
      "credit_date",
      "FROM",
      "loan_credit;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_id,",
      "credit_score,",
      "credit_date",
      "FROM",
      "loan_credit;"
    ],
    "question_toks": [
      "获取所有客户的信用评分及信用日期。"
    ],
    "result_fields": [
      "customer_id",
      "credit_score",
      "credit_date"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT l.cust_id, l.loan_balance FROM loan_detail_info l WHERE l.loandate_e < '2026-01-01';",
    "question": "查询所有贷款到期日期在2026年之前的用户及其贷款余额。",
    "query_toks": [
      "SELECT",
      "l.cust_id,",
      "l.loan_balance",
      "FROM",
      "loan_detail_info",
      "l",
      "WHERE",
      "l.loandate_e",
      "<",
      "'2026-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "l.cust_id,",
      "l.loan_balance",
      "FROM",
      "loan_detail_info",
      "l",
      "WHERE",
      "l.loandate_e",
      "<",
      "'2026-01-01';"
    ],
    "question_toks": [
      "查询所有贷款到期日期在2026年之前的用户及其贷款余额。"
    ],
    "result_fields": [
      "l.cust_id",
      "l.loan_balance"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT apply_date, loan_amount FROM loan_application;",
    "question": "获取所有贷款申请及对应的申请日期。",
    "query_toks": [
      "SELECT",
      "apply_date,",
      "loan_amount",
      "FROM",
      "loan_application;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "apply_date,",
      "loan_amount",
      "FROM",
      "loan_application;"
    ],
    "question_toks": [
      "获取所有贷款申请及对应的申请日期。"
    ],
    "result_fields": [
      "apply_date",
      "loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT la.customer_id, la.loan_amount FROM loan_application la JOIN loan_type lt ON la.loan_type_id = lt.id WHERE lt.loan_type_name = '住房贷款' AND la.status = 'APPROVED' ORDER BY la.loan_amount DESC;",
    "question": "查询所有申请了住房贷款且状态为'APPROVED'的客户ID及其贷款金额，并按贷款金额降序排列。",
    "query_toks": [
      "SELECT",
      "la.customer_id,",
      "la.loan_amount",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "WHERE",
      "lt.loan_type_name",
      "=",
      "'住房贷款'",
      "AND",
      "la.status",
      "=",
      "'APPROVED'",
      "ORDER",
      "BY",
      "la.loan_amount",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "la.customer_id,",
      "la.loan_amount",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "WHERE",
      "lt.loan_type_name",
      "=",
      "'住房贷款'",
      "AND",
      "la.status",
      "=",
      "'APPROVED'",
      "ORDER",
      "BY",
      "la.loan_amount",
      "DESC;"
    ],
    "question_toks": [
      "查询所有申请了住房贷款且状态为'APPROVED'的客户ID及其贷款金额，并按贷款金额降序排列。"
    ],
    "result_fields": [
      "la.customer_id",
      "la.loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT dai.org_nm, dai.bank_nm, SUM(dai.acct_bal) as total_balance FROM deposit_account_info dai GROUP BY dai.org_nm, dai.bank_nm ORDER BY total_balance DESC LIMIT 5",
    "question": "找出存款余额最高的前5个网点及其管辖行。",
    "query_toks": [
      "SELECT",
      "dai.org_nm,",
      "dai.bank_nm,",
      "SUM(dai.acct_bal)",
      "as",
      "total_balance",
      "FROM",
      "deposit_account_info",
      "dai",
      "GROUP",
      "BY",
      "dai.org_nm,",
      "dai.bank_nm",
      "ORDER",
      "BY",
      "total_balance",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "SELECT",
      "dai.org_nm,",
      "dai.bank_nm,",
      "SUM(dai.acct_bal)",
      "as",
      "total_balance",
      "FROM",
      "deposit_account_info",
      "dai",
      "GROUP",
      "BY",
      "dai.org_nm,",
      "dai.bank_nm",
      "ORDER",
      "BY",
      "total_balance",
      "DESC",
      "LIMIT",
      "5"
    ],
    "question_toks": [
      "找出存款余额最高的前5个网点及其管辖行。"
    ],
    "result_fields": [
      "dai.org_nm",
      "dai.bank_nm",
      "SUM(dai.acct_bal)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM loan_repayment WHERE description = '严琳';",
    "question": "查找用户还款信息中描述为'严琳'的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "loan_repayment",
      "WHERE",
      "description",
      "=",
      "'严琳';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "loan_repayment",
      "WHERE",
      "description",
      "=",
      "'严琳';"
    ],
    "question_toks": [
      "查找用户还款信息中描述为'严琳'的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT rs_type, COUNT(*) AS count FROM five_level_classification GROUP BY rs_type;",
    "question": "统计每种五级分类的数量。",
    "query_toks": [
      "SELECT",
      "rs_type,",
      "COUNT(*)",
      "AS",
      "count",
      "FROM",
      "five_level_classification",
      "GROUP",
      "BY",
      "rs_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rs_type,",
      "COUNT(*)",
      "AS",
      "count",
      "FROM",
      "five_level_classification",
      "GROUP",
      "BY",
      "rs_type;"
    ],
    "question_toks": [
      "统计每种五级分类的数量。"
    ],
    "result_fields": [
      "rs_type",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT rs_type, COUNT(*) FROM five_level_classification GROUP BY rs_type;",
    "question": "统计每种五级分类的数量",
    "query_toks": [
      "SELECT",
      "rs_type,",
      "COUNT(*)",
      "FROM",
      "five_level_classification",
      "GROUP",
      "BY",
      "rs_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rs_type,",
      "COUNT(*)",
      "FROM",
      "five_level_classification",
      "GROUP",
      "BY",
      "rs_type;"
    ],
    "question_toks": [
      "统计每种五级分类的数量"
    ],
    "result_fields": [
      "rs_type",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT b.bank_name, f.cust_no, f.wealth_bal FROM bank_orgnization b JOIN financial_products f ON b.bank_id = f.bank_no;",
    "question": "列出所有银行机构及其对应的客户号和理财余额。",
    "query_toks": [
      "SELECT",
      "b.bank_name,",
      "f.cust_no,",
      "f.wealth_bal",
      "FROM",
      "bank_orgnization",
      "b",
      "JOIN",
      "financial_products",
      "f",
      "ON",
      "b.bank_id",
      "=",
      "f.bank_no;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "b.bank_name,",
      "f.cust_no,",
      "f.wealth_bal",
      "FROM",
      "bank_orgnization",
      "b",
      "JOIN",
      "financial_products",
      "f",
      "ON",
      "b.bank_id",
      "=",
      "f.bank_no;"
    ],
    "question_toks": [
      "列出所有银行机构及其对应的客户号和理财余额。"
    ],
    "result_fields": [
      "b.bank_name",
      "f.cust_no",
      "f.wealth_bal"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT loan_type_name, description FROM loan_type ORDER BY loan_type_code;",
    "question": "列出所有贷款类型的名称和描述，并按贷款类型代码排序。",
    "query_toks": [
      "SELECT",
      "loan_type_name,",
      "description",
      "FROM",
      "loan_type",
      "ORDER",
      "BY",
      "loan_type_code;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "loan_type_name,",
      "description",
      "FROM",
      "loan_type",
      "ORDER",
      "BY",
      "loan_type_code;"
    ],
    "question_toks": [
      "列出所有贷款类型的名称和描述，并按贷款类型代码排序。"
    ],
    "result_fields": [
      "loan_type_name",
      "description"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT b1.bank_name, b2.bank_name AS parent_name FROM bank_orgnization b1 LEFT JOIN bank_orgnization b2 ON b1.bank_parent = b2.bank_id WHERE b1.bank_level = '2';",
    "question": "列出所有层级为2的银行机构名称及其父节点名称",
    "query_toks": [
      "SELECT",
      "b1.bank_name,",
      "b2.bank_name",
      "AS",
      "parent_name",
      "FROM",
      "bank_orgnization",
      "b1",
      "LEFT",
      "JOIN",
      "bank_orgnization",
      "b2",
      "ON",
      "b1.bank_parent",
      "=",
      "b2.bank_id",
      "WHERE",
      "b1.bank_level",
      "=",
      "'2';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "b1.bank_name,",
      "b2.bank_name",
      "AS",
      "parent_name",
      "FROM",
      "bank_orgnization",
      "b1",
      "LEFT",
      "JOIN",
      "bank_orgnization",
      "b2",
      "ON",
      "b1.bank_parent",
      "=",
      "b2.bank_id",
      "WHERE",
      "b1.bank_level",
      "=",
      "'2';"
    ],
    "question_toks": [
      "列出所有层级为2的银行机构名称及其父节点名称"
    ],
    "result_fields": [
      "b1.bank_name",
      "b2.bank_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH ranked_loans AS (SELECT c.province, c.customer_name, l.loan_amount, ROW_NUMBER() OVER (PARTITION BY c.province ORDER BY l.loan_amount DESC) as rank FROM customer c JOIN loan_application l ON c.id = l.customer_id) SELECT province, customer_name, loan_amount FROM ranked_loans WHERE rank <= 3 ORDER BY province, loan_amount DESC",
    "question": "找出每个省份贷款金额最高的前3名客户，显示省份、客户姓名和贷款金额。",
    "query_toks": [
      "WITH",
      "ranked_loans",
      "AS",
      "(SELECT",
      "c.province,",
      "c.customer_name,",
      "l.loan_amount,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "c.province",
      "ORDER",
      "BY",
      "l.loan_amount",
      "DESC)",
      "as",
      "rank",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id)",
      "SELECT",
      "province,",
      "customer_name,",
      "loan_amount",
      "FROM",
      "ranked_loans",
      "WHERE",
      "rank",
      "<=",
      "3",
      "ORDER",
      "BY",
      "province,",
      "loan_amount",
      "DESC"
    ],
    "query_toks_no_value": [
      "WITH",
      "ranked_loans",
      "AS",
      "(SELECT",
      "c.province,",
      "c.customer_name,",
      "l.loan_amount,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "c.province",
      "ORDER",
      "BY",
      "l.loan_amount",
      "DESC)",
      "as",
      "rank",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id)",
      "SELECT",
      "province,",
      "customer_name,",
      "loan_amount",
      "FROM",
      "ranked_loans",
      "WHERE",
      "rank",
      "<=",
      "3",
      "ORDER",
      "BY",
      "province,",
      "loan_amount",
      "DESC"
    ],
    "question_toks": [
      "找出每个省份贷款金额最高的前3名客户，显示省份、客户姓名和贷款金额。"
    ],
    "result_fields": [
      "c.province",
      "c.customer_name",
      "l.loan_amount",
      "ROW_NUMBER() OVER (PARTITION BY c.province ORDER BY l.loan_amount DESC)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM transfer WHERE source_customer_id = 376252;",
    "question": "查询转账记录中源客户ID为376252的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "transfer",
      "WHERE",
      "source_customer_id",
      "=",
      "376252;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "transfer",
      "WHERE",
      "source_customer_id",
      "=",
      "376252;"
    ],
    "question_toks": [
      "查询转账记录中源客户ID为376252的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, c.gender, o.occupation_name FROM customer c JOIN occupation o ON c.occupation_id = o.id;",
    "question": "查询每个客户的姓名、性别及其职业名称。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "c.gender,",
      "o.occupation_name",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "c.gender,",
      "o.occupation_name",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id;"
    ],
    "question_toks": [
      "查询每个客户的姓名、性别及其职业名称。"
    ],
    "result_fields": [
      "c.customer_name",
      "c.gender",
      "o.occupation_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT COUNT(DISTINCT fp.cust_no) AS customer_count, SUM(fp.wealth_bal_f) AS total_non_guaranteed_wealth_balance FROM financial_products fp JOIN bank_orgnization bo ON fp.bank_no = bo.bank_id WHERE bo.bank_name = '沈阳余淮支行' AND fp.data_dt >= '2024-07-01' AND fp.data_dt <= '2024-07-31' AND fp.wealth_bal_f IS NOT NULL;",
    "question": "在2024年7月，沈阳余淮支行的客户中，有多少客户持有非保本理财产品，并且这些客户的总非保本理财余额是多少？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "fp.cust_no)",
      "AS",
      "customer_count,",
      "SUM(fp.wealth_bal_f)",
      "AS",
      "total_non_guaranteed_wealth_balance",
      "FROM",
      "financial_products",
      "fp",
      "JOIN",
      "bank_orgnization",
      "bo",
      "ON",
      "fp.bank_no",
      "=",
      "bo.bank_id",
      "WHERE",
      "bo.bank_name",
      "=",
      "'沈阳余淮支行'",
      "AND",
      "fp.data_dt",
      ">=",
      "'2024-07-01'",
      "AND",
      "fp.data_dt",
      "<=",
      "'2024-07-31'",
      "AND",
      "fp.wealth_bal_f",
      "IS",
      "NOT",
      "NULL;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "fp.cust_no)",
      "AS",
      "customer_count,",
      "SUM(fp.wealth_bal_f)",
      "AS",
      "total_non_guaranteed_wealth_balance",
      "FROM",
      "financial_products",
      "fp",
      "JOIN",
      "bank_orgnization",
      "bo",
      "ON",
      "fp.bank_no",
      "=",
      "bo.bank_id",
      "WHERE",
      "bo.bank_name",
      "=",
      "'沈阳余淮支行'",
      "AND",
      "fp.data_dt",
      ">=",
      "'2024-07-01'",
      "AND",
      "fp.data_dt",
      "<=",
      "'2024-07-31'",
      "AND",
      "fp.wealth_bal_f",
      "IS",
      "NOT",
      "NULL;"
    ],
    "question_toks": [
      "在2024年7月，沈阳余淮支行的客户中，有多少客户持有非保本理财产品，并且这些客户的总非保本理财余额是多少？"
    ],
    "result_fields": [
      "COUNT(DISTINCT fp.cust_no)",
      "SUM(fp.wealth_bal_f)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT customer_id FROM loan_credit WHERE credit_score > 0.8;",
    "question": "查找所有信用评分为0.8以上的客户ID。",
    "query_toks": [
      "SELECT",
      "customer_id",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_score",
      ">",
      "0.8;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_id",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_score",
      ">",
      "0.8;"
    ],
    "question_toks": [
      "查找所有信用评分为0.8以上的客户ID。"
    ],
    "result_fields": [
      "customer_id"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c1.customer_name AS source_customer_name, c2.customer_name AS target_customer_name, t.transfer_amount FROM transfer t JOIN customer c1 ON t.source_customer_id = c1.id JOIN customer c2 ON t.target_customer_id = c2.id WHERE t.transfer_amount > 5000;",
    "question": "列出所有转账金额大于5000的转账记录，并显示转账双方的客户姓名和转账金额。",
    "query_toks": [
      "SELECT",
      "c1.customer_name",
      "AS",
      "source_customer_name,",
      "c2.customer_name",
      "AS",
      "target_customer_name,",
      "t.transfer_amount",
      "FROM",
      "transfer",
      "t",
      "JOIN",
      "customer",
      "c1",
      "ON",
      "t.source_customer_id",
      "=",
      "c1.id",
      "JOIN",
      "customer",
      "c2",
      "ON",
      "t.target_customer_id",
      "=",
      "c2.id",
      "WHERE",
      "t.transfer_amount",
      ">",
      "5000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c1.customer_name",
      "AS",
      "source_customer_name,",
      "c2.customer_name",
      "AS",
      "target_customer_name,",
      "t.transfer_amount",
      "FROM",
      "transfer",
      "t",
      "JOIN",
      "customer",
      "c1",
      "ON",
      "t.source_customer_id",
      "=",
      "c1.id",
      "JOIN",
      "customer",
      "c2",
      "ON",
      "t.target_customer_id",
      "=",
      "c2.id",
      "WHERE",
      "t.transfer_amount",
      ">",
      "5000;"
    ],
    "question_toks": [
      "列出所有转账金额大于5000的转账记录，并显示转账双方的客户姓名和转账金额。"
    ],
    "result_fields": [
      "c1.customer_name",
      "c2.customer_name",
      "t.transfer_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT la.customer_id FROM loan_application la JOIN loan_status ls ON la.status = ls.loan_status_code WHERE la.apply_date >= '2019-01-01' AND la.apply_date < '2020-01-01' AND ls.loan_status_code = 'APPROVED';",
    "question": "哪些客户在2019年申请了贷款并且其贷款状态为'APPROVED'？",
    "query_toks": [
      "SELECT",
      "la.customer_id",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "loan_status",
      "ls",
      "ON",
      "la.status",
      "=",
      "ls.loan_status_code",
      "WHERE",
      "la.apply_date",
      ">=",
      "'2019-01-01'",
      "AND",
      "la.apply_date",
      "<",
      "'2020-01-01'",
      "AND",
      "ls.loan_status_code",
      "=",
      "'APPROVED';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "la.customer_id",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "loan_status",
      "ls",
      "ON",
      "la.status",
      "=",
      "ls.loan_status_code",
      "WHERE",
      "la.apply_date",
      ">=",
      "'2019-01-01'",
      "AND",
      "la.apply_date",
      "<",
      "'2020-01-01'",
      "AND",
      "ls.loan_status_code",
      "=",
      "'APPROVED';"
    ],
    "question_toks": [
      "哪些客户在2019年申请了贷款并且其贷款状态为'APPROVED'？"
    ],
    "result_fields": [
      "la.customer_id"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT dci.card_type, dci.card_type_nm, COUNT(DISTINCT dci.cust_no) AS customer_count, AVG(fp.wealth_bal) AS avg_wealth_bal FROM debit_card_information dci LEFT JOIN financial_products fp ON dci.cust_no = fp.cust_no GROUP BY dci.card_type, dci.card_type_nm",
    "question": "计算每种卡类型的客户数量和平均理财产品余额",
    "query_toks": [
      "SELECT",
      "dci.card_type,",
      "dci.card_type_nm,",
      "COUNT(DISTINCT",
      "dci.cust_no)",
      "AS",
      "customer_count,",
      "AVG(fp.wealth_bal)",
      "AS",
      "avg_wealth_bal",
      "FROM",
      "debit_card_information",
      "dci",
      "LEFT",
      "JOIN",
      "financial_products",
      "fp",
      "ON",
      "dci.cust_no",
      "=",
      "fp.cust_no",
      "GROUP",
      "BY",
      "dci.card_type,",
      "dci.card_type_nm"
    ],
    "query_toks_no_value": [
      "SELECT",
      "dci.card_type,",
      "dci.card_type_nm,",
      "COUNT(DISTINCT",
      "dci.cust_no)",
      "AS",
      "customer_count,",
      "AVG(fp.wealth_bal)",
      "AS",
      "avg_wealth_bal",
      "FROM",
      "debit_card_information",
      "dci",
      "LEFT",
      "JOIN",
      "financial_products",
      "fp",
      "ON",
      "dci.cust_no",
      "=",
      "fp.cust_no",
      "GROUP",
      "BY",
      "dci.card_type,",
      "dci.card_type_nm"
    ],
    "question_toks": [
      "计算每种卡类型的客户数量和平均理财产品余额"
    ],
    "result_fields": [
      "dci.card_type",
      "dci.card_type_nm",
      "COUNT(DISTINCT dci.cust_no)",
      "AVG(fp.wealth_bal)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, a.loan_amount FROM customer c JOIN loan_application a ON c.id = a.customer_id ORDER BY a.apply_date ASC;",
    "question": "查找所有贷款申请中，客户的姓名和贷款金额，按申请日期升序排列。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "a.loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "a",
      "ON",
      "c.id",
      "=",
      "a.customer_id",
      "ORDER",
      "BY",
      "a.apply_date",
      "ASC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "a.loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "a",
      "ON",
      "c.id",
      "=",
      "a.customer_id",
      "ORDER",
      "BY",
      "a.apply_date",
      "ASC;"
    ],
    "question_toks": [
      "查找所有贷款申请中，客户的姓名和贷款金额，按申请日期升序排列。"
    ],
    "result_fields": [
      "c.customer_name",
      "a.loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT SUM(acct_bal) AS total_acct_bal, SUM(act_year_avg_bal) AS total_act_year_avg_bal FROM deposit_account_info WHERE data_dt = '2024-07-19' AND cust_type = '对私';",
    "question": "查询2024年7月19日所有对私客户的账户余额总和以及实际年日均余额总和。",
    "query_toks": [
      "SELECT",
      "SUM(acct_bal)",
      "AS",
      "total_acct_bal,",
      "SUM(act_year_avg_bal)",
      "AS",
      "total_act_year_avg_bal",
      "FROM",
      "deposit_account_info",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "cust_type",
      "=",
      "'对私';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "SUM(acct_bal)",
      "AS",
      "total_acct_bal,",
      "SUM(act_year_avg_bal)",
      "AS",
      "total_act_year_avg_bal",
      "FROM",
      "deposit_account_info",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "cust_type",
      "=",
      "'对私';"
    ],
    "question_toks": [
      "查询2024年7月19日所有对私客户的账户余额总和以及实际年日均余额总和。"
    ],
    "result_fields": [
      "SUM(acct_bal)",
      "SUM(act_year_avg_bal)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, o.occupation_name FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_repayment lr ON c.id = lr.loan_application_id WHERE lr.repayment_amount < 500;",
    "question": "查询所有还款金额低于500的客户及其职业。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "o.occupation_name",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "c.id",
      "=",
      "lr.loan_application_id",
      "WHERE",
      "lr.repayment_amount",
      "<",
      "500;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "o.occupation_name",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "c.id",
      "=",
      "lr.loan_application_id",
      "WHERE",
      "lr.repayment_amount",
      "<",
      "500;"
    ],
    "question_toks": [
      "查询所有还款金额低于500的客户及其职业。"
    ],
    "result_fields": [
      "c.customer_name",
      "o.occupation_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT d.cust_name, d.acct_bal FROM deposit_account_info d WHERE d.data_dt = '2023-07-19 00:00:00';",
    "question": "找出2023年7月19日，所有客户的存款账户信息及其账户余额。",
    "query_toks": [
      "SELECT",
      "d.cust_name,",
      "d.acct_bal",
      "FROM",
      "deposit_account_info",
      "d",
      "WHERE",
      "d.data_dt",
      "=",
      "'2023-07-19",
      "00:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.cust_name,",
      "d.acct_bal",
      "FROM",
      "deposit_account_info",
      "d",
      "WHERE",
      "d.data_dt",
      "=",
      "'2023-07-19",
      "00:00:00';"
    ],
    "question_toks": [
      "找出2023年7月19日，所有客户的存款账户信息及其账户余额。"
    ],
    "result_fields": [
      "d.cust_name",
      "d.acct_bal"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT dai.cust_no, dai.acct_bal, la.loan_amount, la.apply_date FROM deposit_account_info dai LEFT JOIN loan_application la ON dai.cust_noeger = la.customer_id ORDER BY dai.acct_bal DESC, la.apply_date DESC LIMIT 1",
    "question": "找出存款余额最高的客户及其最近的贷款申请信息。",
    "query_toks": [
      "SELECT",
      "dai.cust_no,",
      "dai.acct_bal,",
      "la.loan_amount,",
      "la.apply_date",
      "FROM",
      "deposit_account_info",
      "dai",
      "LEFT",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "dai.cust_noeger",
      "=",
      "la.customer_id",
      "ORDER",
      "BY",
      "dai.acct_bal",
      "DESC,",
      "la.apply_date",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "SELECT",
      "dai.cust_no,",
      "dai.acct_bal,",
      "la.loan_amount,",
      "la.apply_date",
      "FROM",
      "deposit_account_info",
      "dai",
      "LEFT",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "dai.cust_noeger",
      "=",
      "la.customer_id",
      "ORDER",
      "BY",
      "dai.acct_bal",
      "DESC,",
      "la.apply_date",
      "DESC",
      "LIMIT",
      "1"
    ],
    "question_toks": [
      "找出存款余额最高的客户及其最近的贷款申请信息。"
    ],
    "result_fields": [
      "dai.cust_no",
      "dai.acct_bal",
      "la.loan_amount",
      "la.apply_date"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT o.occupation_name, COUNT(c.id) AS customer_count FROM occupation o LEFT JOIN customer c ON o.id = c.occupation_id GROUP BY o.occupation_name;",
    "question": "统计每个职业的客户数量。",
    "query_toks": [
      "SELECT",
      "o.occupation_name,",
      "COUNT(c.id)",
      "AS",
      "customer_count",
      "FROM",
      "occupation",
      "o",
      "LEFT",
      "JOIN",
      "customer",
      "c",
      "ON",
      "o.id",
      "=",
      "c.occupation_id",
      "GROUP",
      "BY",
      "o.occupation_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "o.occupation_name,",
      "COUNT(c.id)",
      "AS",
      "customer_count",
      "FROM",
      "occupation",
      "o",
      "LEFT",
      "JOIN",
      "customer",
      "c",
      "ON",
      "o.id",
      "=",
      "c.occupation_id",
      "GROUP",
      "BY",
      "o.occupation_name;"
    ],
    "question_toks": [
      "统计每个职业的客户数量。"
    ],
    "result_fields": [
      "o.occupation_name",
      "COUNT(c.id)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, t.transfer_amount FROM transfer t JOIN customer c ON t.source_customer_id = c.id WHERE t.transfer_date = '2016-06-11' AND t.transfer_amount > 5000 ORDER BY t.transfer_amount DESC;",
    "question": "查询2016年6月11日所有转账金额大于5000的客户的姓名和转账金额，并按转账金额降序排列。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "t.transfer_amount",
      "FROM",
      "transfer",
      "t",
      "JOIN",
      "customer",
      "c",
      "ON",
      "t.source_customer_id",
      "=",
      "c.id",
      "WHERE",
      "t.transfer_date",
      "=",
      "'2016-06-11'",
      "AND",
      "t.transfer_amount",
      ">",
      "5000",
      "ORDER",
      "BY",
      "t.transfer_amount",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "t.transfer_amount",
      "FROM",
      "transfer",
      "t",
      "JOIN",
      "customer",
      "c",
      "ON",
      "t.source_customer_id",
      "=",
      "c.id",
      "WHERE",
      "t.transfer_date",
      "=",
      "'2016-06-11'",
      "AND",
      "t.transfer_amount",
      ">",
      "5000",
      "ORDER",
      "BY",
      "t.transfer_amount",
      "DESC;"
    ],
    "question_toks": [
      "查询2016年6月11日所有转账金额大于5000的客户的姓名和转账金额，并按转账金额降序排列。"
    ],
    "result_fields": [
      "c.customer_name",
      "t.transfer_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ldi.cust_id, ldi.loan_balance, ldi.loan_type, c.curr_full_name FROM loan_detail_info ldi JOIN currency c ON ldi.currency_type = c.curr_code WHERE ldi.loandate_s > '2024-07-01' AND ldi.loan_balance > 1000000 ORDER BY ldi.loan_balance DESC;",
    "question": "查询2024年7月1日之后发放的贷款中，贷款余额大于1000000的客户编号、贷款余额、贷款种类以及币种全名，并按贷款余额降序排列。",
    "query_toks": [
      "SELECT",
      "ldi.cust_id,",
      "ldi.loan_balance,",
      "ldi.loan_type,",
      "c.curr_full_name",
      "FROM",
      "loan_detail_info",
      "ldi",
      "JOIN",
      "currency",
      "c",
      "ON",
      "ldi.currency_type",
      "=",
      "c.curr_code",
      "WHERE",
      "ldi.loandate_s",
      ">",
      "'2024-07-01'",
      "AND",
      "ldi.loan_balance",
      ">",
      "1000000",
      "ORDER",
      "BY",
      "ldi.loan_balance",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ldi.cust_id,",
      "ldi.loan_balance,",
      "ldi.loan_type,",
      "c.curr_full_name",
      "FROM",
      "loan_detail_info",
      "ldi",
      "JOIN",
      "currency",
      "c",
      "ON",
      "ldi.currency_type",
      "=",
      "c.curr_code",
      "WHERE",
      "ldi.loandate_s",
      ">",
      "'2024-07-01'",
      "AND",
      "ldi.loan_balance",
      ">",
      "1000000",
      "ORDER",
      "BY",
      "ldi.loan_balance",
      "DESC;"
    ],
    "question_toks": [
      "查询2024年7月1日之后发放的贷款中，贷款余额大于1000000的客户编号、贷款余额、贷款种类以及币种全名，并按贷款余额降序排列。"
    ],
    "result_fields": [
      "ldi.cust_id",
      "ldi.loan_balance",
      "ldi.loan_type",
      "c.curr_full_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM user_behavior WHERE behavior_date = '2018-06-26';",
    "question": "获取所有用户行为中，行为日期为2018-06-26的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "user_behavior",
      "WHERE",
      "behavior_date",
      "=",
      "'2018-06-26';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "user_behavior",
      "WHERE",
      "behavior_date",
      "=",
      "'2018-06-26';"
    ],
    "question_toks": [
      "获取所有用户行为中，行为日期为2018-06-26的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM loan_repayment WHERE EXTRACT(DOW FROM repayment_date) IN (0, 6);",
    "question": "找出还款日期在周末的记录",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "loan_repayment",
      "WHERE",
      "EXTRACT(DOW",
      "FROM",
      "repayment_date)",
      "IN",
      "(0,",
      "6);"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "loan_repayment",
      "WHERE",
      "EXTRACT(DOW",
      "FROM",
      "repayment_date)",
      "IN",
      "(0,",
      "6);"
    ],
    "question_toks": [
      "找出还款日期在周末的记录"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT dt.deposit_name, lt.loan_type_name, COUNT(DISTINCT c.id) AS customer_count FROM customer c JOIN deposit_account_info dai ON c.id_number = dai.cert_code JOIN deposit_type dt ON dai.arl_pdp_code = dt.deposit_id LEFT JOIN loan_application la ON c.id = la.customer_id LEFT JOIN loan_type lt ON la.loan_type_id = lt.id GROUP BY dt.deposit_name, lt.loan_type_name ORDER BY customer_count DESC",
    "question": "计算每种存款类型和贷款类型组合的客户数量，并按照客户数量降序排列。",
    "query_toks": [
      "SELECT",
      "dt.deposit_name,",
      "lt.loan_type_name,",
      "COUNT(DISTINCT",
      "c.id)",
      "AS",
      "customer_count",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "c.id_number",
      "=",
      "dai.cert_code",
      "JOIN",
      "deposit_type",
      "dt",
      "ON",
      "dai.arl_pdp_code",
      "=",
      "dt.deposit_id",
      "LEFT",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "c.id",
      "=",
      "la.customer_id",
      "LEFT",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "GROUP",
      "BY",
      "dt.deposit_name,",
      "lt.loan_type_name",
      "ORDER",
      "BY",
      "customer_count",
      "DESC"
    ],
    "query_toks_no_value": [
      "SELECT",
      "dt.deposit_name,",
      "lt.loan_type_name,",
      "COUNT(DISTINCT",
      "c.id)",
      "AS",
      "customer_count",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "c.id_number",
      "=",
      "dai.cert_code",
      "JOIN",
      "deposit_type",
      "dt",
      "ON",
      "dai.arl_pdp_code",
      "=",
      "dt.deposit_id",
      "LEFT",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "c.id",
      "=",
      "la.customer_id",
      "LEFT",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "GROUP",
      "BY",
      "dt.deposit_name,",
      "lt.loan_type_name",
      "ORDER",
      "BY",
      "customer_count",
      "DESC"
    ],
    "question_toks": [
      "计算每种存款类型和贷款类型组合的客户数量，并按照客户数量降序排列。"
    ],
    "result_fields": [
      "dt.deposit_name",
      "lt.loan_type_name",
      "COUNT(DISTINCT c.id)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, lr.repayment_amount FROM loan_repayment lr JOIN loan_application la ON lr.loan_application_id = la.id JOIN customer c ON la.customer_id = c.id WHERE lr.repayment_date = '2021-11-10' AND lr.repayment_amount > 20 ORDER BY lr.repayment_amount DESC;",
    "question": "查询2021年11月10日所有还款金额大于20元的客户的姓名和还款金额，并按还款金额降序排列。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "lr.repayment_amount",
      "FROM",
      "loan_repayment",
      "lr",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lr.loan_application_id",
      "=",
      "la.id",
      "JOIN",
      "customer",
      "c",
      "ON",
      "la.customer_id",
      "=",
      "c.id",
      "WHERE",
      "lr.repayment_date",
      "=",
      "'2021-11-10'",
      "AND",
      "lr.repayment_amount",
      ">",
      "20",
      "ORDER",
      "BY",
      "lr.repayment_amount",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "lr.repayment_amount",
      "FROM",
      "loan_repayment",
      "lr",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lr.loan_application_id",
      "=",
      "la.id",
      "JOIN",
      "customer",
      "c",
      "ON",
      "la.customer_id",
      "=",
      "c.id",
      "WHERE",
      "lr.repayment_date",
      "=",
      "'2021-11-10'",
      "AND",
      "lr.repayment_amount",
      ">",
      "20",
      "ORDER",
      "BY",
      "lr.repayment_amount",
      "DESC;"
    ],
    "question_toks": [
      "查询2021年11月10日所有还款金额大于20元的客户的姓名和还款金额，并按还款金额降序排列。"
    ],
    "result_fields": [
      "c.customer_name",
      "lr.repayment_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT lt.loan_type_name, AVG(lc.credit_score) AS average_credit_score FROM loan_type lt JOIN loan_application la ON lt.id = la.loan_type_id JOIN loan_credit lc ON la.customer_id = lc.customer_id GROUP BY lt.loan_type_name;",
    "question": "统计每种贷款类型的平均信用分。",
    "query_toks": [
      "SELECT",
      "lt.loan_type_name,",
      "AVG(lc.credit_score)",
      "AS",
      "average_credit_score",
      "FROM",
      "loan_type",
      "lt",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lt.id",
      "=",
      "la.loan_type_id",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "la.customer_id",
      "=",
      "lc.customer_id",
      "GROUP",
      "BY",
      "lt.loan_type_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lt.loan_type_name,",
      "AVG(lc.credit_score)",
      "AS",
      "average_credit_score",
      "FROM",
      "loan_type",
      "lt",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lt.id",
      "=",
      "la.loan_type_id",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "la.customer_id",
      "=",
      "lc.customer_id",
      "GROUP",
      "BY",
      "lt.loan_type_name;"
    ],
    "question_toks": [
      "统计每种贷款类型的平均信用分。"
    ],
    "result_fields": [
      "lt.loan_type_name",
      "AVG(lc.credit_score)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT loan_type_name, loan_type_code FROM loan_type WHERE loan_type_code IS NOT NULL;",
    "question": "获取所有贷款类型的名称和代码，要求代码不为空。",
    "query_toks": [
      "SELECT",
      "loan_type_name,",
      "loan_type_code",
      "FROM",
      "loan_type",
      "WHERE",
      "loan_type_code",
      "IS",
      "NOT",
      "NULL;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "loan_type_name,",
      "loan_type_code",
      "FROM",
      "loan_type",
      "WHERE",
      "loan_type_code",
      "IS",
      "NOT",
      "NULL;"
    ],
    "question_toks": [
      "获取所有贷款类型的名称和代码，要求代码不为空。"
    ],
    "result_fields": [
      "loan_type_name",
      "loan_type_code"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ls.loan_status_name, COUNT(la.id) AS count FROM loan_status ls JOIN loan_application la ON ls.loan_status_code = la.status GROUP BY ls.loan_status_name;",
    "question": "统计各贷款状态下的贷款申请数量。",
    "query_toks": [
      "SELECT",
      "ls.loan_status_name,",
      "COUNT(la.id)",
      "AS",
      "count",
      "FROM",
      "loan_status",
      "ls",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "ls.loan_status_code",
      "=",
      "la.status",
      "GROUP",
      "BY",
      "ls.loan_status_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ls.loan_status_name,",
      "COUNT(la.id)",
      "AS",
      "count",
      "FROM",
      "loan_status",
      "ls",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "ls.loan_status_code",
      "=",
      "la.status",
      "GROUP",
      "BY",
      "ls.loan_status_name;"
    ],
    "question_toks": [
      "统计各贷款状态下的贷款申请数量。"
    ],
    "result_fields": [
      "ls.loan_status_name",
      "COUNT(la.id)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT customer_id, description FROM loan_credit;",
    "question": "获取所有信用评分的客户ID及描述。",
    "query_toks": [
      "SELECT",
      "customer_id,",
      "description",
      "FROM",
      "loan_credit;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_id,",
      "description",
      "FROM",
      "loan_credit;"
    ],
    "question_toks": [
      "获取所有信用评分的客户ID及描述。"
    ],
    "result_fields": [
      "customer_id",
      "description"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT dci.cust_nm, dci.cust_id, dci.tel_no, dci.card_no, dci.current_bal FROM debit_card_information dci WHERE dci.data_dt = '2024-07-15 00:00:00' AND dci.bank_nm = '北京东单支行';",
    "question": "查询2024年7月15日在北京东单支行开户的所有客户的姓名、证件号码、开户手机号以及他们的借记卡卡号和卡内活期余额。",
    "query_toks": [
      "SELECT",
      "dci.cust_nm,",
      "dci.cust_id,",
      "dci.tel_no,",
      "dci.card_no,",
      "dci.current_bal",
      "FROM",
      "debit_card_information",
      "dci",
      "WHERE",
      "dci.data_dt",
      "=",
      "'2024-07-15",
      "00:00:00'",
      "AND",
      "dci.bank_nm",
      "=",
      "'北京东单支行';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "dci.cust_nm,",
      "dci.cust_id,",
      "dci.tel_no,",
      "dci.card_no,",
      "dci.current_bal",
      "FROM",
      "debit_card_information",
      "dci",
      "WHERE",
      "dci.data_dt",
      "=",
      "'2024-07-15",
      "00:00:00'",
      "AND",
      "dci.bank_nm",
      "=",
      "'北京东单支行';"
    ],
    "question_toks": [
      "查询2024年7月15日在北京东单支行开户的所有客户的姓名、证件号码、开户手机号以及他们的借记卡卡号和卡内活期余额。"
    ],
    "result_fields": [
      "dci.cust_nm",
      "dci.cust_id",
      "dci.tel_no",
      "dci.card_no",
      "dci.current_bal"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT l.cust_type, SUM(l.loan_amount) AS total_amount FROM loan_detail_info l GROUP BY l.cust_type ORDER BY l.cust_type;",
    "question": "统计每种客户类型的贷款总金额，并按客户类型名称排序。",
    "query_toks": [
      "SELECT",
      "l.cust_type,",
      "SUM(l.loan_amount)",
      "AS",
      "total_amount",
      "FROM",
      "loan_detail_info",
      "l",
      "GROUP",
      "BY",
      "l.cust_type",
      "ORDER",
      "BY",
      "l.cust_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "l.cust_type,",
      "SUM(l.loan_amount)",
      "AS",
      "total_amount",
      "FROM",
      "loan_detail_info",
      "l",
      "GROUP",
      "BY",
      "l.cust_type",
      "ORDER",
      "BY",
      "l.cust_type;"
    ],
    "question_toks": [
      "统计每种客户类型的贷款总金额，并按客户类型名称排序。"
    ],
    "result_fields": [
      "l.cust_type",
      "SUM(l.loan_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT *, (loan_balance / loan_amount) AS balance_ratio FROM loan_detail_info ORDER BY balance_ratio DESC LIMIT 10;",
    "question": "查询贷款余额占贷款总额比例最高的前10笔贷款",
    "query_toks": [
      "SELECT",
      "*,",
      "(loan_balance",
      "/",
      "loan_amount)",
      "AS",
      "balance_ratio",
      "FROM",
      "loan_detail_info",
      "ORDER",
      "BY",
      "balance_ratio",
      "DESC",
      "LIMIT",
      "10;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*,",
      "(loan_balance",
      "/",
      "loan_amount)",
      "AS",
      "balance_ratio",
      "FROM",
      "loan_detail_info",
      "ORDER",
      "BY",
      "balance_ratio",
      "DESC",
      "LIMIT",
      "10;"
    ],
    "question_toks": [
      "查询贷款余额占贷款总额比例最高的前10笔贷款"
    ],
    "result_fields": [
      "*",
      "(loan_balance / loan_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT la.customer_id, SUM(la.loan_amount) AS total_loan_amount FROM loan_application la JOIN loan_type lt ON la.loan_type_id = lt.id WHERE lt.loan_type_name = '住房贷款' AND la.status = 'REJECTED' AND EXTRACT(YEAR FROM la.apply_date) = 2019 GROUP BY la.customer_id;",
    "question": "查询2019年申请住房贷款且申请状态为'REJECTED'的客户ID和贷款金额总和。",
    "query_toks": [
      "SELECT",
      "la.customer_id,",
      "SUM(la.loan_amount)",
      "AS",
      "total_loan_amount",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "WHERE",
      "lt.loan_type_name",
      "=",
      "'住房贷款'",
      "AND",
      "la.status",
      "=",
      "'REJECTED'",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "la.apply_date)",
      "=",
      "2019",
      "GROUP",
      "BY",
      "la.customer_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "la.customer_id,",
      "SUM(la.loan_amount)",
      "AS",
      "total_loan_amount",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "WHERE",
      "lt.loan_type_name",
      "=",
      "'住房贷款'",
      "AND",
      "la.status",
      "=",
      "'REJECTED'",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "la.apply_date)",
      "=",
      "2019",
      "GROUP",
      "BY",
      "la.customer_id;"
    ],
    "question_toks": [
      "查询2019年申请住房贷款且申请状态为'REJECTED'的客户ID和贷款金额总和。"
    ],
    "result_fields": [
      "la.customer_id",
      "SUM(la.loan_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM bank_orgnization;",
    "question": "获取银行机构的所有信息。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "bank_orgnization;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "bank_orgnization;"
    ],
    "question_toks": [
      "获取银行机构的所有信息。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ldi.reportid, ldi.cust_id, ldi.loan_balance, ldi.blc_capital, c.curr_full_name, flc.rs_type_name FROM loan_detail_info ldi JOIN currency c ON ldi.currency_type = c.curr_code JOIN five_level_classification flc ON ldi.judgelevel = flc.rs_type_id WHERE ldi.blc_capital > 10000 AND ldi.dw_date = '2024-07-22';",
    "question": "查询2024年7月22日当天，所有贷款余额（本金）超过10000的贷款明细信息，并显示对应的币种全名和五级分类名称。",
    "query_toks": [
      "SELECT",
      "ldi.reportid,",
      "ldi.cust_id,",
      "ldi.loan_balance,",
      "ldi.blc_capital,",
      "c.curr_full_name,",
      "flc.rs_type_name",
      "FROM",
      "loan_detail_info",
      "ldi",
      "JOIN",
      "currency",
      "c",
      "ON",
      "ldi.currency_type",
      "=",
      "c.curr_code",
      "JOIN",
      "five_level_classification",
      "flc",
      "ON",
      "ldi.judgelevel",
      "=",
      "flc.rs_type_id",
      "WHERE",
      "ldi.blc_capital",
      ">",
      "10000",
      "AND",
      "ldi.dw_date",
      "=",
      "'2024-07-22';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ldi.reportid,",
      "ldi.cust_id,",
      "ldi.loan_balance,",
      "ldi.blc_capital,",
      "c.curr_full_name,",
      "flc.rs_type_name",
      "FROM",
      "loan_detail_info",
      "ldi",
      "JOIN",
      "currency",
      "c",
      "ON",
      "ldi.currency_type",
      "=",
      "c.curr_code",
      "JOIN",
      "five_level_classification",
      "flc",
      "ON",
      "ldi.judgelevel",
      "=",
      "flc.rs_type_id",
      "WHERE",
      "ldi.blc_capital",
      ">",
      "10000",
      "AND",
      "ldi.dw_date",
      "=",
      "'2024-07-22';"
    ],
    "question_toks": [
      "查询2024年7月22日当天，所有贷款余额（本金）超过10000的贷款明细信息，并显示对应的币种全名和五级分类名称。"
    ],
    "result_fields": [
      "ldi.reportid",
      "ldi.cust_id",
      "ldi.loan_balance",
      "ldi.blc_capital",
      "c.curr_full_name",
      "flc.rs_type_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT card_state, open_date FROM debit_card_information WHERE card_state = '正常';",
    "question": "获取所有借记卡的卡状态和开户日期，要求卡状态为'正常'。",
    "query_toks": [
      "SELECT",
      "card_state,",
      "open_date",
      "FROM",
      "debit_card_information",
      "WHERE",
      "card_state",
      "=",
      "'正常';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "card_state,",
      "open_date",
      "FROM",
      "debit_card_information",
      "WHERE",
      "card_state",
      "=",
      "'正常';"
    ],
    "question_toks": [
      "获取所有借记卡的卡状态和开户日期，要求卡状态为'正常'。"
    ],
    "result_fields": [
      "card_state",
      "open_date"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, t.transfer_amount, t.transfer_date FROM transfer t JOIN customer c ON t.source_customer_id = c.id WHERE t.transfer_date = '2023-06-30' ORDER BY t.transfer_amount DESC;",
    "question": "列出所有在2023年6月30日进行转账的客户的姓名、转账金额以及转账日期，并按照转账金额从高到低排序。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "t.transfer_amount,",
      "t.transfer_date",
      "FROM",
      "transfer",
      "t",
      "JOIN",
      "customer",
      "c",
      "ON",
      "t.source_customer_id",
      "=",
      "c.id",
      "WHERE",
      "t.transfer_date",
      "=",
      "'2023-06-30'",
      "ORDER",
      "BY",
      "t.transfer_amount",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "t.transfer_amount,",
      "t.transfer_date",
      "FROM",
      "transfer",
      "t",
      "JOIN",
      "customer",
      "c",
      "ON",
      "t.source_customer_id",
      "=",
      "c.id",
      "WHERE",
      "t.transfer_date",
      "=",
      "'2023-06-30'",
      "ORDER",
      "BY",
      "t.transfer_amount",
      "DESC;"
    ],
    "question_toks": [
      "列出所有在2023年6月30日进行转账的客户的姓名、转账金额以及转账日期，并按照转账金额从高到低排序。"
    ],
    "result_fields": [
      "c.customer_name",
      "t.transfer_amount",
      "t.transfer_date"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT b.bank_name, b.bank_level FROM bank_orgnization b WHERE b.data_dt = '2023-06-30';",
    "question": "获取2023年6月30日的所有银行机构及其层级信息。",
    "query_toks": [
      "SELECT",
      "b.bank_name,",
      "b.bank_level",
      "FROM",
      "bank_orgnization",
      "b",
      "WHERE",
      "b.data_dt",
      "=",
      "'2023-06-30';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "b.bank_name,",
      "b.bank_level",
      "FROM",
      "bank_orgnization",
      "b",
      "WHERE",
      "b.data_dt",
      "=",
      "'2023-06-30';"
    ],
    "question_toks": [
      "获取2023年6月30日的所有银行机构及其层级信息。"
    ],
    "result_fields": [
      "b.bank_name",
      "b.bank_level"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT cust_no, SUM(wealth_bal_f) AS total_wealth_bal_f FROM financial_products WHERE data_dt = '2024-07-02' GROUP BY cust_no ORDER BY total_wealth_bal_f DESC;",
    "question": "查询2024年7月2日所有持有非保本理财产品的客户及其对应的理财余额总和，并按理财余额总和降序排列。",
    "query_toks": [
      "SELECT",
      "cust_no,",
      "SUM(wealth_bal_f)",
      "AS",
      "total_wealth_bal_f",
      "FROM",
      "financial_products",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-02'",
      "GROUP",
      "BY",
      "cust_no",
      "ORDER",
      "BY",
      "total_wealth_bal_f",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "cust_no,",
      "SUM(wealth_bal_f)",
      "AS",
      "total_wealth_bal_f",
      "FROM",
      "financial_products",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-02'",
      "GROUP",
      "BY",
      "cust_no",
      "ORDER",
      "BY",
      "total_wealth_bal_f",
      "DESC;"
    ],
    "question_toks": [
      "查询2024年7月2日所有持有非保本理财产品的客户及其对应的理财余额总和，并按理财余额总和降序排列。"
    ],
    "result_fields": [
      "cust_no",
      "SUM(wealth_bal_f)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT SUM(loan_amount) FROM loan_application WHERE status = 'REJECTED' AND apply_date >= '2019-01-01' AND apply_date <= '2019-12-31';",
    "question": "2019年申请的贷款中，状态为'REJECTED'的贷款总金额是多少？",
    "query_toks": [
      "SELECT",
      "SUM(loan_amount)",
      "FROM",
      "loan_application",
      "WHERE",
      "status",
      "=",
      "'REJECTED'",
      "AND",
      "apply_date",
      ">=",
      "'2019-01-01'",
      "AND",
      "apply_date",
      "<=",
      "'2019-12-31';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "SUM(loan_amount)",
      "FROM",
      "loan_application",
      "WHERE",
      "status",
      "=",
      "'REJECTED'",
      "AND",
      "apply_date",
      ">=",
      "'2019-01-01'",
      "AND",
      "apply_date",
      "<=",
      "'2019-12-31';"
    ],
    "question_toks": [
      "2019年申请的贷款中，状态为'REJECTED'的贷款总金额是多少？"
    ],
    "result_fields": [
      "SUM(loan_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT d.org_nm, SUM(d.acct_bal) AS total_balance FROM deposit_account_info d JOIN bank_orgnization b ON d.bank_no = b.bank_id WHERE d.data_dt = '2024-07-21' AND d.bank_no = 'BANK_003' AND d.cust_type = '对公' GROUP BY d.org_nm;",
    "question": "查询2024年7月21日杭州分行下所有对公客户的存款账户余额总和，并按支行名称分组。",
    "query_toks": [
      "SELECT",
      "d.org_nm,",
      "SUM(d.acct_bal)",
      "AS",
      "total_balance",
      "FROM",
      "deposit_account_info",
      "d",
      "JOIN",
      "bank_orgnization",
      "b",
      "ON",
      "d.bank_no",
      "=",
      "b.bank_id",
      "WHERE",
      "d.data_dt",
      "=",
      "'2024-07-21'",
      "AND",
      "d.bank_no",
      "=",
      "'BANK_003'",
      "AND",
      "d.cust_type",
      "=",
      "'对公'",
      "GROUP",
      "BY",
      "d.org_nm;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.org_nm,",
      "SUM(d.acct_bal)",
      "AS",
      "total_balance",
      "FROM",
      "deposit_account_info",
      "d",
      "JOIN",
      "bank_orgnization",
      "b",
      "ON",
      "d.bank_no",
      "=",
      "b.bank_id",
      "WHERE",
      "d.data_dt",
      "=",
      "'2024-07-21'",
      "AND",
      "d.bank_no",
      "=",
      "'BANK_003'",
      "AND",
      "d.cust_type",
      "=",
      "'对公'",
      "GROUP",
      "BY",
      "d.org_nm;"
    ],
    "question_toks": [
      "查询2024年7月21日杭州分行下所有对公客户的存款账户余额总和，并按支行名称分组。"
    ],
    "result_fields": [
      "d.org_nm",
      "SUM(d.acct_bal)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT lr.loan_application_id, SUM(lr.repayment_amount) AS total_repayment, COUNT(ub.id) AS behavior_count, AVG(lr.repayment_amount) AS avg_repayment_amount FROM loan_repayment lr LEFT JOIN user_behavior ub ON lr.loan_application_id = ub.customer_id GROUP BY lr.loan_application_id;",
    "question": "统计每个用户的还款总额、行为次数和平均还款金额",
    "query_toks": [
      "SELECT",
      "lr.loan_application_id,",
      "SUM(lr.repayment_amount)",
      "AS",
      "total_repayment,",
      "COUNT(ub.id)",
      "AS",
      "behavior_count,",
      "AVG(lr.repayment_amount)",
      "AS",
      "avg_repayment_amount",
      "FROM",
      "loan_repayment",
      "lr",
      "LEFT",
      "JOIN",
      "user_behavior",
      "ub",
      "ON",
      "lr.loan_application_id",
      "=",
      "ub.customer_id",
      "GROUP",
      "BY",
      "lr.loan_application_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lr.loan_application_id,",
      "SUM(lr.repayment_amount)",
      "AS",
      "total_repayment,",
      "COUNT(ub.id)",
      "AS",
      "behavior_count,",
      "AVG(lr.repayment_amount)",
      "AS",
      "avg_repayment_amount",
      "FROM",
      "loan_repayment",
      "lr",
      "LEFT",
      "JOIN",
      "user_behavior",
      "ub",
      "ON",
      "lr.loan_application_id",
      "=",
      "ub.customer_id",
      "GROUP",
      "BY",
      "lr.loan_application_id;"
    ],
    "question_toks": [
      "统计每个用户的还款总额、行为次数和平均还款金额"
    ],
    "result_fields": [
      "lr.loan_application_id",
      "SUM(lr.repayment_amount)",
      "COUNT(ub.id)",
      "AVG(lr.repayment_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT bank_name, bank_level, data_dt FROM bank_orgnization;",
    "question": "查询所有银行及其机构层级和数据日期。",
    "query_toks": [
      "SELECT",
      "bank_name,",
      "bank_level,",
      "data_dt",
      "FROM",
      "bank_orgnization;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "bank_name,",
      "bank_level,",
      "data_dt",
      "FROM",
      "bank_orgnization;"
    ],
    "question_toks": [
      "查询所有银行及其机构层级和数据日期。"
    ],
    "result_fields": [
      "bank_name",
      "bank_level",
      "data_dt"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH top_depositors AS (SELECT c.id, c.customer_name, c.occupation_id, dai.acct_bal FROM customer c JOIN deposit_account_info dai ON c.id_number = dai.cert_code ORDER BY dai.acct_bal DESC LIMIT (SELECT COUNT(*) * 0.1 FROM customer)) SELECT td.customer_name, td.acct_bal AS deposit_balance, td.occupation_id FROM top_depositors td LEFT JOIN loan_application la ON td.id = la.customer_id WHERE la.id IS NULL",
    "question": "找出存款余额前10%的客户中，尚未申请贷款的客户，列出他们的姓名、存款余额和职业。",
    "query_toks": [
      "WITH",
      "top_depositors",
      "AS",
      "(SELECT",
      "c.id,",
      "c.customer_name,",
      "c.occupation_id,",
      "dai.acct_bal",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "c.id_number",
      "=",
      "dai.cert_code",
      "ORDER",
      "BY",
      "dai.acct_bal",
      "DESC",
      "LIMIT",
      "(SELECT",
      "COUNT(*)",
      "*",
      "0.1",
      "FROM",
      "customer))",
      "SELECT",
      "td.customer_name,",
      "td.acct_bal",
      "AS",
      "deposit_balance,",
      "td.occupation_id",
      "FROM",
      "top_depositors",
      "td",
      "LEFT",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "td.id",
      "=",
      "la.customer_id",
      "WHERE",
      "la.id",
      "IS",
      "NULL"
    ],
    "query_toks_no_value": [
      "WITH",
      "top_depositors",
      "AS",
      "(SELECT",
      "c.id,",
      "c.customer_name,",
      "c.occupation_id,",
      "dai.acct_bal",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "c.id_number",
      "=",
      "dai.cert_code",
      "ORDER",
      "BY",
      "dai.acct_bal",
      "DESC",
      "LIMIT",
      "(SELECT",
      "COUNT(*)",
      "*",
      "0.1",
      "FROM",
      "customer))",
      "SELECT",
      "td.customer_name,",
      "td.acct_bal",
      "AS",
      "deposit_balance,",
      "td.occupation_id",
      "FROM",
      "top_depositors",
      "td",
      "LEFT",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "td.id",
      "=",
      "la.customer_id",
      "WHERE",
      "la.id",
      "IS",
      "NULL"
    ],
    "question_toks": [
      "找出存款余额前10%的客户中，尚未申请贷款的客户，列出他们的姓名、存款余额和职业。"
    ],
    "result_fields": [
      "c.id",
      "c.customer_name",
      "c.occupation_id",
      "dai.acct_bal"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT dai.org_nm, COUNT(CASE WHEN la.status = 'APPROVED' THEN 1 END) / COUNT(*) as approval_rate FROM loan_application la JOIN deposit_account_info dai ON la.customer_id = dai.cust_noeger GROUP BY dai.org_nm",
    "question": "计算每个网点的贷款申请成功率（已批准的申请数除以总申请数）。",
    "query_toks": [
      "SELECT",
      "dai.org_nm,",
      "COUNT(CASE",
      "WHEN",
      "la.status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "approval_rate",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "la.customer_id",
      "=",
      "dai.cust_noeger",
      "GROUP",
      "BY",
      "dai.org_nm"
    ],
    "query_toks_no_value": [
      "SELECT",
      "dai.org_nm,",
      "COUNT(CASE",
      "WHEN",
      "la.status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "approval_rate",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "la.customer_id",
      "=",
      "dai.cust_noeger",
      "GROUP",
      "BY",
      "dai.org_nm"
    ],
    "question_toks": [
      "计算每个网点的贷款申请成功率（已批准的申请数除以总申请数）。"
    ],
    "result_fields": [
      "dai.org_nm",
      "COUNT(CASE WHEN la.status = 'APPROVED' THEN 1 END) / COUNT(*)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT cust_name, acct_bal FROM deposit_account_info WHERE data_dt BETWEEN '2023-07-01' AND '2023-07-31';",
    "question": "获取所有客户在2023年7月的存款账户余额信息。",
    "query_toks": [
      "SELECT",
      "cust_name,",
      "acct_bal",
      "FROM",
      "deposit_account_info",
      "WHERE",
      "data_dt",
      "BETWEEN",
      "'2023-07-01'",
      "AND",
      "'2023-07-31';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "cust_name,",
      "acct_bal",
      "FROM",
      "deposit_account_info",
      "WHERE",
      "data_dt",
      "BETWEEN",
      "'2023-07-01'",
      "AND",
      "'2023-07-31';"
    ],
    "question_toks": [
      "获取所有客户在2023年7月的存款账户余额信息。"
    ],
    "result_fields": [
      "cust_name",
      "acct_bal"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT b.bank_name, d.cust_name, d.acct_bal, d.cur_type FROM bank_orgnization b JOIN deposit_account_info d ON b.bank_id = d.bank_no WHERE d.acct_bal > 100000 AND d.cur_type = 'USD' AND b.data_dt = '2023-06-30';",
    "question": "在2023年6月30日，哪些银行机构的存款账户余额超过100000元，并且这些账户的币种是美元？",
    "query_toks": [
      "SELECT",
      "b.bank_name,",
      "d.cust_name,",
      "d.acct_bal,",
      "d.cur_type",
      "FROM",
      "bank_orgnization",
      "b",
      "JOIN",
      "deposit_account_info",
      "d",
      "ON",
      "b.bank_id",
      "=",
      "d.bank_no",
      "WHERE",
      "d.acct_bal",
      ">",
      "100000",
      "AND",
      "d.cur_type",
      "=",
      "'USD'",
      "AND",
      "b.data_dt",
      "=",
      "'2023-06-30';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "b.bank_name,",
      "d.cust_name,",
      "d.acct_bal,",
      "d.cur_type",
      "FROM",
      "bank_orgnization",
      "b",
      "JOIN",
      "deposit_account_info",
      "d",
      "ON",
      "b.bank_id",
      "=",
      "d.bank_no",
      "WHERE",
      "d.acct_bal",
      ">",
      "100000",
      "AND",
      "d.cur_type",
      "=",
      "'USD'",
      "AND",
      "b.data_dt",
      "=",
      "'2023-06-30';"
    ],
    "question_toks": [
      "在2023年6月30日，哪些银行机构的存款账户余额超过100000元，并且这些账户的币种是美元？"
    ],
    "result_fields": [
      "b.bank_name",
      "d.cust_name",
      "d.acct_bal",
      "d.cur_type"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT d.cust_name, d.acct_type_code, d.acct_bal, c.curr_full_name FROM deposit_account_info d JOIN currency c ON d.cur_type = c.curr_code WHERE d.data_dt = '2024-07-19' AND d.acct_bal > 100000;",
    "question": "查询2024年7月19日所有存款账户信息中，账户余额大于100000的客户名称、账户类型、账户余额以及对应的币种全名。",
    "query_toks": [
      "SELECT",
      "d.cust_name,",
      "d.acct_type_code,",
      "d.acct_bal,",
      "c.curr_full_name",
      "FROM",
      "deposit_account_info",
      "d",
      "JOIN",
      "currency",
      "c",
      "ON",
      "d.cur_type",
      "=",
      "c.curr_code",
      "WHERE",
      "d.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "d.acct_bal",
      ">",
      "100000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.cust_name,",
      "d.acct_type_code,",
      "d.acct_bal,",
      "c.curr_full_name",
      "FROM",
      "deposit_account_info",
      "d",
      "JOIN",
      "currency",
      "c",
      "ON",
      "d.cur_type",
      "=",
      "c.curr_code",
      "WHERE",
      "d.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "d.acct_bal",
      ">",
      "100000;"
    ],
    "question_toks": [
      "查询2024年7月19日所有存款账户信息中，账户余额大于100000的客户名称、账户类型、账户余额以及对应的币种全名。"
    ],
    "result_fields": [
      "d.cust_name",
      "d.acct_type_code",
      "d.acct_bal",
      "c.curr_full_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT cust_nm, card_no FROM debit_card_information WHERE card_state = '正常' AND open_date > '2024-07-01' ORDER BY open_date DESC;",
    "question": "查询所有借记卡状态为'正常'且开户日期在2024年7月1日之后的客户名称和卡号，并按开户日期降序排列。",
    "query_toks": [
      "SELECT",
      "cust_nm,",
      "card_no",
      "FROM",
      "debit_card_information",
      "WHERE",
      "card_state",
      "=",
      "'正常'",
      "AND",
      "open_date",
      ">",
      "'2024-07-01'",
      "ORDER",
      "BY",
      "open_date",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "cust_nm,",
      "card_no",
      "FROM",
      "debit_card_information",
      "WHERE",
      "card_state",
      "=",
      "'正常'",
      "AND",
      "open_date",
      ">",
      "'2024-07-01'",
      "ORDER",
      "BY",
      "open_date",
      "DESC;"
    ],
    "question_toks": [
      "查询所有借记卡状态为'正常'且开户日期在2024年7月1日之后的客户名称和卡号，并按开户日期降序排列。"
    ],
    "result_fields": [
      "cust_nm",
      "card_no"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT deposit_name, deposit_type_id FROM deposit_type ORDER BY deposit_name;",
    "question": "列出所有存款类型产品名称及其对应的存款类型产品组号，并按照存款类型产品名称排序。",
    "query_toks": [
      "SELECT",
      "deposit_name,",
      "deposit_type_id",
      "FROM",
      "deposit_type",
      "ORDER",
      "BY",
      "deposit_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "deposit_name,",
      "deposit_type_id",
      "FROM",
      "deposit_type",
      "ORDER",
      "BY",
      "deposit_name;"
    ],
    "question_toks": [
      "列出所有存款类型产品名称及其对应的存款类型产品组号，并按照存款类型产品名称排序。"
    ],
    "result_fields": [
      "deposit_name",
      "deposit_type_id"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT source_customer_id, COUNT(*) AS transfer_count, MODE() WITHIN GROUP (ORDER BY transfer_amount) AS most_common_amount FROM transfer GROUP BY source_customer_id ORDER BY transfer_count DESC LIMIT 10;",
    "question": "找出转账次数最多的前10名客户及其最常用的转账金额",
    "query_toks": [
      "SELECT",
      "source_customer_id,",
      "COUNT(*)",
      "AS",
      "transfer_count,",
      "MODE()",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "transfer_amount)",
      "AS",
      "most_common_amount",
      "FROM",
      "transfer",
      "GROUP",
      "BY",
      "source_customer_id",
      "ORDER",
      "BY",
      "transfer_count",
      "DESC",
      "LIMIT",
      "10;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "source_customer_id,",
      "COUNT(*)",
      "AS",
      "transfer_count,",
      "MODE()",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "transfer_amount)",
      "AS",
      "most_common_amount",
      "FROM",
      "transfer",
      "GROUP",
      "BY",
      "source_customer_id",
      "ORDER",
      "BY",
      "transfer_count",
      "DESC",
      "LIMIT",
      "10;"
    ],
    "question_toks": [
      "找出转账次数最多的前10名客户及其最常用的转账金额"
    ],
    "result_fields": [
      "source_customer_id",
      "COUNT(*)",
      "MODE() WITHIN GROUP (ORDER BY transfer_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT COUNT(DISTINCT c.id) AS customer_count, SUM(ldi.loan_balance) AS total_loan_balance FROM customer c JOIN credit_card_data ccd ON c.id_number = ccd.custr_nbr JOIN loan_detail_info ldi ON c.id_number = ldi.cust_id WHERE c.province = '上海市' AND ccd.acct_sts = '正常';",
    "question": "查询上海市的客户中，有多少人拥有信用卡并且其信用卡账户状态为'正常'，同时这些客户的贷款余额总和是多少？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "c.id)",
      "AS",
      "customer_count,",
      "SUM(ldi.loan_balance)",
      "AS",
      "total_loan_balance",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "credit_card_data",
      "ccd",
      "ON",
      "c.id_number",
      "=",
      "ccd.custr_nbr",
      "JOIN",
      "loan_detail_info",
      "ldi",
      "ON",
      "c.id_number",
      "=",
      "ldi.cust_id",
      "WHERE",
      "c.province",
      "=",
      "'上海市'",
      "AND",
      "ccd.acct_sts",
      "=",
      "'正常';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "c.id)",
      "AS",
      "customer_count,",
      "SUM(ldi.loan_balance)",
      "AS",
      "total_loan_balance",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "credit_card_data",
      "ccd",
      "ON",
      "c.id_number",
      "=",
      "ccd.custr_nbr",
      "JOIN",
      "loan_detail_info",
      "ldi",
      "ON",
      "c.id_number",
      "=",
      "ldi.cust_id",
      "WHERE",
      "c.province",
      "=",
      "'上海市'",
      "AND",
      "ccd.acct_sts",
      "=",
      "'正常';"
    ],
    "question_toks": [
      "查询上海市的客户中，有多少人拥有信用卡并且其信用卡账户状态为'正常'，同时这些客户的贷款余额总和是多少？"
    ],
    "result_fields": [
      "COUNT(DISTINCT c.id)",
      "SUM(ldi.loan_balance)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ldi.reportid, ldi.loan_balance, flc.rs_type_name, ldi.loan_type FROM loan_detail_info ldi JOIN five_level_classification flc ON ldi.judgelevel = flc.rs_type_id WHERE ldi.loan_balance > 15000 AND ldi.dw_date = '2024-07-22';",
    "question": "查询2024年7月22日贷款余额大于15000的贷款明细信息，并显示对应的五级分类名称和贷款类型名称。",
    "query_toks": [
      "SELECT",
      "ldi.reportid,",
      "ldi.loan_balance,",
      "flc.rs_type_name,",
      "ldi.loan_type",
      "FROM",
      "loan_detail_info",
      "ldi",
      "JOIN",
      "five_level_classification",
      "flc",
      "ON",
      "ldi.judgelevel",
      "=",
      "flc.rs_type_id",
      "WHERE",
      "ldi.loan_balance",
      ">",
      "15000",
      "AND",
      "ldi.dw_date",
      "=",
      "'2024-07-22';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ldi.reportid,",
      "ldi.loan_balance,",
      "flc.rs_type_name,",
      "ldi.loan_type",
      "FROM",
      "loan_detail_info",
      "ldi",
      "JOIN",
      "five_level_classification",
      "flc",
      "ON",
      "ldi.judgelevel",
      "=",
      "flc.rs_type_id",
      "WHERE",
      "ldi.loan_balance",
      ">",
      "15000",
      "AND",
      "ldi.dw_date",
      "=",
      "'2024-07-22';"
    ],
    "question_toks": [
      "查询2024年7月22日贷款余额大于15000的贷款明细信息，并显示对应的五级分类名称和贷款类型名称。"
    ],
    "result_fields": [
      "ldi.reportid",
      "ldi.loan_balance",
      "flc.rs_type_name",
      "ldi.loan_type"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH customer_loans AS (SELECT c.id, MAX(CASE WHEN lt.loan_type_name = '房贷' THEN l.loan_amount END) as house_loan, MAX(CASE WHEN lt.loan_type_name = '车贷' THEN l.loan_amount END) as car_loan FROM customer c JOIN loan_application l ON c.id = l.customer_id JOIN loan_type lt ON l.loan_type_id = lt.id WHERE lt.loan_type_name IN ('房贷', '车贷') GROUP BY c.id) SELECT COUNT(*) as customer_count FROM customer_loans WHERE house_loan IS NOT NULL AND car_loan IS NOT NULL AND house_loan > car_loan",
    "question": "查询既有房贷又有车贷，并且房贷金额大于车贷金额的客户数量。",
    "query_toks": [
      "WITH",
      "customer_loans",
      "AS",
      "(SELECT",
      "c.id,",
      "MAX(CASE",
      "WHEN",
      "lt.loan_type_name",
      "=",
      "'房贷'",
      "THEN",
      "l.loan_amount",
      "END)",
      "as",
      "house_loan,",
      "MAX(CASE",
      "WHEN",
      "lt.loan_type_name",
      "=",
      "'车贷'",
      "THEN",
      "l.loan_amount",
      "END)",
      "as",
      "car_loan",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "l.loan_type_id",
      "=",
      "lt.id",
      "WHERE",
      "lt.loan_type_name",
      "IN",
      "('房贷',",
      "'车贷')",
      "GROUP",
      "BY",
      "c.id)",
      "SELECT",
      "COUNT(*)",
      "as",
      "customer_count",
      "FROM",
      "customer_loans",
      "WHERE",
      "house_loan",
      "IS",
      "NOT",
      "NULL",
      "AND",
      "car_loan",
      "IS",
      "NOT",
      "NULL",
      "AND",
      "house_loan",
      ">",
      "car_loan"
    ],
    "query_toks_no_value": [
      "WITH",
      "customer_loans",
      "AS",
      "(SELECT",
      "c.id,",
      "MAX(CASE",
      "WHEN",
      "lt.loan_type_name",
      "=",
      "'房贷'",
      "THEN",
      "l.loan_amount",
      "END)",
      "as",
      "house_loan,",
      "MAX(CASE",
      "WHEN",
      "lt.loan_type_name",
      "=",
      "'车贷'",
      "THEN",
      "l.loan_amount",
      "END)",
      "as",
      "car_loan",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "l.loan_type_id",
      "=",
      "lt.id",
      "WHERE",
      "lt.loan_type_name",
      "IN",
      "('房贷',",
      "'车贷')",
      "GROUP",
      "BY",
      "c.id)",
      "SELECT",
      "COUNT(*)",
      "as",
      "customer_count",
      "FROM",
      "customer_loans",
      "WHERE",
      "house_loan",
      "IS",
      "NOT",
      "NULL",
      "AND",
      "car_loan",
      "IS",
      "NOT",
      "NULL",
      "AND",
      "house_loan",
      ">",
      "car_loan"
    ],
    "question_toks": [
      "查询既有房贷又有车贷，并且房贷金额大于车贷金额的客户数量。"
    ],
    "result_fields": [
      "c.id",
      "MAX(CASE WHEN lt.loan_type_name = '房贷' THEN l.loan_amount END)",
      "MAX(CASE WHEN lt.loan_type_name = '车贷' THEN l.loan_amount END)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT dci.cust_nm, SUM(dci.current_bal + dci.fixed_bal) AS total_balance FROM debit_card_information dci JOIN bank_orgnization bo ON dci.bank_no = bo.bank_id WHERE dci.data_dt = '2024-07-19' AND bo.bank_name = '杭州上城区支行' GROUP BY dci.cust_nm ORDER BY total_balance DESC;",
    "question": "查询2024年7月19日杭州上城区支行的所有客户及其对应的借记卡余额总和，并按余额总和降序排列。",
    "query_toks": [
      "SELECT",
      "dci.cust_nm,",
      "SUM(dci.current_bal",
      "+",
      "dci.fixed_bal)",
      "AS",
      "total_balance",
      "FROM",
      "debit_card_information",
      "dci",
      "JOIN",
      "bank_orgnization",
      "bo",
      "ON",
      "dci.bank_no",
      "=",
      "bo.bank_id",
      "WHERE",
      "dci.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "bo.bank_name",
      "=",
      "'杭州上城区支行'",
      "GROUP",
      "BY",
      "dci.cust_nm",
      "ORDER",
      "BY",
      "total_balance",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "dci.cust_nm,",
      "SUM(dci.current_bal",
      "+",
      "dci.fixed_bal)",
      "AS",
      "total_balance",
      "FROM",
      "debit_card_information",
      "dci",
      "JOIN",
      "bank_orgnization",
      "bo",
      "ON",
      "dci.bank_no",
      "=",
      "bo.bank_id",
      "WHERE",
      "dci.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "bo.bank_name",
      "=",
      "'杭州上城区支行'",
      "GROUP",
      "BY",
      "dci.cust_nm",
      "ORDER",
      "BY",
      "total_balance",
      "DESC;"
    ],
    "question_toks": [
      "查询2024年7月19日杭州上城区支行的所有客户及其对应的借记卡余额总和，并按余额总和降序排列。"
    ],
    "result_fields": [
      "dci.cust_nm",
      "SUM(dci.current_bal + dci.fixed_bal)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT vouch_type, AVG(loan_amount) AS avg_loan_amount, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY loan_amount) AS median_loan_amount, PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY loan_amount) - PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY loan_amount) AS iqr_loan_amount FROM loan_detail_info GROUP BY vouch_type",
    "question": "统计每种担保方式下的平均贷款金额、中位数贷款金额和贷款金额的四分位差",
    "query_toks": [
      "SELECT",
      "vouch_type,",
      "AVG(loan_amount)",
      "AS",
      "avg_loan_amount,",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "loan_amount)",
      "AS",
      "median_loan_amount,",
      "PERCENTILE_CONT(0.75)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "loan_amount)",
      "-",
      "PERCENTILE_CONT(0.25)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "loan_amount)",
      "AS",
      "iqr_loan_amount",
      "FROM",
      "loan_detail_info",
      "GROUP",
      "BY",
      "vouch_type"
    ],
    "query_toks_no_value": [
      "SELECT",
      "vouch_type,",
      "AVG(loan_amount)",
      "AS",
      "avg_loan_amount,",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "loan_amount)",
      "AS",
      "median_loan_amount,",
      "PERCENTILE_CONT(0.75)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "loan_amount)",
      "-",
      "PERCENTILE_CONT(0.25)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "loan_amount)",
      "AS",
      "iqr_loan_amount",
      "FROM",
      "loan_detail_info",
      "GROUP",
      "BY",
      "vouch_type"
    ],
    "question_toks": [
      "统计每种担保方式下的平均贷款金额、中位数贷款金额和贷款金额的四分位差"
    ],
    "result_fields": [
      "vouch_type",
      "AVG(loan_amount)",
      "PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY loan_amount)",
      "PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY loan_amount) - PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY loan_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT SUM(t.transfer_amount) FROM transfer t JOIN loan_credit lc ON t.source_customer_id = lc.customer_id OR t.target_customer_id = lc.customer_id WHERE t.transfer_date = '2020-11-03' AND lc.credit_score > 0.8",
    "question": "在2020年11月3日，信用评分高于0.8的客户之间进行的转账总额是多少？",
    "query_toks": [
      "SELECT",
      "SUM(t.transfer_amount)",
      "FROM",
      "transfer",
      "t",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "t.source_customer_id",
      "=",
      "lc.customer_id",
      "OR",
      "t.target_customer_id",
      "=",
      "lc.customer_id",
      "WHERE",
      "t.transfer_date",
      "=",
      "'2020-11-03'",
      "AND",
      "lc.credit_score",
      ">",
      "0.8"
    ],
    "query_toks_no_value": [
      "SELECT",
      "SUM(t.transfer_amount)",
      "FROM",
      "transfer",
      "t",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "t.source_customer_id",
      "=",
      "lc.customer_id",
      "OR",
      "t.target_customer_id",
      "=",
      "lc.customer_id",
      "WHERE",
      "t.transfer_date",
      "=",
      "'2020-11-03'",
      "AND",
      "lc.credit_score",
      ">",
      "0.8"
    ],
    "question_toks": [
      "在2020年11月3日，信用评分高于0.8的客户之间进行的转账总额是多少？"
    ],
    "result_fields": [
      "SUM(t.transfer_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT COUNT(DISTINCT c.id) FROM customer c JOIN loan_application la ON c.id = la.customer_id JOIN occupation o ON c.occupation_id = o.id WHERE la.loan_amount > 50000 AND o.occupation_name = '护士'",
    "question": "申请贷款金额超过50000且职业是护士的客户有多少？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "c.id)",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "c.id",
      "=",
      "la.customer_id",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "WHERE",
      "la.loan_amount",
      ">",
      "50000",
      "AND",
      "o.occupation_name",
      "=",
      "'护士'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "c.id)",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "c.id",
      "=",
      "la.customer_id",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "WHERE",
      "la.loan_amount",
      ">",
      "50000",
      "AND",
      "o.occupation_name",
      "=",
      "'护士'"
    ],
    "question_toks": [
      "申请贷款金额超过50000且职业是护士的客户有多少？"
    ],
    "result_fields": [
      "COUNT(DISTINCT c.id)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ld.cust_id, ld.loan_amount FROM loan_detail_info ld WHERE ld.dw_date BETWEEN '2024-07-01' AND '2024-07-31';",
    "question": "查找所有在2024年7月的贷款申请及客户信息。",
    "query_toks": [
      "SELECT",
      "ld.cust_id,",
      "ld.loan_amount",
      "FROM",
      "loan_detail_info",
      "ld",
      "WHERE",
      "ld.dw_date",
      "BETWEEN",
      "'2024-07-01'",
      "AND",
      "'2024-07-31';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ld.cust_id,",
      "ld.loan_amount",
      "FROM",
      "loan_detail_info",
      "ld",
      "WHERE",
      "ld.dw_date",
      "BETWEEN",
      "'2024-07-01'",
      "AND",
      "'2024-07-31';"
    ],
    "question_toks": [
      "查找所有在2024年7月的贷款申请及客户信息。"
    ],
    "result_fields": [
      "ld.cust_id",
      "ld.loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT DATE_TRUNC('month', apply_date) as month, COUNT(*) as total_applications, SUM(CASE WHEN status = 'APPROVED' THEN 1 ELSE 0 END) / COUNT(*) as approval_rate FROM loan_application GROUP BY month ORDER BY month",
    "question": "每个月度的贷款申请通过率是多少？",
    "query_toks": [
      "SELECT",
      "DATE_TRUNC('month',",
      "apply_date)",
      "as",
      "month,",
      "COUNT(*)",
      "as",
      "total_applications,",
      "SUM(CASE",
      "WHEN",
      "status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "approval_rate",
      "FROM",
      "loan_application",
      "GROUP",
      "BY",
      "month",
      "ORDER",
      "BY",
      "month"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DATE_TRUNC('month',",
      "apply_date)",
      "as",
      "month,",
      "COUNT(*)",
      "as",
      "total_applications,",
      "SUM(CASE",
      "WHEN",
      "status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "approval_rate",
      "FROM",
      "loan_application",
      "GROUP",
      "BY",
      "month",
      "ORDER",
      "BY",
      "month"
    ],
    "question_toks": [
      "每个月度的贷款申请通过率是多少？"
    ],
    "result_fields": [
      "DATE_TRUNC('month', apply_date)",
      "COUNT(*)",
      "SUM(CASE WHEN status = 'APPROVED' THEN 1 ELSE 0 END) / COUNT(*)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT b.bank_name, SUM(f.wealth_bal) AS total_wealth_bal FROM financial_products f JOIN bank_orgnization b ON f.bank_no = b.bank_id WHERE f.data_dt = '2024-07-02' AND f.cast_type = '对公' GROUP BY b.bank_name;",
    "question": "查询2024年7月2日所有对公客户的理财余额总和，并按银行机构名称分组显示。",
    "query_toks": [
      "SELECT",
      "b.bank_name,",
      "SUM(f.wealth_bal)",
      "AS",
      "total_wealth_bal",
      "FROM",
      "financial_products",
      "f",
      "JOIN",
      "bank_orgnization",
      "b",
      "ON",
      "f.bank_no",
      "=",
      "b.bank_id",
      "WHERE",
      "f.data_dt",
      "=",
      "'2024-07-02'",
      "AND",
      "f.cast_type",
      "=",
      "'对公'",
      "GROUP",
      "BY",
      "b.bank_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "b.bank_name,",
      "SUM(f.wealth_bal)",
      "AS",
      "total_wealth_bal",
      "FROM",
      "financial_products",
      "f",
      "JOIN",
      "bank_orgnization",
      "b",
      "ON",
      "f.bank_no",
      "=",
      "b.bank_id",
      "WHERE",
      "f.data_dt",
      "=",
      "'2024-07-02'",
      "AND",
      "f.cast_type",
      "=",
      "'对公'",
      "GROUP",
      "BY",
      "b.bank_name;"
    ],
    "question_toks": [
      "查询2024年7月2日所有对公客户的理财余额总和，并按银行机构名称分组显示。"
    ],
    "result_fields": [
      "b.bank_name",
      "SUM(f.wealth_bal)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, l.status FROM customer c LEFT JOIN loan_application l ON c.id = l.customer_id;",
    "question": "查询所有客户及其贷款申请状态。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "l.status",
      "FROM",
      "customer",
      "c",
      "LEFT",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "l.status",
      "FROM",
      "customer",
      "c",
      "LEFT",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id;"
    ],
    "question_toks": [
      "查询所有客户及其贷款申请状态。"
    ],
    "result_fields": [
      "c.customer_name",
      "l.status"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT lt.loan_type_name, COUNT(la.customer_id) AS customer_count, SUM(la.loan_amount) AS total_loan_amount FROM loan_type lt JOIN loan_application la ON lt.id = la.loan_type_id GROUP BY lt.loan_type_name;",
    "question": "统计各贷款类型的客户数量和贷款总额。",
    "query_toks": [
      "SELECT",
      "lt.loan_type_name,",
      "COUNT(la.customer_id)",
      "AS",
      "customer_count,",
      "SUM(la.loan_amount)",
      "AS",
      "total_loan_amount",
      "FROM",
      "loan_type",
      "lt",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lt.id",
      "=",
      "la.loan_type_id",
      "GROUP",
      "BY",
      "lt.loan_type_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lt.loan_type_name,",
      "COUNT(la.customer_id)",
      "AS",
      "customer_count,",
      "SUM(la.loan_amount)",
      "AS",
      "total_loan_amount",
      "FROM",
      "loan_type",
      "lt",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lt.id",
      "=",
      "la.loan_type_id",
      "GROUP",
      "BY",
      "lt.loan_type_name;"
    ],
    "question_toks": [
      "统计各贷款类型的客户数量和贷款总额。"
    ],
    "result_fields": [
      "lt.loan_type_name",
      "COUNT(la.customer_id)",
      "SUM(la.loan_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT CASE WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 0 AND 20 THEN '0-20' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 21 AND 40 THEN '21-40' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 41 AND 60 THEN '41-60' ELSE '61+' END as age_group, COUNT(CASE WHEN l.status = 'APPROVED' THEN 1 END) / COUNT(*) as approval_rate FROM customer c JOIN loan_application l ON c.id = l.customer_id GROUP BY age_group ORDER BY age_group",
    "question": "计算每个年龄段（0-20，21-40，41-60，61+）的贷款申请通过率。",
    "query_toks": [
      "SELECT",
      "CASE",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "0",
      "AND",
      "20",
      "THEN",
      "'0-20'",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "21",
      "AND",
      "40",
      "THEN",
      "'21-40'",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "41",
      "AND",
      "60",
      "THEN",
      "'41-60'",
      "ELSE",
      "'61+'",
      "END",
      "as",
      "age_group,",
      "COUNT(CASE",
      "WHEN",
      "l.status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "approval_rate",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "GROUP",
      "BY",
      "age_group",
      "ORDER",
      "BY",
      "age_group"
    ],
    "query_toks_no_value": [
      "SELECT",
      "CASE",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "0",
      "AND",
      "20",
      "THEN",
      "'0-20'",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "21",
      "AND",
      "40",
      "THEN",
      "'21-40'",
      "WHEN",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "41",
      "AND",
      "60",
      "THEN",
      "'41-60'",
      "ELSE",
      "'61+'",
      "END",
      "as",
      "age_group,",
      "COUNT(CASE",
      "WHEN",
      "l.status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "approval_rate",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "GROUP",
      "BY",
      "age_group",
      "ORDER",
      "BY",
      "age_group"
    ],
    "question_toks": [
      "计算每个年龄段（0-20，21-40，41-60，61+）的贷款申请通过率。"
    ],
    "result_fields": [
      "CASE WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 0 AND 20 THEN '0-20' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 21 AND 40 THEN '21-40' WHEN DATE_PART('year', AGE(date('now'), c.birth_date)) BETWEEN 41 AND 60 THEN '41-60' ELSE '61+' END",
      "COUNT(CASE WHEN l.status = 'APPROVED' THEN 1 END) / COUNT(*)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT repayment_amount, repayment_date FROM loan_repayment WHERE loan_application_id = 323803;",
    "question": "查询贷款申请ID为323803的还款金额和日期。",
    "query_toks": [
      "SELECT",
      "repayment_amount,",
      "repayment_date",
      "FROM",
      "loan_repayment",
      "WHERE",
      "loan_application_id",
      "=",
      "323803;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "repayment_amount,",
      "repayment_date",
      "FROM",
      "loan_repayment",
      "WHERE",
      "loan_application_id",
      "=",
      "323803;"
    ],
    "question_toks": [
      "查询贷款申请ID为323803的还款金额和日期。"
    ],
    "result_fields": [
      "repayment_amount",
      "repayment_date"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT lc.customer_id, lc.credit_score FROM loan_credit lc JOIN bank_orgnization bo ON lc.credit_date = bo.data_dt WHERE bo.bank_name = '杭州上城区支行' AND bo.data_dt = '2023-06-30' ORDER BY lc.credit_score DESC LIMIT 1;",
    "question": "在2023年6月30日，杭州上城区支行的客户中，信用分最高的客户ID和信用分是多少？",
    "query_toks": [
      "SELECT",
      "lc.customer_id,",
      "lc.credit_score",
      "FROM",
      "loan_credit",
      "lc",
      "JOIN",
      "bank_orgnization",
      "bo",
      "ON",
      "lc.credit_date",
      "=",
      "bo.data_dt",
      "WHERE",
      "bo.bank_name",
      "=",
      "'杭州上城区支行'",
      "AND",
      "bo.data_dt",
      "=",
      "'2023-06-30'",
      "ORDER",
      "BY",
      "lc.credit_score",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lc.customer_id,",
      "lc.credit_score",
      "FROM",
      "loan_credit",
      "lc",
      "JOIN",
      "bank_orgnization",
      "bo",
      "ON",
      "lc.credit_date",
      "=",
      "bo.data_dt",
      "WHERE",
      "bo.bank_name",
      "=",
      "'杭州上城区支行'",
      "AND",
      "bo.data_dt",
      "=",
      "'2023-06-30'",
      "ORDER",
      "BY",
      "lc.credit_score",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年6月30日，杭州上城区支行的客户中，信用分最高的客户ID和信用分是多少？"
    ],
    "result_fields": [
      "lc.customer_id",
      "lc.credit_score"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM loan_repayment WHERE repayment_date < '2020-02-25';",
    "question": "获取用户还款信息中还款日期在2020-02-25之前的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "loan_repayment",
      "WHERE",
      "repayment_date",
      "<",
      "'2020-02-25';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "loan_repayment",
      "WHERE",
      "repayment_date",
      "<",
      "'2020-02-25';"
    ],
    "question_toks": [
      "获取用户还款信息中还款日期在2020-02-25之前的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT t.transfer_amount, t.transfer_date FROM transfer t JOIN customer c ON t.source_customer_id = c.id WHERE c.customer_name = '关飞';",
    "question": "查找客户关飞的所有转账记录。",
    "query_toks": [
      "SELECT",
      "t.transfer_amount,",
      "t.transfer_date",
      "FROM",
      "transfer",
      "t",
      "JOIN",
      "customer",
      "c",
      "ON",
      "t.source_customer_id",
      "=",
      "c.id",
      "WHERE",
      "c.customer_name",
      "=",
      "'关飞';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.transfer_amount,",
      "t.transfer_date",
      "FROM",
      "transfer",
      "t",
      "JOIN",
      "customer",
      "c",
      "ON",
      "t.source_customer_id",
      "=",
      "c.id",
      "WHERE",
      "c.customer_name",
      "=",
      "'关飞';"
    ],
    "question_toks": [
      "查找客户关飞的所有转账记录。"
    ],
    "result_fields": [
      "t.transfer_amount",
      "t.transfer_date"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, c.id_number, s.loan_status_name FROM customer c JOIN loan_application a ON c.id = a.customer_id JOIN loan_status s ON a.status = s.loan_status_code;",
    "question": "查找所有客户的姓名、身份证号及其贷款状态。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "c.id_number,",
      "s.loan_status_name",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "a",
      "ON",
      "c.id",
      "=",
      "a.customer_id",
      "JOIN",
      "loan_status",
      "s",
      "ON",
      "a.status",
      "=",
      "s.loan_status_code;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "c.id_number,",
      "s.loan_status_name",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "a",
      "ON",
      "c.id",
      "=",
      "a.customer_id",
      "JOIN",
      "loan_status",
      "s",
      "ON",
      "a.status",
      "=",
      "s.loan_status_code;"
    ],
    "question_toks": [
      "查找所有客户的姓名、身份证号及其贷款状态。"
    ],
    "result_fields": [
      "c.customer_name",
      "c.id_number",
      "s.loan_status_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM user_behavior WHERE behavior_type LIKE '%ILL%';",
    "question": "获取所有用户行为中行为类型包含'ILL'的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "user_behavior",
      "WHERE",
      "behavior_type",
      "LIKE",
      "'%ILL%';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "user_behavior",
      "WHERE",
      "behavior_type",
      "LIKE",
      "'%ILL%';"
    ],
    "question_toks": [
      "获取所有用户行为中行为类型包含'ILL'的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM transfer ORDER BY transfer_amount ASC;",
    "question": "获取所有转账记录及其描述，按转账金额升序排列。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "transfer",
      "ORDER",
      "BY",
      "transfer_amount",
      "ASC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "transfer",
      "ORDER",
      "BY",
      "transfer_amount",
      "ASC;"
    ],
    "question_toks": [
      "获取所有转账记录及其描述，按转账金额升序排列。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM user_behavior WHERE description IS NOT NULL;",
    "question": "查询用户行为中描述不为空的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "user_behavior",
      "WHERE",
      "description",
      "IS",
      "NOT",
      "NULL;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "user_behavior",
      "WHERE",
      "description",
      "IS",
      "NOT",
      "NULL;"
    ],
    "question_toks": [
      "查询用户行为中描述不为空的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT current_bal FROM debit_card_information WHERE cust_nm = 'James Taylor' AND bank_nm = '杭州上城区支行' AND data_dt = '2024-07-09';",
    "question": "2024年7月9日，杭州上城区支行的客户James Taylor的借记卡余额是多少？",
    "query_toks": [
      "SELECT",
      "current_bal",
      "FROM",
      "debit_card_information",
      "WHERE",
      "cust_nm",
      "=",
      "'James",
      "Taylor'",
      "AND",
      "bank_nm",
      "=",
      "'杭州上城区支行'",
      "AND",
      "data_dt",
      "=",
      "'2024-07-09';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "current_bal",
      "FROM",
      "debit_card_information",
      "WHERE",
      "cust_nm",
      "=",
      "'James",
      "Taylor'",
      "AND",
      "bank_nm",
      "=",
      "'杭州上城区支行'",
      "AND",
      "data_dt",
      "=",
      "'2024-07-09';"
    ],
    "question_toks": [
      "2024年7月9日，杭州上城区支行的客户James",
      "Taylor的借记卡余额是多少？"
    ],
    "result_fields": [
      "current_bal"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM loan_type WHERE description ILIKE '%Loan%';",
    "question": "查询描述中包含'Loan'的贷款类型",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "loan_type",
      "WHERE",
      "description",
      "ILIKE",
      "'%Loan%';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "loan_type",
      "WHERE",
      "description",
      "ILIKE",
      "'%Loan%';"
    ],
    "question_toks": [
      "查询描述中包含'Loan'的贷款类型"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.curr_code, c.curr_full_name, COUNT(ccd.curr_num) AS account_count FROM currency c LEFT JOIN credit_card_data ccd ON c.curr_code = ccd.curr_num GROUP BY c.curr_code, c.curr_full_name;",
    "question": "查询所有信用卡账户的币种代码及其对应的币种全名，并统计每个币种代码下的账户数量。",
    "query_toks": [
      "SELECT",
      "c.curr_code,",
      "c.curr_full_name,",
      "COUNT(ccd.curr_num)",
      "AS",
      "account_count",
      "FROM",
      "currency",
      "c",
      "LEFT",
      "JOIN",
      "credit_card_data",
      "ccd",
      "ON",
      "c.curr_code",
      "=",
      "ccd.curr_num",
      "GROUP",
      "BY",
      "c.curr_code,",
      "c.curr_full_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.curr_code,",
      "c.curr_full_name,",
      "COUNT(ccd.curr_num)",
      "AS",
      "account_count",
      "FROM",
      "currency",
      "c",
      "LEFT",
      "JOIN",
      "credit_card_data",
      "ccd",
      "ON",
      "c.curr_code",
      "=",
      "ccd.curr_num",
      "GROUP",
      "BY",
      "c.curr_code,",
      "c.curr_full_name;"
    ],
    "question_toks": [
      "查询所有信用卡账户的币种代码及其对应的币种全名，并统计每个币种代码下的账户数量。"
    ],
    "result_fields": [
      "c.curr_code",
      "c.curr_full_name",
      "COUNT(ccd.curr_num)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT AVG(f.wealth_t_m_avg_bal_a) AS avg_guaranteed_balance FROM financial_products f;",
    "question": "查询所有银行机构的理财产品中，保本理财月日均余额的平均值。",
    "query_toks": [
      "SELECT",
      "AVG(f.wealth_t_m_avg_bal_a)",
      "AS",
      "avg_guaranteed_balance",
      "FROM",
      "financial_products",
      "f;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "AVG(f.wealth_t_m_avg_bal_a)",
      "AS",
      "avg_guaranteed_balance",
      "FROM",
      "financial_products",
      "f;"
    ],
    "question_toks": [
      "查询所有银行机构的理财产品中，保本理财月日均余额的平均值。"
    ],
    "result_fields": [
      "AVG(f.wealth_t_m_avg_bal_a)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT lt.loan_type_name, lt.description FROM loan_status ls JOIN loan_type lt ON ls.id = lt.id WHERE ls.loan_status_code = 'APPROVED';",
    "question": "列出所有贷款状态为'APPROVED'的贷款类型名称及其描述",
    "query_toks": [
      "SELECT",
      "lt.loan_type_name,",
      "lt.description",
      "FROM",
      "loan_status",
      "ls",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "ls.id",
      "=",
      "lt.id",
      "WHERE",
      "ls.loan_status_code",
      "=",
      "'APPROVED';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lt.loan_type_name,",
      "lt.description",
      "FROM",
      "loan_status",
      "ls",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "ls.id",
      "=",
      "lt.id",
      "WHERE",
      "ls.loan_status_code",
      "=",
      "'APPROVED';"
    ],
    "question_toks": [
      "列出所有贷款状态为'APPROVED'的贷款类型名称及其描述"
    ],
    "result_fields": [
      "lt.loan_type_name",
      "lt.description"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, DATE_PART('year', AGE(date('now'), c.birth_date)) as age, l.loan_amount FROM customer c JOIN loan_application l ON c.id = l.customer_id WHERE EXTRACT(YEAR FROM l.apply_date) = 2023 ORDER BY age DESC LIMIT 5",
    "question": "查询2023年申请贷款的客户中，年龄最大的前5名客户的姓名、年龄和贷款金额。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "as",
      "age,",
      "l.loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "l.apply_date)",
      "=",
      "2023",
      "ORDER",
      "BY",
      "age",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "DATE_PART('year',",
      "AGE(date('now'),",
      "c.birth_date))",
      "as",
      "age,",
      "l.loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "l.apply_date)",
      "=",
      "2023",
      "ORDER",
      "BY",
      "age",
      "DESC",
      "LIMIT",
      "5"
    ],
    "question_toks": [
      "查询2023年申请贷款的客户中，年龄最大的前5名客户的姓名、年龄和贷款金额。"
    ],
    "result_fields": [
      "c.customer_name",
      "DATE_PART('year', AGE(date('now'), c.birth_date))",
      "l.loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT COUNT(DISTINCT lc.customer_id) FROM loan_credit lc JOIN financial_products fp ON lc.customer_id = fp.cust_no JOIN bank_orgnization bo ON fp.bank_no = bo.bank_id WHERE bo.bank_name = '杭州上城区支行' AND bo.data_dt = '2023-06-30' AND lc.credit_score > 0.75;",
    "question": "在2023年6月30日，杭州上城区支行的客户中，信用评分大于0.75的客户数量是多少？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "lc.customer_id)",
      "FROM",
      "loan_credit",
      "lc",
      "JOIN",
      "financial_products",
      "fp",
      "ON",
      "lc.customer_id",
      "=",
      "fp.cust_no",
      "JOIN",
      "bank_orgnization",
      "bo",
      "ON",
      "fp.bank_no",
      "=",
      "bo.bank_id",
      "WHERE",
      "bo.bank_name",
      "=",
      "'杭州上城区支行'",
      "AND",
      "bo.data_dt",
      "=",
      "'2023-06-30'",
      "AND",
      "lc.credit_score",
      ">",
      "0.75;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "lc.customer_id)",
      "FROM",
      "loan_credit",
      "lc",
      "JOIN",
      "financial_products",
      "fp",
      "ON",
      "lc.customer_id",
      "=",
      "fp.cust_no",
      "JOIN",
      "bank_orgnization",
      "bo",
      "ON",
      "fp.bank_no",
      "=",
      "bo.bank_id",
      "WHERE",
      "bo.bank_name",
      "=",
      "'杭州上城区支行'",
      "AND",
      "bo.data_dt",
      "=",
      "'2023-06-30'",
      "AND",
      "lc.credit_score",
      ">",
      "0.75;"
    ],
    "question_toks": [
      "在2023年6月30日，杭州上城区支行的客户中，信用评分大于0.75的客户数量是多少？"
    ],
    "result_fields": [
      "COUNT(DISTINCT lc.customer_id)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT rs_type, COUNT(*) as count FROM five_level_classification WHERE data_dt = '2024-07-22' GROUP BY rs_type ORDER BY count DESC",
    "question": "2024年7月22日的五级分类中，各个大类的数量分布如何？",
    "query_toks": [
      "SELECT",
      "rs_type,",
      "COUNT(*)",
      "as",
      "count",
      "FROM",
      "five_level_classification",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-22'",
      "GROUP",
      "BY",
      "rs_type",
      "ORDER",
      "BY",
      "count",
      "DESC"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rs_type,",
      "COUNT(*)",
      "as",
      "count",
      "FROM",
      "five_level_classification",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-22'",
      "GROUP",
      "BY",
      "rs_type",
      "ORDER",
      "BY",
      "count",
      "DESC"
    ],
    "question_toks": [
      "2024年7月22日的五级分类中，各个大类的数量分布如何？"
    ],
    "result_fields": [
      "rs_type",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT flc.rs_type_name, COUNT(ub.id) AS behavior_count FROM five_level_classification flc LEFT JOIN user_behavior ub ON flc.rs_type_name = ub.behavior_type GROUP BY flc.rs_type_name;",
    "question": "统计不同五级分类下的用户行为数量，按分类名称分组。",
    "query_toks": [
      "SELECT",
      "flc.rs_type_name,",
      "COUNT(ub.id)",
      "AS",
      "behavior_count",
      "FROM",
      "five_level_classification",
      "flc",
      "LEFT",
      "JOIN",
      "user_behavior",
      "ub",
      "ON",
      "flc.rs_type_name",
      "=",
      "ub.behavior_type",
      "GROUP",
      "BY",
      "flc.rs_type_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "flc.rs_type_name,",
      "COUNT(ub.id)",
      "AS",
      "behavior_count",
      "FROM",
      "five_level_classification",
      "flc",
      "LEFT",
      "JOIN",
      "user_behavior",
      "ub",
      "ON",
      "flc.rs_type_name",
      "=",
      "ub.behavior_type",
      "GROUP",
      "BY",
      "flc.rs_type_name;"
    ],
    "question_toks": [
      "统计不同五级分类下的用户行为数量，按分类名称分组。"
    ],
    "result_fields": [
      "flc.rs_type_name",
      "COUNT(ub.id)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM transfer ORDER BY transfer_date;",
    "question": "查看所有转账记录，按转账日期排序。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "transfer",
      "ORDER",
      "BY",
      "transfer_date;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "transfer",
      "ORDER",
      "BY",
      "transfer_date;"
    ],
    "question_toks": [
      "查看所有转账记录，按转账日期排序。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT card_type, card_type_nm, card_state FROM debit_card_information WHERE data_dt = '2024-07-09' AND bank_nm = '杭州上城区支行' AND cust_nm = 'James Taylor';",
    "question": "在2024年7月，杭州上城区支行的客户James Taylor的借记卡中，有哪些卡种类代码对应的卡种类名称和卡状态？",
    "query_toks": [
      "SELECT",
      "card_type,",
      "card_type_nm,",
      "card_state",
      "FROM",
      "debit_card_information",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-09'",
      "AND",
      "bank_nm",
      "=",
      "'杭州上城区支行'",
      "AND",
      "cust_nm",
      "=",
      "'James",
      "Taylor';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "card_type,",
      "card_type_nm,",
      "card_state",
      "FROM",
      "debit_card_information",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-09'",
      "AND",
      "bank_nm",
      "=",
      "'杭州上城区支行'",
      "AND",
      "cust_nm",
      "=",
      "'James",
      "Taylor';"
    ],
    "question_toks": [
      "在2024年7月，杭州上城区支行的客户James",
      "Taylor的借记卡中，有哪些卡种类代码对应的卡种类名称和卡状态？"
    ],
    "result_fields": [
      "card_type",
      "card_type_nm",
      "card_state"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT SUM(wealth_bal) FROM financial_products WHERE data_dt = '2024-07-02' AND currency = 'USD';",
    "question": "查询2024年7月2日所有理财产品中，币种为美元（USD）的理财余额总和是多少？",
    "query_toks": [
      "SELECT",
      "SUM(wealth_bal)",
      "FROM",
      "financial_products",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-02'",
      "AND",
      "currency",
      "=",
      "'USD';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "SUM(wealth_bal)",
      "FROM",
      "financial_products",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-02'",
      "AND",
      "currency",
      "=",
      "'USD';"
    ],
    "question_toks": [
      "查询2024年7月2日所有理财产品中，币种为美元（USD）的理财余额总和是多少？"
    ],
    "result_fields": [
      "SUM(wealth_bal)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ub.customer_id, COUNT(ub.id) AS behavior_count, MAX(lc.credit_score) AS latest_credit_score FROM user_behavior ub JOIN loan_credit lc ON ub.customer_id = lc.customer_id GROUP BY ub.customer_id ORDER BY ub.customer_id;",
    "question": "获取每个客户的行为次数和最新信用评分，按客户ID排序。",
    "query_toks": [
      "SELECT",
      "ub.customer_id,",
      "COUNT(ub.id)",
      "AS",
      "behavior_count,",
      "MAX(lc.credit_score)",
      "AS",
      "latest_credit_score",
      "FROM",
      "user_behavior",
      "ub",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "ub.customer_id",
      "=",
      "lc.customer_id",
      "GROUP",
      "BY",
      "ub.customer_id",
      "ORDER",
      "BY",
      "ub.customer_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ub.customer_id,",
      "COUNT(ub.id)",
      "AS",
      "behavior_count,",
      "MAX(lc.credit_score)",
      "AS",
      "latest_credit_score",
      "FROM",
      "user_behavior",
      "ub",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "ub.customer_id",
      "=",
      "lc.customer_id",
      "GROUP",
      "BY",
      "ub.customer_id",
      "ORDER",
      "BY",
      "ub.customer_id;"
    ],
    "question_toks": [
      "获取每个客户的行为次数和最新信用评分，按客户ID排序。"
    ],
    "result_fields": [
      "ub.customer_id",
      "COUNT(ub.id)",
      "MAX(lc.credit_score)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT t.transfer_amount, c1.customer_name AS source_customer_name, c2.customer_name AS target_customer_name FROM transfer t JOIN customer c1 ON t.source_customer_id = c1.id JOIN customer c2 ON t.target_customer_id = c2.id WHERE t.transfer_date = '2023-06-30' AND t.transfer_amount > 1000;",
    "question": "查询2023年6月30日所有转账金额大于1000的转账记录，并显示转账双方的客户姓名和转账金额。",
    "query_toks": [
      "SELECT",
      "t.transfer_amount,",
      "c1.customer_name",
      "AS",
      "source_customer_name,",
      "c2.customer_name",
      "AS",
      "target_customer_name",
      "FROM",
      "transfer",
      "t",
      "JOIN",
      "customer",
      "c1",
      "ON",
      "t.source_customer_id",
      "=",
      "c1.id",
      "JOIN",
      "customer",
      "c2",
      "ON",
      "t.target_customer_id",
      "=",
      "c2.id",
      "WHERE",
      "t.transfer_date",
      "=",
      "'2023-06-30'",
      "AND",
      "t.transfer_amount",
      ">",
      "1000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.transfer_amount,",
      "c1.customer_name",
      "AS",
      "source_customer_name,",
      "c2.customer_name",
      "AS",
      "target_customer_name",
      "FROM",
      "transfer",
      "t",
      "JOIN",
      "customer",
      "c1",
      "ON",
      "t.source_customer_id",
      "=",
      "c1.id",
      "JOIN",
      "customer",
      "c2",
      "ON",
      "t.target_customer_id",
      "=",
      "c2.id",
      "WHERE",
      "t.transfer_date",
      "=",
      "'2023-06-30'",
      "AND",
      "t.transfer_amount",
      ">",
      "1000;"
    ],
    "question_toks": [
      "查询2023年6月30日所有转账金额大于1000的转账记录，并显示转账双方的客户姓名和转账金额。"
    ],
    "result_fields": [
      "t.transfer_amount",
      "c1.customer_name",
      "c2.customer_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM customer WHERE customer_name = '饶丽';",
    "question": "获取客户姓名为饶丽的所有信息。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "customer",
      "WHERE",
      "customer_name",
      "=",
      "'饶丽';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "customer",
      "WHERE",
      "customer_name",
      "=",
      "'饶丽';"
    ],
    "question_toks": [
      "获取客户姓名为饶丽的所有信息。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT d.card_no, d.cust_nm FROM debit_card_information d WHERE d.data_dt = '2024-07-14' AND d.card_state = '正常';",
    "question": "查找在2024年7月14日所有正常状态的借记卡及其对应的客户名称。",
    "query_toks": [
      "SELECT",
      "d.card_no,",
      "d.cust_nm",
      "FROM",
      "debit_card_information",
      "d",
      "WHERE",
      "d.data_dt",
      "=",
      "'2024-07-14'",
      "AND",
      "d.card_state",
      "=",
      "'正常';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.card_no,",
      "d.cust_nm",
      "FROM",
      "debit_card_information",
      "d",
      "WHERE",
      "d.data_dt",
      "=",
      "'2024-07-14'",
      "AND",
      "d.card_state",
      "=",
      "'正常';"
    ],
    "question_toks": [
      "查找在2024年7月14日所有正常状态的借记卡及其对应的客户名称。"
    ],
    "result_fields": [
      "d.card_no",
      "d.cust_nm"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ldi.cust_id, ldi.loan_balance, flc.rs_type_name, c.curr_full_name FROM loan_detail_info ldi JOIN five_level_classification flc ON ldi.judgelevel = flc.rs_type_id JOIN currency c ON ldi.currency_type = c.curr_code WHERE ldi.dw_date = '2024-07-19' AND ldi.loan_balance > 500000 ORDER BY ldi.loan_balance DESC;",
    "question": "查询2024年7月19日所有贷款余额超过500000的客户及其对应的五级分类名称和币种全名，并按贷款余额降序排列。",
    "query_toks": [
      "SELECT",
      "ldi.cust_id,",
      "ldi.loan_balance,",
      "flc.rs_type_name,",
      "c.curr_full_name",
      "FROM",
      "loan_detail_info",
      "ldi",
      "JOIN",
      "five_level_classification",
      "flc",
      "ON",
      "ldi.judgelevel",
      "=",
      "flc.rs_type_id",
      "JOIN",
      "currency",
      "c",
      "ON",
      "ldi.currency_type",
      "=",
      "c.curr_code",
      "WHERE",
      "ldi.dw_date",
      "=",
      "'2024-07-19'",
      "AND",
      "ldi.loan_balance",
      ">",
      "500000",
      "ORDER",
      "BY",
      "ldi.loan_balance",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ldi.cust_id,",
      "ldi.loan_balance,",
      "flc.rs_type_name,",
      "c.curr_full_name",
      "FROM",
      "loan_detail_info",
      "ldi",
      "JOIN",
      "five_level_classification",
      "flc",
      "ON",
      "ldi.judgelevel",
      "=",
      "flc.rs_type_id",
      "JOIN",
      "currency",
      "c",
      "ON",
      "ldi.currency_type",
      "=",
      "c.curr_code",
      "WHERE",
      "ldi.dw_date",
      "=",
      "'2024-07-19'",
      "AND",
      "ldi.loan_balance",
      ">",
      "500000",
      "ORDER",
      "BY",
      "ldi.loan_balance",
      "DESC;"
    ],
    "question_toks": [
      "查询2024年7月19日所有贷款余额超过500000的客户及其对应的五级分类名称和币种全名，并按贷款余额降序排列。"
    ],
    "result_fields": [
      "ldi.cust_id",
      "ldi.loan_balance",
      "flc.rs_type_name",
      "c.curr_full_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT COUNT(*) FROM deposit_account_info dai JOIN bank_orgnization bo ON dai.bank_no = bo.bank_id WHERE dai.data_dt = '2024-07-19' AND dai.acct_bal > 100000 AND dai.gender_code = '男' AND bo.bank_name = '沈阳分行';",
    "question": "在2024年7月19日，沈阳分行的所有客户中，有多少客户的账户余额超过100000元，并且他们的性别是男性？",
    "query_toks": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "deposit_account_info",
      "dai",
      "JOIN",
      "bank_orgnization",
      "bo",
      "ON",
      "dai.bank_no",
      "=",
      "bo.bank_id",
      "WHERE",
      "dai.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "dai.acct_bal",
      ">",
      "100000",
      "AND",
      "dai.gender_code",
      "=",
      "'男'",
      "AND",
      "bo.bank_name",
      "=",
      "'沈阳分行';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "deposit_account_info",
      "dai",
      "JOIN",
      "bank_orgnization",
      "bo",
      "ON",
      "dai.bank_no",
      "=",
      "bo.bank_id",
      "WHERE",
      "dai.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "dai.acct_bal",
      ">",
      "100000",
      "AND",
      "dai.gender_code",
      "=",
      "'男'",
      "AND",
      "bo.bank_name",
      "=",
      "'沈阳分行';"
    ],
    "question_toks": [
      "在2024年7月19日，沈阳分行的所有客户中，有多少客户的账户余额超过100000元，并且他们的性别是男性？"
    ],
    "result_fields": [
      "COUNT(*)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM loan_type WHERE loan_type_name = '汽车贷款';",
    "question": "查询贷款类型为汽车贷款的所有信息。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "loan_type",
      "WHERE",
      "loan_type_name",
      "=",
      "'汽车贷款';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "loan_type",
      "WHERE",
      "loan_type_name",
      "=",
      "'汽车贷款';"
    ],
    "question_toks": [
      "查询贷款类型为汽车贷款的所有信息。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, la.loan_amount FROM customer c JOIN loan_application la ON c.id = la.customer_id WHERE la.loan_amount > 10000;",
    "question": "查询所有客户的姓名和他们的贷款金额，贷款金额大于10000的记录。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "la.loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "c.id",
      "=",
      "la.customer_id",
      "WHERE",
      "la.loan_amount",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "la.loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "c.id",
      "=",
      "la.customer_id",
      "WHERE",
      "la.loan_amount",
      ">",
      "10000;"
    ],
    "question_toks": [
      "查询所有客户的姓名和他们的贷款金额，贷款金额大于10000的记录。"
    ],
    "result_fields": [
      "c.customer_name",
      "la.loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH customer_scores AS (SELECT c.id, c.customer_name, COALESCE(SUM(dai.acct_bal), 0) AS total_deposit, AVG(lc.credit_score) AS avg_credit_score, AVG(CASE WHEN ldi.judgelevel = '1' THEN 100 WHEN ldi.judgelevel = '2' THEN 80 WHEN ldi.judgelevel = '3' THEN 60 WHEN ldi.judgelevel = '4' THEN 40 WHEN ldi.judgelevel = '5' THEN 20 ELSE 0 END) AS loan_repayment_score FROM customer c LEFT JOIN deposit_account_info dai ON c.id_number = dai.cert_code LEFT JOIN loan_credit lc ON c.id = lc.customer_id LEFT JOIN loan_detail_info ldi ON c.id_number = ldi.cust_id GROUP BY c.id, c.customer_name) SELECT customer_name, total_deposit, avg_credit_score, loan_repayment_score, (COALESCE(total_deposit / 1000000, 0) * 0.4 + COALESCE(avg_credit_score / 1000, 0) * 0.3 + COALESCE(loan_repayment_score / 100, 0) * 0.3) AS composite_score FROM customer_scores ORDER BY composite_score DESC LIMIT 20",
    "question": "计算每个客户的综合评分（存款余额、贷款信用和贷款偿还情况的加权平均），并列出综合评分最高的前20名客户。",
    "query_toks": [
      "WITH",
      "customer_scores",
      "AS",
      "(SELECT",
      "c.id,",
      "c.customer_name,",
      "COALESCE(SUM(dai.acct_bal),",
      "0)",
      "AS",
      "total_deposit,",
      "AVG(lc.credit_score)",
      "AS",
      "avg_credit_score,",
      "AVG(CASE",
      "WHEN",
      "ldi.judgelevel",
      "=",
      "'1'",
      "THEN",
      "100",
      "WHEN",
      "ldi.judgelevel",
      "=",
      "'2'",
      "THEN",
      "80",
      "WHEN",
      "ldi.judgelevel",
      "=",
      "'3'",
      "THEN",
      "60",
      "WHEN",
      "ldi.judgelevel",
      "=",
      "'4'",
      "THEN",
      "40",
      "WHEN",
      "ldi.judgelevel",
      "=",
      "'5'",
      "THEN",
      "20",
      "ELSE",
      "0",
      "END)",
      "AS",
      "loan_repayment_score",
      "FROM",
      "customer",
      "c",
      "LEFT",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "c.id_number",
      "=",
      "dai.cert_code",
      "LEFT",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "c.id",
      "=",
      "lc.customer_id",
      "LEFT",
      "JOIN",
      "loan_detail_info",
      "ldi",
      "ON",
      "c.id_number",
      "=",
      "ldi.cust_id",
      "GROUP",
      "BY",
      "c.id,",
      "c.customer_name)",
      "SELECT",
      "customer_name,",
      "total_deposit,",
      "avg_credit_score,",
      "loan_repayment_score,",
      "(COALESCE(total_deposit",
      "/",
      "1000000,",
      "0)",
      "*",
      "0.4",
      "+",
      "COALESCE(avg_credit_score",
      "/",
      "1000,",
      "0)",
      "*",
      "0.3",
      "+",
      "COALESCE(loan_repayment_score",
      "/",
      "100,",
      "0)",
      "*",
      "0.3)",
      "AS",
      "composite_score",
      "FROM",
      "customer_scores",
      "ORDER",
      "BY",
      "composite_score",
      "DESC",
      "LIMIT",
      "20"
    ],
    "query_toks_no_value": [
      "WITH",
      "customer_scores",
      "AS",
      "(SELECT",
      "c.id,",
      "c.customer_name,",
      "COALESCE(SUM(dai.acct_bal),",
      "0)",
      "AS",
      "total_deposit,",
      "AVG(lc.credit_score)",
      "AS",
      "avg_credit_score,",
      "AVG(CASE",
      "WHEN",
      "ldi.judgelevel",
      "=",
      "'1'",
      "THEN",
      "100",
      "WHEN",
      "ldi.judgelevel",
      "=",
      "'2'",
      "THEN",
      "80",
      "WHEN",
      "ldi.judgelevel",
      "=",
      "'3'",
      "THEN",
      "60",
      "WHEN",
      "ldi.judgelevel",
      "=",
      "'4'",
      "THEN",
      "40",
      "WHEN",
      "ldi.judgelevel",
      "=",
      "'5'",
      "THEN",
      "20",
      "ELSE",
      "0",
      "END)",
      "AS",
      "loan_repayment_score",
      "FROM",
      "customer",
      "c",
      "LEFT",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "c.id_number",
      "=",
      "dai.cert_code",
      "LEFT",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "c.id",
      "=",
      "lc.customer_id",
      "LEFT",
      "JOIN",
      "loan_detail_info",
      "ldi",
      "ON",
      "c.id_number",
      "=",
      "ldi.cust_id",
      "GROUP",
      "BY",
      "c.id,",
      "c.customer_name)",
      "SELECT",
      "customer_name,",
      "total_deposit,",
      "avg_credit_score,",
      "loan_repayment_score,",
      "(COALESCE(total_deposit",
      "/",
      "1000000,",
      "0)",
      "*",
      "0.4",
      "+",
      "COALESCE(avg_credit_score",
      "/",
      "1000,",
      "0)",
      "*",
      "0.3",
      "+",
      "COALESCE(loan_repayment_score",
      "/",
      "100,",
      "0)",
      "*",
      "0.3)",
      "AS",
      "composite_score",
      "FROM",
      "customer_scores",
      "ORDER",
      "BY",
      "composite_score",
      "DESC",
      "LIMIT",
      "20"
    ],
    "question_toks": [
      "计算每个客户的综合评分（存款余额、贷款信用和贷款偿还情况的加权平均），并列出综合评分最高的前20名客户。"
    ],
    "result_fields": [
      "c.id",
      "c.customer_name",
      "COALESCE(SUM(dai.acct_bal), 0)",
      "AVG(lc.credit_score)",
      "AVG(CASE WHEN ldi.judgelevel = '1' THEN 100 WHEN ldi.judgelevel = '2' THEN 80 WHEN ldi.judgelevel = '3' THEN 60 WHEN ldi.judgelevel = '4' THEN 40 WHEN ldi.judgelevel = '5' THEN 20 ELSE 0 END)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT occupation_code, description FROM occupation WHERE occupation_name = '护士';",
    "question": "获取所有护士的职业代码和描述。",
    "query_toks": [
      "SELECT",
      "occupation_code,",
      "description",
      "FROM",
      "occupation",
      "WHERE",
      "occupation_name",
      "=",
      "'护士';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "occupation_code,",
      "description",
      "FROM",
      "occupation",
      "WHERE",
      "occupation_name",
      "=",
      "'护士';"
    ],
    "question_toks": [
      "获取所有护士的职业代码和描述。"
    ],
    "result_fields": [
      "occupation_code",
      "description"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ub.customer_id, ub.behavior_type, lc.credit_score FROM user_behavior ub JOIN loan_credit lc ON ub.customer_id = lc.customer_id WHERE ub.behavior_date BETWEEN '2021-08-01' AND '2021-08-31';",
    "question": "获取所有客户在2021年8月的行为记录及对应的信用评分。",
    "query_toks": [
      "SELECT",
      "ub.customer_id,",
      "ub.behavior_type,",
      "lc.credit_score",
      "FROM",
      "user_behavior",
      "ub",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "ub.customer_id",
      "=",
      "lc.customer_id",
      "WHERE",
      "ub.behavior_date",
      "BETWEEN",
      "'2021-08-01'",
      "AND",
      "'2021-08-31';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ub.customer_id,",
      "ub.behavior_type,",
      "lc.credit_score",
      "FROM",
      "user_behavior",
      "ub",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "ub.customer_id",
      "=",
      "lc.customer_id",
      "WHERE",
      "ub.behavior_date",
      "BETWEEN",
      "'2021-08-01'",
      "AND",
      "'2021-08-31';"
    ],
    "question_toks": [
      "获取所有客户在2021年8月的行为记录及对应的信用评分。"
    ],
    "result_fields": [
      "ub.customer_id",
      "ub.behavior_type",
      "lc.credit_score"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT lt.loan_type_name, ls.loan_status_name, ls.description FROM loan_type lt JOIN loan_status ls ON lt.id = ls.id;",
    "question": "查询所有贷款类型及其状态的描述。",
    "query_toks": [
      "SELECT",
      "lt.loan_type_name,",
      "ls.loan_status_name,",
      "ls.description",
      "FROM",
      "loan_type",
      "lt",
      "JOIN",
      "loan_status",
      "ls",
      "ON",
      "lt.id",
      "=",
      "ls.id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lt.loan_type_name,",
      "ls.loan_status_name,",
      "ls.description",
      "FROM",
      "loan_type",
      "lt",
      "JOIN",
      "loan_status",
      "ls",
      "ON",
      "lt.id",
      "=",
      "ls.id;"
    ],
    "question_toks": [
      "查询所有贷款类型及其状态的描述。"
    ],
    "result_fields": [
      "lt.loan_type_name",
      "ls.loan_status_name",
      "ls.description"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT f.bank_nm, SUM(f.wealth_bal) AS total_wealth_bal FROM financial_products f WHERE f.data_dt = '2024-07-02' AND f.cast_type = '对公' GROUP BY f.bank_nm;",
    "question": "查询2024年7月2日所有对公客户的理财余额总和，并按管辖行名称分组显示。",
    "query_toks": [
      "SELECT",
      "f.bank_nm,",
      "SUM(f.wealth_bal)",
      "AS",
      "total_wealth_bal",
      "FROM",
      "financial_products",
      "f",
      "WHERE",
      "f.data_dt",
      "=",
      "'2024-07-02'",
      "AND",
      "f.cast_type",
      "=",
      "'对公'",
      "GROUP",
      "BY",
      "f.bank_nm;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "f.bank_nm,",
      "SUM(f.wealth_bal)",
      "AS",
      "total_wealth_bal",
      "FROM",
      "financial_products",
      "f",
      "WHERE",
      "f.data_dt",
      "=",
      "'2024-07-02'",
      "AND",
      "f.cast_type",
      "=",
      "'对公'",
      "GROUP",
      "BY",
      "f.bank_nm;"
    ],
    "question_toks": [
      "查询2024年7月2日所有对公客户的理财余额总和，并按管辖行名称分组显示。"
    ],
    "result_fields": [
      "f.bank_nm",
      "SUM(f.wealth_bal)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT la.customer_id, lt.loan_type_name, la.loan_amount, la.loan_term, la.apply_date, la.status FROM loan_application la JOIN loan_type lt ON la.loan_type_id = lt.id WHERE lt.loan_type_name = '住房贷款' AND la.apply_date >= '2019-01-01' AND la.apply_date <= '2019-12-31' AND la.status = 'REJECTED';",
    "question": "哪些客户在2019年申请了住房贷款，并且他们的贷款申请状态是'REJECTED'？",
    "query_toks": [
      "SELECT",
      "la.customer_id,",
      "lt.loan_type_name,",
      "la.loan_amount,",
      "la.loan_term,",
      "la.apply_date,",
      "la.status",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "WHERE",
      "lt.loan_type_name",
      "=",
      "'住房贷款'",
      "AND",
      "la.apply_date",
      ">=",
      "'2019-01-01'",
      "AND",
      "la.apply_date",
      "<=",
      "'2019-12-31'",
      "AND",
      "la.status",
      "=",
      "'REJECTED';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "la.customer_id,",
      "lt.loan_type_name,",
      "la.loan_amount,",
      "la.loan_term,",
      "la.apply_date,",
      "la.status",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "WHERE",
      "lt.loan_type_name",
      "=",
      "'住房贷款'",
      "AND",
      "la.apply_date",
      ">=",
      "'2019-01-01'",
      "AND",
      "la.apply_date",
      "<=",
      "'2019-12-31'",
      "AND",
      "la.status",
      "=",
      "'REJECTED';"
    ],
    "question_toks": [
      "哪些客户在2019年申请了住房贷款，并且他们的贷款申请状态是'REJECTED'？"
    ],
    "result_fields": [
      "la.customer_id",
      "lt.loan_type_name",
      "la.loan_amount",
      "la.loan_term",
      "la.apply_date",
      "la.status"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT cust_no, wealth_bal_f FROM financial_products WHERE data_dt = '2024-07-19' AND wealth_bal_f > 100000 ORDER BY wealth_bal_f DESC;",
    "question": "查询2024年7月19日当天，持有非保本理财产品余额超过100000的客户编号及其对应的理财余额，并按理财余额降序排列。",
    "query_toks": [
      "SELECT",
      "cust_no,",
      "wealth_bal_f",
      "FROM",
      "financial_products",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "wealth_bal_f",
      ">",
      "100000",
      "ORDER",
      "BY",
      "wealth_bal_f",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "cust_no,",
      "wealth_bal_f",
      "FROM",
      "financial_products",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "wealth_bal_f",
      ">",
      "100000",
      "ORDER",
      "BY",
      "wealth_bal_f",
      "DESC;"
    ],
    "question_toks": [
      "查询2024年7月19日当天，持有非保本理财产品余额超过100000的客户编号及其对应的理财余额，并按理财余额降序排列。"
    ],
    "result_fields": [
      "cust_no",
      "wealth_bal_f"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT customer_name, email FROM customer;",
    "question": "查找所有客户的名字和电子邮件。",
    "query_toks": [
      "SELECT",
      "customer_name,",
      "email",
      "FROM",
      "customer;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_name,",
      "email",
      "FROM",
      "customer;"
    ],
    "question_toks": [
      "查找所有客户的名字和电子邮件。"
    ],
    "result_fields": [
      "customer_name",
      "email"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH quarterly_stats AS (SELECT c.id, c.customer_name, DATE_TRUNC('quarter', l.apply_date) as quarter, COUNT(CASE WHEN l.status = 'APPROVED' THEN 1 END) / COUNT(*) as success_rate FROM customer c JOIN loan_application l ON c.id = l.customer_id GROUP BY c.id, c.customer_name, quarter) SELECT customer_name, quarter, success_rate, LAG(success_rate) OVER (PARTITION BY id ORDER BY quarter) as prev_quarter_rate, success_rate - LAG(success_rate) OVER (PARTITION BY id ORDER BY quarter) as rate_change FROM quarterly_stats ORDER BY customer_name, quarter",
    "question": "计算每个客户的贷款成功率随时间的变化（按季度）。",
    "query_toks": [
      "WITH",
      "quarterly_stats",
      "AS",
      "(SELECT",
      "c.id,",
      "c.customer_name,",
      "DATE_TRUNC('quarter',",
      "l.apply_date)",
      "as",
      "quarter,",
      "COUNT(CASE",
      "WHEN",
      "l.status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "success_rate",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "GROUP",
      "BY",
      "c.id,",
      "c.customer_name,",
      "quarter)",
      "SELECT",
      "customer_name,",
      "quarter,",
      "success_rate,",
      "LAG(success_rate)",
      "OVER",
      "(PARTITION",
      "BY",
      "id",
      "ORDER",
      "BY",
      "quarter)",
      "as",
      "prev_quarter_rate,",
      "success_rate",
      "-",
      "LAG(success_rate)",
      "OVER",
      "(PARTITION",
      "BY",
      "id",
      "ORDER",
      "BY",
      "quarter)",
      "as",
      "rate_change",
      "FROM",
      "quarterly_stats",
      "ORDER",
      "BY",
      "customer_name,",
      "quarter"
    ],
    "query_toks_no_value": [
      "WITH",
      "quarterly_stats",
      "AS",
      "(SELECT",
      "c.id,",
      "c.customer_name,",
      "DATE_TRUNC('quarter',",
      "l.apply_date)",
      "as",
      "quarter,",
      "COUNT(CASE",
      "WHEN",
      "l.status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "success_rate",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "GROUP",
      "BY",
      "c.id,",
      "c.customer_name,",
      "quarter)",
      "SELECT",
      "customer_name,",
      "quarter,",
      "success_rate,",
      "LAG(success_rate)",
      "OVER",
      "(PARTITION",
      "BY",
      "id",
      "ORDER",
      "BY",
      "quarter)",
      "as",
      "prev_quarter_rate,",
      "success_rate",
      "-",
      "LAG(success_rate)",
      "OVER",
      "(PARTITION",
      "BY",
      "id",
      "ORDER",
      "BY",
      "quarter)",
      "as",
      "rate_change",
      "FROM",
      "quarterly_stats",
      "ORDER",
      "BY",
      "customer_name,",
      "quarter"
    ],
    "question_toks": [
      "计算每个客户的贷款成功率随时间的变化（按季度）。"
    ],
    "result_fields": [
      "c.id",
      "c.customer_name",
      "DATE_TRUNC('quarter', l.apply_date)",
      "COUNT(CASE WHEN l.status = 'APPROVED' THEN 1 END) / COUNT(*)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT dai.cust_name, dai.acct_bal FROM deposit_account_info dai WHERE dai.data_dt = '2024-07-19' AND dai.cur_type = 'USD' ORDER BY dai.acct_bal DESC;",
    "question": "查询2024年7月19日所有持有美元存款的客户名称及其对应的账户余额，并按照账户余额从高到低排序。",
    "query_toks": [
      "SELECT",
      "dai.cust_name,",
      "dai.acct_bal",
      "FROM",
      "deposit_account_info",
      "dai",
      "WHERE",
      "dai.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "dai.cur_type",
      "=",
      "'USD'",
      "ORDER",
      "BY",
      "dai.acct_bal",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "dai.cust_name,",
      "dai.acct_bal",
      "FROM",
      "deposit_account_info",
      "dai",
      "WHERE",
      "dai.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "dai.cur_type",
      "=",
      "'USD'",
      "ORDER",
      "BY",
      "dai.acct_bal",
      "DESC;"
    ],
    "question_toks": [
      "查询2024年7月19日所有持有美元存款的客户名称及其对应的账户余额，并按照账户余额从高到低排序。"
    ],
    "result_fields": [
      "dai.cust_name",
      "dai.acct_bal"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT customer_name, id_number, phone_number, email FROM customer WHERE birth_date > '1980-01-01';",
    "question": "查询所有客户的姓名、身份证号、手机号和电子邮件，并且只返回那些出生日期在1980年之后的客户信息。",
    "query_toks": [
      "SELECT",
      "customer_name,",
      "id_number,",
      "phone_number,",
      "email",
      "FROM",
      "customer",
      "WHERE",
      "birth_date",
      ">",
      "'1980-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_name,",
      "id_number,",
      "phone_number,",
      "email",
      "FROM",
      "customer",
      "WHERE",
      "birth_date",
      ">",
      "'1980-01-01';"
    ],
    "question_toks": [
      "查询所有客户的姓名、身份证号、手机号和电子邮件，并且只返回那些出生日期在1980年之后的客户信息。"
    ],
    "result_fields": [
      "customer_name",
      "id_number",
      "phone_number",
      "email"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, o.occupation_name, la.loan_amount FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_application la ON c.id = la.customer_id ORDER BY la.loan_amount DESC LIMIT 5",
    "question": "贷款申请金额最高的前5名客户的职业是什么？",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "o.occupation_name,",
      "la.loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "c.id",
      "=",
      "la.customer_id",
      "ORDER",
      "BY",
      "la.loan_amount",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "o.occupation_name,",
      "la.loan_amount",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "c.id",
      "=",
      "la.customer_id",
      "ORDER",
      "BY",
      "la.loan_amount",
      "DESC",
      "LIMIT",
      "5"
    ],
    "question_toks": [
      "贷款申请金额最高的前5名客户的职业是什么？"
    ],
    "result_fields": [
      "c.customer_name",
      "o.occupation_name",
      "la.loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT cust_type, loan_balance FROM loan_detail_info;",
    "question": "获取所有贷款记录的客户类型及其贷款余额。",
    "query_toks": [
      "SELECT",
      "cust_type,",
      "loan_balance",
      "FROM",
      "loan_detail_info;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "cust_type,",
      "loan_balance",
      "FROM",
      "loan_detail_info;"
    ],
    "question_toks": [
      "获取所有贷款记录的客户类型及其贷款余额。"
    ],
    "result_fields": [
      "cust_type",
      "loan_balance"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT SUM(d.current_bal) AS total_current_bal, SUM(d.fixed_bal) AS total_fixed_bal FROM debit_card_information d JOIN bank_orgnization b ON d.bank_no = b.bank_id WHERE b.bank_name = '杭州上城区支行' AND b.data_dt = '2023-06-30';",
    "question": "在2023年6月30日，杭州上城区支行的所有借记卡客户的总活期余额和总定期余额是多少？",
    "query_toks": [
      "SELECT",
      "SUM(d.current_bal)",
      "AS",
      "total_current_bal,",
      "SUM(d.fixed_bal)",
      "AS",
      "total_fixed_bal",
      "FROM",
      "debit_card_information",
      "d",
      "JOIN",
      "bank_orgnization",
      "b",
      "ON",
      "d.bank_no",
      "=",
      "b.bank_id",
      "WHERE",
      "b.bank_name",
      "=",
      "'杭州上城区支行'",
      "AND",
      "b.data_dt",
      "=",
      "'2023-06-30';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "SUM(d.current_bal)",
      "AS",
      "total_current_bal,",
      "SUM(d.fixed_bal)",
      "AS",
      "total_fixed_bal",
      "FROM",
      "debit_card_information",
      "d",
      "JOIN",
      "bank_orgnization",
      "b",
      "ON",
      "d.bank_no",
      "=",
      "b.bank_id",
      "WHERE",
      "b.bank_name",
      "=",
      "'杭州上城区支行'",
      "AND",
      "b.data_dt",
      "=",
      "'2023-06-30';"
    ],
    "question_toks": [
      "在2023年6月30日，杭州上城区支行的所有借记卡客户的总活期余额和总定期余额是多少？"
    ],
    "result_fields": [
      "SUM(d.current_bal)",
      "SUM(d.fixed_bal)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT flc.rs_type_name, ls.loan_status_name FROM five_level_classification flc JOIN loan_status ls ON flc.rs_type = '不良' WHERE flc.data_dt = '2024-07-22';",
    "question": "查询在特定日期的可疑行为和其对应的贷款状态。",
    "query_toks": [
      "SELECT",
      "flc.rs_type_name,",
      "ls.loan_status_name",
      "FROM",
      "five_level_classification",
      "flc",
      "JOIN",
      "loan_status",
      "ls",
      "ON",
      "flc.rs_type",
      "=",
      "'不良'",
      "WHERE",
      "flc.data_dt",
      "=",
      "'2024-07-22';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "flc.rs_type_name,",
      "ls.loan_status_name",
      "FROM",
      "five_level_classification",
      "flc",
      "JOIN",
      "loan_status",
      "ls",
      "ON",
      "flc.rs_type",
      "=",
      "'不良'",
      "WHERE",
      "flc.data_dt",
      "=",
      "'2024-07-22';"
    ],
    "question_toks": [
      "查询在特定日期的可疑行为和其对应的贷款状态。"
    ],
    "result_fields": [
      "flc.rs_type_name",
      "ls.loan_status_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM customer WHERE id_number = 'c839d762-6392-4005-8386-ed4e2c50997a';",
    "question": "查询身份证号为c839d762-6392-4005-8386-ed4e2c50997a的客户信息。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "customer",
      "WHERE",
      "id_number",
      "=",
      "'c839d762-6392-4005-8386-ed4e2c50997a';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "customer",
      "WHERE",
      "id_number",
      "=",
      "'c839d762-6392-4005-8386-ed4e2c50997a';"
    ],
    "question_toks": [
      "查询身份证号为c839d762-6392-4005-8386-ed4e2c50997a的客户信息。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT credit_score, description FROM loan_credit WHERE credit_date = '2003-06-22';",
    "question": "查询2003年6月22日所有客户的信用分和信用描述",
    "query_toks": [
      "SELECT",
      "credit_score,",
      "description",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_date",
      "=",
      "'2003-06-22';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "credit_score,",
      "description",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_date",
      "=",
      "'2003-06-22';"
    ],
    "question_toks": [
      "查询2003年6月22日所有客户的信用分和信用描述"
    ],
    "result_fields": [
      "credit_score",
      "description"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT d.cust_name, d.acct_bal FROM deposit_account_info d JOIN bank_orgnization b ON d.bank_no = b.bank_id WHERE d.data_dt = '2024-07-21' AND d.acct_bal > 50000 AND b.bank_name = '杭州分行';",
    "question": "在2024年7月21日，哪些客户在杭州分行拥有存款账户，并且他们的存款账户余额超过50000元？",
    "query_toks": [
      "SELECT",
      "d.cust_name,",
      "d.acct_bal",
      "FROM",
      "deposit_account_info",
      "d",
      "JOIN",
      "bank_orgnization",
      "b",
      "ON",
      "d.bank_no",
      "=",
      "b.bank_id",
      "WHERE",
      "d.data_dt",
      "=",
      "'2024-07-21'",
      "AND",
      "d.acct_bal",
      ">",
      "50000",
      "AND",
      "b.bank_name",
      "=",
      "'杭州分行';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.cust_name,",
      "d.acct_bal",
      "FROM",
      "deposit_account_info",
      "d",
      "JOIN",
      "bank_orgnization",
      "b",
      "ON",
      "d.bank_no",
      "=",
      "b.bank_id",
      "WHERE",
      "d.data_dt",
      "=",
      "'2024-07-21'",
      "AND",
      "d.acct_bal",
      ">",
      "50000",
      "AND",
      "b.bank_name",
      "=",
      "'杭州分行';"
    ],
    "question_toks": [
      "在2024年7月21日，哪些客户在杭州分行拥有存款账户，并且他们的存款账户余额超过50000元？"
    ],
    "result_fields": [
      "d.cust_name",
      "d.acct_bal"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT l.cust_id, l.loan_balance, d.acct_bal FROM loan_detail_info l JOIN deposit_account_info d ON l.cust_id = d.cust_no WHERE l.loan_balance > 10000;",
    "question": "查询所有贷款余额大于10000的客户编号及其对应的贷款余额，并显示这些客户的存款账户余额。",
    "query_toks": [
      "SELECT",
      "l.cust_id,",
      "l.loan_balance,",
      "d.acct_bal",
      "FROM",
      "loan_detail_info",
      "l",
      "JOIN",
      "deposit_account_info",
      "d",
      "ON",
      "l.cust_id",
      "=",
      "d.cust_no",
      "WHERE",
      "l.loan_balance",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "l.cust_id,",
      "l.loan_balance,",
      "d.acct_bal",
      "FROM",
      "loan_detail_info",
      "l",
      "JOIN",
      "deposit_account_info",
      "d",
      "ON",
      "l.cust_id",
      "=",
      "d.cust_no",
      "WHERE",
      "l.loan_balance",
      ">",
      "10000;"
    ],
    "question_toks": [
      "查询所有贷款余额大于10000的客户编号及其对应的贷款余额，并显示这些客户的存款账户余额。"
    ],
    "result_fields": [
      "l.cust_id",
      "l.loan_balance",
      "d.acct_bal"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT f.rs_type_name, COUNT(*) AS user_count, SUM(l.loan_balance) AS total_balance FROM five_level_classification f JOIN loan_detail_info l ON f.rs_type_id = l.judgelevel GROUP BY f.rs_type_name;",
    "question": "统计每种五级分类的用户数量，并找出对应的贷款余额总和。",
    "query_toks": [
      "SELECT",
      "f.rs_type_name,",
      "COUNT(*)",
      "AS",
      "user_count,",
      "SUM(l.loan_balance)",
      "AS",
      "total_balance",
      "FROM",
      "five_level_classification",
      "f",
      "JOIN",
      "loan_detail_info",
      "l",
      "ON",
      "f.rs_type_id",
      "=",
      "l.judgelevel",
      "GROUP",
      "BY",
      "f.rs_type_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "f.rs_type_name,",
      "COUNT(*)",
      "AS",
      "user_count,",
      "SUM(l.loan_balance)",
      "AS",
      "total_balance",
      "FROM",
      "five_level_classification",
      "f",
      "JOIN",
      "loan_detail_info",
      "l",
      "ON",
      "f.rs_type_id",
      "=",
      "l.judgelevel",
      "GROUP",
      "BY",
      "f.rs_type_name;"
    ],
    "question_toks": [
      "统计每种五级分类的用户数量，并找出对应的贷款余额总和。"
    ],
    "result_fields": [
      "f.rs_type_name",
      "COUNT(*)",
      "SUM(l.loan_balance)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT deposit_name FROM deposit_type WHERE data_dt = '2024-07-22';",
    "question": "查找所有存款类型中，数据日期为2024年7月22日的产品名称。",
    "query_toks": [
      "SELECT",
      "deposit_name",
      "FROM",
      "deposit_type",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-22';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "deposit_name",
      "FROM",
      "deposit_type",
      "WHERE",
      "data_dt",
      "=",
      "'2024-07-22';"
    ],
    "question_toks": [
      "查找所有存款类型中，数据日期为2024年7月22日的产品名称。"
    ],
    "result_fields": [
      "deposit_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM transfer WHERE transfer_amount > 500;",
    "question": "获取转账表中转账金额大于500的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "transfer",
      "WHERE",
      "transfer_amount",
      ">",
      "500;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "transfer",
      "WHERE",
      "transfer_amount",
      ">",
      "500;"
    ],
    "question_toks": [
      "获取转账表中转账金额大于500的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, c.id_number, lc.credit_score FROM customer c JOIN loan_credit lc ON c.id = lc.customer_id WHERE c.province = '河北省' AND lc.credit_score > 0.8 ORDER BY lc.credit_score DESC;",
    "question": "查询所有在河北省出生且信用评分高于0.8的客户的姓名、身份证号和信用评分，并按信用评分降序排列。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "c.id_number,",
      "lc.credit_score",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "c.id",
      "=",
      "lc.customer_id",
      "WHERE",
      "c.province",
      "=",
      "'河北省'",
      "AND",
      "lc.credit_score",
      ">",
      "0.8",
      "ORDER",
      "BY",
      "lc.credit_score",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "c.id_number,",
      "lc.credit_score",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "c.id",
      "=",
      "lc.customer_id",
      "WHERE",
      "c.province",
      "=",
      "'河北省'",
      "AND",
      "lc.credit_score",
      ">",
      "0.8",
      "ORDER",
      "BY",
      "lc.credit_score",
      "DESC;"
    ],
    "question_toks": [
      "查询所有在河北省出生且信用评分高于0.8的客户的姓名、身份证号和信用评分，并按信用评分降序排列。"
    ],
    "result_fields": [
      "c.customer_name",
      "c.id_number",
      "lc.credit_score"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH age_groups AS (SELECT c.id, CASE WHEN EXTRACT(YEAR FROM AGE(date('now'), c.birth_date)) BETWEEN 20 AND 30 THEN '20-30' WHEN EXTRACT(YEAR FROM AGE(date('now'), c.birth_date)) BETWEEN 31 AND 40 THEN '31-40' WHEN EXTRACT(YEAR FROM AGE(date('now'), c.birth_date)) BETWEEN 41 AND 50 THEN '41-50' ELSE '51+' END AS age_group FROM customer c) SELECT ag.age_group, lt.loan_type_name, COUNT(la.id) AS total_applications, SUM(CASE WHEN la.status = 'APPROVED' THEN 1 ELSE 0 END) / COUNT(la.id) AS success_rate FROM age_groups ag JOIN loan_application la ON ag.id = la.customer_id JOIN loan_type lt ON la.loan_type_id = lt.id GROUP BY ag.age_group, lt.loan_type_name ORDER BY ag.age_group, success_rate DESC",
    "question": "计算每个年龄段（20-30岁，31-40岁，41-50岁，51岁以上）在不同贷款类型上的申请成功率。",
    "query_toks": [
      "WITH",
      "age_groups",
      "AS",
      "(SELECT",
      "c.id,",
      "CASE",
      "WHEN",
      "EXTRACT(YEAR",
      "FROM",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "20",
      "AND",
      "30",
      "THEN",
      "'20-30'",
      "WHEN",
      "EXTRACT(YEAR",
      "FROM",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "31",
      "AND",
      "40",
      "THEN",
      "'31-40'",
      "WHEN",
      "EXTRACT(YEAR",
      "FROM",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "41",
      "AND",
      "50",
      "THEN",
      "'41-50'",
      "ELSE",
      "'51+'",
      "END",
      "AS",
      "age_group",
      "FROM",
      "customer",
      "c)",
      "SELECT",
      "ag.age_group,",
      "lt.loan_type_name,",
      "COUNT(la.id)",
      "AS",
      "total_applications,",
      "SUM(CASE",
      "WHEN",
      "la.status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "/",
      "COUNT(la.id)",
      "AS",
      "success_rate",
      "FROM",
      "age_groups",
      "ag",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "ag.id",
      "=",
      "la.customer_id",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "GROUP",
      "BY",
      "ag.age_group,",
      "lt.loan_type_name",
      "ORDER",
      "BY",
      "ag.age_group,",
      "success_rate",
      "DESC"
    ],
    "query_toks_no_value": [
      "WITH",
      "age_groups",
      "AS",
      "(SELECT",
      "c.id,",
      "CASE",
      "WHEN",
      "EXTRACT(YEAR",
      "FROM",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "20",
      "AND",
      "30",
      "THEN",
      "'20-30'",
      "WHEN",
      "EXTRACT(YEAR",
      "FROM",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "31",
      "AND",
      "40",
      "THEN",
      "'31-40'",
      "WHEN",
      "EXTRACT(YEAR",
      "FROM",
      "AGE(date('now'),",
      "c.birth_date))",
      "BETWEEN",
      "41",
      "AND",
      "50",
      "THEN",
      "'41-50'",
      "ELSE",
      "'51+'",
      "END",
      "AS",
      "age_group",
      "FROM",
      "customer",
      "c)",
      "SELECT",
      "ag.age_group,",
      "lt.loan_type_name,",
      "COUNT(la.id)",
      "AS",
      "total_applications,",
      "SUM(CASE",
      "WHEN",
      "la.status",
      "=",
      "'APPROVED'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "/",
      "COUNT(la.id)",
      "AS",
      "success_rate",
      "FROM",
      "age_groups",
      "ag",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "ag.id",
      "=",
      "la.customer_id",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "GROUP",
      "BY",
      "ag.age_group,",
      "lt.loan_type_name",
      "ORDER",
      "BY",
      "ag.age_group,",
      "success_rate",
      "DESC"
    ],
    "question_toks": [
      "计算每个年龄段（20-30岁，31-40岁，41-50岁，51岁以上）在不同贷款类型上的申请成功率。"
    ],
    "result_fields": [
      "c.id",
      "CASE WHEN EXTRACT(YEAR"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ls.loan_status_name, o.occupation_name FROM loan_status ls JOIN occupation o ON ls.loan_status_code = 'APPROVED' AND o.occupation_code = 'NURSE';",
    "question": "列出所有职业代码为'NURSE'的用户贷款状态为'APPROVED'的贷款状态名称和职业名称。",
    "query_toks": [
      "SELECT",
      "ls.loan_status_name,",
      "o.occupation_name",
      "FROM",
      "loan_status",
      "ls",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "ls.loan_status_code",
      "=",
      "'APPROVED'",
      "AND",
      "o.occupation_code",
      "=",
      "'NURSE';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ls.loan_status_name,",
      "o.occupation_name",
      "FROM",
      "loan_status",
      "ls",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "ls.loan_status_code",
      "=",
      "'APPROVED'",
      "AND",
      "o.occupation_code",
      "=",
      "'NURSE';"
    ],
    "question_toks": [
      "列出所有职业代码为'NURSE'的用户贷款状态为'APPROVED'的贷款状态名称和职业名称。"
    ],
    "result_fields": [
      "ls.loan_status_name",
      "o.occupation_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT o.occupation_name, COUNT(DISTINCT c.id) as customer_count, AVG(l.loan_amount) as avg_loan_amount FROM occupation o JOIN customer c ON o.id = c.occupation_id JOIN loan_application l ON c.id = l.customer_id GROUP BY o.occupation_name HAVING COUNT(DISTINCT c.id) > 100 ORDER BY customer_count DESC",
    "question": "统计每种职业的客户数量和平均贷款金额，并只显示客户数量超过100的职业。",
    "query_toks": [
      "SELECT",
      "o.occupation_name,",
      "COUNT(DISTINCT",
      "c.id)",
      "as",
      "customer_count,",
      "AVG(l.loan_amount)",
      "as",
      "avg_loan_amount",
      "FROM",
      "occupation",
      "o",
      "JOIN",
      "customer",
      "c",
      "ON",
      "o.id",
      "=",
      "c.occupation_id",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "GROUP",
      "BY",
      "o.occupation_name",
      "HAVING",
      "COUNT(DISTINCT",
      "c.id)",
      ">",
      "100",
      "ORDER",
      "BY",
      "customer_count",
      "DESC"
    ],
    "query_toks_no_value": [
      "SELECT",
      "o.occupation_name,",
      "COUNT(DISTINCT",
      "c.id)",
      "as",
      "customer_count,",
      "AVG(l.loan_amount)",
      "as",
      "avg_loan_amount",
      "FROM",
      "occupation",
      "o",
      "JOIN",
      "customer",
      "c",
      "ON",
      "o.id",
      "=",
      "c.occupation_id",
      "JOIN",
      "loan_application",
      "l",
      "ON",
      "c.id",
      "=",
      "l.customer_id",
      "GROUP",
      "BY",
      "o.occupation_name",
      "HAVING",
      "COUNT(DISTINCT",
      "c.id)",
      ">",
      "100",
      "ORDER",
      "BY",
      "customer_count",
      "DESC"
    ],
    "question_toks": [
      "统计每种职业的客户数量和平均贷款金额，并只显示客户数量超过100的职业。"
    ],
    "result_fields": [
      "o.occupation_name",
      "COUNT(DISTINCT c.id)",
      "AVG(l.loan_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT f.cust_no, f.org_nm, f.currency, f.wealth_bal_f FROM financial_products f JOIN currency c ON f.currency = c.curr_code WHERE f.data_dt = '2024-07-14' AND f.org_nm = '沈阳余淮支行' AND f.currency = 'SGD';",
    "question": "在2024年7月14日，哪些客户在沈阳余淮支行购买了非保本理财产品，并且这些产品的币种是新加坡元？",
    "query_toks": [
      "SELECT",
      "f.cust_no,",
      "f.org_nm,",
      "f.currency,",
      "f.wealth_bal_f",
      "FROM",
      "financial_products",
      "f",
      "JOIN",
      "currency",
      "c",
      "ON",
      "f.currency",
      "=",
      "c.curr_code",
      "WHERE",
      "f.data_dt",
      "=",
      "'2024-07-14'",
      "AND",
      "f.org_nm",
      "=",
      "'沈阳余淮支行'",
      "AND",
      "f.currency",
      "=",
      "'SGD';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "f.cust_no,",
      "f.org_nm,",
      "f.currency,",
      "f.wealth_bal_f",
      "FROM",
      "financial_products",
      "f",
      "JOIN",
      "currency",
      "c",
      "ON",
      "f.currency",
      "=",
      "c.curr_code",
      "WHERE",
      "f.data_dt",
      "=",
      "'2024-07-14'",
      "AND",
      "f.org_nm",
      "=",
      "'沈阳余淮支行'",
      "AND",
      "f.currency",
      "=",
      "'SGD';"
    ],
    "question_toks": [
      "在2024年7月14日，哪些客户在沈阳余淮支行购买了非保本理财产品，并且这些产品的币种是新加坡元？"
    ],
    "result_fields": [
      "f.cust_no",
      "f.org_nm",
      "f.currency",
      "f.wealth_bal_f"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT id_number, phone_number FROM customer;",
    "question": "查询所有用户的身份证号及手机号。",
    "query_toks": [
      "SELECT",
      "id_number,",
      "phone_number",
      "FROM",
      "customer;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "id_number,",
      "phone_number",
      "FROM",
      "customer;"
    ],
    "question_toks": [
      "查询所有用户的身份证号及手机号。"
    ],
    "result_fields": [
      "id_number",
      "phone_number"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT cust_nm, open_date FROM debit_card_information WHERE open_date >= '2024-07-05';",
    "question": "获取在2024年7月5日及之后开户的借记卡的客户名称和开户日期。",
    "query_toks": [
      "SELECT",
      "cust_nm,",
      "open_date",
      "FROM",
      "debit_card_information",
      "WHERE",
      "open_date",
      ">=",
      "'2024-07-05';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "cust_nm,",
      "open_date",
      "FROM",
      "debit_card_information",
      "WHERE",
      "open_date",
      ">=",
      "'2024-07-05';"
    ],
    "question_toks": [
      "获取在2024年7月5日及之后开户的借记卡的客户名称和开户日期。"
    ],
    "result_fields": [
      "cust_nm",
      "open_date"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH top_customers AS (SELECT cust_no FROM financial_products WHERE wealth_bal > (SELECT PERCENTILE_CONT(0.9) WITHIN GROUP (ORDER BY wealth_bal) FROM financial_products)) SELECT COUNT(DISTINCT ub.customer_id) FROM top_customers tc JOIN user_behavior ub ON tc.cust_noeger = ub.customer_id WHERE ub.behavior_type = 'LOGIN' AND ub.behavior_date >= date('now') - INTERVAL '30 days'",
    "question": "找出理财产品余额排名前10%的客户中，过去30天内有登录行为的客户数量",
    "query_toks": [
      "WITH",
      "top_customers",
      "AS",
      "(SELECT",
      "cust_no",
      "FROM",
      "financial_products",
      "WHERE",
      "wealth_bal",
      ">",
      "(SELECT",
      "PERCENTILE_CONT(0.9)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "wealth_bal)",
      "FROM",
      "financial_products))",
      "SELECT",
      "COUNT(DISTINCT",
      "ub.customer_id)",
      "FROM",
      "top_customers",
      "tc",
      "JOIN",
      "user_behavior",
      "ub",
      "ON",
      "tc.cust_noeger",
      "=",
      "ub.customer_id",
      "WHERE",
      "ub.behavior_type",
      "=",
      "'LOGIN'",
      "AND",
      "ub.behavior_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'30",
      "days'"
    ],
    "query_toks_no_value": [
      "WITH",
      "top_customers",
      "AS",
      "(SELECT",
      "cust_no",
      "FROM",
      "financial_products",
      "WHERE",
      "wealth_bal",
      ">",
      "(SELECT",
      "PERCENTILE_CONT(0.9)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "wealth_bal)",
      "FROM",
      "financial_products))",
      "SELECT",
      "COUNT(DISTINCT",
      "ub.customer_id)",
      "FROM",
      "top_customers",
      "tc",
      "JOIN",
      "user_behavior",
      "ub",
      "ON",
      "tc.cust_noeger",
      "=",
      "ub.customer_id",
      "WHERE",
      "ub.behavior_type",
      "=",
      "'LOGIN'",
      "AND",
      "ub.behavior_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'30",
      "days'"
    ],
    "question_toks": [
      "找出理财产品余额排名前10%的客户中，过去30天内有登录行为的客户数量"
    ],
    "result_fields": [
      "cust_no"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT lc.customer_id, lc.credit_score, ub.description FROM loan_credit lc JOIN user_behavior ub ON lc.customer_id = ub.customer_id WHERE lc.credit_date = '2023-12-10';",
    "question": "获取2023年12月10日的客户信用评分及对应的行为描述，显示客户ID和信用评分。",
    "query_toks": [
      "SELECT",
      "lc.customer_id,",
      "lc.credit_score,",
      "ub.description",
      "FROM",
      "loan_credit",
      "lc",
      "JOIN",
      "user_behavior",
      "ub",
      "ON",
      "lc.customer_id",
      "=",
      "ub.customer_id",
      "WHERE",
      "lc.credit_date",
      "=",
      "'2023-12-10';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lc.customer_id,",
      "lc.credit_score,",
      "ub.description",
      "FROM",
      "loan_credit",
      "lc",
      "JOIN",
      "user_behavior",
      "ub",
      "ON",
      "lc.customer_id",
      "=",
      "ub.customer_id",
      "WHERE",
      "lc.credit_date",
      "=",
      "'2023-12-10';"
    ],
    "question_toks": [
      "获取2023年12月10日的客户信用评分及对应的行为描述，显示客户ID和信用评分。"
    ],
    "result_fields": [
      "lc.customer_id",
      "lc.credit_score",
      "ub.description"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT bank_id, bank_name FROM bank_orgnization;",
    "question": "获取所有机构的编号及其对应的名称。",
    "query_toks": [
      "SELECT",
      "bank_id,",
      "bank_name",
      "FROM",
      "bank_orgnization;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "bank_id,",
      "bank_name",
      "FROM",
      "bank_orgnization;"
    ],
    "question_toks": [
      "获取所有机构的编号及其对应的名称。"
    ],
    "result_fields": [
      "bank_id",
      "bank_name"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT lr.repayment_amount, la.loan_amount FROM loan_repayment lr JOIN loan_application la ON lr.loan_application_id = la.id WHERE lr.repayment_date = '2024-01-20';",
    "question": "查找2024年1月20日还款记录和对应的贷款申请信息。",
    "query_toks": [
      "SELECT",
      "lr.repayment_amount,",
      "la.loan_amount",
      "FROM",
      "loan_repayment",
      "lr",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lr.loan_application_id",
      "=",
      "la.id",
      "WHERE",
      "lr.repayment_date",
      "=",
      "'2024-01-20';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lr.repayment_amount,",
      "la.loan_amount",
      "FROM",
      "loan_repayment",
      "lr",
      "JOIN",
      "loan_application",
      "la",
      "ON",
      "lr.loan_application_id",
      "=",
      "la.id",
      "WHERE",
      "lr.repayment_date",
      "=",
      "'2024-01-20';"
    ],
    "question_toks": [
      "查找2024年1月20日还款记录和对应的贷款申请信息。"
    ],
    "result_fields": [
      "lr.repayment_amount",
      "la.loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.curr_code, c.curr_full_name, COUNT(t.id) AS transfer_count FROM currency c LEFT JOIN transfer t ON c.curr_code = t.source_customer_id AND t.transfer_date < c.data_dt WHERE c.data_dt = '2023-06-30' AND c.curr_class = '外币' GROUP BY c.curr_code, c.curr_full_name;",
    "question": "查询2023年6月30日所有外币的币种代码及其全名，并统计每个币种在2023年6月30日之前的转账记录总数。",
    "query_toks": [
      "SELECT",
      "c.curr_code,",
      "c.curr_full_name,",
      "COUNT(t.id)",
      "AS",
      "transfer_count",
      "FROM",
      "currency",
      "c",
      "LEFT",
      "JOIN",
      "transfer",
      "t",
      "ON",
      "c.curr_code",
      "=",
      "t.source_customer_id",
      "AND",
      "t.transfer_date",
      "<",
      "c.data_dt",
      "WHERE",
      "c.data_dt",
      "=",
      "'2023-06-30'",
      "AND",
      "c.curr_class",
      "=",
      "'外币'",
      "GROUP",
      "BY",
      "c.curr_code,",
      "c.curr_full_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.curr_code,",
      "c.curr_full_name,",
      "COUNT(t.id)",
      "AS",
      "transfer_count",
      "FROM",
      "currency",
      "c",
      "LEFT",
      "JOIN",
      "transfer",
      "t",
      "ON",
      "c.curr_code",
      "=",
      "t.source_customer_id",
      "AND",
      "t.transfer_date",
      "<",
      "c.data_dt",
      "WHERE",
      "c.data_dt",
      "=",
      "'2023-06-30'",
      "AND",
      "c.curr_class",
      "=",
      "'外币'",
      "GROUP",
      "BY",
      "c.curr_code,",
      "c.curr_full_name;"
    ],
    "question_toks": [
      "查询2023年6月30日所有外币的币种代码及其全名，并统计每个币种在2023年6月30日之前的转账记录总数。"
    ],
    "result_fields": [
      "c.curr_code",
      "c.curr_full_name",
      "COUNT(t.id)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT repayment_amount FROM loan_repayment WHERE loan_application_id = 742969 AND repayment_date = '2021-11-10';",
    "question": "2021年11月10日，贷款申请ID为742969的用户还款金额是多少？",
    "query_toks": [
      "SELECT",
      "repayment_amount",
      "FROM",
      "loan_repayment",
      "WHERE",
      "loan_application_id",
      "=",
      "742969",
      "AND",
      "repayment_date",
      "=",
      "'2021-11-10';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "repayment_amount",
      "FROM",
      "loan_repayment",
      "WHERE",
      "loan_application_id",
      "=",
      "742969",
      "AND",
      "repayment_date",
      "=",
      "'2021-11-10';"
    ],
    "question_toks": [
      "2021年11月10日，贷款申请ID为742969的用户还款金额是多少？"
    ],
    "result_fields": [
      "repayment_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT d.deposit_type_name, AVG(l.loan_amount) AS avg_loan_amount, STDDEV(l.loan_amount) AS stddev_loan_amount FROM deposit_type d JOIN loan_detail_info l ON d.data_dt = l.dw_date GROUP BY d.deposit_type_name",
    "question": "统计每种存款类型下的平均贷款金额和贷款金额标准差",
    "query_toks": [
      "SELECT",
      "d.deposit_type_name,",
      "AVG(l.loan_amount)",
      "AS",
      "avg_loan_amount,",
      "STDDEV(l.loan_amount)",
      "AS",
      "stddev_loan_amount",
      "FROM",
      "deposit_type",
      "d",
      "JOIN",
      "loan_detail_info",
      "l",
      "ON",
      "d.data_dt",
      "=",
      "l.dw_date",
      "GROUP",
      "BY",
      "d.deposit_type_name"
    ],
    "query_toks_no_value": [
      "SELECT",
      "d.deposit_type_name,",
      "AVG(l.loan_amount)",
      "AS",
      "avg_loan_amount,",
      "STDDEV(l.loan_amount)",
      "AS",
      "stddev_loan_amount",
      "FROM",
      "deposit_type",
      "d",
      "JOIN",
      "loan_detail_info",
      "l",
      "ON",
      "d.data_dt",
      "=",
      "l.dw_date",
      "GROUP",
      "BY",
      "d.deposit_type_name"
    ],
    "question_toks": [
      "统计每种存款类型下的平均贷款金额和贷款金额标准差"
    ],
    "result_fields": [
      "d.deposit_type_name",
      "AVG(l.loan_amount)",
      "STDDEV(l.loan_amount)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, o.occupation_name, lr.repayment_date FROM customer c JOIN occupation o ON c.occupation_id = o.id JOIN loan_repayment lr ON c.id = lr.loan_application_id;",
    "question": "查询用户的姓名、职业名称及还款日期。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "o.occupation_name,",
      "lr.repayment_date",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "c.id",
      "=",
      "lr.loan_application_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "o.occupation_name,",
      "lr.repayment_date",
      "FROM",
      "customer",
      "c",
      "JOIN",
      "occupation",
      "o",
      "ON",
      "c.occupation_id",
      "=",
      "o.id",
      "JOIN",
      "loan_repayment",
      "lr",
      "ON",
      "c.id",
      "=",
      "lr.loan_application_id;"
    ],
    "question_toks": [
      "查询用户的姓名、职业名称及还款日期。"
    ],
    "result_fields": [
      "c.customer_name",
      "o.occupation_name",
      "lr.repayment_date"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT lt.loan_type_name, AVG(la.loan_amount) as avg_loan_amount, AVG(dai.acct_bal) as avg_deposit_balance FROM loan_application la JOIN loan_type lt ON la.loan_type_id = lt.id JOIN deposit_account_info dai ON la.customer_id = dai.cust_noeger GROUP BY lt.loan_type_name",
    "question": "计算每种贷款类型的平均贷款金额和平均存款余额。",
    "query_toks": [
      "SELECT",
      "lt.loan_type_name,",
      "AVG(la.loan_amount)",
      "as",
      "avg_loan_amount,",
      "AVG(dai.acct_bal)",
      "as",
      "avg_deposit_balance",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "la.customer_id",
      "=",
      "dai.cust_noeger",
      "GROUP",
      "BY",
      "lt.loan_type_name"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lt.loan_type_name,",
      "AVG(la.loan_amount)",
      "as",
      "avg_loan_amount,",
      "AVG(dai.acct_bal)",
      "as",
      "avg_deposit_balance",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "loan_type",
      "lt",
      "ON",
      "la.loan_type_id",
      "=",
      "lt.id",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "la.customer_id",
      "=",
      "dai.cust_noeger",
      "GROUP",
      "BY",
      "lt.loan_type_name"
    ],
    "question_toks": [
      "计算每种贷款类型的平均贷款金额和平均存款余额。"
    ],
    "result_fields": [
      "lt.loan_type_name",
      "AVG(la.loan_amount)",
      "AVG(dai.acct_bal)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT COUNT(DISTINCT lb.customer_id) FROM loan_application lb JOIN user_behavior ub ON lb.customer_id = ub.customer_id WHERE lb.apply_date = '2019-01-10' AND lb.status = 'REJECTED' AND ub.behavior_date = '2017-10-24' AND ub.behavior_type = 'LOGIN';",
    "question": "2019年1月10日申请贷款且状态为'REJECTED'的客户中，有多少客户在2017年10月24日有'LOGIN'行为？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "lb.customer_id)",
      "FROM",
      "loan_application",
      "lb",
      "JOIN",
      "user_behavior",
      "ub",
      "ON",
      "lb.customer_id",
      "=",
      "ub.customer_id",
      "WHERE",
      "lb.apply_date",
      "=",
      "'2019-01-10'",
      "AND",
      "lb.status",
      "=",
      "'REJECTED'",
      "AND",
      "ub.behavior_date",
      "=",
      "'2017-10-24'",
      "AND",
      "ub.behavior_type",
      "=",
      "'LOGIN';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "lb.customer_id)",
      "FROM",
      "loan_application",
      "lb",
      "JOIN",
      "user_behavior",
      "ub",
      "ON",
      "lb.customer_id",
      "=",
      "ub.customer_id",
      "WHERE",
      "lb.apply_date",
      "=",
      "'2019-01-10'",
      "AND",
      "lb.status",
      "=",
      "'REJECTED'",
      "AND",
      "ub.behavior_date",
      "=",
      "'2017-10-24'",
      "AND",
      "ub.behavior_type",
      "=",
      "'LOGIN';"
    ],
    "question_toks": [
      "2019年1月10日申请贷款且状态为'REJECTED'的客户中，有多少客户在2017年10月24日有'LOGIN'行为？"
    ],
    "result_fields": [
      "COUNT(DISTINCT lb.customer_id)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT c.customer_name, la.loan_amount FROM loan_application la JOIN customer c ON la.customer_id = c.id JOIN loan_credit lc ON c.id = lc.customer_id WHERE la.apply_date >= '2019-01-01' AND la.apply_date < '2020-01-01' AND lc.credit_score > 0.8 ORDER BY la.loan_amount DESC;",
    "question": "查询2019年申请贷款且信用评分高于0.8的客户姓名和贷款金额，并按贷款金额降序排列。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "la.loan_amount",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "customer",
      "c",
      "ON",
      "la.customer_id",
      "=",
      "c.id",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "c.id",
      "=",
      "lc.customer_id",
      "WHERE",
      "la.apply_date",
      ">=",
      "'2019-01-01'",
      "AND",
      "la.apply_date",
      "<",
      "'2020-01-01'",
      "AND",
      "lc.credit_score",
      ">",
      "0.8",
      "ORDER",
      "BY",
      "la.loan_amount",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "la.loan_amount",
      "FROM",
      "loan_application",
      "la",
      "JOIN",
      "customer",
      "c",
      "ON",
      "la.customer_id",
      "=",
      "c.id",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "c.id",
      "=",
      "lc.customer_id",
      "WHERE",
      "la.apply_date",
      ">=",
      "'2019-01-01'",
      "AND",
      "la.apply_date",
      "<",
      "'2020-01-01'",
      "AND",
      "lc.credit_score",
      ">",
      "0.8",
      "ORDER",
      "BY",
      "la.loan_amount",
      "DESC;"
    ],
    "question_toks": [
      "查询2019年申请贷款且信用评分高于0.8的客户姓名和贷款金额，并按贷款金额降序排列。"
    ],
    "result_fields": [
      "c.customer_name",
      "la.loan_amount"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT * FROM loan_detail_info WHERE loan_balance > 500000 ORDER BY loan_balance DESC;",
    "question": "查询所有贷款余额大于500000的贷款明细信息，并按贷款余额降序排列。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "loan_balance",
      ">",
      "500000",
      "ORDER",
      "BY",
      "loan_balance",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "loan_detail_info",
      "WHERE",
      "loan_balance",
      ">",
      "500000",
      "ORDER",
      "BY",
      "loan_balance",
      "DESC;"
    ],
    "question_toks": [
      "查询所有贷款余额大于500000的贷款明细信息，并按贷款余额降序排列。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT customer_id, credit_score FROM loan_credit WHERE credit_date = '2003-06-22' AND credit_score > 0.75;",
    "question": "查询2003年6月22日所有信用分大于0.75的客户的ID和信用分",
    "query_toks": [
      "SELECT",
      "customer_id,",
      "credit_score",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_date",
      "=",
      "'2003-06-22'",
      "AND",
      "credit_score",
      ">",
      "0.75;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_id,",
      "credit_score",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_date",
      "=",
      "'2003-06-22'",
      "AND",
      "credit_score",
      ">",
      "0.75;"
    ],
    "question_toks": [
      "查询2003年6月22日所有信用分大于0.75的客户的ID和信用分"
    ],
    "result_fields": [
      "customer_id",
      "credit_score"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT customer_name, birth_date FROM customer WHERE birth_date > '1990-01-01' ORDER BY birth_date",
    "question": "请列出所有1990年之后出生的客户姓名和出生日期。",
    "query_toks": [
      "SELECT",
      "customer_name,",
      "birth_date",
      "FROM",
      "customer",
      "WHERE",
      "birth_date",
      ">",
      "'1990-01-01'",
      "ORDER",
      "BY",
      "birth_date"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_name,",
      "birth_date",
      "FROM",
      "customer",
      "WHERE",
      "birth_date",
      ">",
      "'1990-01-01'",
      "ORDER",
      "BY",
      "birth_date"
    ],
    "question_toks": [
      "请列出所有1990年之后出生的客户姓名和出生日期。"
    ],
    "result_fields": [
      "customer_name",
      "birth_date"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH credit_change AS (SELECT customer_id, MAX(credit_score) - MIN(credit_score) as score_increase FROM loan_credit WHERE credit_date >= date('now') - INTERVAL '1 year' GROUP BY customer_id) SELECT cc.customer_id, cc.score_increase, lc.credit_score as current_score FROM credit_change cc JOIN loan_credit lc ON cc.customer_id = lc.customer_id WHERE lc.credit_date = (SELECT MAX(credit_date) FROM loan_credit WHERE customer_id = cc.customer_id) ORDER BY cc.score_increase DESC LIMIT 5",
    "question": "找出过去一年内信用评分提升最多的前5名客户",
    "query_toks": [
      "WITH",
      "credit_change",
      "AS",
      "(SELECT",
      "customer_id,",
      "MAX(credit_score)",
      "-",
      "MIN(credit_score)",
      "as",
      "score_increase",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "GROUP",
      "BY",
      "customer_id)",
      "SELECT",
      "cc.customer_id,",
      "cc.score_increase,",
      "lc.credit_score",
      "as",
      "current_score",
      "FROM",
      "credit_change",
      "cc",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "cc.customer_id",
      "=",
      "lc.customer_id",
      "WHERE",
      "lc.credit_date",
      "=",
      "(SELECT",
      "MAX(credit_date)",
      "FROM",
      "loan_credit",
      "WHERE",
      "customer_id",
      "=",
      "cc.customer_id)",
      "ORDER",
      "BY",
      "cc.score_increase",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "WITH",
      "credit_change",
      "AS",
      "(SELECT",
      "customer_id,",
      "MAX(credit_score)",
      "-",
      "MIN(credit_score)",
      "as",
      "score_increase",
      "FROM",
      "loan_credit",
      "WHERE",
      "credit_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "GROUP",
      "BY",
      "customer_id)",
      "SELECT",
      "cc.customer_id,",
      "cc.score_increase,",
      "lc.credit_score",
      "as",
      "current_score",
      "FROM",
      "credit_change",
      "cc",
      "JOIN",
      "loan_credit",
      "lc",
      "ON",
      "cc.customer_id",
      "=",
      "lc.customer_id",
      "WHERE",
      "lc.credit_date",
      "=",
      "(SELECT",
      "MAX(credit_date)",
      "FROM",
      "loan_credit",
      "WHERE",
      "customer_id",
      "=",
      "cc.customer_id)",
      "ORDER",
      "BY",
      "cc.score_increase",
      "DESC",
      "LIMIT",
      "5"
    ],
    "question_toks": [
      "找出过去一年内信用评分提升最多的前5名客户"
    ],
    "result_fields": [
      "customer_id",
      "MAX(credit_score) - MIN(credit_score)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT ub.behavior_type, COUNT(DISTINCT ub.customer_id) AS user_count FROM user_behavior ub GROUP BY ub.behavior_type;",
    "question": "统计每种行为类型的用户数量，按行为类型分组。",
    "query_toks": [
      "SELECT",
      "ub.behavior_type,",
      "COUNT(DISTINCT",
      "ub.customer_id)",
      "AS",
      "user_count",
      "FROM",
      "user_behavior",
      "ub",
      "GROUP",
      "BY",
      "ub.behavior_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ub.behavior_type,",
      "COUNT(DISTINCT",
      "ub.customer_id)",
      "AS",
      "user_count",
      "FROM",
      "user_behavior",
      "ub",
      "GROUP",
      "BY",
      "ub.behavior_type;"
    ],
    "question_toks": [
      "统计每种行为类型的用户数量，按行为类型分组。"
    ],
    "result_fields": [
      "ub.behavior_type",
      "COUNT(DISTINCT ub.customer_id)"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "WITH deposit_customers AS (SELECT DISTINCT dt.deposit_name, dai.cust_no FROM deposit_type dt JOIN deposit_account_info dai ON dt.deposit_id = dai.arl_pdp_code WHERE dai.data_dt <= date('now') - INTERVAL '1 year'), recent_customers AS (SELECT DISTINCT dt.deposit_name, dai.cust_no FROM deposit_type dt JOIN deposit_account_info dai ON dt.deposit_id = dai.arl_pdp_code WHERE dai.data_dt > date('now') - INTERVAL '1 year') SELECT dc.deposit_name, COUNT(DISTINCT dc.cust_no) AS original_customers, COUNT(DISTINCT rc.cust_no) AS retained_customers, COUNT(DISTINCT rc.cust_no) / COUNT(DISTINCT dc.cust_no) AS retention_rate FROM deposit_customers dc LEFT JOIN recent_customers rc ON dc.deposit_name = rc.deposit_name AND dc.cust_no = rc.cust_no GROUP BY dc.deposit_name ORDER BY retention_rate DESC",
    "question": "计算每种存款类型的客户留存率（在最近一年内仍然持有该类型存款的客户比例）。",
    "query_toks": [
      "WITH",
      "deposit_customers",
      "AS",
      "(SELECT",
      "DISTINCT",
      "dt.deposit_name,",
      "dai.cust_no",
      "FROM",
      "deposit_type",
      "dt",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "dt.deposit_id",
      "=",
      "dai.arl_pdp_code",
      "WHERE",
      "dai.data_dt",
      "<=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'),",
      "recent_customers",
      "AS",
      "(SELECT",
      "DISTINCT",
      "dt.deposit_name,",
      "dai.cust_no",
      "FROM",
      "deposit_type",
      "dt",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "dt.deposit_id",
      "=",
      "dai.arl_pdp_code",
      "WHERE",
      "dai.data_dt",
      ">",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year')",
      "SELECT",
      "dc.deposit_name,",
      "COUNT(DISTINCT",
      "dc.cust_no)",
      "AS",
      "original_customers,",
      "COUNT(DISTINCT",
      "rc.cust_no)",
      "AS",
      "retained_customers,",
      "COUNT(DISTINCT",
      "rc.cust_no)",
      "/",
      "COUNT(DISTINCT",
      "dc.cust_no)",
      "AS",
      "retention_rate",
      "FROM",
      "deposit_customers",
      "dc",
      "LEFT",
      "JOIN",
      "recent_customers",
      "rc",
      "ON",
      "dc.deposit_name",
      "=",
      "rc.deposit_name",
      "AND",
      "dc.cust_no",
      "=",
      "rc.cust_no",
      "GROUP",
      "BY",
      "dc.deposit_name",
      "ORDER",
      "BY",
      "retention_rate",
      "DESC"
    ],
    "query_toks_no_value": [
      "WITH",
      "deposit_customers",
      "AS",
      "(SELECT",
      "DISTINCT",
      "dt.deposit_name,",
      "dai.cust_no",
      "FROM",
      "deposit_type",
      "dt",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "dt.deposit_id",
      "=",
      "dai.arl_pdp_code",
      "WHERE",
      "dai.data_dt",
      "<=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'),",
      "recent_customers",
      "AS",
      "(SELECT",
      "DISTINCT",
      "dt.deposit_name,",
      "dai.cust_no",
      "FROM",
      "deposit_type",
      "dt",
      "JOIN",
      "deposit_account_info",
      "dai",
      "ON",
      "dt.deposit_id",
      "=",
      "dai.arl_pdp_code",
      "WHERE",
      "dai.data_dt",
      ">",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year')",
      "SELECT",
      "dc.deposit_name,",
      "COUNT(DISTINCT",
      "dc.cust_no)",
      "AS",
      "original_customers,",
      "COUNT(DISTINCT",
      "rc.cust_no)",
      "AS",
      "retained_customers,",
      "COUNT(DISTINCT",
      "rc.cust_no)",
      "/",
      "COUNT(DISTINCT",
      "dc.cust_no)",
      "AS",
      "retention_rate",
      "FROM",
      "deposit_customers",
      "dc",
      "LEFT",
      "JOIN",
      "recent_customers",
      "rc",
      "ON",
      "dc.deposit_name",
      "=",
      "rc.deposit_name",
      "AND",
      "dc.cust_no",
      "=",
      "rc.cust_no",
      "GROUP",
      "BY",
      "dc.deposit_name",
      "ORDER",
      "BY",
      "retention_rate",
      "DESC"
    ],
    "question_toks": [
      "计算每种存款类型的客户留存率（在最近一年内仍然持有该类型存款的客户比例）。"
    ],
    "result_fields": [
      "DISTINCT dt.deposit_name",
      "dai.cust_no"
    ]
  },
  {
    "db_id": "loan_user",
    "query": "SELECT SUM(t.transfer_amount) FROM deposit_account_info d JOIN transfer t ON d.cust_noeger = t.source_customer_id WHERE d.data_dt = '2024-07-19' AND d.bank_nm = '沈阳分行';",
    "question": "2024年7月19日，沈阳分行下所有客户的转账总金额是多少？",
    "query_toks": [
      "SELECT",
      "SUM(t.transfer_amount)",
      "FROM",
      "deposit_account_info",
      "d",
      "JOIN",
      "transfer",
      "t",
      "ON",
      "d.cust_noeger",
      "=",
      "t.source_customer_id",
      "WHERE",
      "d.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "d.bank_nm",
      "=",
      "'沈阳分行';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "SUM(t.transfer_amount)",
      "FROM",
      "deposit_account_info",
      "d",
      "JOIN",
      "transfer",
      "t",
      "ON",
      "d.cust_noeger",
      "=",
      "t.source_customer_id",
      "WHERE",
      "d.data_dt",
      "=",
      "'2024-07-19'",
      "AND",
      "d.bank_nm",
      "=",
      "'沈阳分行';"
    ],
    "question_toks": [
      "2024年7月19日，沈阳分行下所有客户的转账总金额是多少？"
    ],
    "result_fields": [
      "SUM(t.transfer_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, MAX(ss.profit) AS max_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-06' GROUP BY s.store_name, s.manager_name ORDER BY max_profit DESC LIMIT 1;",
    "question": "在2023年5月6日，哪个门店的销售利润最高，并且该门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "MAX(ss.profit)",
      "AS",
      "max_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-06'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "max_profit",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "MAX(ss.profit)",
      "AS",
      "max_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-06'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "max_profit",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月6日，哪个门店的销售利润最高，并且该门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "MAX(ss.profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT profit, sales_quantity FROM salesstatistics;",
    "question": "获取所有销售统计中的利润和销售数量。",
    "query_toks": [
      "SELECT",
      "profit,",
      "sales_quantity",
      "FROM",
      "salesstatistics;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "profit,",
      "sales_quantity",
      "FROM",
      "salesstatistics;"
    ],
    "question_toks": [
      "获取所有销售统计中的利润和销售数量。"
    ],
    "result_fields": [
      "profit",
      "sales_quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT * FROM salesorders WHERE order_date = '2023-05-08';",
    "question": "查询特定日期（2023-05-08）的所有销售订单。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "salesorders",
      "WHERE",
      "order_date",
      "=",
      "'2023-05-08';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "salesorders",
      "WHERE",
      "order_date",
      "=",
      "'2023-05-08';"
    ],
    "question_toks": [
      "查询特定日期（2023-05-08）的所有销售订单。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, e.position, s.store_name, so.total_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN stores s ON so.store_id = s.store_id WHERE s.store_name = '数码广场店' AND so.order_date = '2023-05-05' AND so.total_amount > 7000;",
    "question": "在2023年5月5日，哪些员工在数码广场店处理了订单，并且这些订单的总金额超过了7000元？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.position,",
      "s.store_name,",
      "so.total_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "s.store_name",
      "=",
      "'数码广场店'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-05'",
      "AND",
      "so.total_amount",
      ">",
      "7000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.position,",
      "s.store_name,",
      "so.total_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "s.store_name",
      "=",
      "'数码广场店'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-05'",
      "AND",
      "so.total_amount",
      ">",
      "7000;"
    ],
    "question_toks": [
      "在2023年5月5日，哪些员工在数码广场店处理了订单，并且这些订单的总金额超过了7000元？"
    ],
    "result_fields": [
      "e.name",
      "e.position",
      "s.store_name",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT * FROM salesstatistics ORDER BY profit DESC LIMIT 1;",
    "question": "获取所有销售统计中利润最高的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "salesstatistics",
      "ORDER",
      "BY",
      "profit",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "salesstatistics",
      "ORDER",
      "BY",
      "profit",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "获取所有销售统计中利润最高的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, SUM(od.quantity * od.unit_price) AS total_sales, p.product_name FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date >= '2023-05-01' AND so.order_date < '2023-06-01' AND p.supplier_name = '苹果官方旗舰店' GROUP BY s.store_name, e.name, p.product_name HAVING SUM(od.quantity * od.unit_price) > 10000;",
    "question": "在2023年5月，哪些门店的员工销售了超过10000元的商品，并且这些商品的供应商是苹果官方旗舰店？请列出门店名称、员工姓名、销售金额和商品名称。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_sales,",
      "p.product_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "AND",
      "p.supplier_name",
      "=",
      "'苹果官方旗舰店'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name,",
      "p.product_name",
      "HAVING",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_sales,",
      "p.product_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "AND",
      "p.supplier_name",
      "=",
      "'苹果官方旗舰店'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name,",
      "p.product_name",
      "HAVING",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月，哪些门店的员工销售了超过10000元的商品，并且这些商品的供应商是苹果官方旗舰店？请列出门店名称、员工姓名、销售金额和商品名称。"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "SUM(od.quantity * od.unit_price)",
      "p.product_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT p.product_name, p.supplier_name FROM products p JOIN orderdetails od ON p.product_id = od.product_id JOIN salesorders so ON od.order_id = so.order_id JOIN stores st ON so.store_id = st.store_id WHERE st.store_name = '电子城旗舰店';",
    "question": "找出在电子城旗舰店销售的所有商品及其对应的供应商名称。",
    "query_toks": [
      "SELECT",
      "p.product_name,",
      "p.supplier_name",
      "FROM",
      "products",
      "p",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "p.product_id",
      "=",
      "od.product_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "stores",
      "st",
      "ON",
      "so.store_id",
      "=",
      "st.store_id",
      "WHERE",
      "st.store_name",
      "=",
      "'电子城旗舰店';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "p.product_name,",
      "p.supplier_name",
      "FROM",
      "products",
      "p",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "p.product_id",
      "=",
      "od.product_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "stores",
      "st",
      "ON",
      "so.store_id",
      "=",
      "st.store_id",
      "WHERE",
      "st.store_name",
      "=",
      "'电子城旗舰店';"
    ],
    "question_toks": [
      "找出在电子城旗舰店销售的所有商品及其对应的供应商名称。"
    ],
    "result_fields": [
      "p.product_name",
      "p.supplier_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, e.position FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'iPad Air' AND ss.date = '2023-05-09';",
    "question": "在2023年5月9日，哪个门店的员工销售了iPad Air，并且该员工的职位是什么？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "e.position",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPad",
      "Air'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-09';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "e.position",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPad",
      "Air'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-09';"
    ],
    "question_toks": [
      "在2023年5月9日，哪个门店的员工销售了iPad",
      "Air，并且该员工的职位是什么？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "e.position"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id WHERE ss.date = '2023-05-05' AND ss.sales_amount > 10000;",
    "question": "2023年5月5日，哪些门店的销售金额超过了10000元，并且这些门店的店长姓名是什么？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "s.store_id",
      "=",
      "ss.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-05'",
      "AND",
      "ss.sales_amount",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "s.store_id",
      "=",
      "ss.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-05'",
      "AND",
      "ss.sales_amount",
      ">",
      "10000;"
    ],
    "question_toks": [
      "2023年5月5日，哪些门店的销售金额超过了10000元，并且这些门店的店长姓名是什么？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, so.total_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id WHERE so.order_date = '2023-05-07' AND so.total_amount > 10000;",
    "question": "在2023年5月7日，哪些员工处理了订单并且这些订单的总金额超过了10000元？请列出员工的姓名和订单的总金额。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "so.total_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-07'",
      "AND",
      "so.total_amount",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "so.total_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-07'",
      "AND",
      "so.total_amount",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月7日，哪些员工处理了订单并且这些订单的总金额超过了10000元？请列出员工的姓名和订单的总金额。"
    ],
    "result_fields": [
      "e.name",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '索尼WH-1000XM4' AND ss.date >= '2023-05-01' AND ss.date <= '2023-05-31' GROUP BY s.store_name, e.name HAVING SUM(ss.profit) > 5000;",
    "question": "在2023年5月期间，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些门店的总销售利润超过了5000元？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name",
      "HAVING",
      "SUM(ss.profit)",
      ">",
      "5000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name",
      "HAVING",
      "SUM(ss.profit)",
      ">",
      "5000;"
    ],
    "question_toks": [
      "在2023年5月期间，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些门店的总销售利润超过了5000元？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "SUM(ss.profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT DISTINCT e.employee_id, e.name FROM employees e JOIN salesorders s ON e.employee_id = s.employee_id JOIN orderdetails od ON s.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND s.order_date BETWEEN '2023-05-01' AND '2023-05-31' AND s.total_amount > 5000;",
    "question": "在2023年5月期间，哪些员工在销售订单中涉及了'Nintendo Switch'商品，并且这些订单的总金额超过5000元？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "e.employee_id,",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "s",
      "ON",
      "e.employee_id",
      "=",
      "s.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "s.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Nintendo",
      "Switch'",
      "AND",
      "s.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "AND",
      "s.total_amount",
      ">",
      "5000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "e.employee_id,",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "s",
      "ON",
      "e.employee_id",
      "=",
      "s.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "s.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Nintendo",
      "Switch'",
      "AND",
      "s.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "AND",
      "s.total_amount",
      ">",
      "5000;"
    ],
    "question_toks": [
      "在2023年5月期间，哪些员工在销售订单中涉及了'Nintendo",
      "Switch'商品，并且这些订单的总金额超过5000元？"
    ],
    "result_fields": [
      "DISTINCT e.employee_id",
      "e.name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT p.product_name, MAX(ss.sales_amount) AS max_sales_amount FROM salesstatistics ss JOIN products p ON ss.product_id = p.product_id GROUP BY p.product_name ORDER BY max_sales_amount DESC LIMIT 1;",
    "question": "查询所有销售统计中销售金额最高的商品名称及其对应的利润。",
    "query_toks": [
      "SELECT",
      "p.product_name,",
      "MAX(ss.sales_amount)",
      "AS",
      "max_sales_amount",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "GROUP",
      "BY",
      "p.product_name",
      "ORDER",
      "BY",
      "max_sales_amount",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "p.product_name,",
      "MAX(ss.sales_amount)",
      "AS",
      "max_sales_amount",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "GROUP",
      "BY",
      "p.product_name",
      "ORDER",
      "BY",
      "max_sales_amount",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "查询所有销售统计中销售金额最高的商品名称及其对应的利润。"
    ],
    "result_fields": [
      "p.product_name",
      "MAX(ss.sales_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT od.order_detail_id, p.product_name, so.total_amount FROM orderdetails od JOIN products p ON od.product_id = p.product_id JOIN salesorders so ON od.order_id = so.order_id;",
    "question": "获取所有订单的销售详情，包含商品名称和订单总金额。",
    "query_toks": [
      "SELECT",
      "od.order_detail_id,",
      "p.product_name,",
      "so.total_amount",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "od.order_detail_id,",
      "p.product_name,",
      "so.total_amount",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id;"
    ],
    "question_toks": [
      "获取所有订单的销售详情，包含商品名称和订单总金额。"
    ],
    "result_fields": [
      "od.order_detail_id",
      "p.product_name",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, st.store_name FROM employees e JOIN stores st ON e.store_id = st.store_id;",
    "question": "列出每位员工的姓名及其所属门店名称。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "st.store_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "stores",
      "st",
      "ON",
      "e.store_id",
      "=",
      "st.store_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "st.store_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "stores",
      "st",
      "ON",
      "e.store_id",
      "=",
      "st.store_id;"
    ],
    "question_toks": [
      "列出每位员工的姓名及其所属门店名称。"
    ],
    "result_fields": [
      "e.name",
      "st.store_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, SUM(ss.sales_amount) AS total_sales_amount FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id WHERE ss.date = '2023-05-08' GROUP BY s.store_name, s.manager_name;",
    "question": "在2023年5月8日，哪些门店的店长姓名和他们的总销售金额是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(ss.sales_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "s.store_id",
      "=",
      "ss.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-08'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(ss.sales_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "s.store_id",
      "=",
      "ss.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-08'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name;"
    ],
    "question_toks": [
      "在2023年5月8日，哪些门店的店长姓名和他们的总销售金额是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "SUM(ss.sales_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, e.name FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id WHERE so.total_amount > 7000;",
    "question": "获取所有销售订单中，销售金额高于7000的订单ID和对应的员工姓名。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "e.name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "so.total_amount",
      ">",
      "7000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "e.name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "so.total_amount",
      ">",
      "7000;"
    ],
    "question_toks": [
      "获取所有销售订单中，销售金额高于7000的订单ID和对应的员工姓名。"
    ],
    "result_fields": [
      "so.order_id",
      "e.name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, SUM(od.quantity * od.unit_price) AS total_sales, p.product_name FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN products p ON od.product_id = p.product_id WHERE p.supplier_name = '苹果官方旗舰店' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, e.name, p.product_name HAVING SUM(od.quantity * od.unit_price) > 10000;",
    "question": "在2023年5月期间，哪些门店的员工销售了超过10000元的商品，并且这些商品的供应商是苹果官方旗舰店？请列出门店名称、员工姓名、销售金额和商品名称。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_sales,",
      "p.product_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.supplier_name",
      "=",
      "'苹果官方旗舰店'",
      "AND",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name,",
      "p.product_name",
      "HAVING",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_sales,",
      "p.product_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.supplier_name",
      "=",
      "'苹果官方旗舰店'",
      "AND",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name,",
      "p.product_name",
      "HAVING",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月期间，哪些门店的员工销售了超过10000元的商品，并且这些商品的供应商是苹果官方旗舰店？请列出门店名称、员工姓名、销售金额和商品名称。"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "SUM(od.quantity * od.unit_price)",
      "p.product_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-06' AND p.product_name = 'iPhone 13' AND ss.profit > 4000;",
    "question": "在2023年5月6日，哪些门店的员工销售了iPhone 13，并且这些销售的利润超过了4000元？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-06'",
      "AND",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "ss.profit",
      ">",
      "4000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-06'",
      "AND",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "ss.profit",
      ">",
      "4000;"
    ],
    "question_toks": [
      "在2023年5月6日，哪些门店的员工销售了iPhone",
      "13，并且这些销售的利润超过了4000元？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT * FROM salesorders WHERE order_id = 'b8b62bfe-a35d-4ff5-9bc9-654b5f67fed2';",
    "question": "查找订单ID为'b8b62bfe-a35d-4ff5-9bc9-654b5f67fed2'的销售订单信息。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "salesorders",
      "WHERE",
      "order_id",
      "=",
      "'b8b62bfe-a35d-4ff5-9bc9-654b5f67fed2';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "salesorders",
      "WHERE",
      "order_id",
      "=",
      "'b8b62bfe-a35d-4ff5-9bc9-654b5f67fed2';"
    ],
    "question_toks": [
      "查找订单ID为'b8b62bfe-a35d-4ff5-9bc9-654b5f67fed2'的销售订单信息。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id GROUP BY e.name;",
    "question": "查询每位员工的总销售金额。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "GROUP",
      "BY",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "GROUP",
      "BY",
      "e.name;"
    ],
    "question_toks": [
      "查询每位员工的总销售金额。"
    ],
    "result_fields": [
      "e.name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT p.product_name, p.sale_price, p.purchase_price FROM products p;",
    "question": "列出每个商品的售价和进货价。",
    "query_toks": [
      "SELECT",
      "p.product_name,",
      "p.sale_price,",
      "p.purchase_price",
      "FROM",
      "products",
      "p;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "p.product_name,",
      "p.sale_price,",
      "p.purchase_price",
      "FROM",
      "products",
      "p;"
    ],
    "question_toks": [
      "列出每个商品的售价和进货价。"
    ],
    "result_fields": [
      "p.product_name",
      "p.sale_price",
      "p.purchase_price"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name AS employee_name, s.manager_name AS store_manager_name FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id WHERE so.order_date >= '2023-05-01' AND so.order_date < '2023-06-01' AND so.total_amount > 10000 GROUP BY e.name, s.manager_name;",
    "question": "在2023年5月，哪些员工在销售订单中处理的总金额超过10000元，并且他们所在的门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "s.manager_name",
      "AS",
      "store_manager_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "AND",
      "so.total_amount",
      ">",
      "10000",
      "GROUP",
      "BY",
      "e.name,",
      "s.manager_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "s.manager_name",
      "AS",
      "store_manager_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "AND",
      "so.total_amount",
      ">",
      "10000",
      "GROUP",
      "BY",
      "e.name,",
      "s.manager_name;"
    ],
    "question_toks": [
      "在2023年5月，哪些员工在销售订单中处理的总金额超过10000元，并且他们所在的门店的店长是谁？"
    ],
    "result_fields": [
      "e.name",
      "s.manager_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT employee_id, store_id FROM employees;",
    "question": "查找某个员工的ID和他们所管理的门店ID。",
    "query_toks": [
      "SELECT",
      "employee_id,",
      "store_id",
      "FROM",
      "employees;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "employee_id,",
      "store_id",
      "FROM",
      "employees;"
    ],
    "question_toks": [
      "查找某个员工的ID和他们所管理的门店ID。"
    ],
    "result_fields": [
      "employee_id",
      "store_id"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, p.product_name, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-07' AND p.product_name = 'Apple Watch Series 7';",
    "question": "在2023年5月7日，哪些门店的员工销售了Apple Watch Series 7，并且这些商品的利润是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "ss.profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-07'",
      "AND",
      "p.product_name",
      "=",
      "'Apple",
      "Watch",
      "Series",
      "7';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "ss.profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-07'",
      "AND",
      "p.product_name",
      "=",
      "'Apple",
      "Watch",
      "Series",
      "7';"
    ],
    "question_toks": [
      "在2023年5月7日，哪些门店的员工销售了Apple",
      "Watch",
      "Series",
      "7，并且这些商品的利润是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "p.product_name",
      "ss.profit"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT DISTINCT s.store_name, e.name AS manager_name FROM stores s JOIN employees e ON s.store_id = e.store_id JOIN salesorders so ON s.store_id = so.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-05' AND so.total_amount > 10000 AND p.sale_price > 5000 AND e.position = '销售经理';",
    "question": "在2023年5月5日，哪些门店的销售经理负责的订单总金额超过了10000元，并且这些订单中包含至少一种售价高于5000元的商品？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "s.store_name,",
      "e.name",
      "AS",
      "manager_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-05'",
      "AND",
      "so.total_amount",
      ">",
      "10000",
      "AND",
      "p.sale_price",
      ">",
      "5000",
      "AND",
      "e.position",
      "=",
      "'销售经理';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "s.store_name,",
      "e.name",
      "AS",
      "manager_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-05'",
      "AND",
      "so.total_amount",
      ">",
      "10000",
      "AND",
      "p.sale_price",
      ">",
      "5000",
      "AND",
      "e.position",
      "=",
      "'销售经理';"
    ],
    "question_toks": [
      "在2023年5月5日，哪些门店的销售经理负责的订单总金额超过了10000元，并且这些订单中包含至少一种售价高于5000元的商品？"
    ],
    "result_fields": [
      "DISTINCT s.store_name",
      "e.name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT od.order_detail_id, p.product_name, od.quantity FROM orderdetails od JOIN products p ON od.product_id = p.product_id;",
    "question": "获取每个订单的详细信息，包括商品名称和销售数量。",
    "query_toks": [
      "SELECT",
      "od.order_detail_id,",
      "p.product_name,",
      "od.quantity",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "od.order_detail_id,",
      "p.product_name,",
      "od.quantity",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id;"
    ],
    "question_toks": [
      "获取每个订单的详细信息，包括商品名称和销售数量。"
    ],
    "result_fields": [
      "od.order_detail_id",
      "p.product_name",
      "od.quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT * FROM salesorders WHERE store_id = '0887d06a-27a8-46b4-98d6-514702e698da';",
    "question": "查询门店ID为 '0887d06a-27a8-46b4-98d6-514702e698da' 的销售订单详情。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "salesorders",
      "WHERE",
      "store_id",
      "=",
      "'0887d06a-27a8-46b4-98d6-514702e698da';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "salesorders",
      "WHERE",
      "store_id",
      "=",
      "'0887d06a-27a8-46b4-98d6-514702e698da';"
    ],
    "question_toks": [
      "查询门店ID为",
      "'0887d06a-27a8-46b4-98d6-514702e698da'",
      "的销售订单详情。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.employee_id, e.name FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN orderdetails od ON ss.product_id = od.product_id WHERE ss.date >= '2023-05-01' AND ss.date < '2023-06-01' AND ss.sales_quantity > od.quantity GROUP BY e.employee_id, e.name;",
    "question": "在2023年5月，哪些员工在销售统计中记录的销售数量超过了他们在订单详情表中记录的销售数量？",
    "query_toks": [
      "SELECT",
      "e.employee_id,",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "ss.product_id",
      "=",
      "od.product_id",
      "WHERE",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<",
      "'2023-06-01'",
      "AND",
      "ss.sales_quantity",
      ">",
      "od.quantity",
      "GROUP",
      "BY",
      "e.employee_id,",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.employee_id,",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "ss.product_id",
      "=",
      "od.product_id",
      "WHERE",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<",
      "'2023-06-01'",
      "AND",
      "ss.sales_quantity",
      ">",
      "od.quantity",
      "GROUP",
      "BY",
      "e.employee_id,",
      "e.name;"
    ],
    "question_toks": [
      "在2023年5月，哪些员工在销售统计中记录的销售数量超过了他们在订单详情表中记录的销售数量？"
    ],
    "result_fields": [
      "e.employee_id",
      "e.name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, SUM(so.total_amount) AS total_sales_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'iPad Air' AND so.order_date = '2023-05-01' GROUP BY s.store_name, e.name;",
    "question": "在2023年5月1日，哪些门店的员工销售了iPad Air，并且这些订单的总金额是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPad",
      "Air'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-01'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPad",
      "Air'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-01'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "question_toks": [
      "在2023年5月1日，哪些门店的员工销售了iPad",
      "Air，并且这些订单的总金额是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT pd.product_name, SUM(od.quantity) AS total_quantity, so.order_date\nFROM orderdetails od\nJOIN salesorders so ON od.order_id = so.order_id\nJOIN products pd ON od.product_id = pd.product_id\nGROUP BY pd.product_name, so.order_date;",
    "question": "列出每个商品的销售数量及对应的订单日期。",
    "query_toks": [
      "SELECT",
      "pd.product_name,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity,",
      "so.order_date",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "products",
      "pd",
      "ON",
      "od.product_id",
      "=",
      "pd.product_id",
      "GROUP",
      "BY",
      "pd.product_name,",
      "so.order_date;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "pd.product_name,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity,",
      "so.order_date",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "products",
      "pd",
      "ON",
      "od.product_id",
      "=",
      "pd.product_id",
      "GROUP",
      "BY",
      "pd.product_name,",
      "so.order_date;"
    ],
    "question_toks": [
      "列出每个商品的销售数量及对应的订单日期。"
    ],
    "result_fields": [
      "pd.product_name",
      "SUM(od.quantity)",
      "so.order_date"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date >= '2023-05-01' AND so.order_date < '2023-06-01' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;",
    "question": "在2023年5月，哪个门店的销售总额最高，并且该门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月，哪个门店的销售总额最高，并且该门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, e.position, s.store_name, p.product_name, ss.sales_quantity FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE s.store_name = '数码广场店' AND p.product_name = 'iPhone 13' AND ss.date = '2023-05-03' AND ss.sales_quantity > 1;",
    "question": "在2023年5月3日，哪些员工在数码广场店销售了iPhone 13，并且销售数量超过1台？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.position,",
      "s.store_name,",
      "p.product_name,",
      "ss.sales_quantity",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "s.store_name",
      "=",
      "'数码广场店'",
      "AND",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-03'",
      "AND",
      "ss.sales_quantity",
      ">",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.position,",
      "s.store_name,",
      "p.product_name,",
      "ss.sales_quantity",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "s.store_name",
      "=",
      "'数码广场店'",
      "AND",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-03'",
      "AND",
      "ss.sales_quantity",
      ">",
      "1;"
    ],
    "question_toks": [
      "在2023年5月3日，哪些员工在数码广场店销售了iPhone",
      "13，并且销售数量超过1台？"
    ],
    "result_fields": [
      "e.name",
      "e.position",
      "s.store_name",
      "p.product_name",
      "ss.sales_quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-07' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;",
    "question": "在2023年5月7日，哪个门店的销售总额最高，并且该门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-07'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-07'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月7日，哪个门店的销售总额最高，并且该门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '索尼WH-1000XM4' AND so.order_date = '2023-05-01' AND so.total_amount > 8000;",
    "question": "在2023年5月1日，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些订单的总金额超过了8000元？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-01'",
      "AND",
      "so.total_amount",
      ">",
      "8000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-01'",
      "AND",
      "so.total_amount",
      ">",
      "8000;"
    ],
    "question_toks": [
      "在2023年5月1日，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些订单的总金额超过了8000元？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT purchase_price, sale_price FROM products WHERE product_id = '9e847a4c-3927-45a2-9a3d-a400cdec1d6a';",
    "question": "查找某一商品的进货价和售价。",
    "query_toks": [
      "SELECT",
      "purchase_price,",
      "sale_price",
      "FROM",
      "products",
      "WHERE",
      "product_id",
      "=",
      "'9e847a4c-3927-45a2-9a3d-a400cdec1d6a';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "purchase_price,",
      "sale_price",
      "FROM",
      "products",
      "WHERE",
      "product_id",
      "=",
      "'9e847a4c-3927-45a2-9a3d-a400cdec1d6a';"
    ],
    "question_toks": [
      "查找某一商品的进货价和售价。"
    ],
    "result_fields": [
      "purchase_price",
      "sale_price"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT product_id, unit_price, quantity FROM orderdetails;",
    "question": "查询订单详情表中每个产品的销售单价和数量。",
    "query_toks": [
      "SELECT",
      "product_id,",
      "unit_price,",
      "quantity",
      "FROM",
      "orderdetails;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "product_id,",
      "unit_price,",
      "quantity",
      "FROM",
      "orderdetails;"
    ],
    "question_toks": [
      "查询订单详情表中每个产品的销售单价和数量。"
    ],
    "result_fields": [
      "product_id",
      "unit_price",
      "quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name AS employee_name, s.store_name FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN products p ON ss.product_id = p.product_id JOIN stores s ON e.store_id = s.store_id WHERE p.product_name = 'Apple Watch Series 7' AND ss.date = '2023-05-06';",
    "question": "在2023年5月6日，哪些员工销售了Apple Watch Series 7，并且这些员工的门店名称是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "s.store_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Apple",
      "Watch",
      "Series",
      "7'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-06';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "s.store_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Apple",
      "Watch",
      "Series",
      "7'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-06';"
    ],
    "question_toks": [
      "在2023年5月6日，哪些员工销售了Apple",
      "Watch",
      "Series",
      "7，并且这些员工的门店名称是什么？"
    ],
    "result_fields": [
      "e.name",
      "s.store_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT st.store_name, SUM(od.quantity) AS total_quantity, SUM(so.total_amount) AS total_sales FROM orderdetails od JOIN salesorders so ON od.order_id = so.order_id JOIN stores st ON so.store_id = st.store_id GROUP BY st.store_name ORDER BY total_quantity DESC LIMIT 1;",
    "question": "查询销售数量最多的门店及其销售总额。",
    "query_toks": [
      "SELECT",
      "st.store_name,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "stores",
      "st",
      "ON",
      "so.store_id",
      "=",
      "st.store_id",
      "GROUP",
      "BY",
      "st.store_name",
      "ORDER",
      "BY",
      "total_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "st.store_name,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "stores",
      "st",
      "ON",
      "so.store_id",
      "=",
      "st.store_id",
      "GROUP",
      "BY",
      "st.store_name",
      "ORDER",
      "BY",
      "total_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "查询销售数量最多的门店及其销售总额。"
    ],
    "result_fields": [
      "st.store_name",
      "SUM(od.quantity)",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT DISTINCT e.name AS employee_name, p.category_name AS product_category FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date >= '2023-05-01' AND so.order_date < '2023-06-01' AND so.total_amount > 10000;",
    "question": "在2023年5月期间，哪些员工在销售订单中处理了超过10000元的订单，并且这些订单涉及的商品类别有哪些？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "e.name",
      "AS",
      "employee_name,",
      "p.category_name",
      "AS",
      "product_category",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "AND",
      "so.total_amount",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "e.name",
      "AS",
      "employee_name,",
      "p.category_name",
      "AS",
      "product_category",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "AND",
      "so.total_amount",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月期间，哪些员工在销售订单中处理了超过10000元的订单，并且这些订单涉及的商品类别有哪些？"
    ],
    "result_fields": [
      "DISTINCT e.name",
      "p.category_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name AS employee_name, s.store_name, SUM(so.total_amount) AS total_amount FROM employees e JOIN stores s ON e.store_id = s.store_id JOIN salesorders so ON s.store_id = so.store_id GROUP BY e.name, s.store_name;",
    "question": "获取每个员工负责的门店及其所有订单的总金额。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "s.store_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "GROUP",
      "BY",
      "e.name,",
      "s.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "s.store_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "GROUP",
      "BY",
      "e.name,",
      "s.store_name;"
    ],
    "question_toks": [
      "获取每个员工负责的门店及其所有订单的总金额。"
    ],
    "result_fields": [
      "e.name",
      "s.store_name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, s.manager_name;",
    "question": "2023年5月期间，每个门店的总销售金额和对应的店长姓名是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name;"
    ],
    "question_toks": [
      "2023年5月期间，每个门店的总销售金额和对应的店长姓名是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT pd.product_name, SUM(od.quantity) AS total_quantity\nFROM orderdetails od\nJOIN salesorders so ON od.order_id = so.order_id\nJOIN products pd ON od.product_id = pd.product_id\nWHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31'\nGROUP BY pd.product_name\nHAVING SUM(od.quantity) > 5;",
    "question": "找出在2023年5月销售数量超过5的商品及其订单详情。",
    "query_toks": [
      "SELECT",
      "pd.product_name,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "products",
      "pd",
      "ON",
      "od.product_id",
      "=",
      "pd.product_id",
      "WHERE",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "pd.product_name",
      "HAVING",
      "SUM(od.quantity)",
      ">",
      "5;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "pd.product_name,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "products",
      "pd",
      "ON",
      "od.product_id",
      "=",
      "pd.product_id",
      "WHERE",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "pd.product_name",
      "HAVING",
      "SUM(od.quantity)",
      ">",
      "5;"
    ],
    "question_toks": [
      "找出在2023年5月销售数量超过5的商品及其订单详情。"
    ],
    "result_fields": [
      "pd.product_name",
      "SUM(od.quantity)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT p.product_name, SUM(od.quantity) AS total_quantity, p.sale_price FROM products p JOIN orderdetails od ON p.product_id = od.product_id GROUP BY p.product_name, p.sale_price;",
    "question": "列出每个商品的销售数量和售价。",
    "query_toks": [
      "SELECT",
      "p.product_name,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity,",
      "p.sale_price",
      "FROM",
      "products",
      "p",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "p.product_id",
      "=",
      "od.product_id",
      "GROUP",
      "BY",
      "p.product_name,",
      "p.sale_price;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "p.product_name,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity,",
      "p.sale_price",
      "FROM",
      "products",
      "p",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "p.product_id",
      "=",
      "od.product_id",
      "GROUP",
      "BY",
      "p.product_name,",
      "p.sale_price;"
    ],
    "question_toks": [
      "列出每个商品的销售数量和售价。"
    ],
    "result_fields": [
      "p.product_name",
      "SUM(od.quantity)",
      "p.sale_price"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS sales_manager_name, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-01' AND p.product_name = '佳能EOS R6' AND e.position = '销售经理';",
    "question": "在2023年5月1日，哪些门店的销售经理销售了佳能EOS R6，并且这些销售的利润是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "sales_manager_name,",
      "ss.profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-01'",
      "AND",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6'",
      "AND",
      "e.position",
      "=",
      "'销售经理';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "sales_manager_name,",
      "ss.profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-01'",
      "AND",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6'",
      "AND",
      "e.position",
      "=",
      "'销售经理';"
    ],
    "question_toks": [
      "在2023年5月1日，哪些门店的销售经理销售了佳能EOS",
      "R6，并且这些销售的利润是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "ss.profit"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT st.store_name, st.phone, st.address FROM stores st;",
    "question": "获取所有门店的联系信息。",
    "query_toks": [
      "SELECT",
      "st.store_name,",
      "st.phone,",
      "st.address",
      "FROM",
      "stores",
      "st;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "st.store_name,",
      "st.phone,",
      "st.address",
      "FROM",
      "stores",
      "st;"
    ],
    "question_toks": [
      "获取所有门店的联系信息。"
    ],
    "result_fields": [
      "st.store_name",
      "st.phone",
      "st.address"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, p.product_name FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.total_amount < 5000;",
    "question": "查找销售金额小于5000的订单及其对应的商品名称。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "p.product_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.total_amount",
      "<",
      "5000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "p.product_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.total_amount",
      "<",
      "5000;"
    ],
    "question_toks": [
      "查找销售金额小于5000的订单及其对应的商品名称。"
    ],
    "result_fields": [
      "so.order_id",
      "p.product_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, SUM(ss.sales_quantity) AS total_sales_quantity, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id WHERE ss.date >= '2023-05-01' AND ss.date <= '2023-05-31' AND e.position = '销售顾问' GROUP BY s.store_name, e.name ORDER BY total_sales_quantity DESC LIMIT 1;",
    "question": "在2023年5月，哪个门店的销售顾问销售了最多的商品数量，并且这些商品的总利润是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales_quantity,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "AND",
      "e.position",
      "=",
      "'销售顾问'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name",
      "ORDER",
      "BY",
      "total_sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales_quantity,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "AND",
      "e.position",
      "=",
      "'销售顾问'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name",
      "ORDER",
      "BY",
      "total_sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月，哪个门店的销售顾问销售了最多的商品数量，并且这些商品的总利润是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "SUM(ss.sales_quantity)",
      "SUM(ss.profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '小米电视4A' AND ss.date >= '2023-05-01' AND ss.date <= '2023-05-31' GROUP BY s.store_name;",
    "question": "在2023年5月，哪些门店的员工销售了小米电视4A，并且这些销售的利润总和是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'小米电视4A'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'小米电视4A'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "question_toks": [
      "在2023年5月，哪些门店的员工销售了小米电视4A，并且这些销售的利润总和是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "SUM(ss.profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name AS employee_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-06' AND s.store_name = '智慧街店' AND p.product_name = '小米电视4A' GROUP BY e.name;",
    "question": "在2023年5月6日，哪些员工在智慧街店销售了小米电视4A，并且这些销售的利润总和是多少？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-06'",
      "AND",
      "s.store_name",
      "=",
      "'智慧街店'",
      "AND",
      "p.product_name",
      "=",
      "'小米电视4A'",
      "GROUP",
      "BY",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-06'",
      "AND",
      "s.store_name",
      "=",
      "'智慧街店'",
      "AND",
      "p.product_name",
      "=",
      "'小米电视4A'",
      "GROUP",
      "BY",
      "e.name;"
    ],
    "question_toks": [
      "在2023年5月6日，哪些员工在智慧街店销售了小米电视4A，并且这些销售的利润总和是多少？"
    ],
    "result_fields": [
      "e.name",
      "SUM(ss.profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT store_name, phone FROM stores;",
    "question": "获取所有门店的名称和联系电话。",
    "query_toks": [
      "SELECT",
      "store_name,",
      "phone",
      "FROM",
      "stores;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "store_name,",
      "phone",
      "FROM",
      "stores;"
    ],
    "question_toks": [
      "获取所有门店的名称和联系电话。"
    ],
    "result_fields": [
      "store_name",
      "phone"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id WHERE ss.date = '2023-05-08' AND ss.profit > 1000;",
    "question": "在2023年5月8日，哪些门店的销售利润超过了1000元，并且这些门店的店长姓名是什么？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "s.store_id",
      "=",
      "ss.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-08'",
      "AND",
      "ss.profit",
      ">",
      "1000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "s.store_id",
      "=",
      "ss.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-08'",
      "AND",
      "ss.profit",
      ">",
      "1000;"
    ],
    "question_toks": [
      "在2023年5月8日，哪些门店的销售利润超过了1000元，并且这些门店的店长姓名是什么？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT p.category_name, SUM(ss.sales_quantity) AS total_sales FROM salesstatistics ss JOIN products p ON ss.product_id = p.product_id GROUP BY p.category_name;",
    "question": "查找每个商品类别的总销售数量。",
    "query_toks": [
      "SELECT",
      "p.category_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "GROUP",
      "BY",
      "p.category_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "p.category_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "GROUP",
      "BY",
      "p.category_name;"
    ],
    "question_toks": [
      "查找每个商品类别的总销售数量。"
    ],
    "result_fields": [
      "p.category_name",
      "SUM(ss.sales_quantity)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name FROM stores s JOIN employees e ON s.store_id = e.store_id;",
    "question": "获取门店和员工的关联信息。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id;"
    ],
    "question_toks": [
      "获取门店和员工的关联信息。"
    ],
    "result_fields": [
      "s.store_name",
      "e.name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id FROM salesorders so WHERE so.total_amount > (SELECT AVG(total_amount) FROM salesorders);",
    "question": "查询所有销售金额高于平均销售金额的订单ID。",
    "query_toks": [
      "SELECT",
      "so.order_id",
      "FROM",
      "salesorders",
      "so",
      "WHERE",
      "so.total_amount",
      ">",
      "(SELECT",
      "AVG(total_amount)",
      "FROM",
      "salesorders);"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id",
      "FROM",
      "salesorders",
      "so",
      "WHERE",
      "so.total_amount",
      ">",
      "(SELECT",
      "AVG(total_amount)",
      "FROM",
      "salesorders);"
    ],
    "question_toks": [
      "查询所有销售金额高于平均销售金额的订单ID。"
    ],
    "result_fields": [
      "so.order_id"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT * FROM salesorders WHERE order_date BETWEEN '2023-05-01' AND '2023-05-31';",
    "question": "查询特定日期范围内的所有销售订单。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "salesorders",
      "WHERE",
      "order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "salesorders",
      "WHERE",
      "order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31';"
    ],
    "question_toks": [
      "查询特定日期范围内的所有销售订单。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, so.order_date, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id;",
    "question": "获取所有员工及其销售订单的订单日期和总金额。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "so.order_date,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "so.order_date,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id;"
    ],
    "question_toks": [
      "获取所有员工及其销售订单的订单日期和总金额。"
    ],
    "result_fields": [
      "e.name",
      "so.order_date",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, SUM(so.total_amount) AS total_sales FROM employees e LEFT JOIN salesorders so ON e.employee_id = so.employee_id GROUP BY e.name;",
    "question": "查询每个员工的销售订单总金额。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "employees",
      "e",
      "LEFT",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "GROUP",
      "BY",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "employees",
      "e",
      "LEFT",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "GROUP",
      "BY",
      "e.name;"
    ],
    "question_toks": [
      "查询每个员工的销售订单总金额。"
    ],
    "result_fields": [
      "e.name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, SUM(ss.sales_quantity) AS total_sales, SUM(ss.profi) AS, total_profit FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id GROUP BY e.name;",
    "question": "查询每位销售员的总销售数量与总利润。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales,",
      "SUM(ss.profi)",
      "AS,",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "GROUP",
      "BY",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales,",
      "SUM(ss.profi)",
      "AS,",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "GROUP",
      "BY",
      "e.name;"
    ],
    "question_toks": [
      "查询每位销售员的总销售数量与总利润。"
    ],
    "result_fields": [
      "e.name",
      "SUM(ss.sales_quantity)",
      "SUM(ss.profi) AS",
      "total_profit"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT DISTINCT s.store_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '佳能EOS R6' AND so.order_date >= '2023-05-01' AND so.order_date < '2023-06-01' AND so.total_amount > 10000;",
    "question": "在2023年5月，哪些门店的员工销售了佳能EOS R6相机，并且这些订单的总金额超过10000元？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "s.store_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6'",
      "AND",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "AND",
      "so.total_amount",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "s.store_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6'",
      "AND",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "AND",
      "so.total_amount",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月，哪些门店的员工销售了佳能EOS",
      "R6相机，并且这些订单的总金额超过10000元？"
    ],
    "result_fields": [
      "DISTINCT s.store_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-05' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;",
    "question": "在2023年5月5日，哪个门店的销售总额最高，并且该门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-05'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-05'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月5日，哪个门店的销售总额最高，并且该门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, SUM(ss.sales_quantity) AS total_quantity, SUM(ss.sales_amount) AS total_amount FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id GROUP BY s.store_name;",
    "question": "查找所有门店的商品销售数量和销售金额，按门店名称分组。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_quantity,",
      "SUM(ss.sales_amount)",
      "AS",
      "total_amount",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_quantity,",
      "SUM(ss.sales_amount)",
      "AS",
      "total_amount",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "question_toks": [
      "查找所有门店的商品销售数量和销售金额，按门店名称分组。"
    ],
    "result_fields": [
      "s.store_name",
      "SUM(ss.sales_quantity)",
      "SUM(ss.sales_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, SUM(ss.sales_quantity) AS total_sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date >= '2023-05-01' AND ss.date <= '2023-05-31' GROUP BY s.store_name, s.manager_name ORDER BY total_sales_quantity DESC LIMIT 1;",
    "question": "在2023年5月期间，哪个门店的销售数量最多，并且该门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月期间，哪个门店的销售数量最多，并且该门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "SUM(ss.sales_quantity)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id WHERE e.name = '王丽';",
    "question": "获取特定员工的所有销售订单及其总金额。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "e.name",
      "=",
      "'王丽';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "e.name",
      "=",
      "'王丽';"
    ],
    "question_toks": [
      "获取特定员工的所有销售订单及其总金额。"
    ],
    "result_fields": [
      "so.order_id",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT od.order_detail_id, od.unit_price FROM orderdetails od JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '戴尔灵越15';",
    "question": "查找某商品的所有订单详情及其销售单价。",
    "query_toks": [
      "SELECT",
      "od.order_detail_id,",
      "od.unit_price",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'戴尔灵越15';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "od.order_detail_id,",
      "od.unit_price",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'戴尔灵越15';"
    ],
    "question_toks": [
      "查找某商品的所有订单详情及其销售单价。"
    ],
    "result_fields": [
      "od.order_detail_id",
      "od.unit_price"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, ss.sales_amount, ss.date FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id;",
    "question": "查询每个门店的销售总金额及对应的统计日期。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "ss.sales_amount,",
      "ss.date",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "ss.sales_amount,",
      "ss.date",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id;"
    ],
    "question_toks": [
      "查询每个门店的销售总金额及对应的统计日期。"
    ],
    "result_fields": [
      "s.store_name",
      "ss.sales_amount",
      "ss.date"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT p.product_name FROM products p JOIN orderdetails od ON p.product_id = od.product_id JOIN salesorders so ON od.order_id = so.order_id JOIN stores s ON so.store_id = s.store_id WHERE p.purchase_price > 4000 AND s.store_name = '未来城店';",
    "question": "查找在未来城店中进货价高于4000的商品名称。",
    "query_toks": [
      "SELECT",
      "p.product_name",
      "FROM",
      "products",
      "p",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "p.product_id",
      "=",
      "od.product_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "p.purchase_price",
      ">",
      "4000",
      "AND",
      "s.store_name",
      "=",
      "'未来城店';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "p.product_name",
      "FROM",
      "products",
      "p",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "p.product_id",
      "=",
      "od.product_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "p.purchase_price",
      ">",
      "4000",
      "AND",
      "s.store_name",
      "=",
      "'未来城店';"
    ],
    "question_toks": [
      "查找在未来城店中进货价高于4000的商品名称。"
    ],
    "result_fields": [
      "p.product_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-09' GROUP BY s.store_name, s.manager_name HAVING SUM(so.total_amount) > 10000;",
    "question": "在2023年5月9日，哪些门店的销售订单总额超过了10000元，并且这些门店的店长姓名是什么？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-09'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "HAVING",
      "SUM(so.total_amount)",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-09'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "HAVING",
      "SUM(so.total_amount)",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月9日，哪些门店的销售订单总额超过了10000元，并且这些门店的店长姓名是什么？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-02' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;",
    "question": "在2023年5月2日，哪个门店的销售总额最高，并且该门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-02'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-02'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月2日，哪个门店的销售总额最高，并且该门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-09' AND ss.sales_amount > 1000;",
    "question": "在2023年5月9日，哪些门店的销售金额超过了1000元，并且这些门店的店长姓名是什么？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "AND",
      "ss.sales_amount",
      ">",
      "1000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "AND",
      "ss.sales_amount",
      ">",
      "1000;"
    ],
    "question_toks": [
      "在2023年5月9日，哪些门店的销售金额超过了1000元，并且这些门店的店长姓名是什么？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name AS employee_name, p.category_name AS product_category FROM salesorders s JOIN employees e ON s.employee_id = e.employee_id JOIN orderdetails od ON s.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE s.order_date >= '2023-05-01' AND s.order_date < '2023-06-01' AND s.total_amount > 10000 GROUP BY e.name, p.category_name;",
    "question": "在2023年5月，哪些员工在销售订单中处理了超过10000元的订单，并且这些订单涉及的商品类别是什么？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "p.category_name",
      "AS",
      "product_category",
      "FROM",
      "salesorders",
      "s",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "s.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "s.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "s.order_date",
      "<",
      "'2023-06-01'",
      "AND",
      "s.total_amount",
      ">",
      "10000",
      "GROUP",
      "BY",
      "e.name,",
      "p.category_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "p.category_name",
      "AS",
      "product_category",
      "FROM",
      "salesorders",
      "s",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "s.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "s.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "s.order_date",
      "<",
      "'2023-06-01'",
      "AND",
      "s.total_amount",
      ">",
      "10000",
      "GROUP",
      "BY",
      "e.name,",
      "p.category_name;"
    ],
    "question_toks": [
      "在2023年5月，哪些员工在销售订单中处理了超过10000元的订单，并且这些订单涉及的商品类别是什么？"
    ],
    "result_fields": [
      "e.name",
      "p.category_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id GROUP BY s.store_name;",
    "question": "统计每个门店的总利润，按门店名称分组。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "question_toks": [
      "统计每个门店的总利润，按门店名称分组。"
    ],
    "result_fields": [
      "s.store_name",
      "SUM(ss.profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, od.unit_price * od.quantity AS sales_amount, p.product_name FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date >= '2023-05-01' AND so.order_date < '2023-06-01' AND p.supplier_name = '索尼官方旗舰店' AND od.unit_price * od.quantity > 10000;",
    "question": "在2023年5月期间，哪些门店的员工销售了超过10000元的商品，并且这些商品的供应商是索尼官方旗舰店？请列出门店名称、员工姓名、销售金额和商品名称。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "od.unit_price",
      "*",
      "od.quantity",
      "AS",
      "sales_amount,",
      "p.product_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "AND",
      "p.supplier_name",
      "=",
      "'索尼官方旗舰店'",
      "AND",
      "od.unit_price",
      "*",
      "od.quantity",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "od.unit_price",
      "*",
      "od.quantity",
      "AS",
      "sales_amount,",
      "p.product_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "AND",
      "p.supplier_name",
      "=",
      "'索尼官方旗舰店'",
      "AND",
      "od.unit_price",
      "*",
      "od.quantity",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月期间，哪些门店的员工销售了超过10000元的商品，并且这些商品的供应商是索尼官方旗舰店？请列出门店名称、员工姓名、销售金额和商品名称。"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "od.unit_price * od.quantity",
      "p.product_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, so.total_amount, od.product_id, od.quantity FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id WHERE so.total_amount > 5000;",
    "question": "查询销售金额大于5000的订单及其详情。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "so.total_amount,",
      "od.product_id,",
      "od.quantity",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "WHERE",
      "so.total_amount",
      ">",
      "5000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "so.total_amount,",
      "od.product_id,",
      "od.quantity",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "WHERE",
      "so.total_amount",
      ">",
      "5000;"
    ],
    "question_toks": [
      "查询销售金额大于5000的订单及其详情。"
    ],
    "result_fields": [
      "so.order_id",
      "so.total_amount",
      "od.product_id",
      "od.quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT p.product_name, ss.sales_amount FROM products p JOIN salesstatistics ss ON p.product_id = ss.product_id WHERE ss.date = '2023-05-02';",
    "question": "查询在特定日期（例如2023-05-02）销售的所有商品及其销售金额。",
    "query_toks": [
      "SELECT",
      "p.product_name,",
      "ss.sales_amount",
      "FROM",
      "products",
      "p",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "p.product_id",
      "=",
      "ss.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-02';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "p.product_name,",
      "ss.sales_amount",
      "FROM",
      "products",
      "p",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "p.product_id",
      "=",
      "ss.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-02';"
    ],
    "question_toks": [
      "查询在特定日期（例如2023-05-02）销售的所有商品及其销售金额。"
    ],
    "result_fields": [
      "p.product_name",
      "ss.sales_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT ss.sales_quantity, s.store_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-01' OR ss.date = '2023-05-06';",
    "question": "查找2023年5月的数据，包括销售数量和对应的门店名称。",
    "query_toks": [
      "SELECT",
      "ss.sales_quantity,",
      "s.store_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-01'",
      "OR",
      "ss.date",
      "=",
      "'2023-05-06';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ss.sales_quantity,",
      "s.store_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-01'",
      "OR",
      "ss.date",
      "=",
      "'2023-05-06';"
    ],
    "question_toks": [
      "查找2023年5月的数据，包括销售数量和对应的门店名称。"
    ],
    "result_fields": [
      "ss.sales_quantity",
      "s.store_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT product_name, sale_price, purchase_price FROM products;",
    "question": "获取每种商品的售价和进货价。",
    "query_toks": [
      "SELECT",
      "product_name,",
      "sale_price,",
      "purchase_price",
      "FROM",
      "products;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "product_name,",
      "sale_price,",
      "purchase_price",
      "FROM",
      "products;"
    ],
    "question_toks": [
      "获取每种商品的售价和进货价。"
    ],
    "result_fields": [
      "product_name",
      "sale_price",
      "purchase_price"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, SUM(ss.sales_quantity) AS total_sales_quantity FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id JOIN products p ON ss.product_id = p.product_id WHERE p.category_name = '智能手表' AND p.supplier_name = '索尼官方旗舰店' AND ss.date >= '2023-05-01' AND ss.date <= '2023-05-31' GROUP BY s.store_name HAVING SUM(ss.sales_quantity) > 10;",
    "question": "在2023年5月期间，哪些门店的智能手表类商品销售数量超过了10件，并且这些商品的供应商是索尼官方旗舰店？请列出门店名称和销售数量。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales_quantity",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "s.store_id",
      "=",
      "ss.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.category_name",
      "=",
      "'智能手表'",
      "AND",
      "p.supplier_name",
      "=",
      "'索尼官方旗舰店'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name",
      "HAVING",
      "SUM(ss.sales_quantity)",
      ">",
      "10;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales_quantity",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "s.store_id",
      "=",
      "ss.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.category_name",
      "=",
      "'智能手表'",
      "AND",
      "p.supplier_name",
      "=",
      "'索尼官方旗舰店'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name",
      "HAVING",
      "SUM(ss.sales_quantity)",
      ">",
      "10;"
    ],
    "question_toks": [
      "在2023年5月期间，哪些门店的智能手表类商品销售数量超过了10件，并且这些商品的供应商是索尼官方旗舰店？请列出门店名称和销售数量。"
    ],
    "result_fields": [
      "s.store_name",
      "SUM(ss.sales_quantity)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, AVG(so.total_amount) AS avg_order_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date >= '2023-05-01' AND so.order_date < '2023-06-01' GROUP BY s.store_name, s.manager_name HAVING AVG(so.total_amount) > 10000;",
    "question": "在2023年5月，哪些门店的平均订单金额超过了10000元，并且这些门店的店长姓名是什么？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "AVG(so.total_amount)",
      "AS",
      "avg_order_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "HAVING",
      "AVG(so.total_amount)",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "AVG(so.total_amount)",
      "AS",
      "avg_order_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "HAVING",
      "AVG(so.total_amount)",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月，哪些门店的平均订单金额超过了10000元，并且这些门店的店长姓名是什么？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "AVG(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, p.product_name, ss.sales_quantity, ss.sales_amount, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-02' AND p.product_name = 'iPad Air';",
    "question": "在2023年5月2日，哪些门店的员工销售了iPad Air，并且这些销售记录的利润是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "ss.sales_quantity,",
      "ss.sales_amount,",
      "ss.profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-02'",
      "AND",
      "p.product_name",
      "=",
      "'iPad",
      "Air';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "ss.sales_quantity,",
      "ss.sales_amount,",
      "ss.profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-02'",
      "AND",
      "p.product_name",
      "=",
      "'iPad",
      "Air';"
    ],
    "question_toks": [
      "在2023年5月2日，哪些门店的员工销售了iPad",
      "Air，并且这些销售记录的利润是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "p.product_name",
      "ss.sales_quantity",
      "ss.sales_amount",
      "ss.profit"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'iPhone 13' AND ss.date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, e.name;",
    "question": "在2023年5月期间，哪些门店的员工销售了iPhone 13，并且这些销售的利润总和是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "ss.date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "ss.date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "question_toks": [
      "在2023年5月期间，哪些门店的员工销售了iPhone",
      "13，并且这些销售的利润总和是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "SUM(ss.profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, SUM(ss.sales_quantity) AS total_sales_quantity, SUM(ss.sales_amount) AS total_sales_amount FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date >= '2023-05-01' AND ss.date <= '2023-05-31' GROUP BY s.store_name ORDER BY total_sales_quantity DESC LIMIT 1;",
    "question": "在2023年5月，哪个门店的员工销售了最多的商品数量，并且该门店的总销售金额是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales_quantity,",
      "SUM(ss.sales_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name",
      "ORDER",
      "BY",
      "total_sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales_quantity,",
      "SUM(ss.sales_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name",
      "ORDER",
      "BY",
      "total_sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月，哪个门店的员工销售了最多的商品数量，并且该门店的总销售金额是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "SUM(ss.sales_quantity)",
      "SUM(ss.sales_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, SUM(so.total_amount) AS total_sales_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON e.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'Apple Watch Series 7' AND so.order_date = '2023-05-09' GROUP BY s.store_name, e.name;",
    "question": "在2023年5月9日，哪些门店的员工销售了Apple Watch Series 7，并且这些订单的总金额是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Apple",
      "Watch",
      "Series",
      "7'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-09'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Apple",
      "Watch",
      "Series",
      "7'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-09'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "question_toks": [
      "在2023年5月9日，哪些门店的员工销售了Apple",
      "Watch",
      "Series",
      "7，并且这些订单的总金额是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT quantity, unit_price FROM orderdetails;",
    "question": "查询订单详情表中所有订单的销售数量和单价。",
    "query_toks": [
      "SELECT",
      "quantity,",
      "unit_price",
      "FROM",
      "orderdetails;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "quantity,",
      "unit_price",
      "FROM",
      "orderdetails;"
    ],
    "question_toks": [
      "查询订单详情表中所有订单的销售数量和单价。"
    ],
    "result_fields": [
      "quantity",
      "unit_price"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT DISTINCT s.store_name, e.name AS employee_name, e.position FROM stores s JOIN employees e ON s.store_id = e.store_id JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND ss.date >= '2023-05-01' AND ss.date <= '2023-05-31';",
    "question": "在2023年5月期间，哪些门店的员工销售了Nintendo Switch，并且这些员工的职位是什么？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "e.position",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Nintendo",
      "Switch'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "e.position",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Nintendo",
      "Switch'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31';"
    ],
    "question_toks": [
      "在2023年5月期间，哪些门店的员工销售了Nintendo",
      "Switch，并且这些员工的职位是什么？"
    ],
    "result_fields": [
      "DISTINCT s.store_name",
      "e.name",
      "e.position"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT * FROM salesstatistics WHERE sales_quantity > 1;",
    "question": "获取所有销售统计数据中，销售数量大于1的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "salesstatistics",
      "WHERE",
      "sales_quantity",
      ">",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "salesstatistics",
      "WHERE",
      "sales_quantity",
      ">",
      "1;"
    ],
    "question_toks": [
      "获取所有销售统计数据中，销售数量大于1的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND ss.date >= '2023-05-01' AND ss.date < '2023-06-01' GROUP BY s.store_name;",
    "question": "在2023年5月，哪些门店的员工销售了Nintendo Switch，并且这些销售的利润总和是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Nintendo",
      "Switch'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<",
      "'2023-06-01'",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Nintendo",
      "Switch'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<",
      "'2023-06-01'",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "question_toks": [
      "在2023年5月，哪些门店的员工销售了Nintendo",
      "Switch，并且这些销售的利润总和是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "SUM(ss.profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_date, SUM(so.total_amount) AS total_sales FROM salesorders so GROUP BY so.order_date;",
    "question": "获取所有订单的销售总额和对应的订单日期。",
    "query_toks": [
      "SELECT",
      "so.order_date,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "GROUP",
      "BY",
      "so.order_date;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_date,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "GROUP",
      "BY",
      "so.order_date;"
    ],
    "question_toks": [
      "获取所有订单的销售总额和对应的订单日期。"
    ],
    "result_fields": [
      "so.order_date",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT st.store_name, SUM(so.total_amount) AS total_sales, COUNT(so.order_id) AS total_orders FROM salesorders so JOIN stores st ON so.store_id = st.store_id GROUP BY st.store_name;",
    "question": "查询每个门店的订单总金额和销售数量。",
    "query_toks": [
      "SELECT",
      "st.store_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales,",
      "COUNT(so.order_id)",
      "AS",
      "total_orders",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "st",
      "ON",
      "so.store_id",
      "=",
      "st.store_id",
      "GROUP",
      "BY",
      "st.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "st.store_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales,",
      "COUNT(so.order_id)",
      "AS",
      "total_orders",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "st",
      "ON",
      "so.store_id",
      "=",
      "st.store_id",
      "GROUP",
      "BY",
      "st.store_name;"
    ],
    "question_toks": [
      "查询每个门店的订单总金额和销售数量。"
    ],
    "result_fields": [
      "st.store_name",
      "SUM(so.total_amount)",
      "COUNT(so.order_id)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT * FROM orderdetails WHERE quantity = 2;",
    "question": "查询订单详情中，销售数量为2的所有订单详情信息。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "orderdetails",
      "WHERE",
      "quantity",
      "=",
      "2;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "orderdetails",
      "WHERE",
      "quantity",
      "=",
      "2;"
    ],
    "question_toks": [
      "查询订单详情中，销售数量为2的所有订单详情信息。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, e.position FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '戴尔灵越15' AND ss.date = '2023-05-01';",
    "question": "在2023年5月1日，哪些门店的员工销售了戴尔灵越15这款商品，并且这些员工的职位是什么？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "e.position",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'戴尔灵越15'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "e.position",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'戴尔灵越15'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-01';"
    ],
    "question_toks": [
      "在2023年5月1日，哪些门店的员工销售了戴尔灵越15这款商品，并且这些员工的职位是什么？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "e.position"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, e.position, st.store_name FROM employees e JOIN stores st ON e.store_id = st.store_id;",
    "question": "找出所有员工的职务和所属门店。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.position,",
      "st.store_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "stores",
      "st",
      "ON",
      "e.store_id",
      "=",
      "st.store_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.position,",
      "st.store_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "stores",
      "st",
      "ON",
      "e.store_id",
      "=",
      "st.store_id;"
    ],
    "question_toks": [
      "找出所有员工的职务和所属门店。"
    ],
    "result_fields": [
      "e.name",
      "e.position",
      "st.store_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '佳能EOS R6' AND ss.date = '2023-05-03' GROUP BY s.store_name, e.name;",
    "question": "在2023年5月3日，哪些门店的员工销售了佳能EOS R6，并且这些销售的总利润是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-03'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-03'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "question_toks": [
      "在2023年5月3日，哪些门店的员工销售了佳能EOS",
      "R6，并且这些销售的总利润是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "SUM(ss.profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'iPhone 13' AND ss.date = '2023-05-05' GROUP BY s.store_name, e.name;",
    "question": "在2023年5月5日，哪些门店的员工销售了iPhone 13，并且这些销售的利润总和是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-05'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-05'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "question_toks": [
      "在2023年5月5日，哪些门店的员工销售了iPhone",
      "13，并且这些销售的利润总和是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "SUM(ss.profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-06' AND p.product_name = '华为Mate 40 Pro' AND ss.sales_quantity > 1;",
    "question": "在2023年5月6日，哪些门店的员工销售了华为Mate 40 Pro，并且该商品的销售数量超过1个？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "ss.sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-06'",
      "AND",
      "p.product_name",
      "=",
      "'华为Mate",
      "40",
      "Pro'",
      "AND",
      "ss.sales_quantity",
      ">",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "ss.sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-06'",
      "AND",
      "p.product_name",
      "=",
      "'华为Mate",
      "40",
      "Pro'",
      "AND",
      "ss.sales_quantity",
      ">",
      "1;"
    ],
    "question_toks": [
      "在2023年5月6日，哪些门店的员工销售了华为Mate",
      "40",
      "Pro，并且该商品的销售数量超过1个？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "ss.sales_quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT od.order_detail_id, p.product_name, od.quantity FROM orderdetails od JOIN products p ON od.product_id = p.product_id;",
    "question": "查询每个订单的详细信息，包括商品名称和销售数量。",
    "query_toks": [
      "SELECT",
      "od.order_detail_id,",
      "p.product_name,",
      "od.quantity",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "od.order_detail_id,",
      "p.product_name,",
      "od.quantity",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id;"
    ],
    "question_toks": [
      "查询每个订单的详细信息，包括商品名称和销售数量。"
    ],
    "result_fields": [
      "od.order_detail_id",
      "p.product_name",
      "od.quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, e.position, s.phone FROM employees e JOIN stores s ON e.store_id = s.store_id;",
    "question": "查询所有员工及其职位，并显示他们所在门店的联系电话。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.position,",
      "s.phone",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.position,",
      "s.phone",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id;"
    ],
    "question_toks": [
      "查询所有员工及其职位，并显示他们所在门店的联系电话。"
    ],
    "result_fields": [
      "e.name",
      "e.position",
      "s.phone"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, od.quantity FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-05' AND p.product_name = '戴尔灵越15' AND od.quantity > 1;",
    "question": "在2023年5月5日，哪些门店的员工销售了戴尔灵越15商品，并且该商品的销售数量超过1件？请列出门店名称、员工姓名和销售数量。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "od.quantity",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-05'",
      "AND",
      "p.product_name",
      "=",
      "'戴尔灵越15'",
      "AND",
      "od.quantity",
      ">",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "od.quantity",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-05'",
      "AND",
      "p.product_name",
      "=",
      "'戴尔灵越15'",
      "AND",
      "od.quantity",
      ">",
      "1;"
    ],
    "question_toks": [
      "在2023年5月5日，哪些门店的员工销售了戴尔灵越15商品，并且该商品的销售数量超过1件？请列出门店名称、员工姓名和销售数量。"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "od.quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, so.total_amount, od.product_id, od.quantity FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id WHERE so.total_amount > 5000;",
    "question": "查询销售金额大于5000的订单及其商品信息。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "so.total_amount,",
      "od.product_id,",
      "od.quantity",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "WHERE",
      "so.total_amount",
      ">",
      "5000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "so.total_amount,",
      "od.product_id,",
      "od.quantity",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "WHERE",
      "so.total_amount",
      ">",
      "5000;"
    ],
    "question_toks": [
      "查询销售金额大于5000的订单及其商品信息。"
    ],
    "result_fields": [
      "so.order_id",
      "so.total_amount",
      "od.product_id",
      "od.quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, so.order_id, so.total_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id;",
    "question": "获取每个员工的销售订单及其金额。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "so.order_id,",
      "so.total_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "so.order_id,",
      "so.total_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id;"
    ],
    "question_toks": [
      "获取每个员工的销售订单及其金额。"
    ],
    "result_fields": [
      "e.name",
      "so.order_id",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT ss.statistic_id, ss.date FROM salesstatistics ss WHERE ss.profit > 3000;",
    "question": "查找所有利润大于3000的销售统计记录及其对应的日期。",
    "query_toks": [
      "SELECT",
      "ss.statistic_id,",
      "ss.date",
      "FROM",
      "salesstatistics",
      "ss",
      "WHERE",
      "ss.profit",
      ">",
      "3000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ss.statistic_id,",
      "ss.date",
      "FROM",
      "salesstatistics",
      "ss",
      "WHERE",
      "ss.profit",
      ">",
      "3000;"
    ],
    "question_toks": [
      "查找所有利润大于3000的销售统计记录及其对应的日期。"
    ],
    "result_fields": [
      "ss.statistic_id",
      "ss.date"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'Apple Watch Series 7' AND so.order_date = '2023-05-01' AND so.total_amount > 7000;",
    "question": "在2023年5月1日，哪些门店的员工销售了Apple Watch Series 7，并且这些订单的总金额超过了7000元？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Apple",
      "Watch",
      "Series",
      "7'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-01'",
      "AND",
      "so.total_amount",
      ">",
      "7000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Apple",
      "Watch",
      "Series",
      "7'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-01'",
      "AND",
      "so.total_amount",
      ">",
      "7000;"
    ],
    "question_toks": [
      "在2023年5月1日，哪些门店的员工销售了Apple",
      "Watch",
      "Series",
      "7，并且这些订单的总金额超过了7000元？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT p.product_name, p.remaining_quantity, p.category_name FROM products p;",
    "question": "查询每种商品的剩余数量及其类别名称。",
    "query_toks": [
      "SELECT",
      "p.product_name,",
      "p.remaining_quantity,",
      "p.category_name",
      "FROM",
      "products",
      "p;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "p.product_name,",
      "p.remaining_quantity,",
      "p.category_name",
      "FROM",
      "products",
      "p;"
    ],
    "question_toks": [
      "查询每种商品的剩余数量及其类别名称。"
    ],
    "result_fields": [
      "p.product_name",
      "p.remaining_quantity",
      "p.category_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.employee_id, e.name, e.position FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-07' AND p.category_name = '相机' AND so.total_amount > 15000;",
    "question": "在2023年5月7日，哪些员工在销售订单中涉及的商品类别是相机，并且这些订单的总金额超过了15000元？",
    "query_toks": [
      "SELECT",
      "e.employee_id,",
      "e.name,",
      "e.position",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-07'",
      "AND",
      "p.category_name",
      "=",
      "'相机'",
      "AND",
      "so.total_amount",
      ">",
      "15000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.employee_id,",
      "e.name,",
      "e.position",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-07'",
      "AND",
      "p.category_name",
      "=",
      "'相机'",
      "AND",
      "so.total_amount",
      ">",
      "15000;"
    ],
    "question_toks": [
      "在2023年5月7日，哪些员工在销售订单中涉及的商品类别是相机，并且这些订单的总金额超过了15000元？"
    ],
    "result_fields": [
      "e.employee_id",
      "e.name",
      "e.position"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, SUM(ss.profit) AS total_profit FROM salesstatistics ss JOIN products p ON ss.product_id = p.product_id JOIN stores s ON ss.store_id = s.store_id WHERE p.product_name = 'iPhone 13' AND ss.date = '2023-05-03' GROUP BY s.store_name;",
    "question": "在2023年5月3日，哪些门店的员工销售了iPhone 13，并且这些销售的利润总和是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-03'",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-03'",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "question_toks": [
      "在2023年5月3日，哪些门店的员工销售了iPhone",
      "13，并且这些销售的利润总和是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "SUM(ss.profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-08' GROUP BY s.store_id ORDER BY total_sales DESC LIMIT 1;",
    "question": "在2023年5月8日，哪个门店的总销售金额最高，并且该门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-08'",
      "GROUP",
      "BY",
      "s.store_id",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-08'",
      "GROUP",
      "BY",
      "s.store_id",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月8日，哪个门店的总销售金额最高，并且该门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name AS employee_name, ss.sales_quantity, ss.sales_amount FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-03' AND s.store_name = '数字大道店' AND p.product_name = 'Nintendo Switch';",
    "question": "在2023年5月3日，哪些员工在数字大道店销售了Nintendo Switch，并且他们的销售数量和总金额是多少？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "ss.sales_quantity,",
      "ss.sales_amount",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-03'",
      "AND",
      "s.store_name",
      "=",
      "'数字大道店'",
      "AND",
      "p.product_name",
      "=",
      "'Nintendo",
      "Switch';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "ss.sales_quantity,",
      "ss.sales_amount",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-03'",
      "AND",
      "s.store_name",
      "=",
      "'数字大道店'",
      "AND",
      "p.product_name",
      "=",
      "'Nintendo",
      "Switch';"
    ],
    "question_toks": [
      "在2023年5月3日，哪些员工在数字大道店销售了Nintendo",
      "Switch，并且他们的销售数量和总金额是多少？"
    ],
    "result_fields": [
      "e.name",
      "ss.sales_quantity",
      "ss.sales_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name FROM salesstatistics ss JOIN products p ON ss.product_id = p.product_id JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id WHERE ss.date = '2023-05-05' AND p.product_name = '戴森V11' AND ss.profit > 500;",
    "question": "在2023年5月5日，哪些门店的员工销售了戴森V11商品，并且该商品的利润超过500元？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-05'",
      "AND",
      "p.product_name",
      "=",
      "'戴森V11'",
      "AND",
      "ss.profit",
      ">",
      "500;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-05'",
      "AND",
      "p.product_name",
      "=",
      "'戴森V11'",
      "AND",
      "ss.profit",
      ">",
      "500;"
    ],
    "question_toks": [
      "在2023年5月5日，哪些门店的员工销售了戴森V11商品，并且该商品的利润超过500元？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-09' AND ss.sales_amount > 2000;",
    "question": "在2023年5月9日，哪些门店的销售金额超过了2000元，并且这些门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "AND",
      "ss.sales_amount",
      ">",
      "2000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "AND",
      "ss.sales_amount",
      ">",
      "2000;"
    ],
    "question_toks": [
      "在2023年5月9日，哪些门店的销售金额超过了2000元，并且这些门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.order_date = '2023-05-01' AND so.total_amount > 10000;",
    "question": "在2023年5月1日，哪些门店的销售额超过了10000元，并且这些门店的店长姓名是什么？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-01'",
      "AND",
      "so.total_amount",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-01'",
      "AND",
      "so.total_amount",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月1日，哪些门店的销售额超过了10000元，并且这些门店的店长姓名是什么？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, e.name AS employee_name FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-09' AND p.product_name = 'iPhone 13';",
    "question": "在2023年5月9日，哪些门店的员工销售了iPhone 13，并且这些门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "AND",
      "p.product_name",
      "=",
      "'iPhone",
      "13';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "e.name",
      "AS",
      "employee_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "AND",
      "p.product_name",
      "=",
      "'iPhone",
      "13';"
    ],
    "question_toks": [
      "在2023年5月9日，哪些门店的员工销售了iPhone",
      "13，并且这些门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "e.name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT sales_amount, remaining_quantity FROM salesstatistics ss JOIN products p ON ss.product_id = p.product_id WHERE p.product_id = '81bfd69e-1240-48bf-a302-313c0255a1c9';",
    "question": "查询某个商品的销售金额和剩余数量。",
    "query_toks": [
      "SELECT",
      "sales_amount,",
      "remaining_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_id",
      "=",
      "'81bfd69e-1240-48bf-a302-313c0255a1c9';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "sales_amount,",
      "remaining_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_id",
      "=",
      "'81bfd69e-1240-48bf-a302-313c0255a1c9';"
    ],
    "question_toks": [
      "查询某个商品的销售金额和剩余数量。"
    ],
    "result_fields": [
      "sales_amount",
      "remaining_quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.address, s.phone FROM stores s;",
    "question": "查找所有门店及其地址和电话。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.address,",
      "s.phone",
      "FROM",
      "stores",
      "s;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.address,",
      "s.phone",
      "FROM",
      "stores",
      "s;"
    ],
    "question_toks": [
      "查找所有门店及其地址和电话。"
    ],
    "result_fields": [
      "s.store_name",
      "s.address",
      "s.phone"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-02' AND so.total_amount > 2000;",
    "question": "在2023年5月2日，哪些门店的员工完成了销售订单，并且这些订单的总金额超过了2000元？请列出门店名称、员工姓名和订单总金额。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-02'",
      "AND",
      "so.total_amount",
      ">",
      "2000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-02'",
      "AND",
      "so.total_amount",
      ">",
      "2000;"
    ],
    "question_toks": [
      "在2023年5月2日，哪些门店的员工完成了销售订单，并且这些订单的总金额超过了2000元？请列出门店名称、员工姓名和订单总金额。"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT store_id, SUM(sales_quantity) AS total_sales_quantity, SUM(profit) AS total_profit FROM salesstatistics GROUP BY store_id;",
    "question": "获取每个门店的总销售数量和总利润。",
    "query_toks": [
      "SELECT",
      "store_id,",
      "SUM(sales_quantity)",
      "AS",
      "total_sales_quantity,",
      "SUM(profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "GROUP",
      "BY",
      "store_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "store_id,",
      "SUM(sales_quantity)",
      "AS",
      "total_sales_quantity,",
      "SUM(profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "GROUP",
      "BY",
      "store_id;"
    ],
    "question_toks": [
      "获取每个门店的总销售数量和总利润。"
    ],
    "result_fields": [
      "store_id",
      "SUM(sales_quantity)",
      "SUM(profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, st.profit, s.manager_name FROM salesstatistics st JOIN stores s ON st.store_id = s.store_id WHERE st.date = '2023-05-07' AND st.profit > 1000;",
    "question": "在2023年5月7日，哪些门店的销售利润超过了1000元，并且这些门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "st.profit,",
      "s.manager_name",
      "FROM",
      "salesstatistics",
      "st",
      "JOIN",
      "stores",
      "s",
      "ON",
      "st.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "st.date",
      "=",
      "'2023-05-07'",
      "AND",
      "st.profit",
      ">",
      "1000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "st.profit,",
      "s.manager_name",
      "FROM",
      "salesstatistics",
      "st",
      "JOIN",
      "stores",
      "s",
      "ON",
      "st.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "st.date",
      "=",
      "'2023-05-07'",
      "AND",
      "st.profit",
      ">",
      "1000;"
    ],
    "question_toks": [
      "在2023年5月7日，哪些门店的销售利润超过了1000元，并且这些门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "st.profit",
      "s.manager_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-08' ORDER BY ss.sales_quantity DESC LIMIT 1;",
    "question": "在2023年5月8日，哪个门店的销售数量最多，并且该门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "ss.sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-08'",
      "ORDER",
      "BY",
      "ss.sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "ss.sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-08'",
      "ORDER",
      "BY",
      "ss.sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月8日，哪个门店的销售数量最多，并且该门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "ss.sales_quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT ss.store_id, SUM(ss.profit) AS total_profit FROM salesstatistics ss WHERE ss.date = '2023-05-09' GROUP BY ss.store_id ORDER BY total_profit DESC LIMIT 1;",
    "question": "哪个门店在2023年5月9日的销售中获利最多？",
    "query_toks": [
      "SELECT",
      "ss.store_id,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "GROUP",
      "BY",
      "ss.store_id",
      "ORDER",
      "BY",
      "total_profit",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ss.store_id,",
      "SUM(ss.profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics",
      "ss",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "GROUP",
      "BY",
      "ss.store_id",
      "ORDER",
      "BY",
      "total_profit",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "哪个门店在2023年5月9日的销售中获利最多？"
    ],
    "result_fields": [
      "ss.store_id",
      "SUM(ss.profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, SUM(od.quantity * od.unit_price) AS total_sales FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id WHERE p.product_name = '佳能EOS R6' AND so.order_date >= '2023-05-01' AND so.order_date < '2023-06-01' GROUP BY s.store_name, e.name HAVING SUM(od.quantity * od.unit_price) > 5000;",
    "question": "在2023年5月，哪些门店的员工销售了佳能EOS R6相机，并且这些订单的总金额超过了5000元？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6'",
      "AND",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name",
      "HAVING",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      ">",
      "5000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6'",
      "AND",
      "so.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "so.order_date",
      "<",
      "'2023-06-01'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name",
      "HAVING",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      ">",
      "5000;"
    ],
    "question_toks": [
      "在2023年5月，哪些门店的员工销售了佳能EOS",
      "R6相机，并且这些订单的总金额超过了5000元？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "SUM(od.quantity * od.unit_price)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, e.position FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'iPad Air' AND ss.date >= '2023-05-01' AND ss.date <= '2023-05-31';",
    "question": "在2023年5月期间，哪些门店的员工销售了iPad Air，并且这些员工的职位是什么？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "e.position",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPad",
      "Air'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "e.position",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPad",
      "Air'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31';"
    ],
    "question_toks": [
      "在2023年5月期间，哪些门店的员工销售了iPad",
      "Air，并且这些员工的职位是什么？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "e.position"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT category_name, sale_price FROM products;",
    "question": "查找所有商品的类别名称和售价。",
    "query_toks": [
      "SELECT",
      "category_name,",
      "sale_price",
      "FROM",
      "products;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "category_name,",
      "sale_price",
      "FROM",
      "products;"
    ],
    "question_toks": [
      "查找所有商品的类别名称和售价。"
    ],
    "result_fields": [
      "category_name",
      "sale_price"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, COUNT(e.employee_id) AS sales_manager_count FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id JOIN employees e ON s.store_id = e.store_id WHERE ss.date >= '2023-05-01' AND ss.date <= '2023-05-31' AND ss.sales_amount > 10000 AND e.position = '销售经理' GROUP BY s.store_name;",
    "question": "在2023年5月，哪些门店的销售额超过了10000元，并且这些门店中有多少员工是销售经理？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "COUNT(e.employee_id)",
      "AS",
      "sales_manager_count",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "s.store_id",
      "=",
      "ss.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id",
      "WHERE",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "AND",
      "ss.sales_amount",
      ">",
      "10000",
      "AND",
      "e.position",
      "=",
      "'销售经理'",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "COUNT(e.employee_id)",
      "AS",
      "sales_manager_count",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "s.store_id",
      "=",
      "ss.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id",
      "WHERE",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "AND",
      "ss.sales_amount",
      ">",
      "10000",
      "AND",
      "e.position",
      "=",
      "'销售经理'",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "question_toks": [
      "在2023年5月，哪些门店的销售额超过了10000元，并且这些门店中有多少员工是销售经理？"
    ],
    "result_fields": [
      "s.store_name",
      "COUNT(e.employee_id)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT p.product_name, p.remaining_quantity, SUM(od.quantity) AS sold_quantity FROM products p LEFT JOIN orderdetails od ON p.product_id = od.product_id GROUP BY p.product_name, p.remaining_quantity;",
    "question": "找出每个商品的剩余数量及其对应的销售数量。",
    "query_toks": [
      "SELECT",
      "p.product_name,",
      "p.remaining_quantity,",
      "SUM(od.quantity)",
      "AS",
      "sold_quantity",
      "FROM",
      "products",
      "p",
      "LEFT",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "p.product_id",
      "=",
      "od.product_id",
      "GROUP",
      "BY",
      "p.product_name,",
      "p.remaining_quantity;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "p.product_name,",
      "p.remaining_quantity,",
      "SUM(od.quantity)",
      "AS",
      "sold_quantity",
      "FROM",
      "products",
      "p",
      "LEFT",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "p.product_id",
      "=",
      "od.product_id",
      "GROUP",
      "BY",
      "p.product_name,",
      "p.remaining_quantity;"
    ],
    "question_toks": [
      "找出每个商品的剩余数量及其对应的销售数量。"
    ],
    "result_fields": [
      "p.product_name",
      "p.remaining_quantity",
      "SUM(od.quantity)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, so.order_date, so.total_amount FROM salesorders so;",
    "question": "查询每个订单的详细信息，包括订单日期和总金额。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "so.order_date,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "so.order_date,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so;"
    ],
    "question_toks": [
      "查询每个订单的详细信息，包括订单日期和总金额。"
    ],
    "result_fields": [
      "so.order_id",
      "so.order_date",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, p.product_name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-06' AND p.product_name = '华为Mate 40 Pro' AND ss.sales_quantity > 1;",
    "question": "在2023年5月6日，哪些门店的员工销售了华为Mate 40 Pro手机，并且该商品的销售数量超过了1件？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "ss.sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-06'",
      "AND",
      "p.product_name",
      "=",
      "'华为Mate",
      "40",
      "Pro'",
      "AND",
      "ss.sales_quantity",
      ">",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "ss.sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-06'",
      "AND",
      "p.product_name",
      "=",
      "'华为Mate",
      "40",
      "Pro'",
      "AND",
      "ss.sales_quantity",
      ">",
      "1;"
    ],
    "question_toks": [
      "在2023年5月6日，哪些门店的员工销售了华为Mate",
      "40",
      "Pro手机，并且该商品的销售数量超过了1件？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "p.product_name",
      "ss.sales_quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name, e.position FROM stores s JOIN employees e ON s.store_id = e.store_id;",
    "question": "获取每个门店的员工及其职位。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name,",
      "e.position",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name,",
      "e.position",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id;"
    ],
    "question_toks": [
      "获取每个门店的员工及其职位。"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "e.position"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name AS employee_name, SUM(od.quantity * od.unit_price) AS total_sales_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-01' AND s.store_name = '创客空间店' AND p.product_name = '华为Mate 40 Pro' GROUP BY e.name;",
    "question": "在2023年5月1日，哪些员工在创客空间店销售了华为Mate 40 Pro，并且这些销售的总金额是多少？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_sales_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-01'",
      "AND",
      "s.store_name",
      "=",
      "'创客空间店'",
      "AND",
      "p.product_name",
      "=",
      "'华为Mate",
      "40",
      "Pro'",
      "GROUP",
      "BY",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_sales_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-01'",
      "AND",
      "s.store_name",
      "=",
      "'创客空间店'",
      "AND",
      "p.product_name",
      "=",
      "'华为Mate",
      "40",
      "Pro'",
      "GROUP",
      "BY",
      "e.name;"
    ],
    "question_toks": [
      "在2023年5月1日，哪些员工在创客空间店销售了华为Mate",
      "40",
      "Pro，并且这些销售的总金额是多少？"
    ],
    "result_fields": [
      "e.name",
      "SUM(od.quantity * od.unit_price)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, e.position FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '戴森V11' AND ss.date >= '2023-05-01' AND ss.date <= '2023-05-31';",
    "question": "在2023年5月期间，哪些门店的员工销售了戴森V11商品，并且这些员工的职位是什么？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "e.position",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'戴森V11'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "e.position",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'戴森V11'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31';"
    ],
    "question_toks": [
      "在2023年5月期间，哪些门店的员工销售了戴森V11商品，并且这些员工的职位是什么？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "e.position"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT od.order_detail_id, p.product_name, od.quantity FROM orderdetails od JOIN products p ON od.product_id = p.product_id;",
    "question": "获取所有订单详情和相应的产品信息。",
    "query_toks": [
      "SELECT",
      "od.order_detail_id,",
      "p.product_name,",
      "od.quantity",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "od.order_detail_id,",
      "p.product_name,",
      "od.quantity",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id;"
    ],
    "question_toks": [
      "获取所有订单详情和相应的产品信息。"
    ],
    "result_fields": [
      "od.order_detail_id",
      "p.product_name",
      "od.quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT DISTINCT e.employee_id, e.name FROM employees e JOIN salesstatistics s ON e.employee_id = s.employee_id JOIN products p ON s.product_id = p.product_id WHERE s.date = '2023-05-06' AND s.sales_quantity > 1 AND p.supplier_name = '戴尔官方旗舰店';",
    "question": "在2023年5月6日，哪些员工在销售统计表中记录了销售数量大于1的商品，并且这些商品的供应商是'戴尔官方旗舰店'？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "e.employee_id,",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "s",
      "ON",
      "e.employee_id",
      "=",
      "s.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "s.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "s.date",
      "=",
      "'2023-05-06'",
      "AND",
      "s.sales_quantity",
      ">",
      "1",
      "AND",
      "p.supplier_name",
      "=",
      "'戴尔官方旗舰店';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "e.employee_id,",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "s",
      "ON",
      "e.employee_id",
      "=",
      "s.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "s.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "s.date",
      "=",
      "'2023-05-06'",
      "AND",
      "s.sales_quantity",
      ">",
      "1",
      "AND",
      "p.supplier_name",
      "=",
      "'戴尔官方旗舰店';"
    ],
    "question_toks": [
      "在2023年5月6日，哪些员工在销售统计表中记录了销售数量大于1的商品，并且这些商品的供应商是'戴尔官方旗舰店'？"
    ],
    "result_fields": [
      "DISTINCT e.employee_id",
      "e.name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT product_name, sale_price FROM products;",
    "question": "查询所有商品的名称及其售价。",
    "query_toks": [
      "SELECT",
      "product_name,",
      "sale_price",
      "FROM",
      "products;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "product_name,",
      "sale_price",
      "FROM",
      "products;"
    ],
    "question_toks": [
      "查询所有商品的名称及其售价。"
    ],
    "result_fields": [
      "product_name",
      "sale_price"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT manager_name, phone FROM stores;",
    "question": "获取每个门店的店长姓名及联系电话。",
    "query_toks": [
      "SELECT",
      "manager_name,",
      "phone",
      "FROM",
      "stores;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "manager_name,",
      "phone",
      "FROM",
      "stores;"
    ],
    "question_toks": [
      "获取每个门店的店长姓名及联系电话。"
    ],
    "result_fields": [
      "manager_name",
      "phone"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.total_amount, st.store_name FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores st ON so.store_id = st.store_id WHERE e.name = '范莹' AND so.order_date = '2023-05-07';",
    "question": "查询在2023年5月7日由员工范莹负责的所有销售订单的总金额和对应门店名称。",
    "query_toks": [
      "SELECT",
      "so.total_amount,",
      "st.store_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "st",
      "ON",
      "so.store_id",
      "=",
      "st.store_id",
      "WHERE",
      "e.name",
      "=",
      "'范莹'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-07';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.total_amount,",
      "st.store_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "st",
      "ON",
      "so.store_id",
      "=",
      "st.store_id",
      "WHERE",
      "e.name",
      "=",
      "'范莹'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-07';"
    ],
    "question_toks": [
      "查询在2023年5月7日由员工范莹负责的所有销售订单的总金额和对应门店名称。"
    ],
    "result_fields": [
      "so.total_amount",
      "st.store_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, SUM(so.total_amount) AS total_sales FROM stores s JOIN salesorders so ON s.store_id = so.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'Apple Watch Series 7' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name HAVING SUM(so.total_amount) > 10000;",
    "question": "在2023年5月期间，哪些门店的员工销售了'Apple Watch Series 7'，并且这些门店的总销售金额超过了10000元？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Apple",
      "Watch",
      "Series",
      "7'",
      "AND",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name",
      "HAVING",
      "SUM(so.total_amount)",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Apple",
      "Watch",
      "Series",
      "7'",
      "AND",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name",
      "HAVING",
      "SUM(so.total_amount)",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月期间，哪些门店的员工销售了'Apple",
      "Watch",
      "Series",
      "7'，并且这些门店的总销售金额超过了10000元？"
    ],
    "result_fields": [
      "s.store_name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name;",
    "question": "统计每个门店在2023年5月的销售总金额。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "question_toks": [
      "统计每个门店在2023年5月的销售总金额。"
    ],
    "result_fields": [
      "s.store_name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT store_name, manager_name FROM stores;",
    "question": "获取所有门店及其对应的经理姓名。",
    "query_toks": [
      "SELECT",
      "store_name,",
      "manager_name",
      "FROM",
      "stores;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "store_name,",
      "manager_name",
      "FROM",
      "stores;"
    ],
    "question_toks": [
      "获取所有门店及其对应的经理姓名。"
    ],
    "result_fields": [
      "store_name",
      "manager_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT p.product_name, p.sale_price, p.remaining_quantity FROM products p;",
    "question": "获取所有商品的销售单价和剩余数量。",
    "query_toks": [
      "SELECT",
      "p.product_name,",
      "p.sale_price,",
      "p.remaining_quantity",
      "FROM",
      "products",
      "p;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "p.product_name,",
      "p.sale_price,",
      "p.remaining_quantity",
      "FROM",
      "products",
      "p;"
    ],
    "question_toks": [
      "获取所有商品的销售单价和剩余数量。"
    ],
    "result_fields": [
      "p.product_name",
      "p.sale_price",
      "p.remaining_quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, SUM(so.total_amount) AS total_sales_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON so.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'iPhone 13' AND so.order_date = '2023-05-01' GROUP BY s.store_name, e.name;",
    "question": "在2023年5月1日，哪些门店的员工销售了iPhone 13，并且这些订单的总金额是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-01'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-01'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "question_toks": [
      "在2023年5月1日，哪些门店的员工销售了iPhone",
      "13，并且这些订单的总金额是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '索尼WH-1000XM4' AND so.order_date = '2023-05-08' AND so.total_amount > 15000;",
    "question": "在2023年5月8日，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些订单的总金额超过了15000元？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-08'",
      "AND",
      "so.total_amount",
      ">",
      "15000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-08'",
      "AND",
      "so.total_amount",
      ">",
      "15000;"
    ],
    "question_toks": [
      "在2023年5月8日，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些订单的总金额超过了15000元？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, MAX(ss.sales_quantity) AS max_sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-09' GROUP BY s.store_name, s.manager_name ORDER BY max_sales_quantity DESC LIMIT 1;",
    "question": "在2023年5月9日，哪个门店的销售数量最多，并且该门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "MAX(ss.sales_quantity)",
      "AS",
      "max_sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "max_sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "MAX(ss.sales_quantity)",
      "AS",
      "max_sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "max_sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月9日，哪个门店的销售数量最多，并且该门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "MAX(ss.sales_quantity)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT SUM(profit) AS total_profit FROM salesstatistics;",
    "question": "获取销售统计表中所有记录的利润总和。",
    "query_toks": [
      "SELECT",
      "SUM(profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "SUM(profit)",
      "AS",
      "total_profit",
      "FROM",
      "salesstatistics;"
    ],
    "question_toks": [
      "获取销售统计表中所有记录的利润总和。"
    ],
    "result_fields": [
      "SUM(profit)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, s.store_name FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.employee_id = 'a4fddd73-a996-4afc-b014-4daf6a9c778a';",
    "question": "查询特定员工的所有订单及对应的门店名称。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "s.store_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.employee_id",
      "=",
      "'a4fddd73-a996-4afc-b014-4daf6a9c778a';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "s.store_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.employee_id",
      "=",
      "'a4fddd73-a996-4afc-b014-4daf6a9c778a';"
    ],
    "question_toks": [
      "查询特定员工的所有订单及对应的门店名称。"
    ],
    "result_fields": [
      "so.order_id",
      "s.store_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, SUM(ss.sales_quantity) AS total_sales_quantity FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON e.store_id = s.store_id WHERE e.name = '黄萍' AND ss.date >= '2023-05-01' AND ss.date <= '2023-05-31' GROUP BY s.store_name ORDER BY total_sales_quantity DESC LIMIT 1;",
    "question": "在2023年5月，哪个门店的销售顾问黄萍销售了最多的商品数量？请列出该门店的名称和销售顾问黄萍的销售数量。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales_quantity",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "e.name",
      "=",
      "'黄萍'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name",
      "ORDER",
      "BY",
      "total_sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales_quantity",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "e.name",
      "=",
      "'黄萍'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name",
      "ORDER",
      "BY",
      "total_sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月，哪个门店的销售顾问黄萍销售了最多的商品数量？请列出该门店的名称和销售顾问黄萍的销售数量。"
    ],
    "result_fields": [
      "s.store_name",
      "SUM(ss.sales_quantity)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, ss.profit FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND ss.date = '2023-05-08';",
    "question": "在2023年5月8日，哪些门店的员工销售了Nintendo Switch，并且这些销售的利润是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "ss.profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Nintendo",
      "Switch'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-08';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "ss.profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Nintendo",
      "Switch'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-08';"
    ],
    "question_toks": [
      "在2023年5月8日，哪些门店的员工销售了Nintendo",
      "Switch，并且这些销售的利润是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "ss.profit"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '索尼WH-1000XM4' AND so.order_date = '2023-05-05';",
    "question": "在2023年5月5日，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些订单的总金额是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-05';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-05';"
    ],
    "question_toks": [
      "在2023年5月5日，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些订单的总金额是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, e.position, p.product_name FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-05' AND s.store_name = '智能生活馆' AND p.supplier_name = '小米官方旗舰店';",
    "question": "在2023年5月5日，哪些员工在智能生活馆销售了商品，并且这些商品的供应商是小米官方旗舰店？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.position,",
      "p.product_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-05'",
      "AND",
      "s.store_name",
      "=",
      "'智能生活馆'",
      "AND",
      "p.supplier_name",
      "=",
      "'小米官方旗舰店';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.position,",
      "p.product_name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-05'",
      "AND",
      "s.store_name",
      "=",
      "'智能生活馆'",
      "AND",
      "p.supplier_name",
      "=",
      "'小米官方旗舰店';"
    ],
    "question_toks": [
      "在2023年5月5日，哪些员工在智能生活馆销售了商品，并且这些商品的供应商是小米官方旗舰店？"
    ],
    "result_fields": [
      "e.name",
      "e.position",
      "p.product_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-07' ORDER BY ss.profit DESC LIMIT 1;",
    "question": "在2023年5月7日，哪个门店的销售利润最高，并且该门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-07'",
      "ORDER",
      "BY",
      "ss.profit",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-07'",
      "ORDER",
      "BY",
      "ss.profit",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月7日，哪个门店的销售利润最高，并且该门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, p.product_name, ss.profit FROM salesstatistics ss JOIN products p ON ss.product_id = p.product_id JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id WHERE p.product_name = '索尼WH-1000XM4' AND ss.date = '2023-05-09';",
    "question": "在2023年5月9日，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些销售的利润是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "ss.profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-09';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "ss.profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-09';"
    ],
    "question_toks": [
      "在2023年5月9日，哪些门店的员工销售了索尼WH-1000XM4耳机，并且这些销售的利润是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "p.product_name",
      "ss.profit"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT p.product_name, od.quantity, od.unit_price FROM orderdetails od JOIN products p ON od.product_id = p.product_id JOIN salesorders so ON od.order_id = so.order_id WHERE p.product_name = '佳能EOS R6';",
    "question": "查询某个商品在所有门店的销售数量及售价。",
    "query_toks": [
      "SELECT",
      "p.product_name,",
      "od.quantity,",
      "od.unit_price",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "WHERE",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "p.product_name,",
      "od.quantity,",
      "od.unit_price",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "WHERE",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6';"
    ],
    "question_toks": [
      "查询某个商品在所有门店的销售数量及售价。"
    ],
    "result_fields": [
      "p.product_name",
      "od.quantity",
      "od.unit_price"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-03';",
    "question": "在销售订单表中，查询在2023年5月3日销售的所有订单的总金额和对应的门店名称。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-03';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-03';"
    ],
    "question_toks": [
      "在销售订单表中，查询在2023年5月3日销售的所有订单的总金额和对应的门店名称。"
    ],
    "result_fields": [
      "s.store_name",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT * FROM orderdetails WHERE quantity > 1;",
    "question": "查询订单详情表中销售数量大于1的所有记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "orderdetails",
      "WHERE",
      "quantity",
      ">",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "orderdetails",
      "WHERE",
      "quantity",
      ">",
      "1;"
    ],
    "question_toks": [
      "查询订单详情表中销售数量大于1的所有记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'iPhone 13' AND so.order_date = '2023-05-05';",
    "question": "在2023年5月5日，哪个门店的员工销售了iPhone 13，并且该订单的总金额是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-05';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-05';"
    ],
    "question_toks": [
      "在2023年5月5日，哪个门店的员工销售了iPhone",
      "13，并且该订单的总金额是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, so.total_amount, s.store_name FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-05';",
    "question": "找出在2023年5月5日的所有销售记录及其对应的门店名称。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "so.total_amount,",
      "s.store_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-05';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "so.total_amount,",
      "s.store_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-05';"
    ],
    "question_toks": [
      "找出在2023年5月5日的所有销售记录及其对应的门店名称。"
    ],
    "result_fields": [
      "so.order_id",
      "so.total_amount",
      "s.store_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT p.product_name, od.order_id FROM orderdetails od JOIN products p ON od.product_id = p.product_id WHERE od.quantity > 1;",
    "question": "查询所有订单中销售数量大于1的商品名称和订单ID。",
    "query_toks": [
      "SELECT",
      "p.product_name,",
      "od.order_id",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "od.quantity",
      ">",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "p.product_name,",
      "od.order_id",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "od.quantity",
      ">",
      "1;"
    ],
    "question_toks": [
      "查询所有订单中销售数量大于1的商品名称和订单ID。"
    ],
    "result_fields": [
      "p.product_name",
      "od.order_id"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, so.order_date, so.total_amount FROM salesorders so WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31';",
    "question": "查找在2023年5月期间销售的所有订单。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "so.order_date,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "WHERE",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "so.order_date,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "WHERE",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31';"
    ],
    "question_toks": [
      "查找在2023年5月期间销售的所有订单。"
    ],
    "result_fields": [
      "so.order_id",
      "so.order_date",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT employee_id, SUM(sales_quantity) FROM salesstatistics GROUP BY employee_id;",
    "question": "查询销售统计表中每个员工的销售数量。",
    "query_toks": [
      "SELECT",
      "employee_id,",
      "SUM(sales_quantity)",
      "FROM",
      "salesstatistics",
      "GROUP",
      "BY",
      "employee_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "employee_id,",
      "SUM(sales_quantity)",
      "FROM",
      "salesstatistics",
      "GROUP",
      "BY",
      "employee_id;"
    ],
    "question_toks": [
      "查询销售统计表中每个员工的销售数量。"
    ],
    "result_fields": [
      "employee_id",
      "SUM(sales_quantity)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT category_name, remaining_quantity FROM products;",
    "question": "列出每个商品的类别和当前剩余数量。",
    "query_toks": [
      "SELECT",
      "category_name,",
      "remaining_quantity",
      "FROM",
      "products;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "category_name,",
      "remaining_quantity",
      "FROM",
      "products;"
    ],
    "question_toks": [
      "列出每个商品的类别和当前剩余数量。"
    ],
    "result_fields": [
      "category_name",
      "remaining_quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name AS employee_name, SUM(ss.sales_quantity) AS total_sales, s.store_name FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN stores s ON e.store_id = s.store_id GROUP BY e.name, s.store_name;",
    "question": "获取每个员工的销售数量及其对应的门店名称。",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales,",
      "s.store_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "GROUP",
      "BY",
      "e.name,",
      "s.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales,",
      "s.store_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "GROUP",
      "BY",
      "e.name,",
      "s.store_name;"
    ],
    "question_toks": [
      "获取每个员工的销售数量及其对应的门店名称。"
    ],
    "result_fields": [
      "e.name",
      "SUM(ss.sales_quantity)",
      "s.store_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT od.order_id, od.product_id FROM orderdetails od;",
    "question": "查询订单详情中所有订单ID及其对应的商品ID。",
    "query_toks": [
      "SELECT",
      "od.order_id,",
      "od.product_id",
      "FROM",
      "orderdetails",
      "od;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "od.order_id,",
      "od.product_id",
      "FROM",
      "orderdetails",
      "od;"
    ],
    "question_toks": [
      "查询订单详情中所有订单ID及其对应的商品ID。"
    ],
    "result_fields": [
      "od.order_id",
      "od.product_id"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT * FROM salesstatistics WHERE date = '2023-05-05';",
    "question": "查询在特定日期的销售统计。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "salesstatistics",
      "WHERE",
      "date",
      "=",
      "'2023-05-05';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "salesstatistics",
      "WHERE",
      "date",
      "=",
      "'2023-05-05';"
    ],
    "question_toks": [
      "查询在特定日期的销售统计。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name AS employee_name, ss.sales_quantity, ss.sales_amount FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN stores s ON e.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE s.store_name = '科技园店' AND p.product_name = 'iPhone 13' AND ss.date = '2023-05-01';",
    "question": "在2023年5月1日，哪些员工在科技园店销售了iPhone 13，并且他们的销售数量和总金额是多少？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "ss.sales_quantity,",
      "ss.sales_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "s.store_name",
      "=",
      "'科技园店'",
      "AND",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "ss.sales_quantity,",
      "ss.sales_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "s.store_name",
      "=",
      "'科技园店'",
      "AND",
      "p.product_name",
      "=",
      "'iPhone",
      "13'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-01';"
    ],
    "question_toks": [
      "在2023年5月1日，哪些员工在科技园店销售了iPhone",
      "13，并且他们的销售数量和总金额是多少？"
    ],
    "result_fields": [
      "e.name",
      "ss.sales_quantity",
      "ss.sales_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name FROM employees e JOIN salesstatistics ss ON e.employee_id = ss.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-09' AND p.product_name = 'Apple Watch Series 7' AND p.supplier_name = '任天堂官方旗舰店';",
    "question": "在2023年5月9日，哪些员工销售了Apple Watch Series 7，并且这些商品的供应商是任天堂官方旗舰店？",
    "query_toks": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "AND",
      "p.product_name",
      "=",
      "'Apple",
      "Watch",
      "Series",
      "7'",
      "AND",
      "p.supplier_name",
      "=",
      "'任天堂官方旗舰店';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "e.employee_id",
      "=",
      "ss.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "AND",
      "p.product_name",
      "=",
      "'Apple",
      "Watch",
      "Series",
      "7'",
      "AND",
      "p.supplier_name",
      "=",
      "'任天堂官方旗舰店';"
    ],
    "question_toks": [
      "在2023年5月9日，哪些员工销售了Apple",
      "Watch",
      "Series",
      "7，并且这些商品的供应商是任天堂官方旗舰店？"
    ],
    "result_fields": [
      "e.name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.total_amount, s.store_name FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-06';",
    "question": "获取在2023年5月6日的所有销售订单的总金额和对应的门店名称。",
    "query_toks": [
      "SELECT",
      "so.total_amount,",
      "s.store_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-06';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.total_amount,",
      "s.store_name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-06';"
    ],
    "question_toks": [
      "获取在2023年5月6日的所有销售订单的总金额和对应的门店名称。"
    ],
    "result_fields": [
      "so.total_amount",
      "s.store_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, od.quantity, od.unit_price FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id WHERE so.order_date = '2023-05-06';",
    "question": "列出在特定日期内所有销售订单的详情。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "od.quantity,",
      "od.unit_price",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-06';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "od.quantity,",
      "od.unit_price",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-06';"
    ],
    "question_toks": [
      "列出在特定日期内所有销售订单的详情。"
    ],
    "result_fields": [
      "so.order_id",
      "od.quantity",
      "od.unit_price"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name AS employee_name, s.store_name, p.product_name, SUM(o.total_amount) AS total_sales_amount FROM salesorders o JOIN employees e ON o.employee_id = e.employee_id JOIN stores s ON o.store_id = s.store_id JOIN orderdetails d ON o.order_id = d.order_id JOIN products p ON d.product_id = p.product_id WHERE o.order_date = '2023-05-07' AND s.store_name = '智慧街店' AND p.product_name = '佳能EOS R6' GROUP BY e.name, s.store_name, p.product_name;",
    "question": "在2023年5月7日，哪些员工在智慧街店销售了佳能EOS R6相机，并且这些销售的订单总金额是多少？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "s.store_name,",
      "p.product_name,",
      "SUM(o.total_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "salesorders",
      "o",
      "JOIN",
      "employees",
      "e",
      "ON",
      "o.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "o.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "orderdetails",
      "d",
      "ON",
      "o.order_id",
      "=",
      "d.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "d.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "o.order_date",
      "=",
      "'2023-05-07'",
      "AND",
      "s.store_name",
      "=",
      "'智慧街店'",
      "AND",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6'",
      "GROUP",
      "BY",
      "e.name,",
      "s.store_name,",
      "p.product_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "s.store_name,",
      "p.product_name,",
      "SUM(o.total_amount)",
      "AS",
      "total_sales_amount",
      "FROM",
      "salesorders",
      "o",
      "JOIN",
      "employees",
      "e",
      "ON",
      "o.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "o.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "orderdetails",
      "d",
      "ON",
      "o.order_id",
      "=",
      "d.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "d.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "o.order_date",
      "=",
      "'2023-05-07'",
      "AND",
      "s.store_name",
      "=",
      "'智慧街店'",
      "AND",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6'",
      "GROUP",
      "BY",
      "e.name,",
      "s.store_name,",
      "p.product_name;"
    ],
    "question_toks": [
      "在2023年5月7日，哪些员工在智慧街店销售了佳能EOS",
      "R6相机，并且这些销售的订单总金额是多少？"
    ],
    "result_fields": [
      "e.name",
      "s.store_name",
      "p.product_name",
      "SUM(o.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT st.store_name, SUM(od.quantity) AS total_quantity, SUM(od.quantity * od.unit_price) AS total_sales FROM orderdetails od JOIN salesorders so ON od.order_id = so.order_id JOIN stores st ON so.store_id = st.store_id GROUP BY st.store_name;",
    "question": "获取所有销售订单中每个门店的总销售数量和总销售金额。",
    "query_toks": [
      "SELECT",
      "st.store_name,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_sales",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "stores",
      "st",
      "ON",
      "so.store_id",
      "=",
      "st.store_id",
      "GROUP",
      "BY",
      "st.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "st.store_name,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_sales",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "stores",
      "st",
      "ON",
      "so.store_id",
      "=",
      "st.store_id",
      "GROUP",
      "BY",
      "st.store_name;"
    ],
    "question_toks": [
      "获取所有销售订单中每个门店的总销售数量和总销售金额。"
    ],
    "result_fields": [
      "st.store_name",
      "SUM(od.quantity)",
      "SUM(od.quantity * od.unit_price)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, SUM(od.quantity * od.unit_price) AS total_amount FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id WHERE p.product_name = '佳能EOS R6' AND so.order_date = '2023-05-05' GROUP BY s.store_name, e.name;",
    "question": "在2023年5月5日，哪些门店的员工销售了佳能EOS R6相机，并且这些订单的总金额是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-05'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "p.product_name",
      "=",
      "'佳能EOS",
      "R6'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-05'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name;"
    ],
    "question_toks": [
      "在2023年5月5日，哪些门店的员工销售了佳能EOS",
      "R6相机，并且这些订单的总金额是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "SUM(od.quantity * od.unit_price)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT * FROM products WHERE sale_price > 15000;",
    "question": "查询商品表中售价大于15000的商品信息。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "products",
      "WHERE",
      "sale_price",
      ">",
      "15000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "products",
      "WHERE",
      "sale_price",
      ">",
      "15000;"
    ],
    "question_toks": [
      "查询商品表中售价大于15000的商品信息。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, p.product_name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-08' AND p.product_name = '索尼WH-1000XM4' AND ss.sales_quantity > 1;",
    "question": "在2023年5月8日，哪些门店的员工销售了索尼WH-1000XM4商品，并且该商品的销售数量超过了1个？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "ss.sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-08'",
      "AND",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "ss.sales_quantity",
      ">",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "ss.sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-08'",
      "AND",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "ss.sales_quantity",
      ">",
      "1;"
    ],
    "question_toks": [
      "在2023年5月8日，哪些门店的员工销售了索尼WH-1000XM4商品，并且该商品的销售数量超过了1个？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "p.product_name",
      "ss.sales_quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, p.product_name, ss.sales_amount FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-01' AND ss.sales_amount > 1000 AND p.supplier_name = '戴森官方旗舰店';",
    "question": "在2023年5月1日，哪些门店的销售顾问销售了超过1000元的商品，并且这些商品的供应商是'戴森官方旗舰店'？请列出门店名称、员工姓名、商品名称和销售金额。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "ss.sales_amount",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-01'",
      "AND",
      "ss.sales_amount",
      ">",
      "1000",
      "AND",
      "p.supplier_name",
      "=",
      "'戴森官方旗舰店';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "ss.sales_amount",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-01'",
      "AND",
      "ss.sales_amount",
      ">",
      "1000",
      "AND",
      "p.supplier_name",
      "=",
      "'戴森官方旗舰店';"
    ],
    "question_toks": [
      "在2023年5月1日，哪些门店的销售顾问销售了超过1000元的商品，并且这些商品的供应商是'戴森官方旗舰店'？请列出门店名称、员工姓名、商品名称和销售金额。"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "p.product_name",
      "ss.sales_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT od.order_id, od.quantity FROM orderdetails od WHERE od.product_id = 'fba9543e-90b3-4a3d-b29e-bcf4518c4e3d';",
    "question": "查找特定商品的所有销售记录及其销售数量。",
    "query_toks": [
      "SELECT",
      "od.order_id,",
      "od.quantity",
      "FROM",
      "orderdetails",
      "od",
      "WHERE",
      "od.product_id",
      "=",
      "'fba9543e-90b3-4a3d-b29e-bcf4518c4e3d';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "od.order_id,",
      "od.quantity",
      "FROM",
      "orderdetails",
      "od",
      "WHERE",
      "od.product_id",
      "=",
      "'fba9543e-90b3-4a3d-b29e-bcf4518c4e3d';"
    ],
    "question_toks": [
      "查找特定商品的所有销售记录及其销售数量。"
    ],
    "result_fields": [
      "od.order_id",
      "od.quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id GROUP BY s.store_name;",
    "question": "获取每个门店的总销售金额和对应的门店名称。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "question_toks": [
      "获取每个门店的总销售金额和对应的门店名称。"
    ],
    "result_fields": [
      "s.store_name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, SUM(od.quantity) AS total_quantity FROM salesorders so JOIN orderdetails od ON so.order_id = od.order_id WHERE so.order_date = '2023-05-06' GROUP BY so.order_id;",
    "question": "获取在特定日期内的销售订单及其商品数量。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-06'",
      "GROUP",
      "BY",
      "so.order_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-06'",
      "GROUP",
      "BY",
      "so.order_id;"
    ],
    "question_toks": [
      "获取在特定日期内的销售订单及其商品数量。"
    ],
    "result_fields": [
      "so.order_id",
      "SUM(od.quantity)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, so.order_date, e.name FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id;",
    "question": "查询每个订单的详细信息，包括订单日期和员工名称。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "so.order_date,",
      "e.name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "so.order_date,",
      "e.name",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id;"
    ],
    "question_toks": [
      "查询每个订单的详细信息，包括订单日期和员工名称。"
    ],
    "result_fields": [
      "so.order_id",
      "so.order_date",
      "e.name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT product_name, supplier_name FROM products;",
    "question": "列出所有商品的名称和其供应商名称。",
    "query_toks": [
      "SELECT",
      "product_name,",
      "supplier_name",
      "FROM",
      "products;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "product_name,",
      "supplier_name",
      "FROM",
      "products;"
    ],
    "question_toks": [
      "列出所有商品的名称和其供应商名称。"
    ],
    "result_fields": [
      "product_name",
      "supplier_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT p.sale_price, p.supplier_name FROM products p;",
    "question": "列出所有商品的售价及其供应商名称。",
    "query_toks": [
      "SELECT",
      "p.sale_price,",
      "p.supplier_name",
      "FROM",
      "products",
      "p;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "p.sale_price,",
      "p.supplier_name",
      "FROM",
      "products",
      "p;"
    ],
    "question_toks": [
      "列出所有商品的售价及其供应商名称。"
    ],
    "result_fields": [
      "p.sale_price",
      "p.supplier_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT od.order_detail_id, p.product_name, od.unit_price FROM orderdetails od JOIN products p ON od.product_id = p.product_id;",
    "question": "查询所有订单详情，包括对应商品的名称和售价。",
    "query_toks": [
      "SELECT",
      "od.order_detail_id,",
      "p.product_name,",
      "od.unit_price",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "od.order_detail_id,",
      "p.product_name,",
      "od.unit_price",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id;"
    ],
    "question_toks": [
      "查询所有订单详情，包括对应商品的名称和售价。"
    ],
    "result_fields": [
      "od.order_detail_id",
      "p.product_name",
      "od.unit_price"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.phone FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.total_amount > 3000 AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31';",
    "question": "列出2023年5月销售金额大于3000的门店及其联系电话。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.phone",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "WHERE",
      "so.total_amount",
      ">",
      "3000",
      "AND",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.phone",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "WHERE",
      "so.total_amount",
      ">",
      "3000",
      "AND",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31';"
    ],
    "question_toks": [
      "列出2023年5月销售金额大于3000的门店及其联系电话。"
    ],
    "result_fields": [
      "s.store_name",
      "s.phone"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT store_name, manager_name FROM stores;",
    "question": "找出所有门店的名称及其对应的店长姓名。",
    "query_toks": [
      "SELECT",
      "store_name,",
      "manager_name",
      "FROM",
      "stores;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "store_name,",
      "manager_name",
      "FROM",
      "stores;"
    ],
    "question_toks": [
      "找出所有门店的名称及其对应的店长姓名。"
    ],
    "result_fields": [
      "store_name",
      "manager_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, st.phone FROM employees e JOIN stores st ON e.store_id = st.store_id;",
    "question": "查询所有员工的姓名及其所属门店的联系电话。",
    "query_toks": [
      "SELECT",
      "e.name,",
      "st.phone",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "stores",
      "st",
      "ON",
      "e.store_id",
      "=",
      "st.store_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "st.phone",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "stores",
      "st",
      "ON",
      "e.store_id",
      "=",
      "st.store_id;"
    ],
    "question_toks": [
      "查询所有员工的姓名及其所属门店的联系电话。"
    ],
    "result_fields": [
      "e.name",
      "st.phone"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name AS employee_name, ss.sales_quantity, ss.profit FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN stores s ON ss.store_id = s.store_id JOIN products p ON ss.product_id = p.product_id WHERE ss.date = '2023-05-09' AND s.store_name = '创新路专卖店' AND p.product_name = 'iPad Air';",
    "question": "在2023年5月9日，哪些员工在创新路专卖店销售了iPad Air，并且他们的销售数量和利润是多少？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "ss.sales_quantity,",
      "ss.profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "AND",
      "s.store_name",
      "=",
      "'创新路专卖店'",
      "AND",
      "p.product_name",
      "=",
      "'iPad",
      "Air';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "ss.sales_quantity,",
      "ss.profit",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-09'",
      "AND",
      "s.store_name",
      "=",
      "'创新路专卖店'",
      "AND",
      "p.product_name",
      "=",
      "'iPad",
      "Air';"
    ],
    "question_toks": [
      "在2023年5月9日，哪些员工在创新路专卖店销售了iPad",
      "Air，并且他们的销售数量和利润是多少？"
    ],
    "result_fields": [
      "e.name",
      "ss.sales_quantity",
      "ss.profit"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name, e.position, s.store_name, so.total_amount FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-07' AND s.store_name = '未来城店' AND so.total_amount > 15000;",
    "question": "在2023年5月7日，哪些员工在'未来城店'处理了订单，并且这些订单的总金额超过了15000元？",
    "query_toks": [
      "SELECT",
      "e.name,",
      "e.position,",
      "s.store_name,",
      "so.total_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-07'",
      "AND",
      "s.store_name",
      "=",
      "'未来城店'",
      "AND",
      "so.total_amount",
      ">",
      "15000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name,",
      "e.position,",
      "s.store_name,",
      "so.total_amount",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-07'",
      "AND",
      "s.store_name",
      "=",
      "'未来城店'",
      "AND",
      "so.total_amount",
      ">",
      "15000;"
    ],
    "question_toks": [
      "在2023年5月7日，哪些员工在'未来城店'处理了订单，并且这些订单的总金额超过了15000元？"
    ],
    "result_fields": [
      "e.name",
      "e.position",
      "s.store_name",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT pd.product_name, pd.sale_price - pd.purchase_price AS price_difference\nFROM products pd;",
    "question": "查询所有商品的售价和进货价差异。",
    "query_toks": [
      "SELECT",
      "pd.product_name,",
      "pd.sale_price",
      "-",
      "pd.purchase_price",
      "AS",
      "price_difference",
      "FROM",
      "products",
      "pd;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "pd.product_name,",
      "pd.sale_price",
      "-",
      "pd.purchase_price",
      "AS",
      "price_difference",
      "FROM",
      "products",
      "pd;"
    ],
    "question_toks": [
      "查询所有商品的售价和进货价差异。"
    ],
    "result_fields": [
      "pd.product_name",
      "pd.sale_price - pd.purchase_price"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id WHERE so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_id HAVING SUM(so.total_amount) > 10000;",
    "question": "在2023年5月期间，哪些门店的销售总额超过了10000元，并且这些门店的店长姓名是什么？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "WHERE",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_id",
      "HAVING",
      "SUM(so.total_amount)",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "WHERE",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_id",
      "HAVING",
      "SUM(so.total_amount)",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月期间，哪些门店的销售总额超过了10000元，并且这些门店的店长姓名是什么？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT st.store_name, SUM(ss.profit) AS total_profit, SUM(ss.sales_quantity) AS total_sales_quantity FROM salesstatistics ss JOIN stores st ON ss.store_id = st.store_id GROUP BY st.store_name;",
    "question": "查找每个门店的利润和销售数量。",
    "query_toks": [
      "SELECT",
      "st.store_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "st",
      "ON",
      "ss.store_id",
      "=",
      "st.store_id",
      "GROUP",
      "BY",
      "st.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "st.store_name,",
      "SUM(ss.profit)",
      "AS",
      "total_profit,",
      "SUM(ss.sales_quantity)",
      "AS",
      "total_sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "st",
      "ON",
      "ss.store_id",
      "=",
      "st.store_id",
      "GROUP",
      "BY",
      "st.store_name;"
    ],
    "question_toks": [
      "查找每个门店的利润和销售数量。"
    ],
    "result_fields": [
      "st.store_name",
      "SUM(ss.profit)",
      "SUM(ss.sales_quantity)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT * FROM salesorders WHERE store_id = '64921abb-1d54-4e03-a15e-ea42f058f31c';",
    "question": "查找门店ID为'64921abb-1d54-4e03-a15e-ea42f058f31c'的所有销售订单。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "salesorders",
      "WHERE",
      "store_id",
      "=",
      "'64921abb-1d54-4e03-a15e-ea42f058f31c';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "salesorders",
      "WHERE",
      "store_id",
      "=",
      "'64921abb-1d54-4e03-a15e-ea42f058f31c';"
    ],
    "question_toks": [
      "查找门店ID为'64921abb-1d54-4e03-a15e-ea42f058f31c'的所有销售订单。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, p.product_name, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON e.store_id = s.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-06' AND p.product_name = '小米电视4A' AND so.total_amount > 10000;",
    "question": "在2023年5月6日，哪些门店的员工销售了小米电视4A，并且这些订单的总金额超过了10000元？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-06'",
      "AND",
      "p.product_name",
      "=",
      "'小米电视4A'",
      "AND",
      "so.total_amount",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "p.product_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-06'",
      "AND",
      "p.product_name",
      "=",
      "'小米电视4A'",
      "AND",
      "so.total_amount",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月6日，哪些门店的员工销售了小米电视4A，并且这些订单的总金额超过了10000元？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "p.product_name",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT DISTINCT s.store_name FROM stores s JOIN salesstatistics ss ON s.store_id = ss.store_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = 'Nintendo Switch' AND ss.date >= '2023-05-01' AND ss.date < '2023-06-01' AND ss.profit > 1000;",
    "question": "在2023年5月，哪些门店的员工销售了Nintendo Switch，并且这些销售的利润超过了1000元？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "s.store_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "s.store_id",
      "=",
      "ss.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Nintendo",
      "Switch'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<",
      "'2023-06-01'",
      "AND",
      "ss.profit",
      ">",
      "1000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "s.store_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesstatistics",
      "ss",
      "ON",
      "s.store_id",
      "=",
      "ss.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'Nintendo",
      "Switch'",
      "AND",
      "ss.date",
      ">=",
      "'2023-05-01'",
      "AND",
      "ss.date",
      "<",
      "'2023-06-01'",
      "AND",
      "ss.profit",
      ">",
      "1000;"
    ],
    "question_toks": [
      "在2023年5月，哪些门店的员工销售了Nintendo",
      "Switch，并且这些销售的利润超过了1000元？"
    ],
    "result_fields": [
      "DISTINCT s.store_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, od.quantity, od.unit_price * od.quantity AS total_amount FROM orderdetails od JOIN salesorders so ON od.order_id = so.order_id JOIN employees e ON so.employee_id = e.employee_id JOIN stores s ON e.store_id = s.store_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '索尼WH-1000XM4' AND so.order_date = '2023-05-09';",
    "question": "在2023年5月9日，哪些门店的员工销售了索尼WH-1000XM4商品，并且这些商品的销售数量和总金额是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "od.quantity,",
      "od.unit_price",
      "*",
      "od.quantity",
      "AS",
      "total_amount",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-09';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "od.quantity,",
      "od.unit_price",
      "*",
      "od.quantity",
      "AS",
      "total_amount",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'索尼WH-1000XM4'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-09';"
    ],
    "question_toks": [
      "在2023年5月9日，哪些门店的员工销售了索尼WH-1000XM4商品，并且这些商品的销售数量和总金额是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "od.quantity",
      "od.unit_price * od.quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE s.store_name = '科技中心店';",
    "question": "获取特定门店的所有销售订单信息。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "s.store_name",
      "=",
      "'科技中心店';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "s.store_name",
      "=",
      "'科技中心店';"
    ],
    "question_toks": [
      "获取特定门店的所有销售订单信息。"
    ],
    "result_fields": [
      "so.order_id",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-03' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;",
    "question": "在2023年5月3日，哪个门店的销售总额最高，并且该门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-03'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-03'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月3日，哪个门店的销售总额最高，并且该门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, ss.sales_quantity FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id WHERE ss.date = '2023-05-03' ORDER BY ss.sales_quantity DESC LIMIT 1;",
    "question": "在2023年5月3日，哪个门店的销售数量最多，并且该门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "ss.sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-03'",
      "ORDER",
      "BY",
      "ss.sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "ss.sales_quantity",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-03'",
      "ORDER",
      "BY",
      "ss.sales_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月3日，哪个门店的销售数量最多，并且该门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "ss.sales_quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id JOIN employees e ON so.employee_id = e.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'iPad Air' AND so.order_date = '2023-05-01';",
    "question": "在2023年5月1日，哪个门店的员工销售了iPad Air，并且该订单的总金额是多少？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPad",
      "Air'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'iPad",
      "Air'",
      "AND",
      "so.order_date",
      "=",
      "'2023-05-01';"
    ],
    "question_toks": [
      "在2023年5月1日，哪个门店的员工销售了iPad",
      "Air，并且该订单的总金额是多少？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT store_id, SUM(total_amount) AS total_sales FROM salesorders GROUP BY store_id;",
    "question": "统计各个门店的销售总额。",
    "query_toks": [
      "SELECT",
      "store_id,",
      "SUM(total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "GROUP",
      "BY",
      "store_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "store_id,",
      "SUM(total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "GROUP",
      "BY",
      "store_id;"
    ],
    "question_toks": [
      "统计各个门店的销售总额。"
    ],
    "result_fields": [
      "store_id",
      "SUM(total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.position, COUNT(so.order_id) AS order_count FROM employees e LEFT JOIN salesorders so ON e.employee_id = so.employee_id GROUP BY e.position;",
    "question": "获取所有员工的职位和他们处理的订单数量。",
    "query_toks": [
      "SELECT",
      "e.position,",
      "COUNT(so.order_id)",
      "AS",
      "order_count",
      "FROM",
      "employees",
      "e",
      "LEFT",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "GROUP",
      "BY",
      "e.position;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.position,",
      "COUNT(so.order_id)",
      "AS",
      "order_count",
      "FROM",
      "employees",
      "e",
      "LEFT",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "GROUP",
      "BY",
      "e.position;"
    ],
    "question_toks": [
      "获取所有员工的职位和他们处理的订单数量。"
    ],
    "result_fields": [
      "e.position",
      "COUNT(so.order_id)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT * FROM salesstatistics WHERE store_id = 'eecdb2bd-fa18-4c73-84a2-35e3dc390ad5';",
    "question": "查询特定门店的所有销售统计记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "salesstatistics",
      "WHERE",
      "store_id",
      "=",
      "'eecdb2bd-fa18-4c73-84a2-35e3dc390ad5';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "salesstatistics",
      "WHERE",
      "store_id",
      "=",
      "'eecdb2bd-fa18-4c73-84a2-35e3dc390ad5';"
    ],
    "question_toks": [
      "查询特定门店的所有销售统计记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, SUM(o.total_amount) AS total_sales FROM stores s JOIN salesorders o ON s.store_id = o.store_id WHERE o.order_date >= '2023-05-01' AND o.order_date <= '2023-05-31' GROUP BY s.store_id HAVING SUM(o.total_amount) > 10000;",
    "question": "在2023年5月期间，哪些门店的总销售金额超过了10000元，并且这些门店的店长姓名是什么？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(o.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "o",
      "ON",
      "s.store_id",
      "=",
      "o.store_id",
      "WHERE",
      "o.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "o.order_date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_id",
      "HAVING",
      "SUM(o.total_amount)",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(o.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "o",
      "ON",
      "s.store_id",
      "=",
      "o.store_id",
      "WHERE",
      "o.order_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "o.order_date",
      "<=",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_id",
      "HAVING",
      "SUM(o.total_amount)",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月期间，哪些门店的总销售金额超过了10000元，并且这些门店的店长姓名是什么？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "SUM(o.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT DISTINCT s.store_name FROM stores s JOIN salesorders so ON s.store_id = so.store_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE so.order_date = '2023-05-02' AND so.total_amount > 10000 AND p.supplier_name = '华为官方旗舰店';",
    "question": "在2023年5月2日，哪些门店的员工销售了超过10000元的商品，并且这些商品的供应商是'华为官方旗舰店'？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "s.store_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-02'",
      "AND",
      "so.total_amount",
      ">",
      "10000",
      "AND",
      "p.supplier_name",
      "=",
      "'华为官方旗舰店';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "s.store_name",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "s.store_id",
      "=",
      "so.store_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-02'",
      "AND",
      "so.total_amount",
      ">",
      "10000",
      "AND",
      "p.supplier_name",
      "=",
      "'华为官方旗舰店';"
    ],
    "question_toks": [
      "在2023年5月2日，哪些门店的员工销售了超过10000元的商品，并且这些商品的供应商是'华为官方旗舰店'？"
    ],
    "result_fields": [
      "DISTINCT s.store_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT pd.product_name, SUM(od.quantity) AS total_quantity, so.order_id\nFROM orderdetails od\nJOIN salesorders so ON od.order_id = so.order_id\nJOIN products pd ON od.product_id = pd.product_id\nWHERE so.order_date = '2023-05-02'\nGROUP BY pd.product_name, so.order_id\nORDER BY total_quantity DESC\nLIMIT 1;",
    "question": "列出在指定日期内销售数量最多的商品及其销售订单信息。",
    "query_toks": [
      "SELECT",
      "pd.product_name,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity,",
      "so.order_id",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "products",
      "pd",
      "ON",
      "od.product_id",
      "=",
      "pd.product_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-02'",
      "GROUP",
      "BY",
      "pd.product_name,",
      "so.order_id",
      "ORDER",
      "BY",
      "total_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "pd.product_name,",
      "SUM(od.quantity)",
      "AS",
      "total_quantity,",
      "so.order_id",
      "FROM",
      "orderdetails",
      "od",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "od.order_id",
      "=",
      "so.order_id",
      "JOIN",
      "products",
      "pd",
      "ON",
      "od.product_id",
      "=",
      "pd.product_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-02'",
      "GROUP",
      "BY",
      "pd.product_name,",
      "so.order_id",
      "ORDER",
      "BY",
      "total_quantity",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "列出在指定日期内销售数量最多的商品及其销售订单信息。"
    ],
    "result_fields": [
      "pd.product_name",
      "SUM(od.quantity)",
      "so.order_id"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, so.order_date, so.total_amount FROM salesorders so JOIN employees e ON so.employee_id = e.employee_id WHERE e.employee_id = '8282299e-10e9-48e4-b28e-a57fbd96cd4d';",
    "question": "查询特定员工的所有订单信息。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "so.order_date,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "e.employee_id",
      "=",
      "'8282299e-10e9-48e4-b28e-a57fbd96cd4d';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "so.order_date,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "employees",
      "e",
      "ON",
      "so.employee_id",
      "=",
      "e.employee_id",
      "WHERE",
      "e.employee_id",
      "=",
      "'8282299e-10e9-48e4-b28e-a57fbd96cd4d';"
    ],
    "question_toks": [
      "查询特定员工的所有订单信息。"
    ],
    "result_fields": [
      "so.order_id",
      "so.order_date",
      "so.total_amount"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, s.manager_name, SUM(so.total_amount) AS total_sales FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-04' GROUP BY s.store_name, s.manager_name ORDER BY total_sales DESC LIMIT 1;",
    "question": "在2023年5月4日，哪个门店的销售订单总金额最高，并且该门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-04'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "s.manager_name,",
      "SUM(so.total_amount)",
      "AS",
      "total_sales",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-04'",
      "GROUP",
      "BY",
      "s.store_name,",
      "s.manager_name",
      "ORDER",
      "BY",
      "total_sales",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2023年5月4日，哪个门店的销售订单总金额最高，并且该门店的店长是谁？"
    ],
    "result_fields": [
      "s.store_name",
      "s.manager_name",
      "SUM(so.total_amount)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, e.position FROM salesstatistics ss JOIN stores s ON ss.store_id = s.store_id JOIN employees e ON ss.employee_id = e.employee_id JOIN products p ON ss.product_id = p.product_id WHERE p.product_name = '华为Mate 40 Pro' AND ss.date = '2023-05-01';",
    "question": "在2023年5月1日，哪些门店的员工销售了华为Mate 40 Pro，并且这些员工的职位是什么？",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "e.position",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'华为Mate",
      "40",
      "Pro'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "e.position",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "stores",
      "s",
      "ON",
      "ss.store_id",
      "=",
      "s.store_id",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "ss.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'华为Mate",
      "40",
      "Pro'",
      "AND",
      "ss.date",
      "=",
      "'2023-05-01';"
    ],
    "question_toks": [
      "在2023年5月1日，哪些门店的员工销售了华为Mate",
      "40",
      "Pro，并且这些员工的职位是什么？"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "e.position"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name AS employee_name, s.manager_name AS store_manager_name FROM salesstatistics ss JOIN employees e ON ss.employee_id = e.employee_id JOIN stores s ON e.store_id = s.store_id WHERE ss.date = '2023-05-06' AND ss.sales_amount > 10000;",
    "question": "在2023年5月6日，哪些员工在销售统计表中记录的销售金额超过了10000元，并且他们所在的门店的店长是谁？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "s.manager_name",
      "AS",
      "store_manager_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-06'",
      "AND",
      "ss.sales_amount",
      ">",
      "10000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "s.manager_name",
      "AS",
      "store_manager_name",
      "FROM",
      "salesstatistics",
      "ss",
      "JOIN",
      "employees",
      "e",
      "ON",
      "ss.employee_id",
      "=",
      "e.employee_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "e.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "ss.date",
      "=",
      "'2023-05-06'",
      "AND",
      "ss.sales_amount",
      ">",
      "10000;"
    ],
    "question_toks": [
      "在2023年5月6日，哪些员工在销售统计表中记录的销售金额超过了10000元，并且他们所在的门店的店长是谁？"
    ],
    "result_fields": [
      "e.name",
      "s.manager_name"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, e.name AS employee_name, SUM(od.quantity * od.unit_price) AS total_amount FROM stores s JOIN employees e ON s.store_id = e.store_id JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = '戴尔灵越15' AND so.order_date BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY s.store_name, e.name HAVING SUM(od.quantity * od.unit_price) > 5000;",
    "question": "在2023年5月期间，哪些门店的员工销售了戴尔灵越15笔记本电脑，并且这些订单的总金额超过了5000元？请列出门店名称、员工姓名和订单总金额。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_amount",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'戴尔灵越15'",
      "AND",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name",
      "HAVING",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      ">",
      "5000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "e.name",
      "AS",
      "employee_name,",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      "AS",
      "total_amount",
      "FROM",
      "stores",
      "s",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "WHERE",
      "p.product_name",
      "=",
      "'戴尔灵越15'",
      "AND",
      "so.order_date",
      "BETWEEN",
      "'2023-05-01'",
      "AND",
      "'2023-05-31'",
      "GROUP",
      "BY",
      "s.store_name,",
      "e.name",
      "HAVING",
      "SUM(od.quantity",
      "*",
      "od.unit_price)",
      ">",
      "5000;"
    ],
    "question_toks": [
      "在2023年5月期间，哪些门店的员工销售了戴尔灵越15笔记本电脑，并且这些订单的总金额超过了5000元？请列出门店名称、员工姓名和订单总金额。"
    ],
    "result_fields": [
      "s.store_name",
      "e.name",
      "SUM(od.quantity * od.unit_price)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT product_id, remaining_quantity, sale_price FROM products;",
    "question": "获取每个商品的剩余数量和售价。",
    "query_toks": [
      "SELECT",
      "product_id,",
      "remaining_quantity,",
      "sale_price",
      "FROM",
      "products;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "product_id,",
      "remaining_quantity,",
      "sale_price",
      "FROM",
      "products;"
    ],
    "question_toks": [
      "获取每个商品的剩余数量和售价。"
    ],
    "result_fields": [
      "product_id",
      "remaining_quantity",
      "sale_price"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT s.store_name, COUNT(e.employee_id) AS employee_count FROM stores s LEFT JOIN employees e ON s.store_id = e.store_id GROUP BY s.store_name;",
    "question": "统计每个门店的员工数量。",
    "query_toks": [
      "SELECT",
      "s.store_name,",
      "COUNT(e.employee_id)",
      "AS",
      "employee_count",
      "FROM",
      "stores",
      "s",
      "LEFT",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "s.store_name,",
      "COUNT(e.employee_id)",
      "AS",
      "employee_count",
      "FROM",
      "stores",
      "s",
      "LEFT",
      "JOIN",
      "employees",
      "e",
      "ON",
      "s.store_id",
      "=",
      "e.store_id",
      "GROUP",
      "BY",
      "s.store_name;"
    ],
    "question_toks": [
      "统计每个门店的员工数量。"
    ],
    "result_fields": [
      "s.store_name",
      "COUNT(e.employee_id)"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT e.name AS employee_name, e.position, od.quantity FROM employees e JOIN salesorders so ON e.employee_id = so.employee_id JOIN orderdetails od ON so.order_id = od.order_id JOIN products p ON od.product_id = p.product_id JOIN stores s ON so.store_id = s.store_id WHERE so.order_date = '2023-05-05' AND s.store_name = '科技中心店' AND p.product_name = '戴森V11' AND od.quantity > 1;",
    "question": "在2023年5月5日，哪些员工在科技中心店销售了戴森V11商品，并且该商品的销售数量超过1个？",
    "query_toks": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "e.position,",
      "od.quantity",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-05'",
      "AND",
      "s.store_name",
      "=",
      "'科技中心店'",
      "AND",
      "p.product_name",
      "=",
      "'戴森V11'",
      "AND",
      "od.quantity",
      ">",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.name",
      "AS",
      "employee_name,",
      "e.position,",
      "od.quantity",
      "FROM",
      "employees",
      "e",
      "JOIN",
      "salesorders",
      "so",
      "ON",
      "e.employee_id",
      "=",
      "so.employee_id",
      "JOIN",
      "orderdetails",
      "od",
      "ON",
      "so.order_id",
      "=",
      "od.order_id",
      "JOIN",
      "products",
      "p",
      "ON",
      "od.product_id",
      "=",
      "p.product_id",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "so.order_date",
      "=",
      "'2023-05-05'",
      "AND",
      "s.store_name",
      "=",
      "'科技中心店'",
      "AND",
      "p.product_name",
      "=",
      "'戴森V11'",
      "AND",
      "od.quantity",
      ">",
      "1;"
    ],
    "question_toks": [
      "在2023年5月5日，哪些员工在科技中心店销售了戴森V11商品，并且该商品的销售数量超过1个？"
    ],
    "result_fields": [
      "e.name",
      "e.position",
      "od.quantity"
    ]
  },
  {
    "db_id": "retail",
    "query": "SELECT so.order_id, so.total_amount FROM salesorders so JOIN stores s ON so.store_id = s.store_id WHERE s.store_name = '数码广场店';",
    "question": "查找在数码广场店销售的所有订单及其总金额。",
    "query_toks": [
      "SELECT",
      "so.order_id,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "s.store_name",
      "=",
      "'数码广场店';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "so.order_id,",
      "so.total_amount",
      "FROM",
      "salesorders",
      "so",
      "JOIN",
      "stores",
      "s",
      "ON",
      "so.store_id",
      "=",
      "s.store_id",
      "WHERE",
      "s.store_name",
      "=",
      "'数码广场店';"
    ],
    "question_toks": [
      "查找在数码广场店销售的所有订单及其总金额。"
    ],
    "result_fields": [
      "so.order_id",
      "so.total_amount"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT a.assessment_id, a.risk_level, a.impact_score, e.event_type, e.event_description FROM risk_assessments a JOIN risk_events e ON a.event_id = e.event_id WHERE a.risk_level = '高' AND a.impact_score > 8",
    "question": "找出所有风险等级为'高'且影响程度评分大于8的风险评估，并显示相关的风险事件信息。",
    "query_toks": [
      "SELECT",
      "a.assessment_id,",
      "a.risk_level,",
      "a.impact_score,",
      "e.event_type,",
      "e.event_description",
      "FROM",
      "risk_assessments",
      "a",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "a.event_id",
      "=",
      "e.event_id",
      "WHERE",
      "a.risk_level",
      "=",
      "'高'",
      "AND",
      "a.impact_score",
      ">",
      "8"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.assessment_id,",
      "a.risk_level,",
      "a.impact_score,",
      "e.event_type,",
      "e.event_description",
      "FROM",
      "risk_assessments",
      "a",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "a.event_id",
      "=",
      "e.event_id",
      "WHERE",
      "a.risk_level",
      "=",
      "'高'",
      "AND",
      "a.impact_score",
      ">",
      "8"
    ],
    "question_toks": [
      "找出所有风险等级为'高'且影响程度评分大于8的风险评估，并显示相关的风险事件信息。"
    ],
    "result_fields": [
      "a.assessment_id",
      "a.risk_level",
      "a.impact_score",
      "e.event_type",
      "e.event_description"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT event_id FROM risk_events WHERE event_type = '合规风险';",
    "question": "查找所有与合规风险相关的风险事件。",
    "query_toks": [
      "SELECT",
      "event_id",
      "FROM",
      "risk_events",
      "WHERE",
      "event_type",
      "=",
      "'合规风险';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "event_id",
      "FROM",
      "risk_events",
      "WHERE",
      "event_type",
      "=",
      "'合规风险';"
    ],
    "question_toks": [
      "查找所有与合规风险相关的风险事件。"
    ],
    "result_fields": [
      "event_id"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_description, a.status FROM alerts a JOIN risk_events re ON a.event_id = re.event_id WHERE a.alert_type = '欺诈嫌疑';",
    "question": "查询所有触发了欺诈嫌疑预警的风险事件及其审核状态。",
    "query_toks": [
      "SELECT",
      "re.event_description,",
      "a.status",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "a.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "a.alert_type",
      "=",
      "'欺诈嫌疑';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_description,",
      "a.status",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "a.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "a.alert_type",
      "=",
      "'欺诈嫌疑';"
    ],
    "question_toks": [
      "查询所有触发了欺诈嫌疑预警的风险事件及其审核状态。"
    ],
    "result_fields": [
      "re.event_description",
      "a.status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT r.report_type, AVG(e.severity) as avg_severity FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id WHERE r.approval_status = '已批准' GROUP BY r.report_type ORDER BY avg_severity DESC;",
    "question": "找出所有已批准的风险报告中，涉及到的风险事件的平均严重程度，并按报告类型分组。",
    "query_toks": [
      "SELECT",
      "r.report_type,",
      "AVG(e.severity)",
      "as",
      "avg_severity",
      "FROM",
      "risk_reports",
      "r",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "r.event_id",
      "=",
      "e.event_id",
      "WHERE",
      "r.approval_status",
      "=",
      "'已批准'",
      "GROUP",
      "BY",
      "r.report_type",
      "ORDER",
      "BY",
      "avg_severity",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.report_type,",
      "AVG(e.severity)",
      "as",
      "avg_severity",
      "FROM",
      "risk_reports",
      "r",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "r.event_id",
      "=",
      "e.event_id",
      "WHERE",
      "r.approval_status",
      "=",
      "'已批准'",
      "GROUP",
      "BY",
      "r.report_type",
      "ORDER",
      "BY",
      "avg_severity",
      "DESC;"
    ],
    "question_toks": [
      "找出所有已批准的风险报告中，涉及到的风险事件的平均严重程度，并按报告类型分组。"
    ],
    "result_fields": [
      "r.report_type",
      "AVG(e.severity)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT risk_level, COUNT(*) AS customer_count, AVG(credit_score) AS avg_credit_score FROM customers GROUP BY risk_level ORDER BY customer_count DESC",
    "question": "列出所有客户的风险等级分布情况，包括每个风险等级的客户数量和平均信用评分。",
    "query_toks": [
      "SELECT",
      "risk_level,",
      "COUNT(*)",
      "AS",
      "customer_count,",
      "AVG(credit_score)",
      "AS",
      "avg_credit_score",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "risk_level",
      "ORDER",
      "BY",
      "customer_count",
      "DESC"
    ],
    "query_toks_no_value": [
      "SELECT",
      "risk_level,",
      "COUNT(*)",
      "AS",
      "customer_count,",
      "AVG(credit_score)",
      "AS",
      "avg_credit_score",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "risk_level",
      "ORDER",
      "BY",
      "customer_count",
      "DESC"
    ],
    "question_toks": [
      "列出所有客户的风险等级分布情况，包括每个风险等级的客户数量和平均信用评分。"
    ],
    "result_fields": [
      "risk_level",
      "COUNT(*)",
      "AVG(credit_score)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ri.indicator_id, ri.indicator_name, ml.monitoring_date, ml.actual_value FROM risk_indicators ri JOIN risk_monitoring_logs ml ON ri.indicator_id = ml.indicator_id WHERE ml.monitoring_date >= '2023-10-01' AND ml.monitoring_date < '2023-11-01';",
    "question": "查询所有风险指标及其监控记录，要求监控日期在2023年10月。",
    "query_toks": [
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ml.monitoring_date,",
      "ml.actual_value",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "ml",
      "ON",
      "ri.indicator_id",
      "=",
      "ml.indicator_id",
      "WHERE",
      "ml.monitoring_date",
      ">=",
      "'2023-10-01'",
      "AND",
      "ml.monitoring_date",
      "<",
      "'2023-11-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ml.monitoring_date,",
      "ml.actual_value",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "ml",
      "ON",
      "ri.indicator_id",
      "=",
      "ml.indicator_id",
      "WHERE",
      "ml.monitoring_date",
      ">=",
      "'2023-10-01'",
      "AND",
      "ml.monitoring_date",
      "<",
      "'2023-11-01';"
    ],
    "question_toks": [
      "查询所有风险指标及其监控记录，要求监控日期在2023年10月。"
    ],
    "result_fields": [
      "ri.indicator_id",
      "ri.indicator_name",
      "ml.monitoring_date",
      "ml.actual_value"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rr.report_id, rr.report_date, rr.author, rr.event_id FROM risk_reports rr WHERE rr.approval_status = '已批准';",
    "question": "获取所有已批准的风险报告及其作者和相关风险事件ID",
    "query_toks": [
      "SELECT",
      "rr.report_id,",
      "rr.report_date,",
      "rr.author,",
      "rr.event_id",
      "FROM",
      "risk_reports",
      "rr",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已批准';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rr.report_id,",
      "rr.report_date,",
      "rr.author,",
      "rr.event_id",
      "FROM",
      "risk_reports",
      "rr",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已批准';"
    ],
    "question_toks": [
      "获取所有已批准的风险报告及其作者和相关风险事件ID"
    ],
    "result_fields": [
      "rr.report_id",
      "rr.report_date",
      "rr.author",
      "rr.event_id"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.risk_level, t.transaction_type, CASE WHEN t.amount <= 1000 THEN '低额' WHEN t.amount <= 10000 THEN '中额' ELSE '高额' END as amount_range, COUNT(*) as transaction_count, AVG(t.risk_score) as avg_risk_score FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.risk_level, t.transaction_type, CASE WHEN t.amount <= 1000 THEN '低额' WHEN t.amount <= 10000 THEN '中额' ELSE '高额' END ORDER BY c.risk_level, t.transaction_type, amount_range",
    "question": "统计每个风险等级的客户在不同交易类型和金额范围下的交易次数和平均风险评分",
    "query_toks": [
      "SELECT",
      "c.risk_level,",
      "t.transaction_type,",
      "CASE",
      "WHEN",
      "t.amount",
      "<=",
      "1000",
      "THEN",
      "'低额'",
      "WHEN",
      "t.amount",
      "<=",
      "10000",
      "THEN",
      "'中额'",
      "ELSE",
      "'高额'",
      "END",
      "as",
      "amount_range,",
      "COUNT(*)",
      "as",
      "transaction_count,",
      "AVG(t.risk_score)",
      "as",
      "avg_risk_score",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "GROUP",
      "BY",
      "c.risk_level,",
      "t.transaction_type,",
      "CASE",
      "WHEN",
      "t.amount",
      "<=",
      "1000",
      "THEN",
      "'低额'",
      "WHEN",
      "t.amount",
      "<=",
      "10000",
      "THEN",
      "'中额'",
      "ELSE",
      "'高额'",
      "END",
      "ORDER",
      "BY",
      "c.risk_level,",
      "t.transaction_type,",
      "amount_range"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.risk_level,",
      "t.transaction_type,",
      "CASE",
      "WHEN",
      "t.amount",
      "<=",
      "1000",
      "THEN",
      "'低额'",
      "WHEN",
      "t.amount",
      "<=",
      "10000",
      "THEN",
      "'中额'",
      "ELSE",
      "'高额'",
      "END",
      "as",
      "amount_range,",
      "COUNT(*)",
      "as",
      "transaction_count,",
      "AVG(t.risk_score)",
      "as",
      "avg_risk_score",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "GROUP",
      "BY",
      "c.risk_level,",
      "t.transaction_type,",
      "CASE",
      "WHEN",
      "t.amount",
      "<=",
      "1000",
      "THEN",
      "'低额'",
      "WHEN",
      "t.amount",
      "<=",
      "10000",
      "THEN",
      "'中额'",
      "ELSE",
      "'高额'",
      "END",
      "ORDER",
      "BY",
      "c.risk_level,",
      "t.transaction_type,",
      "amount_range"
    ],
    "question_toks": [
      "统计每个风险等级的客户在不同交易类型和金额范围下的交易次数和平均风险评分"
    ],
    "result_fields": [
      "c.risk_level",
      "t.transaction_type",
      "CASE WHEN t.amount <= 1000 THEN '低额' WHEN t.amount <= 10000 THEN '中额' ELSE '高额' END",
      "COUNT(*)",
      "AVG(t.risk_score)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT a.audit_id, a.audit_result, al.alert_content FROM audit_logs a JOIN alerts al ON a.alert_id = al.alert_id WHERE a.event_id = 'RE4692';",
    "question": "查询所有涉及特定风险事件的审核记录及审核结果。",
    "query_toks": [
      "SELECT",
      "a.audit_id,",
      "a.audit_result,",
      "al.alert_content",
      "FROM",
      "audit_logs",
      "a",
      "JOIN",
      "alerts",
      "al",
      "ON",
      "a.alert_id",
      "=",
      "al.alert_id",
      "WHERE",
      "a.event_id",
      "=",
      "'RE4692';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.audit_id,",
      "a.audit_result,",
      "al.alert_content",
      "FROM",
      "audit_logs",
      "a",
      "JOIN",
      "alerts",
      "al",
      "ON",
      "a.alert_id",
      "=",
      "al.alert_id",
      "WHERE",
      "a.event_id",
      "=",
      "'RE4692';"
    ],
    "question_toks": [
      "查询所有涉及特定风险事件的审核记录及审核结果。"
    ],
    "result_fields": [
      "a.audit_id",
      "a.audit_result",
      "al.alert_content"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT r.report_id, r.report_type, e.event_description, a.risk_level FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id LEFT JOIN risk_assessments a ON e.event_id = a.event_id WHERE r.author = '周婷';",
    "question": "查找所有由'周婷'撰写的风险报告，以及与这些报告相关的风险事件和评估结果。",
    "query_toks": [
      "SELECT",
      "r.report_id,",
      "r.report_type,",
      "e.event_description,",
      "a.risk_level",
      "FROM",
      "risk_reports",
      "r",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "r.event_id",
      "=",
      "e.event_id",
      "LEFT",
      "JOIN",
      "risk_assessments",
      "a",
      "ON",
      "e.event_id",
      "=",
      "a.event_id",
      "WHERE",
      "r.author",
      "=",
      "'周婷';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.report_id,",
      "r.report_type,",
      "e.event_description,",
      "a.risk_level",
      "FROM",
      "risk_reports",
      "r",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "r.event_id",
      "=",
      "e.event_id",
      "LEFT",
      "JOIN",
      "risk_assessments",
      "a",
      "ON",
      "e.event_id",
      "=",
      "a.event_id",
      "WHERE",
      "r.author",
      "=",
      "'周婷';"
    ],
    "question_toks": [
      "查找所有由'周婷'撰写的风险报告，以及与这些报告相关的风险事件和评估结果。"
    ],
    "result_fields": [
      "r.report_id",
      "r.report_type",
      "e.event_description",
      "a.risk_level"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rr.report_id, rr.report_date, rr.author, rr.approval_status FROM risk_reports rr WHERE rr.report_date > '2023-01-01';",
    "question": "查询所有在2023年之后创建的风险报告，并列出其作者及审批状态。",
    "query_toks": [
      "SELECT",
      "rr.report_id,",
      "rr.report_date,",
      "rr.author,",
      "rr.approval_status",
      "FROM",
      "risk_reports",
      "rr",
      "WHERE",
      "rr.report_date",
      ">",
      "'2023-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rr.report_id,",
      "rr.report_date,",
      "rr.author,",
      "rr.approval_status",
      "FROM",
      "risk_reports",
      "rr",
      "WHERE",
      "rr.report_date",
      ">",
      "'2023-01-01';"
    ],
    "question_toks": [
      "查询所有在2023年之后创建的风险报告，并列出其作者及审批状态。"
    ],
    "result_fields": [
      "rr.report_id",
      "rr.report_date",
      "rr.author",
      "rr.approval_status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT e.event_id, e.event_description, a.risk_level, a.impact_score, a.probability_score, a.mitigation_plan FROM risk_events e LEFT JOIN risk_assessments a ON e.event_id = a.event_id WHERE e.event_description LIKE '%系统%' ORDER BY a.risk_level DESC, e.occurrence_time DESC;",
    "question": "查询所有包含'系统'关键词的风险事件描述，以及相关的风险评估结果和缓解计划。",
    "query_toks": [
      "SELECT",
      "e.event_id,",
      "e.event_description,",
      "a.risk_level,",
      "a.impact_score,",
      "a.probability_score,",
      "a.mitigation_plan",
      "FROM",
      "risk_events",
      "e",
      "LEFT",
      "JOIN",
      "risk_assessments",
      "a",
      "ON",
      "e.event_id",
      "=",
      "a.event_id",
      "WHERE",
      "e.event_description",
      "LIKE",
      "'%系统%'",
      "ORDER",
      "BY",
      "a.risk_level",
      "DESC,",
      "e.occurrence_time",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.event_id,",
      "e.event_description,",
      "a.risk_level,",
      "a.impact_score,",
      "a.probability_score,",
      "a.mitigation_plan",
      "FROM",
      "risk_events",
      "e",
      "LEFT",
      "JOIN",
      "risk_assessments",
      "a",
      "ON",
      "e.event_id",
      "=",
      "a.event_id",
      "WHERE",
      "e.event_description",
      "LIKE",
      "'%系统%'",
      "ORDER",
      "BY",
      "a.risk_level",
      "DESC,",
      "e.occurrence_time",
      "DESC;"
    ],
    "question_toks": [
      "查询所有包含'系统'关键词的风险事件描述，以及相关的风险评估结果和缓解计划。"
    ],
    "result_fields": [
      "e.event_id",
      "e.event_description",
      "a.risk_level",
      "a.impact_score",
      "a.probability_score",
      "a.mitigation_plan"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "WITH current_values AS (SELECT indicator_id, actual_value as current_value FROM risk_monitoring_logs rml WHERE monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs WHERE indicator_id = rml.indicator_id)), past_values AS (SELECT indicator_id, actual_value as past_value FROM risk_monitoring_logs rml WHERE monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs WHERE indicator_id = rml.indicator_id AND monitoring_date <= date('now') - INTERVAL '30 days')) SELECT ri.indicator_id, ri.indicator_name, cv.current_value, pv.past_value, (cv.current_value - pv.past_value) / pv.past_value * 100 as change_percentage FROM risk_indicators ri LEFT JOIN current_values cv ON ri.indicator_id = cv.indicator_id LEFT JOIN past_values pv ON ri.indicator_id = pv.indicator_id",
    "question": "列出所有风险指标的当前值、30天前的值和变化百分比",
    "query_toks": [
      "WITH",
      "current_values",
      "AS",
      "(SELECT",
      "indicator_id,",
      "actual_value",
      "as",
      "current_value",
      "FROM",
      "risk_monitoring_logs",
      "rml",
      "WHERE",
      "monitoring_date",
      "=",
      "(SELECT",
      "MAX(monitoring_date)",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "indicator_id",
      "=",
      "rml.indicator_id)),",
      "past_values",
      "AS",
      "(SELECT",
      "indicator_id,",
      "actual_value",
      "as",
      "past_value",
      "FROM",
      "risk_monitoring_logs",
      "rml",
      "WHERE",
      "monitoring_date",
      "=",
      "(SELECT",
      "MAX(monitoring_date)",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "indicator_id",
      "=",
      "rml.indicator_id",
      "AND",
      "monitoring_date",
      "<=",
      "date('now')",
      "-",
      "INTERVAL",
      "'30",
      "days'))",
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "cv.current_value,",
      "pv.past_value,",
      "(cv.current_value",
      "-",
      "pv.past_value)",
      "/",
      "pv.past_value",
      "*",
      "100",
      "as",
      "change_percentage",
      "FROM",
      "risk_indicators",
      "ri",
      "LEFT",
      "JOIN",
      "current_values",
      "cv",
      "ON",
      "ri.indicator_id",
      "=",
      "cv.indicator_id",
      "LEFT",
      "JOIN",
      "past_values",
      "pv",
      "ON",
      "ri.indicator_id",
      "=",
      "pv.indicator_id"
    ],
    "query_toks_no_value": [
      "WITH",
      "current_values",
      "AS",
      "(SELECT",
      "indicator_id,",
      "actual_value",
      "as",
      "current_value",
      "FROM",
      "risk_monitoring_logs",
      "rml",
      "WHERE",
      "monitoring_date",
      "=",
      "(SELECT",
      "MAX(monitoring_date)",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "indicator_id",
      "=",
      "rml.indicator_id)),",
      "past_values",
      "AS",
      "(SELECT",
      "indicator_id,",
      "actual_value",
      "as",
      "past_value",
      "FROM",
      "risk_monitoring_logs",
      "rml",
      "WHERE",
      "monitoring_date",
      "=",
      "(SELECT",
      "MAX(monitoring_date)",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "indicator_id",
      "=",
      "rml.indicator_id",
      "AND",
      "monitoring_date",
      "<=",
      "date('now')",
      "-",
      "INTERVAL",
      "'30",
      "days'))",
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "cv.current_value,",
      "pv.past_value,",
      "(cv.current_value",
      "-",
      "pv.past_value)",
      "/",
      "pv.past_value",
      "*",
      "100",
      "as",
      "change_percentage",
      "FROM",
      "risk_indicators",
      "ri",
      "LEFT",
      "JOIN",
      "current_values",
      "cv",
      "ON",
      "ri.indicator_id",
      "=",
      "cv.indicator_id",
      "LEFT",
      "JOIN",
      "past_values",
      "pv",
      "ON",
      "ri.indicator_id",
      "=",
      "pv.indicator_id"
    ],
    "question_toks": [
      "列出所有风险指标的当前值、30天前的值和变化百分比"
    ],
    "result_fields": [
      "indicator_id",
      "actual_value"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, re.event_description, ra.risk_level, ra.mitigation_plan FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE ra.risk_level = '高' AND ra.assessor = '曾强';",
    "question": "哪些风险事件的评估结果为高风险，并且这些事件的缓解计划是由曾强评估的？",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "ra.risk_level,",
      "ra.mitigation_plan",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "WHERE",
      "ra.risk_level",
      "=",
      "'高'",
      "AND",
      "ra.assessor",
      "=",
      "'曾强';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "ra.risk_level,",
      "ra.mitigation_plan",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "WHERE",
      "ra.risk_level",
      "=",
      "'高'",
      "AND",
      "ra.assessor",
      "=",
      "'曾强';"
    ],
    "question_toks": [
      "哪些风险事件的评估结果为高风险，并且这些事件的缓解计划是由曾强评估的？"
    ],
    "result_fields": [
      "re.event_id",
      "re.event_description",
      "ra.risk_level",
      "ra.mitigation_plan"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT DISTINCT c.customer_name FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_type = '投资' AND t.risk_score > 60;",
    "question": "有哪些客户的交易类型为投资，且其风险评分大于60？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "c.customer_name",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "t.transaction_type",
      "=",
      "'投资'",
      "AND",
      "t.risk_score",
      ">",
      "60;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "c.customer_name",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "t.transaction_type",
      "=",
      "'投资'",
      "AND",
      "t.risk_score",
      ">",
      "60;"
    ],
    "question_toks": [
      "有哪些客户的交易类型为投资，且其风险评分大于60？"
    ],
    "result_fields": [
      "DISTINCT c.customer_name"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, re.created_at, re.status FROM risk_events re;",
    "question": "查询每个风险事件的创建时间和当前状态",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "re.created_at,",
      "re.status",
      "FROM",
      "risk_events",
      "re;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "re.created_at,",
      "re.status",
      "FROM",
      "risk_events",
      "re;"
    ],
    "question_toks": [
      "查询每个风险事件的创建时间和当前状态"
    ],
    "result_fields": [
      "re.event_id",
      "re.created_at",
      "re.status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_name, t.risk_score FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.credit_score < 600;",
    "question": "找出所有信用评分低于600的客户及其对应的交易风险评分。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "t.risk_score",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.credit_score",
      "<",
      "600;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "t.risk_score",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.credit_score",
      "<",
      "600;"
    ],
    "question_toks": [
      "找出所有信用评分低于600的客户及其对应的交易风险评分。"
    ],
    "result_fields": [
      "c.customer_name",
      "t.risk_score"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT t.amount, c.customer_name FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.transaction_date >= '2023-12-01' AND t.transaction_date < '2024-01-01' AND t.status = '成功';",
    "question": "获取2023年12月所有成功交易的金额和客户名称。",
    "query_toks": [
      "SELECT",
      "t.amount,",
      "c.customer_name",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "t.transaction_date",
      ">=",
      "'2023-12-01'",
      "AND",
      "t.transaction_date",
      "<",
      "'2024-01-01'",
      "AND",
      "t.status",
      "=",
      "'成功';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.amount,",
      "c.customer_name",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "t.transaction_date",
      ">=",
      "'2023-12-01'",
      "AND",
      "t.transaction_date",
      "<",
      "'2024-01-01'",
      "AND",
      "t.status",
      "=",
      "'成功';"
    ],
    "question_toks": [
      "获取2023年12月所有成功交易的金额和客户名称。"
    ],
    "result_fields": [
      "t.amount",
      "c.customer_name"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT alert_type, alert_content FROM alerts;",
    "question": "获取所有预警的类型和内容。",
    "query_toks": [
      "SELECT",
      "alert_type,",
      "alert_content",
      "FROM",
      "alerts;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "alert_type,",
      "alert_content",
      "FROM",
      "alerts;"
    ],
    "question_toks": [
      "获取所有预警的类型和内容。"
    ],
    "result_fields": [
      "alert_type",
      "alert_content"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT report_id, report_type, approved_by FROM risk_reports;",
    "question": "列出所有风险报告和其对应的审批人的信息。",
    "query_toks": [
      "SELECT",
      "report_id,",
      "report_type,",
      "approved_by",
      "FROM",
      "risk_reports;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "report_id,",
      "report_type,",
      "approved_by",
      "FROM",
      "risk_reports;"
    ],
    "question_toks": [
      "列出所有风险报告和其对应的审批人的信息。"
    ],
    "result_fields": [
      "report_id",
      "report_type",
      "approved_by"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT transaction_type, COUNT(*) as total_count, SUM(CASE WHEN status = '成功' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) as success_rate, AVG(risk_score) as avg_risk_score FROM transactions GROUP BY transaction_type ORDER BY avg_risk_score DESC;",
    "question": "统计每种交易类型的成功率和平均风险评分。",
    "query_toks": [
      "SELECT",
      "transaction_type,",
      "COUNT(*)",
      "as",
      "total_count,",
      "SUM(CASE",
      "WHEN",
      "status",
      "=",
      "'成功'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "*",
      "100.0",
      "/",
      "COUNT(*)",
      "as",
      "success_rate,",
      "AVG(risk_score)",
      "as",
      "avg_risk_score",
      "FROM",
      "transactions",
      "GROUP",
      "BY",
      "transaction_type",
      "ORDER",
      "BY",
      "avg_risk_score",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "transaction_type,",
      "COUNT(*)",
      "as",
      "total_count,",
      "SUM(CASE",
      "WHEN",
      "status",
      "=",
      "'成功'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "*",
      "100.0",
      "/",
      "COUNT(*)",
      "as",
      "success_rate,",
      "AVG(risk_score)",
      "as",
      "avg_risk_score",
      "FROM",
      "transactions",
      "GROUP",
      "BY",
      "transaction_type",
      "ORDER",
      "BY",
      "avg_risk_score",
      "DESC;"
    ],
    "question_toks": [
      "统计每种交易类型的成功率和平均风险评分。"
    ],
    "result_fields": [
      "transaction_type",
      "COUNT(*)",
      "SUM(CASE WHEN status = '成功' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)",
      "AVG(risk_score)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT a.alert_id, a.alert_content, rc.rule_description FROM alerts a JOIN rule_configurations rc ON a.rule_id = rc.rule_id;",
    "question": "获取所有触发的预警及其对应的规则描述。",
    "query_toks": [
      "SELECT",
      "a.alert_id,",
      "a.alert_content,",
      "rc.rule_description",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "rule_configurations",
      "rc",
      "ON",
      "a.rule_id",
      "=",
      "rc.rule_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.alert_id,",
      "a.alert_content,",
      "rc.rule_description",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "rule_configurations",
      "rc",
      "ON",
      "a.rule_id",
      "=",
      "rc.rule_id;"
    ],
    "question_toks": [
      "获取所有触发的预警及其对应的规则描述。"
    ],
    "result_fields": [
      "a.alert_id",
      "a.alert_content",
      "rc.rule_description"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.customer_name, t.status FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id ORDER BY t.transaction_date DESC LIMIT 1;",
    "question": "查找所有客户及其最近一次交易的状态。",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "ORDER",
      "BY",
      "t.transaction_date",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "ORDER",
      "BY",
      "t.transaction_date",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "查找所有客户及其最近一次交易的状态。"
    ],
    "result_fields": [
      "c.customer_id",
      "c.customer_name",
      "t.status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT i.indicator_id, i.indicator_name, AVG(l.actual_value) as avg_value, STDDEV(l.actual_value) as std_dev, CASE WHEN AVG(l.actual_value) != 0 THEN STDDEV(l.actual_value) / AVG(l.actual_value) ELSE NULL END as coefficient_of_variation FROM risk_indicators i JOIN risk_monitoring_logs l ON i.indicator_id = l.indicator_id GROUP BY i.indicator_id, i.indicator_name ORDER BY coefficient_of_variation DESC NULLS LAST;",
    "question": "统计每种风险指标的平均实际值、标准差和变异系数。",
    "query_toks": [
      "SELECT",
      "i.indicator_id,",
      "i.indicator_name,",
      "AVG(l.actual_value)",
      "as",
      "avg_value,",
      "STDDEV(l.actual_value)",
      "as",
      "std_dev,",
      "CASE",
      "WHEN",
      "AVG(l.actual_value)",
      "!=",
      "0",
      "THEN",
      "STDDEV(l.actual_value)",
      "/",
      "AVG(l.actual_value)",
      "ELSE",
      "NULL",
      "END",
      "as",
      "coefficient_of_variation",
      "FROM",
      "risk_indicators",
      "i",
      "JOIN",
      "risk_monitoring_logs",
      "l",
      "ON",
      "i.indicator_id",
      "=",
      "l.indicator_id",
      "GROUP",
      "BY",
      "i.indicator_id,",
      "i.indicator_name",
      "ORDER",
      "BY",
      "coefficient_of_variation",
      "DESC",
      "NULLS",
      "LAST;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "i.indicator_id,",
      "i.indicator_name,",
      "AVG(l.actual_value)",
      "as",
      "avg_value,",
      "STDDEV(l.actual_value)",
      "as",
      "std_dev,",
      "CASE",
      "WHEN",
      "AVG(l.actual_value)",
      "!=",
      "0",
      "THEN",
      "STDDEV(l.actual_value)",
      "/",
      "AVG(l.actual_value)",
      "ELSE",
      "NULL",
      "END",
      "as",
      "coefficient_of_variation",
      "FROM",
      "risk_indicators",
      "i",
      "JOIN",
      "risk_monitoring_logs",
      "l",
      "ON",
      "i.indicator_id",
      "=",
      "l.indicator_id",
      "GROUP",
      "BY",
      "i.indicator_id,",
      "i.indicator_name",
      "ORDER",
      "BY",
      "coefficient_of_variation",
      "DESC",
      "NULLS",
      "LAST;"
    ],
    "question_toks": [
      "统计每种风险指标的平均实际值、标准差和变异系数。"
    ],
    "result_fields": [
      "i.indicator_id",
      "i.indicator_name",
      "AVG(l.actual_value)",
      "STDDEV(l.actual_value)",
      "CASE WHEN AVG(l.actual_value) != 0 THEN STDDEV(l.actual_value) / AVG(l.actual_value) ELSE NULL END"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT DISTINCT c.customer_id, c.customer_name FROM customers c JOIN transactions t1 ON c.customer_id = t1.customer_id JOIN transactions t2 ON c.customer_id = t2.customer_id JOIN audit_logs a ON t2.transaction_id = a.transaction_id WHERE t1.risk_score > 80 AND t2.amount > 500000 AND a.audit_result = '拒绝' AND t1.transaction_date >= date('now') - INTERVAL '1 year' AND t2.transaction_date >= date('now') - INTERVAL '1 year'",
    "question": "查询所有在过去一年内既有高风险交易又有未通过审核的大额交易（超过50万）的客户",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "c.customer_id,",
      "c.customer_name",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t1",
      "ON",
      "c.customer_id",
      "=",
      "t1.customer_id",
      "JOIN",
      "transactions",
      "t2",
      "ON",
      "c.customer_id",
      "=",
      "t2.customer_id",
      "JOIN",
      "audit_logs",
      "a",
      "ON",
      "t2.transaction_id",
      "=",
      "a.transaction_id",
      "WHERE",
      "t1.risk_score",
      ">",
      "80",
      "AND",
      "t2.amount",
      ">",
      "500000",
      "AND",
      "a.audit_result",
      "=",
      "'拒绝'",
      "AND",
      "t1.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "AND",
      "t2.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "c.customer_id,",
      "c.customer_name",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t1",
      "ON",
      "c.customer_id",
      "=",
      "t1.customer_id",
      "JOIN",
      "transactions",
      "t2",
      "ON",
      "c.customer_id",
      "=",
      "t2.customer_id",
      "JOIN",
      "audit_logs",
      "a",
      "ON",
      "t2.transaction_id",
      "=",
      "a.transaction_id",
      "WHERE",
      "t1.risk_score",
      ">",
      "80",
      "AND",
      "t2.amount",
      ">",
      "500000",
      "AND",
      "a.audit_result",
      "=",
      "'拒绝'",
      "AND",
      "t1.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "AND",
      "t2.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'"
    ],
    "question_toks": [
      "查询所有在过去一年内既有高风险交易又有未通过审核的大额交易（超过50万）的客户"
    ],
    "result_fields": [
      "DISTINCT c.customer_id",
      "c.customer_name"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT AVG(impact_score) AS average_impact_score FROM risk_assessments WHERE mitigation_plan IS NULL;",
    "question": "列出所有风险评估中，缓解计划为空的记录，并计算其影响评分的平均值。",
    "query_toks": [
      "SELECT",
      "AVG(impact_score)",
      "AS",
      "average_impact_score",
      "FROM",
      "risk_assessments",
      "WHERE",
      "mitigation_plan",
      "IS",
      "NULL;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "AVG(impact_score)",
      "AS",
      "average_impact_score",
      "FROM",
      "risk_assessments",
      "WHERE",
      "mitigation_plan",
      "IS",
      "NULL;"
    ],
    "question_toks": [
      "列出所有风险评估中，缓解计划为空的记录，并计算其影响评分的平均值。"
    ],
    "result_fields": [
      "AVG(impact_score)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT alert_id, alert_content, status FROM alerts;",
    "question": "查询所有预警信息的内容及其状态。",
    "query_toks": [
      "SELECT",
      "alert_id,",
      "alert_content,",
      "status",
      "FROM",
      "alerts;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "alert_id,",
      "alert_content,",
      "status",
      "FROM",
      "alerts;"
    ],
    "question_toks": [
      "查询所有预警信息的内容及其状态。"
    ],
    "result_fields": [
      "alert_id",
      "alert_content",
      "status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "WITH customer_risks AS (SELECT c.customer_id, c.customer_name, COUNT(CASE WHEN t.risk_score > 80 AND t.transaction_date >= date('now') - INTERVAL '90 days' THEN 1 END) as high_risk_transactions, COUNT(CASE WHEN a.status = '未处理' THEN 1 END) as unresolved_alerts, c.credit_score FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id LEFT JOIN alerts a ON t.event_id = a.event_id GROUP BY c.customer_id, c.customer_name) SELECT customer_name, (high_risk_transactions * 2 + unresolved_alerts * 3 + 1000.0 / NULLIF(credit_score, 0)) as risk_index FROM customer_risks ORDER BY risk_index DESC LIMIT 10;",
    "question": "计算每个客户的风险指数，风险指数定义为：过去90天内高风险交易次数 * 2 + 未处理预警数量 * 3 + 信用评分的倒数 * 1000，并列出前10名高风险客户。",
    "query_toks": [
      "WITH",
      "customer_risks",
      "AS",
      "(SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "COUNT(CASE",
      "WHEN",
      "t.risk_score",
      ">",
      "80",
      "AND",
      "t.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'90",
      "days'",
      "THEN",
      "1",
      "END)",
      "as",
      "high_risk_transactions,",
      "COUNT(CASE",
      "WHEN",
      "a.status",
      "=",
      "'未处理'",
      "THEN",
      "1",
      "END)",
      "as",
      "unresolved_alerts,",
      "c.credit_score",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "LEFT",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "t.event_id",
      "=",
      "a.event_id",
      "GROUP",
      "BY",
      "c.customer_id,",
      "c.customer_name)",
      "SELECT",
      "customer_name,",
      "(high_risk_transactions",
      "*",
      "2",
      "+",
      "unresolved_alerts",
      "*",
      "3",
      "+",
      "1000.0",
      "/",
      "NULLIF(credit_score,",
      "0))",
      "as",
      "risk_index",
      "FROM",
      "customer_risks",
      "ORDER",
      "BY",
      "risk_index",
      "DESC",
      "LIMIT",
      "10;"
    ],
    "query_toks_no_value": [
      "WITH",
      "customer_risks",
      "AS",
      "(SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "COUNT(CASE",
      "WHEN",
      "t.risk_score",
      ">",
      "80",
      "AND",
      "t.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'90",
      "days'",
      "THEN",
      "1",
      "END)",
      "as",
      "high_risk_transactions,",
      "COUNT(CASE",
      "WHEN",
      "a.status",
      "=",
      "'未处理'",
      "THEN",
      "1",
      "END)",
      "as",
      "unresolved_alerts,",
      "c.credit_score",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "LEFT",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "t.event_id",
      "=",
      "a.event_id",
      "GROUP",
      "BY",
      "c.customer_id,",
      "c.customer_name)",
      "SELECT",
      "customer_name,",
      "(high_risk_transactions",
      "*",
      "2",
      "+",
      "unresolved_alerts",
      "*",
      "3",
      "+",
      "1000.0",
      "/",
      "NULLIF(credit_score,",
      "0))",
      "as",
      "risk_index",
      "FROM",
      "customer_risks",
      "ORDER",
      "BY",
      "risk_index",
      "DESC",
      "LIMIT",
      "10;"
    ],
    "question_toks": [
      "计算每个客户的风险指数，风险指数定义为：过去90天内高风险交易次数",
      "*",
      "2",
      "+",
      "未处理预警数量",
      "*",
      "3",
      "+",
      "信用评分的倒数",
      "*",
      "1000，并列出前10名高风险客户。"
    ],
    "result_fields": [
      "c.customer_id",
      "c.customer_name",
      "COUNT(CASE WHEN t.risk_score > 80 AND t.transaction_date >= date('now') - INTERVAL '90 days' THEN 1 END)",
      "COUNT(CASE WHEN a.status = '未处理' THEN 1 END)",
      "c.credit_score"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT event_type, COUNT(*) as occurrence_count, AVG(severity) as avg_severity FROM risk_events WHERE EXTRACT(YEAR FROM occurrence_time) = 2023 GROUP BY event_type ORDER BY occurrence_count DESC, avg_severity DESC",
    "question": "统计每种风险事件类型在2023年的发生次数，并按照次数降序排列，同时显示每种类型的平均严重程度。",
    "query_toks": [
      "SELECT",
      "event_type,",
      "COUNT(*)",
      "as",
      "occurrence_count,",
      "AVG(severity)",
      "as",
      "avg_severity",
      "FROM",
      "risk_events",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "occurrence_time)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "event_type",
      "ORDER",
      "BY",
      "occurrence_count",
      "DESC,",
      "avg_severity",
      "DESC"
    ],
    "query_toks_no_value": [
      "SELECT",
      "event_type,",
      "COUNT(*)",
      "as",
      "occurrence_count,",
      "AVG(severity)",
      "as",
      "avg_severity",
      "FROM",
      "risk_events",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "occurrence_time)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "event_type",
      "ORDER",
      "BY",
      "occurrence_count",
      "DESC,",
      "avg_severity",
      "DESC"
    ],
    "question_toks": [
      "统计每种风险事件类型在2023年的发生次数，并按照次数降序排列，同时显示每种类型的平均严重程度。"
    ],
    "result_fields": [
      "event_type",
      "COUNT(*)",
      "AVG(severity)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rr.*, re.event_type, re.event_description FROM risk_reports rr LEFT JOIN risk_events re ON rr.event_id = re.event_id WHERE rr.report_content LIKE '%合规风险%'",
    "question": "找出所有风险报告内容中包含\"合规风险\"的报告及其相关的风险事件",
    "query_toks": [
      "SELECT",
      "rr.*,",
      "re.event_type,",
      "re.event_description",
      "FROM",
      "risk_reports",
      "rr",
      "LEFT",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "rr.report_content",
      "LIKE",
      "'%合规风险%'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rr.*,",
      "re.event_type,",
      "re.event_description",
      "FROM",
      "risk_reports",
      "rr",
      "LEFT",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "rr.report_content",
      "LIKE",
      "'%合规风险%'"
    ],
    "question_toks": [
      "找出所有风险报告内容中包含\"合规风险\"的报告及其相关的风险事件"
    ],
    "result_fields": [
      "rr.*",
      "re.event_type",
      "re.event_description"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ri.indicator_id, ri.update_frequency, ri.data_source FROM risk_indicators ri;",
    "question": "获取每个风险指标的更新频率及其数据来源",
    "query_toks": [
      "SELECT",
      "ri.indicator_id,",
      "ri.update_frequency,",
      "ri.data_source",
      "FROM",
      "risk_indicators",
      "ri;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ri.indicator_id,",
      "ri.update_frequency,",
      "ri.data_source",
      "FROM",
      "risk_indicators",
      "ri;"
    ],
    "question_toks": [
      "获取每个风险指标的更新频率及其数据来源"
    ],
    "result_fields": [
      "ri.indicator_id",
      "ri.update_frequency",
      "ri.data_source"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, re.event_type, re.status, rr.report_content, rr.report_date FROM risk_events re LEFT JOIN risk_reports rr ON re.event_id = rr.event_id WHERE re.status != '已解决' AND rr.report_date = (SELECT MAX(report_date) FROM risk_reports WHERE event_id = re.event_id)",
    "question": "查询所有未解决的风险事件，以及与之相关的最新风险报告",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "re.event_type,",
      "re.status,",
      "rr.report_content,",
      "rr.report_date",
      "FROM",
      "risk_events",
      "re",
      "LEFT",
      "JOIN",
      "risk_reports",
      "rr",
      "ON",
      "re.event_id",
      "=",
      "rr.event_id",
      "WHERE",
      "re.status",
      "!=",
      "'已解决'",
      "AND",
      "rr.report_date",
      "=",
      "(SELECT",
      "MAX(report_date)",
      "FROM",
      "risk_reports",
      "WHERE",
      "event_id",
      "=",
      "re.event_id)"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "re.event_type,",
      "re.status,",
      "rr.report_content,",
      "rr.report_date",
      "FROM",
      "risk_events",
      "re",
      "LEFT",
      "JOIN",
      "risk_reports",
      "rr",
      "ON",
      "re.event_id",
      "=",
      "rr.event_id",
      "WHERE",
      "re.status",
      "!=",
      "'已解决'",
      "AND",
      "rr.report_date",
      "=",
      "(SELECT",
      "MAX(report_date)",
      "FROM",
      "risk_reports",
      "WHERE",
      "event_id",
      "=",
      "re.event_id)"
    ],
    "question_toks": [
      "查询所有未解决的风险事件，以及与之相关的最新风险报告"
    ],
    "result_fields": [
      "re.event_id",
      "re.event_type",
      "re.status",
      "rr.report_content",
      "rr.report_date"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT r.rule_type, AVG(alert_count) as avg_alert_count, MAX(r.updated_at) as last_update_time FROM rule_configurations r LEFT JOIN (SELECT rule_id, COUNT(*) as alert_count FROM alerts GROUP BY rule_id) a ON r.rule_id = a.rule_id GROUP BY r.rule_type ORDER BY avg_alert_count DESC;",
    "question": "统计每种风险控制规则类型的平均触发次数和最近一次更新时间。",
    "query_toks": [
      "SELECT",
      "r.rule_type,",
      "AVG(alert_count)",
      "as",
      "avg_alert_count,",
      "MAX(r.updated_at)",
      "as",
      "last_update_time",
      "FROM",
      "rule_configurations",
      "r",
      "LEFT",
      "JOIN",
      "(SELECT",
      "rule_id,",
      "COUNT(*)",
      "as",
      "alert_count",
      "FROM",
      "alerts",
      "GROUP",
      "BY",
      "rule_id)",
      "a",
      "ON",
      "r.rule_id",
      "=",
      "a.rule_id",
      "GROUP",
      "BY",
      "r.rule_type",
      "ORDER",
      "BY",
      "avg_alert_count",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.rule_type,",
      "AVG(alert_count)",
      "as",
      "avg_alert_count,",
      "MAX(r.updated_at)",
      "as",
      "last_update_time",
      "FROM",
      "rule_configurations",
      "r",
      "LEFT",
      "JOIN",
      "(SELECT",
      "rule_id,",
      "COUNT(*)",
      "as",
      "alert_count",
      "FROM",
      "alerts",
      "GROUP",
      "BY",
      "rule_id)",
      "a",
      "ON",
      "r.rule_id",
      "=",
      "a.rule_id",
      "GROUP",
      "BY",
      "r.rule_type",
      "ORDER",
      "BY",
      "avg_alert_count",
      "DESC;"
    ],
    "question_toks": [
      "统计每种风险控制规则类型的平均触发次数和最近一次更新时间。"
    ],
    "result_fields": [
      "r.rule_type",
      "AVG(alert_count)",
      "MAX(r.updated_at)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT event_type, COUNT(event_id) AS event_count FROM risk_events GROUP BY event_type ORDER BY event_count DESC;",
    "question": "统计每种风险类型下的事件数量，并按数量降序排列。",
    "query_toks": [
      "SELECT",
      "event_type,",
      "COUNT(event_id)",
      "AS",
      "event_count",
      "FROM",
      "risk_events",
      "GROUP",
      "BY",
      "event_type",
      "ORDER",
      "BY",
      "event_count",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "event_type,",
      "COUNT(event_id)",
      "AS",
      "event_count",
      "FROM",
      "risk_events",
      "GROUP",
      "BY",
      "event_type",
      "ORDER",
      "BY",
      "event_count",
      "DESC;"
    ],
    "question_toks": [
      "统计每种风险类型下的事件数量，并按数量降序排列。"
    ],
    "result_fields": [
      "event_type",
      "COUNT(event_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.customer_name, c.credit_score FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date >= '2023-01-01' AND t.transaction_date < '2024-01-01' AND c.credit_score < 700;",
    "question": "哪些客户在2023年进行了交易并且其信用评分低于700？",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "t.transaction_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "t.transaction_date",
      "<",
      "'2024-01-01'",
      "AND",
      "c.credit_score",
      "<",
      "700;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "t.transaction_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "t.transaction_date",
      "<",
      "'2024-01-01'",
      "AND",
      "c.credit_score",
      "<",
      "700;"
    ],
    "question_toks": [
      "哪些客户在2023年进行了交易并且其信用评分低于700？"
    ],
    "result_fields": [
      "c.customer_id",
      "c.customer_name",
      "c.credit_score"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, re.event_type, rr.report_id FROM risk_events re JOIN risk_reports rr ON re.event_id = rr.event_id;",
    "question": "获取所有风险事件及其对应的风险报告。",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "re.event_type,",
      "rr.report_id",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_reports",
      "rr",
      "ON",
      "re.event_id",
      "=",
      "rr.event_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "re.event_type,",
      "rr.report_id",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_reports",
      "rr",
      "ON",
      "re.event_id",
      "=",
      "rr.event_id;"
    ],
    "question_toks": [
      "获取所有风险事件及其对应的风险报告。"
    ],
    "result_fields": [
      "re.event_id",
      "re.event_type",
      "rr.report_id"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT COUNT(*) FROM risk_reports WHERE EXTRACT(YEAR FROM report_date) = 2023 AND approval_status = '已拒绝'",
    "question": "在2023年度，有多少份风险报告被拒绝了？",
    "query_toks": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "risk_reports",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "report_date)",
      "=",
      "2023",
      "AND",
      "approval_status",
      "=",
      "'已拒绝'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "risk_reports",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "report_date)",
      "=",
      "2023",
      "AND",
      "approval_status",
      "=",
      "'已拒绝'"
    ],
    "question_toks": [
      "在2023年度，有多少份风险报告被拒绝了？"
    ],
    "result_fields": [
      "COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ra.assessment_id, ra.mitigation_plan, ra.assessor FROM risk_assessments ra;",
    "question": "获取所有风险评估记录及其对应的缓解计划。",
    "query_toks": [
      "SELECT",
      "ra.assessment_id,",
      "ra.mitigation_plan,",
      "ra.assessor",
      "FROM",
      "risk_assessments",
      "ra;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ra.assessment_id,",
      "ra.mitigation_plan,",
      "ra.assessor",
      "FROM",
      "risk_assessments",
      "ra;"
    ],
    "question_toks": [
      "获取所有风险评估记录及其对应的缓解计划。"
    ],
    "result_fields": [
      "ra.assessment_id",
      "ra.mitigation_plan",
      "ra.assessor"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT m.log_id, m.actual_value, m.is_exceeding_threshold FROM risk_monitoring_logs m JOIN risk_indicators i ON m.indicator_id = i.indicator_id;",
    "question": "查询所有风险指标的最新监控日志。",
    "query_toks": [
      "SELECT",
      "m.log_id,",
      "m.actual_value,",
      "m.is_exceeding_threshold",
      "FROM",
      "risk_monitoring_logs",
      "m",
      "JOIN",
      "risk_indicators",
      "i",
      "ON",
      "m.indicator_id",
      "=",
      "i.indicator_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "m.log_id,",
      "m.actual_value,",
      "m.is_exceeding_threshold",
      "FROM",
      "risk_monitoring_logs",
      "m",
      "JOIN",
      "risk_indicators",
      "i",
      "ON",
      "m.indicator_id",
      "=",
      "i.indicator_id;"
    ],
    "question_toks": [
      "查询所有风险指标的最新监控日志。"
    ],
    "result_fields": [
      "m.log_id",
      "m.actual_value",
      "m.is_exceeding_threshold"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rc.rule_id, rc.rule_name, COUNT(a.alert_id) as alert_count FROM rule_configurations rc LEFT JOIN alerts a ON rc.rule_id = a.rule_id GROUP BY rc.rule_id, rc.rule_name ORDER BY alert_count DESC",
    "question": "列出所有风险控制规则及其关联的预警次数",
    "query_toks": [
      "SELECT",
      "rc.rule_id,",
      "rc.rule_name,",
      "COUNT(a.alert_id)",
      "as",
      "alert_count",
      "FROM",
      "rule_configurations",
      "rc",
      "LEFT",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "rc.rule_id",
      "=",
      "a.rule_id",
      "GROUP",
      "BY",
      "rc.rule_id,",
      "rc.rule_name",
      "ORDER",
      "BY",
      "alert_count",
      "DESC"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rc.rule_id,",
      "rc.rule_name,",
      "COUNT(a.alert_id)",
      "as",
      "alert_count",
      "FROM",
      "rule_configurations",
      "rc",
      "LEFT",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "rc.rule_id",
      "=",
      "a.rule_id",
      "GROUP",
      "BY",
      "rc.rule_id,",
      "rc.rule_name",
      "ORDER",
      "BY",
      "alert_count",
      "DESC"
    ],
    "question_toks": [
      "列出所有风险控制规则及其关联的预警次数"
    ],
    "result_fields": [
      "rc.rule_id",
      "rc.rule_name",
      "COUNT(a.alert_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, re.event_description, t.transaction_id, t.amount FROM risk_events re JOIN transactions t ON re.event_id = t.event_id WHERE re.event_type = '信用风险' AND t.status = '成功';",
    "question": "查询信用风险事件的所有相关交易信息，且交易状态为成功。",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "t.transaction_id,",
      "t.amount",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "re.event_id",
      "=",
      "t.event_id",
      "WHERE",
      "re.event_type",
      "=",
      "'信用风险'",
      "AND",
      "t.status",
      "=",
      "'成功';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "t.transaction_id,",
      "t.amount",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "re.event_id",
      "=",
      "t.event_id",
      "WHERE",
      "re.event_type",
      "=",
      "'信用风险'",
      "AND",
      "t.status",
      "=",
      "'成功';"
    ],
    "question_toks": [
      "查询信用风险事件的所有相关交易信息，且交易状态为成功。"
    ],
    "result_fields": [
      "re.event_id",
      "re.event_description",
      "t.transaction_id",
      "t.amount"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.risk_level, COUNT(c.customer_id) AS customer_count FROM customers c GROUP BY c.risk_level;",
    "question": "统计每种风险等级的客户数量",
    "query_toks": [
      "SELECT",
      "c.risk_level,",
      "COUNT(c.customer_id)",
      "AS",
      "customer_count",
      "FROM",
      "customers",
      "c",
      "GROUP",
      "BY",
      "c.risk_level;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.risk_level,",
      "COUNT(c.customer_id)",
      "AS",
      "customer_count",
      "FROM",
      "customers",
      "c",
      "GROUP",
      "BY",
      "c.risk_level;"
    ],
    "question_toks": [
      "统计每种风险等级的客户数量"
    ],
    "result_fields": [
      "c.risk_level",
      "COUNT(c.customer_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY total_amount) AS median_transaction_amount\nFROM (\n    SELECT c.customer_id, SUM(t.amount) AS total_amount\n    FROM customers c\n    JOIN transactions t ON c.customer_id = t.customer_id\n    WHERE c.registration_date < '2019-01-01' AND c.risk_level = '高'\n    GROUP BY c.customer_id\n) AS customer_transactions;",
    "question": "请找出所有客户中，注册时间在2019年之前且风险等级为高的客户，其交易总金额的中位数。",
    "query_toks": [
      "SELECT",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "total_amount)",
      "AS",
      "median_transaction_amount",
      "FROM",
      "(",
      "SELECT",
      "c.customer_id,",
      "SUM(t.amount)",
      "AS",
      "total_amount",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.registration_date",
      "<",
      "'2019-01-01'",
      "AND",
      "c.risk_level",
      "=",
      "'高'",
      "GROUP",
      "BY",
      "c.customer_id",
      ")",
      "AS",
      "customer_transactions;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "total_amount)",
      "AS",
      "median_transaction_amount",
      "FROM",
      "(",
      "SELECT",
      "c.customer_id,",
      "SUM(t.amount)",
      "AS",
      "total_amount",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.registration_date",
      "<",
      "'2019-01-01'",
      "AND",
      "c.risk_level",
      "=",
      "'高'",
      "GROUP",
      "BY",
      "c.customer_id",
      ")",
      "AS",
      "customer_transactions;"
    ],
    "question_toks": [
      "请找出所有客户中，注册时间在2019年之前且风险等级为高的客户，其交易总金额的中位数。"
    ],
    "result_fields": [
      "PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY total_amount)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rc.rule_name, re.event_description FROM rule_configurations rc JOIN alerts a ON rc.rule_id = a.rule_id JOIN risk_events re ON a.event_id = re.event_id WHERE a.alert_level = '高';",
    "question": "找出所有触发高风险预警的规则及其对应的风险事件描述。",
    "query_toks": [
      "SELECT",
      "rc.rule_name,",
      "re.event_description",
      "FROM",
      "rule_configurations",
      "rc",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "rc.rule_id",
      "=",
      "a.rule_id",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "a.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "a.alert_level",
      "=",
      "'高';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rc.rule_name,",
      "re.event_description",
      "FROM",
      "rule_configurations",
      "rc",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "rc.rule_id",
      "=",
      "a.rule_id",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "a.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "a.alert_level",
      "=",
      "'高';"
    ],
    "question_toks": [
      "找出所有触发高风险预警的规则及其对应的风险事件描述。"
    ],
    "result_fields": [
      "rc.rule_name",
      "re.event_description"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT event_id, created_at, status FROM risk_events;",
    "question": "获取所有风险事件的创建时间和状态。",
    "query_toks": [
      "SELECT",
      "event_id,",
      "created_at,",
      "status",
      "FROM",
      "risk_events;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "event_id,",
      "created_at,",
      "status",
      "FROM",
      "risk_events;"
    ],
    "question_toks": [
      "获取所有风险事件的创建时间和状态。"
    ],
    "result_fields": [
      "event_id",
      "created_at",
      "status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "WITH monthly_events AS (SELECT DATE_TRUNC('month', created_at) as month, event_type, COUNT(*) as event_count FROM risk_events GROUP BY DATE_TRUNC('month', created_at), event_type) SELECT current_month.month, current_month.event_type, current_month.event_count, previous_month.event_count as previous_month_count, CASE WHEN previous_month.event_count > 0 THEN ROUND((current_month.event_count - previous_month.event_count) / previous_month.event_count * 100, 2) ELSE NULL END as month_over_month_growth FROM monthly_events current_month LEFT JOIN monthly_events previous_month ON current_month.event_type = previous_month.event_type AND current_month.month = previous_month.month + INTERVAL '1 month' ORDER BY current_month.month DESC, current_month.event_type;",
    "question": "统计每个风险事件类型在不同月份的发生频率，并计算环比增长率。",
    "query_toks": [
      "WITH",
      "monthly_events",
      "AS",
      "(SELECT",
      "DATE_TRUNC('month',",
      "created_at)",
      "as",
      "month,",
      "event_type,",
      "COUNT(*)",
      "as",
      "event_count",
      "FROM",
      "risk_events",
      "GROUP",
      "BY",
      "DATE_TRUNC('month',",
      "created_at),",
      "event_type)",
      "SELECT",
      "current_month.month,",
      "current_month.event_type,",
      "current_month.event_count,",
      "previous_month.event_count",
      "as",
      "previous_month_count,",
      "CASE",
      "WHEN",
      "previous_month.event_count",
      ">",
      "0",
      "THEN",
      "ROUND((current_month.event_count",
      "-",
      "previous_month.event_count)",
      "/",
      "previous_month.event_count",
      "*",
      "100,",
      "2)",
      "ELSE",
      "NULL",
      "END",
      "as",
      "month_over_month_growth",
      "FROM",
      "monthly_events",
      "current_month",
      "LEFT",
      "JOIN",
      "monthly_events",
      "previous_month",
      "ON",
      "current_month.event_type",
      "=",
      "previous_month.event_type",
      "AND",
      "current_month.month",
      "=",
      "previous_month.month",
      "+",
      "INTERVAL",
      "'1",
      "month'",
      "ORDER",
      "BY",
      "current_month.month",
      "DESC,",
      "current_month.event_type;"
    ],
    "query_toks_no_value": [
      "WITH",
      "monthly_events",
      "AS",
      "(SELECT",
      "DATE_TRUNC('month',",
      "created_at)",
      "as",
      "month,",
      "event_type,",
      "COUNT(*)",
      "as",
      "event_count",
      "FROM",
      "risk_events",
      "GROUP",
      "BY",
      "DATE_TRUNC('month',",
      "created_at),",
      "event_type)",
      "SELECT",
      "current_month.month,",
      "current_month.event_type,",
      "current_month.event_count,",
      "previous_month.event_count",
      "as",
      "previous_month_count,",
      "CASE",
      "WHEN",
      "previous_month.event_count",
      ">",
      "0",
      "THEN",
      "ROUND((current_month.event_count",
      "-",
      "previous_month.event_count)",
      "/",
      "previous_month.event_count",
      "*",
      "100,",
      "2)",
      "ELSE",
      "NULL",
      "END",
      "as",
      "month_over_month_growth",
      "FROM",
      "monthly_events",
      "current_month",
      "LEFT",
      "JOIN",
      "monthly_events",
      "previous_month",
      "ON",
      "current_month.event_type",
      "=",
      "previous_month.event_type",
      "AND",
      "current_month.month",
      "=",
      "previous_month.month",
      "+",
      "INTERVAL",
      "'1",
      "month'",
      "ORDER",
      "BY",
      "current_month.month",
      "DESC,",
      "current_month.event_type;"
    ],
    "question_toks": [
      "统计每个风险事件类型在不同月份的发生频率，并计算环比增长率。"
    ],
    "result_fields": [
      "DATE_TRUNC('month', created_at)",
      "event_type",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT DATE_TRUNC('month', transaction_date) as month, AVG(amount) as avg_amount, COUNT(*) as transaction_count FROM transactions GROUP BY DATE_TRUNC('month', transaction_date) ORDER BY month",
    "question": "统计每个月份的平均交易金额和交易笔数",
    "query_toks": [
      "SELECT",
      "DATE_TRUNC('month',",
      "transaction_date)",
      "as",
      "month,",
      "AVG(amount)",
      "as",
      "avg_amount,",
      "COUNT(*)",
      "as",
      "transaction_count",
      "FROM",
      "transactions",
      "GROUP",
      "BY",
      "DATE_TRUNC('month',",
      "transaction_date)",
      "ORDER",
      "BY",
      "month"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DATE_TRUNC('month',",
      "transaction_date)",
      "as",
      "month,",
      "AVG(amount)",
      "as",
      "avg_amount,",
      "COUNT(*)",
      "as",
      "transaction_count",
      "FROM",
      "transactions",
      "GROUP",
      "BY",
      "DATE_TRUNC('month',",
      "transaction_date)",
      "ORDER",
      "BY",
      "month"
    ],
    "question_toks": [
      "统计每个月份的平均交易金额和交易笔数"
    ],
    "result_fields": [
      "DATE_TRUNC('month', transaction_date)",
      "AVG(amount)",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rr.report_id, rr.report_type, rr.approved_by, re.event_description, re.severity FROM risk_reports rr LEFT JOIN risk_events re ON rr.event_id = re.event_id WHERE rr.approval_status = '已批准' ORDER BY re.severity DESC, rr.report_date DESC",
    "question": "查询所有已批准的风险报告及其相关的风险事件信息，包括报告ID、报告类型、审批人、事件描述和事件严重程度。",
    "query_toks": [
      "SELECT",
      "rr.report_id,",
      "rr.report_type,",
      "rr.approved_by,",
      "re.event_description,",
      "re.severity",
      "FROM",
      "risk_reports",
      "rr",
      "LEFT",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已批准'",
      "ORDER",
      "BY",
      "re.severity",
      "DESC,",
      "rr.report_date",
      "DESC"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rr.report_id,",
      "rr.report_type,",
      "rr.approved_by,",
      "re.event_description,",
      "re.severity",
      "FROM",
      "risk_reports",
      "rr",
      "LEFT",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已批准'",
      "ORDER",
      "BY",
      "re.severity",
      "DESC,",
      "rr.report_date",
      "DESC"
    ],
    "question_toks": [
      "查询所有已批准的风险报告及其相关的风险事件信息，包括报告ID、报告类型、审批人、事件描述和事件严重程度。"
    ],
    "result_fields": [
      "rr.report_id",
      "rr.report_type",
      "rr.approved_by",
      "re.event_description",
      "re.severity"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_name, c.risk_level, t.status FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id;",
    "question": "获取所有客户的风险等级及其交易状态。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "c.risk_level,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "c.risk_level,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id;"
    ],
    "question_toks": [
      "获取所有客户的风险等级及其交易状态。"
    ],
    "result_fields": [
      "c.customer_name",
      "c.risk_level",
      "t.status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_name, t.transaction_type, t.status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = '高';",
    "question": "查询所有高风险客户的交易信息及其对应的交易状态。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "t.transaction_type,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "t.transaction_type,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高';"
    ],
    "question_toks": [
      "查询所有高风险客户的交易信息及其对应的交易状态。"
    ],
    "result_fields": [
      "c.customer_name",
      "t.transaction_type",
      "t.status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT * FROM risk_reports WHERE author = '孙宇' AND approval_status = '待审批'",
    "question": "找出所有由'孙宇'撰写且尚未审批的风险报告",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "risk_reports",
      "WHERE",
      "author",
      "=",
      "'孙宇'",
      "AND",
      "approval_status",
      "=",
      "'待审批'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "risk_reports",
      "WHERE",
      "author",
      "=",
      "'孙宇'",
      "AND",
      "approval_status",
      "=",
      "'待审批'"
    ],
    "question_toks": [
      "找出所有由'孙宇'撰写且尚未审批的风险报告"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT a.alert_content, e.event_description FROM alerts a JOIN risk_events e ON a.event_id = e.event_id WHERE a.status = '未处理';",
    "question": "查询所有未处理预警的内容及其关联的风险事件描述。",
    "query_toks": [
      "SELECT",
      "a.alert_content,",
      "e.event_description",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "a.event_id",
      "=",
      "e.event_id",
      "WHERE",
      "a.status",
      "=",
      "'未处理';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.alert_content,",
      "e.event_description",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "a.event_id",
      "=",
      "e.event_id",
      "WHERE",
      "a.status",
      "=",
      "'未处理';"
    ],
    "question_toks": [
      "查询所有未处理预警的内容及其关联的风险事件描述。"
    ],
    "result_fields": [
      "a.alert_content",
      "e.event_description"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT risk_level, COUNT(*) AS customer_count FROM customers WHERE risk_level IN ('中', '高') GROUP BY risk_level;",
    "question": "统计每种风险等级的客户数量，要求风险等级为中或高。",
    "query_toks": [
      "SELECT",
      "risk_level,",
      "COUNT(*)",
      "AS",
      "customer_count",
      "FROM",
      "customers",
      "WHERE",
      "risk_level",
      "IN",
      "('中',",
      "'高')",
      "GROUP",
      "BY",
      "risk_level;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "risk_level,",
      "COUNT(*)",
      "AS",
      "customer_count",
      "FROM",
      "customers",
      "WHERE",
      "risk_level",
      "IN",
      "('中',",
      "'高')",
      "GROUP",
      "BY",
      "risk_level;"
    ],
    "question_toks": [
      "统计每种风险等级的客户数量，要求风险等级为中或高。"
    ],
    "result_fields": [
      "risk_level",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.customer_name, COUNT(t.transaction_id) AS transaction_count, AVG(t.risk_score) AS avg_risk_score FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_id;",
    "question": "统计每个客户的交易数量和平均风险评分。",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "COUNT(t.transaction_id)",
      "AS",
      "transaction_count,",
      "AVG(t.risk_score)",
      "AS",
      "avg_risk_score",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "GROUP",
      "BY",
      "c.customer_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "COUNT(t.transaction_id)",
      "AS",
      "transaction_count,",
      "AVG(t.risk_score)",
      "AS",
      "avg_risk_score",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "GROUP",
      "BY",
      "c.customer_id;"
    ],
    "question_toks": [
      "统计每个客户的交易数量和平均风险评分。"
    ],
    "result_fields": [
      "c.customer_id",
      "c.customer_name",
      "COUNT(t.transaction_id)",
      "AVG(t.risk_score)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT DATE_TRUNC('month', registration_date,) as month, COUNT(*) as new_high_risk_customers FROM customers WHERE risk_level = '高' GROUP BY DATE_TRUNC('month', registration_date) ORDER BY month",
    "question": "计算每个月新增的高风险客户数量",
    "query_toks": [
      "SELECT",
      "DATE_TRUNC('month',",
      "registration_date,)",
      "as",
      "month,",
      "COUNT(*)",
      "as",
      "new_high_risk_customers",
      "FROM",
      "customers",
      "WHERE",
      "risk_level",
      "=",
      "'高'",
      "GROUP",
      "BY",
      "DATE_TRUNC('month',",
      "registration_date)",
      "ORDER",
      "BY",
      "month"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DATE_TRUNC('month',",
      "registration_date,)",
      "as",
      "month,",
      "COUNT(*)",
      "as",
      "new_high_risk_customers",
      "FROM",
      "customers",
      "WHERE",
      "risk_level",
      "=",
      "'高'",
      "GROUP",
      "BY",
      "DATE_TRUNC('month',",
      "registration_date)",
      "ORDER",
      "BY",
      "month"
    ],
    "question_toks": [
      "计算每个月新增的高风险客户数量"
    ],
    "result_fields": [
      "DATE_TRUNC('month', registration_date,)",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "WITH latest_logs AS (SELECT indicator_id, MAX(monitoring_date) AS latest_date FROM risk_monitoring_logs GROUP BY indicator_id) SELECT i.indicator_name, l.monitoring_date, l.actual_value, a.alert_id, a.alert_level, a.alert_content, au.audit_result, au.audit_comments FROM risk_indicators i JOIN latest_logs ll ON i.indicator_id = ll.indicator_id JOIN risk_monitoring_logs l ON ll.indicator_id = l.indicator_id AND ll.latest_date = l.monitoring_date LEFT JOIN alerts a ON l.log_id = a.rule_id LEFT JOIN audit_logs au ON a.alert_id = au.alert_id WHERE i.threshold_value < l.actual_value ORDER BY l.monitoring_date DESC",
    "question": "查询所有高风险指标的最新监控记录及其关联的预警和审核信息",
    "query_toks": [
      "WITH",
      "latest_logs",
      "AS",
      "(SELECT",
      "indicator_id,",
      "MAX(monitoring_date)",
      "AS",
      "latest_date",
      "FROM",
      "risk_monitoring_logs",
      "GROUP",
      "BY",
      "indicator_id)",
      "SELECT",
      "i.indicator_name,",
      "l.monitoring_date,",
      "l.actual_value,",
      "a.alert_id,",
      "a.alert_level,",
      "a.alert_content,",
      "au.audit_result,",
      "au.audit_comments",
      "FROM",
      "risk_indicators",
      "i",
      "JOIN",
      "latest_logs",
      "ll",
      "ON",
      "i.indicator_id",
      "=",
      "ll.indicator_id",
      "JOIN",
      "risk_monitoring_logs",
      "l",
      "ON",
      "ll.indicator_id",
      "=",
      "l.indicator_id",
      "AND",
      "ll.latest_date",
      "=",
      "l.monitoring_date",
      "LEFT",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "l.log_id",
      "=",
      "a.rule_id",
      "LEFT",
      "JOIN",
      "audit_logs",
      "au",
      "ON",
      "a.alert_id",
      "=",
      "au.alert_id",
      "WHERE",
      "i.threshold_value",
      "<",
      "l.actual_value",
      "ORDER",
      "BY",
      "l.monitoring_date",
      "DESC"
    ],
    "query_toks_no_value": [
      "WITH",
      "latest_logs",
      "AS",
      "(SELECT",
      "indicator_id,",
      "MAX(monitoring_date)",
      "AS",
      "latest_date",
      "FROM",
      "risk_monitoring_logs",
      "GROUP",
      "BY",
      "indicator_id)",
      "SELECT",
      "i.indicator_name,",
      "l.monitoring_date,",
      "l.actual_value,",
      "a.alert_id,",
      "a.alert_level,",
      "a.alert_content,",
      "au.audit_result,",
      "au.audit_comments",
      "FROM",
      "risk_indicators",
      "i",
      "JOIN",
      "latest_logs",
      "ll",
      "ON",
      "i.indicator_id",
      "=",
      "ll.indicator_id",
      "JOIN",
      "risk_monitoring_logs",
      "l",
      "ON",
      "ll.indicator_id",
      "=",
      "l.indicator_id",
      "AND",
      "ll.latest_date",
      "=",
      "l.monitoring_date",
      "LEFT",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "l.log_id",
      "=",
      "a.rule_id",
      "LEFT",
      "JOIN",
      "audit_logs",
      "au",
      "ON",
      "a.alert_id",
      "=",
      "au.alert_id",
      "WHERE",
      "i.threshold_value",
      "<",
      "l.actual_value",
      "ORDER",
      "BY",
      "l.monitoring_date",
      "DESC"
    ],
    "question_toks": [
      "查询所有高风险指标的最新监控记录及其关联的预警和审核信息"
    ],
    "result_fields": [
      "indicator_id",
      "MAX(monitoring_date)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT risk_level, COUNT(*) as customer_count, AVG(credit_score) as avg_credit_score FROM customers GROUP BY risk_level",
    "question": "计算每种风险等级的客户数量及其平均信用评分",
    "query_toks": [
      "SELECT",
      "risk_level,",
      "COUNT(*)",
      "as",
      "customer_count,",
      "AVG(credit_score)",
      "as",
      "avg_credit_score",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "risk_level"
    ],
    "query_toks_no_value": [
      "SELECT",
      "risk_level,",
      "COUNT(*)",
      "as",
      "customer_count,",
      "AVG(credit_score)",
      "as",
      "avg_credit_score",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "risk_level"
    ],
    "question_toks": [
      "计算每种风险等级的客户数量及其平均信用评分"
    ],
    "result_fields": [
      "risk_level",
      "COUNT(*)",
      "AVG(credit_score)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT alert_type, MAX(EXTRACT(EPOCH FROM (resolved_time - alert_time))) AS max_processing_time FROM (SELECT a.alert_type, a.alert_time, l.audit_time AS resolved_time FROM alerts a JOIN audit_logs l ON a.alert_id = l.alert_id WHERE a.status = '已解决') AS resolved_alerts GROUP BY alert_type ORDER BY max_processing_time DESC;",
    "question": "在所有已解决的预警中，哪些预警类型的处理时间最长？",
    "query_toks": [
      "SELECT",
      "alert_type,",
      "MAX(EXTRACT(EPOCH",
      "FROM",
      "(resolved_time",
      "-",
      "alert_time)))",
      "AS",
      "max_processing_time",
      "FROM",
      "(SELECT",
      "a.alert_type,",
      "a.alert_time,",
      "l.audit_time",
      "AS",
      "resolved_time",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "audit_logs",
      "l",
      "ON",
      "a.alert_id",
      "=",
      "l.alert_id",
      "WHERE",
      "a.status",
      "=",
      "'已解决')",
      "AS",
      "resolved_alerts",
      "GROUP",
      "BY",
      "alert_type",
      "ORDER",
      "BY",
      "max_processing_time",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "alert_type,",
      "MAX(EXTRACT(EPOCH",
      "FROM",
      "(resolved_time",
      "-",
      "alert_time)))",
      "AS",
      "max_processing_time",
      "FROM",
      "(SELECT",
      "a.alert_type,",
      "a.alert_time,",
      "l.audit_time",
      "AS",
      "resolved_time",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "audit_logs",
      "l",
      "ON",
      "a.alert_id",
      "=",
      "l.alert_id",
      "WHERE",
      "a.status",
      "=",
      "'已解决')",
      "AS",
      "resolved_alerts",
      "GROUP",
      "BY",
      "alert_type",
      "ORDER",
      "BY",
      "max_processing_time",
      "DESC;"
    ],
    "question_toks": [
      "在所有已解决的预警中，哪些预警类型的处理时间最长？"
    ],
    "result_fields": [
      "alert_type",
      "MAX(EXTRACT(EPOCH"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_name, t.amount, t.transaction_date FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.transaction_date >= '2023-11-01' AND t.transaction_date < '2023-12-01' AND t.amount > 100000;",
    "question": "哪些客户在2023年11月期间进行了交易，并且其交易金额超过了100000元？请列出客户名称、交易金额和交易日期。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "t.amount,",
      "t.transaction_date",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "t.transaction_date",
      ">=",
      "'2023-11-01'",
      "AND",
      "t.transaction_date",
      "<",
      "'2023-12-01'",
      "AND",
      "t.amount",
      ">",
      "100000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "t.amount,",
      "t.transaction_date",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "t.transaction_date",
      ">=",
      "'2023-11-01'",
      "AND",
      "t.transaction_date",
      "<",
      "'2023-12-01'",
      "AND",
      "t.amount",
      ">",
      "100000;"
    ],
    "question_toks": [
      "哪些客户在2023年11月期间进行了交易，并且其交易金额超过了100000元？请列出客户名称、交易金额和交易日期。"
    ],
    "result_fields": [
      "c.customer_name",
      "t.amount",
      "t.transaction_date"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT SUM(threshold_value) FROM risk_indicators WHERE indicator_name LIKE '%财务%';",
    "question": "哪些风险指标的名称包含“财务”，并计算其阈值的总和。",
    "query_toks": [
      "SELECT",
      "SUM(threshold_value)",
      "FROM",
      "risk_indicators",
      "WHERE",
      "indicator_name",
      "LIKE",
      "'%财务%';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "SUM(threshold_value)",
      "FROM",
      "risk_indicators",
      "WHERE",
      "indicator_name",
      "LIKE",
      "'%财务%';"
    ],
    "question_toks": [
      "哪些风险指标的名称包含“财务”，并计算其阈值的总和。"
    ],
    "result_fields": [
      "SUM(threshold_value)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT customer_name, credit_score FROM customers;",
    "question": "查找所有客户的名称和信用评分。",
    "query_toks": [
      "SELECT",
      "customer_name,",
      "credit_score",
      "FROM",
      "customers;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_name,",
      "credit_score",
      "FROM",
      "customers;"
    ],
    "question_toks": [
      "查找所有客户的名称和信用评分。"
    ],
    "result_fields": [
      "customer_name",
      "credit_score"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.customer_name, t.transaction_id, t.transaction_date, t.risk_score FROM customers c JOIN transactions t ON c.customer_id = t.customer_id ORDER BY t.transaction_date DESC;",
    "question": "列出每个客户的最新交易记录及其风险评分。",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "t.transaction_id,",
      "t.transaction_date,",
      "t.risk_score",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "ORDER",
      "BY",
      "t.transaction_date",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "t.transaction_id,",
      "t.transaction_date,",
      "t.risk_score",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "ORDER",
      "BY",
      "t.transaction_date",
      "DESC;"
    ],
    "question_toks": [
      "列出每个客户的最新交易记录及其风险评分。"
    ],
    "result_fields": [
      "c.customer_id",
      "c.customer_name",
      "t.transaction_id",
      "t.transaction_date",
      "t.risk_score"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT log_id, actual_value FROM risk_monitoring_logs WHERE is_exceeding_threshold = TRUE;",
    "question": "获取所有风险监控日志中实际值超过阈值的记录。",
    "query_toks": [
      "SELECT",
      "log_id,",
      "actual_value",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "is_exceeding_threshold",
      "=",
      "TRUE;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "log_id,",
      "actual_value",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "is_exceeding_threshold",
      "=",
      "TRUE;"
    ],
    "question_toks": [
      "获取所有风险监控日志中实际值超过阈值的记录。"
    ],
    "result_fields": [
      "log_id",
      "actual_value"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT t.transaction_id, t.transaction_date, t.amount, t.risk_score, AVG(t.risk_score) OVER () AS avg_risk_score FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE c.risk_level = '高';",
    "question": "找出所有高风险客户的交易记录，并计算其风险评分的平均值。",
    "query_toks": [
      "SELECT",
      "t.transaction_id,",
      "t.transaction_date,",
      "t.amount,",
      "t.risk_score,",
      "AVG(t.risk_score)",
      "OVER",
      "()",
      "AS",
      "avg_risk_score",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.transaction_id,",
      "t.transaction_date,",
      "t.amount,",
      "t.risk_score,",
      "AVG(t.risk_score)",
      "OVER",
      "()",
      "AS",
      "avg_risk_score",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高';"
    ],
    "question_toks": [
      "找出所有高风险客户的交易记录，并计算其风险评分的平均值。"
    ],
    "result_fields": [
      "t.transaction_id",
      "t.transaction_date",
      "t.amount",
      "t.risk_score",
      "AVG(t.risk_score) OVER ()"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT t.transaction_id, t.risk_score FROM transactions t JOIN customers c ON t.customer_id = c.customer_id;",
    "question": "查找所有客户的交易记录及其风险评分。",
    "query_toks": [
      "SELECT",
      "t.transaction_id,",
      "t.risk_score",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.transaction_id,",
      "t.risk_score",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id;"
    ],
    "question_toks": [
      "查找所有客户的交易记录及其风险评分。"
    ],
    "result_fields": [
      "t.transaction_id",
      "t.risk_score"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT report_type, COUNT(*) AS count FROM risk_reports WHERE approval_status = '已拒绝' GROUP BY report_type;",
    "question": "找出所有风险报告的状态为“已拒绝”的记录，并计算其数量和报告类型。",
    "query_toks": [
      "SELECT",
      "report_type,",
      "COUNT(*)",
      "AS",
      "count",
      "FROM",
      "risk_reports",
      "WHERE",
      "approval_status",
      "=",
      "'已拒绝'",
      "GROUP",
      "BY",
      "report_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "report_type,",
      "COUNT(*)",
      "AS",
      "count",
      "FROM",
      "risk_reports",
      "WHERE",
      "approval_status",
      "=",
      "'已拒绝'",
      "GROUP",
      "BY",
      "report_type;"
    ],
    "question_toks": [
      "找出所有风险报告的状态为“已拒绝”的记录，并计算其数量和报告类型。"
    ],
    "result_fields": [
      "report_type",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.customer_name, c.credit_score, c.risk_level FROM customers c WHERE c.risk_level = '高' AND c.credit_score < 600;",
    "question": "哪些客户的风险等级为高，并且他们的信用评分低于600？",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score,",
      "c.risk_level",
      "FROM",
      "customers",
      "c",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "c.credit_score",
      "<",
      "600;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score,",
      "c.risk_level",
      "FROM",
      "customers",
      "c",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "c.credit_score",
      "<",
      "600;"
    ],
    "question_toks": [
      "哪些客户的风险等级为高，并且他们的信用评分低于600？"
    ],
    "result_fields": [
      "c.customer_id",
      "c.customer_name",
      "c.credit_score",
      "c.risk_level"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.risk_level, AVG(t.amount) as avg_transaction_amount, COUNT(t.transaction_id) / COUNT(DISTINCT c.customer_id) as avg_transaction_count FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date >= datetime('now') - INTERVAL '1 year' GROUP BY c.risk_level",
    "question": "统计每个风险等级的客户在过去一年内的平均交易金额和交易次数",
    "query_toks": [
      "SELECT",
      "c.risk_level,",
      "AVG(t.amount)",
      "as",
      "avg_transaction_amount,",
      "COUNT(t.transaction_id)",
      "/",
      "COUNT(DISTINCT",
      "c.customer_id)",
      "as",
      "avg_transaction_count",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "t.transaction_date",
      ">=",
      "datetime('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "GROUP",
      "BY",
      "c.risk_level"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.risk_level,",
      "AVG(t.amount)",
      "as",
      "avg_transaction_amount,",
      "COUNT(t.transaction_id)",
      "/",
      "COUNT(DISTINCT",
      "c.customer_id)",
      "as",
      "avg_transaction_count",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "t.transaction_date",
      ">=",
      "datetime('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "GROUP",
      "BY",
      "c.risk_level"
    ],
    "question_toks": [
      "统计每个风险等级的客户在过去一年内的平均交易金额和交易次数"
    ],
    "result_fields": [
      "c.risk_level",
      "AVG(t.amount)",
      "COUNT(t.transaction_id) / COUNT(DISTINCT c.customer_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rr.* FROM risk_reports rr JOIN risk_events re ON rr.event_id = re.event_id WHERE re.event_type = '流动性风险';",
    "question": "列出所有流动性风险事件的报告。",
    "query_toks": [
      "SELECT",
      "rr.*",
      "FROM",
      "risk_reports",
      "rr",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "re.event_type",
      "=",
      "'流动性风险';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rr.*",
      "FROM",
      "risk_reports",
      "rr",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "re.event_type",
      "=",
      "'流动性风险';"
    ],
    "question_toks": [
      "列出所有流动性风险事件的报告。"
    ],
    "result_fields": [
      "rr.*"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT COUNT(DISTINCT c.customer_id) AS customer_count, SUM(t.amount) AS total_transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.credit_score BETWEEN 600 AND 800;",
    "question": "计算所有客户中，信用评分在600到800之间的客户的数量及其交易总金额。",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "c.customer_id)",
      "AS",
      "customer_count,",
      "SUM(t.amount)",
      "AS",
      "total_transaction_amount",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.credit_score",
      "BETWEEN",
      "600",
      "AND",
      "800;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "c.customer_id)",
      "AS",
      "customer_count,",
      "SUM(t.amount)",
      "AS",
      "total_transaction_amount",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.credit_score",
      "BETWEEN",
      "600",
      "AND",
      "800;"
    ],
    "question_toks": [
      "计算所有客户中，信用评分在600到800之间的客户的数量及其交易总金额。"
    ],
    "result_fields": [
      "COUNT(DISTINCT c.customer_id)",
      "SUM(t.amount)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT report_content FROM risk_reports WHERE approved_by = '王思远' AND report_date >= '2023-03-01' AND report_date < '2023-04-01';",
    "question": "查找所有审批人王思远所批准的风险报告中，报告日期在2023年03月的报告内容。",
    "query_toks": [
      "SELECT",
      "report_content",
      "FROM",
      "risk_reports",
      "WHERE",
      "approved_by",
      "=",
      "'王思远'",
      "AND",
      "report_date",
      ">=",
      "'2023-03-01'",
      "AND",
      "report_date",
      "<",
      "'2023-04-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "report_content",
      "FROM",
      "risk_reports",
      "WHERE",
      "approved_by",
      "=",
      "'王思远'",
      "AND",
      "report_date",
      ">=",
      "'2023-03-01'",
      "AND",
      "report_date",
      "<",
      "'2023-04-01';"
    ],
    "question_toks": [
      "查找所有审批人王思远所批准的风险报告中，报告日期在2023年03月的报告内容。"
    ],
    "result_fields": [
      "report_content"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, rr.report_id, rr.approval_status FROM risk_events re JOIN risk_reports rr ON re.event_id = rr.event_id WHERE re.event_type = '合规风险';",
    "question": "查找所有合规风险事件及其相关报告信息。",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "rr.report_id,",
      "rr.approval_status",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_reports",
      "rr",
      "ON",
      "re.event_id",
      "=",
      "rr.event_id",
      "WHERE",
      "re.event_type",
      "=",
      "'合规风险';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "rr.report_id,",
      "rr.approval_status",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_reports",
      "rr",
      "ON",
      "re.event_id",
      "=",
      "rr.event_id",
      "WHERE",
      "re.event_type",
      "=",
      "'合规风险';"
    ],
    "question_toks": [
      "查找所有合规风险事件及其相关报告信息。"
    ],
    "result_fields": [
      "re.event_id",
      "rr.report_id",
      "rr.approval_status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT * FROM transactions WHERE transaction_date BETWEEN '2023-06-01' AND '2023-06-30';",
    "question": "查找所有客户在2023年6月的交易记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "transactions",
      "WHERE",
      "transaction_date",
      "BETWEEN",
      "'2023-06-01'",
      "AND",
      "'2023-06-30';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "transactions",
      "WHERE",
      "transaction_date",
      "BETWEEN",
      "'2023-06-01'",
      "AND",
      "'2023-06-30';"
    ],
    "question_toks": [
      "查找所有客户在2023年6月的交易记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, re.event_type, re.event_description, al.audit_id, al.audit_type, al.audit_result FROM risk_events re JOIN audit_logs al ON re.event_id = al.event_id WHERE re.severity = 3;",
    "question": "哪些风险事件的严重程度为3，并且有相关的审核记录？",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "re.event_type,",
      "re.event_description,",
      "al.audit_id,",
      "al.audit_type,",
      "al.audit_result",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "audit_logs",
      "al",
      "ON",
      "re.event_id",
      "=",
      "al.event_id",
      "WHERE",
      "re.severity",
      "=",
      "3;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "re.event_type,",
      "re.event_description,",
      "al.audit_id,",
      "al.audit_type,",
      "al.audit_result",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "audit_logs",
      "al",
      "ON",
      "re.event_id",
      "=",
      "al.event_id",
      "WHERE",
      "re.severity",
      "=",
      "3;"
    ],
    "question_toks": [
      "哪些风险事件的严重程度为3，并且有相关的审核记录？"
    ],
    "result_fields": [
      "re.event_id",
      "re.event_type",
      "re.event_description",
      "al.audit_id",
      "al.audit_type",
      "al.audit_result"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ri.indicator_name, ri.threshold_value, rml.actual_value FROM risk_indicators ri JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.actual_value > ri.threshold_value;",
    "question": "查询所有风险指标的阈值及其对应的监控结果，要求监控结果实际值超过阈值。",
    "query_toks": [
      "SELECT",
      "ri.indicator_name,",
      "ri.threshold_value,",
      "rml.actual_value",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "WHERE",
      "rml.actual_value",
      ">",
      "ri.threshold_value;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ri.indicator_name,",
      "ri.threshold_value,",
      "rml.actual_value",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "WHERE",
      "rml.actual_value",
      ">",
      "ri.threshold_value;"
    ],
    "question_toks": [
      "查询所有风险指标的阈值及其对应的监控结果，要求监控结果实际值超过阈值。"
    ],
    "result_fields": [
      "ri.indicator_name",
      "ri.threshold_value",
      "rml.actual_value"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.customer_name, c.credit_score, t.status FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id;",
    "question": "获取所有客户的风险评分及其交易状态。",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id;"
    ],
    "question_toks": [
      "获取所有客户的风险评分及其交易状态。"
    ],
    "result_fields": [
      "c.customer_id",
      "c.customer_name",
      "c.credit_score",
      "t.status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, re.event_description, a.alert_level, a.alert_content FROM risk_events re JOIN alerts a ON re.event_id = a.event_id WHERE a.alert_level = '高';",
    "question": "列出所有风险事件及其对应的预警信息，要求预警级别为高。",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "a.alert_level,",
      "a.alert_content",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "re.event_id",
      "=",
      "a.event_id",
      "WHERE",
      "a.alert_level",
      "=",
      "'高';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "a.alert_level,",
      "a.alert_content",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "re.event_id",
      "=",
      "a.event_id",
      "WHERE",
      "a.alert_level",
      "=",
      "'高';"
    ],
    "question_toks": [
      "列出所有风险事件及其对应的预警信息，要求预警级别为高。"
    ],
    "result_fields": [
      "re.event_id",
      "re.event_description",
      "a.alert_level",
      "a.alert_content"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, re.event_description, a.alert_id, a.alert_time FROM risk_events re JOIN alerts a ON re.event_id = a.event_id ORDER BY a.alert_time;",
    "question": "查找所有风险事件及其对应的预警信息，按预警时间排序。",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "a.alert_id,",
      "a.alert_time",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "re.event_id",
      "=",
      "a.event_id",
      "ORDER",
      "BY",
      "a.alert_time;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "a.alert_id,",
      "a.alert_time",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "re.event_id",
      "=",
      "a.event_id",
      "ORDER",
      "BY",
      "a.alert_time;"
    ],
    "question_toks": [
      "查找所有风险事件及其对应的预警信息，按预警时间排序。"
    ],
    "result_fields": [
      "re.event_id",
      "re.event_description",
      "a.alert_id",
      "a.alert_time"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.risk_level, AVG(t.amount) as avg_transaction_amount, COUNT(t.transaction_id) / COUNT(DISTINCT c.customer_id) as avg_transaction_count FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id AND t.transaction_date >= date('now') - INTERVAL '90 days' GROUP BY c.risk_level",
    "question": "计算每个风险等级（低/中/高）的客户在过去90天内的平均交易金额和交易次数",
    "query_toks": [
      "SELECT",
      "c.risk_level,",
      "AVG(t.amount)",
      "as",
      "avg_transaction_amount,",
      "COUNT(t.transaction_id)",
      "/",
      "COUNT(DISTINCT",
      "c.customer_id)",
      "as",
      "avg_transaction_count",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "AND",
      "t.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'90",
      "days'",
      "GROUP",
      "BY",
      "c.risk_level"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.risk_level,",
      "AVG(t.amount)",
      "as",
      "avg_transaction_amount,",
      "COUNT(t.transaction_id)",
      "/",
      "COUNT(DISTINCT",
      "c.customer_id)",
      "as",
      "avg_transaction_count",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "AND",
      "t.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'90",
      "days'",
      "GROUP",
      "BY",
      "c.risk_level"
    ],
    "question_toks": [
      "计算每个风险等级（低/中/高）的客户在过去90天内的平均交易金额和交易次数"
    ],
    "result_fields": [
      "c.risk_level",
      "AVG(t.amount)",
      "COUNT(t.transaction_id) / COUNT(DISTINCT c.customer_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.customer_name, c.credit_score FROM customers c WHERE c.risk_level = '高' AND c.credit_score < 700;",
    "question": "哪些客户的风险等级为高，并且其信用评分低于700分？",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score",
      "FROM",
      "customers",
      "c",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "c.credit_score",
      "<",
      "700;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score",
      "FROM",
      "customers",
      "c",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "c.credit_score",
      "<",
      "700;"
    ],
    "question_toks": [
      "哪些客户的风险等级为高，并且其信用评分低于700分？"
    ],
    "result_fields": [
      "c.customer_id",
      "c.customer_name",
      "c.credit_score"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.credit_score, t.transaction_id, t.status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.status = '失败';",
    "question": "列出所有客户的信用评分及其最近的交易信息，要求交易状态为失败。",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.credit_score,",
      "t.transaction_id,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "t.status",
      "=",
      "'失败';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.credit_score,",
      "t.transaction_id,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "t.status",
      "=",
      "'失败';"
    ],
    "question_toks": [
      "列出所有客户的信用评分及其最近的交易信息，要求交易状态为失败。"
    ],
    "result_fields": [
      "c.customer_id",
      "c.credit_score",
      "t.transaction_id",
      "t.status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ra.assessment_id, ra.event_id, c.customer_id, c.customer_name, c.credit_score FROM risk_assessments ra JOIN risk_events re ON ra.event_id = re.event_id JOIN transactions t ON re.event_id = t.event_id JOIN customers c ON t.customer_id = c.customer_id WHERE ra.risk_level = '高' AND c.credit_score > 700",
    "question": "列出所有风险评估结果为高风险，但相关客户信用评分高于700的情况",
    "query_toks": [
      "SELECT",
      "ra.assessment_id,",
      "ra.event_id,",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score",
      "FROM",
      "risk_assessments",
      "ra",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "ra.event_id",
      "=",
      "re.event_id",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "re.event_id",
      "=",
      "t.event_id",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "ra.risk_level",
      "=",
      "'高'",
      "AND",
      "c.credit_score",
      ">",
      "700"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ra.assessment_id,",
      "ra.event_id,",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score",
      "FROM",
      "risk_assessments",
      "ra",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "ra.event_id",
      "=",
      "re.event_id",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "re.event_id",
      "=",
      "t.event_id",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "ra.risk_level",
      "=",
      "'高'",
      "AND",
      "c.credit_score",
      ">",
      "700"
    ],
    "question_toks": [
      "列出所有风险评估结果为高风险，但相关客户信用评分高于700的情况"
    ],
    "result_fields": [
      "ra.assessment_id",
      "ra.event_id",
      "c.customer_id",
      "c.customer_name",
      "c.credit_score"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT * FROM customers WHERE customer_type = '企业' ORDER BY credit_score DESC LIMIT 10",
    "question": "查找所有企业客户中，信用评分前10名的客户信息",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "customers",
      "WHERE",
      "customer_type",
      "=",
      "'企业'",
      "ORDER",
      "BY",
      "credit_score",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "customers",
      "WHERE",
      "customer_type",
      "=",
      "'企业'",
      "ORDER",
      "BY",
      "credit_score",
      "DESC",
      "LIMIT",
      "10"
    ],
    "question_toks": [
      "查找所有企业客户中，信用评分前10名的客户信息"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT DATE_TRUNC('month', created_at) as month, COUNT(*) as new_rules, AVG(SUM(CASE WHEN is_active THEN 1 ELSE 0 END)) OVER (ORDER BY DATE_TRUNC('month', created_at) ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as avg_active_rules FROM rule_configurations GROUP BY DATE_TRUNC('month', created_at) ORDER BY month",
    "question": "统计每个月新增的风险控制规则数量和平均活跃规则数",
    "query_toks": [
      "SELECT",
      "DATE_TRUNC('month',",
      "created_at)",
      "as",
      "month,",
      "COUNT(*)",
      "as",
      "new_rules,",
      "AVG(SUM(CASE",
      "WHEN",
      "is_active",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END))",
      "OVER",
      "(ORDER",
      "BY",
      "DATE_TRUNC('month',",
      "created_at)",
      "ROWS",
      "BETWEEN",
      "UNBOUNDED",
      "PRECEDING",
      "AND",
      "CURRENT",
      "ROW)",
      "as",
      "avg_active_rules",
      "FROM",
      "rule_configurations",
      "GROUP",
      "BY",
      "DATE_TRUNC('month',",
      "created_at)",
      "ORDER",
      "BY",
      "month"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DATE_TRUNC('month',",
      "created_at)",
      "as",
      "month,",
      "COUNT(*)",
      "as",
      "new_rules,",
      "AVG(SUM(CASE",
      "WHEN",
      "is_active",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END))",
      "OVER",
      "(ORDER",
      "BY",
      "DATE_TRUNC('month',",
      "created_at)",
      "ROWS",
      "BETWEEN",
      "UNBOUNDED",
      "PRECEDING",
      "AND",
      "CURRENT",
      "ROW)",
      "as",
      "avg_active_rules",
      "FROM",
      "rule_configurations",
      "GROUP",
      "BY",
      "DATE_TRUNC('month',",
      "created_at)",
      "ORDER",
      "BY",
      "month"
    ],
    "question_toks": [
      "统计每个月新增的风险控制规则数量和平均活跃规则数"
    ],
    "result_fields": [
      "DATE_TRUNC('month', created_at)",
      "COUNT(*)",
      "AVG(SUM(CASE WHEN is_active THEN 1 ELSE 0 END)) OVER (ORDER BY DATE_TRUNC('month', created_at) ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rr.author, rr.approval_status FROM risk_reports rr WHERE rr.approval_status = '已批准';",
    "question": "查询所有风险报告的作者及其对应的审批状态，筛选出已批准的报告。",
    "query_toks": [
      "SELECT",
      "rr.author,",
      "rr.approval_status",
      "FROM",
      "risk_reports",
      "rr",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已批准';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rr.author,",
      "rr.approval_status",
      "FROM",
      "risk_reports",
      "rr",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已批准';"
    ],
    "question_toks": [
      "查询所有风险报告的作者及其对应的审批状态，筛选出已批准的报告。"
    ],
    "result_fields": [
      "rr.author",
      "rr.approval_status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_name, t.amount, t.status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id;",
    "question": "列出所有客户的交易情况，包括金额和状态。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "t.amount,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "t.amount,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id;"
    ],
    "question_toks": [
      "列出所有客户的交易情况，包括金额和状态。"
    ],
    "result_fields": [
      "c.customer_name",
      "t.amount",
      "t.status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, ra.assessment_id, ra.risk_level FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id;",
    "question": "获取所有风险事件及其评估结果",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "ra.assessment_id,",
      "ra.risk_level",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "ra.assessment_id,",
      "ra.risk_level",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id;"
    ],
    "question_toks": [
      "获取所有风险事件及其评估结果"
    ],
    "result_fields": [
      "re.event_id",
      "ra.assessment_id",
      "ra.risk_level"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ri.indicator_id, ri.indicator_name, ri.threshold_value, AVG(rml.actual_value) as avg_actual_value FROM risk_indicators ri LEFT JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id GROUP BY ri.indicator_id, ri.indicator_name, ri.threshold_value",
    "question": "计算每个风险指标的平均实际值，并与其阈值进行比较",
    "query_toks": [
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.threshold_value,",
      "AVG(rml.actual_value)",
      "as",
      "avg_actual_value",
      "FROM",
      "risk_indicators",
      "ri",
      "LEFT",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "GROUP",
      "BY",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.threshold_value"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.threshold_value,",
      "AVG(rml.actual_value)",
      "as",
      "avg_actual_value",
      "FROM",
      "risk_indicators",
      "ri",
      "LEFT",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "GROUP",
      "BY",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.threshold_value"
    ],
    "question_toks": [
      "计算每个风险指标的平均实际值，并与其阈值进行比较"
    ],
    "result_fields": [
      "ri.indicator_id",
      "ri.indicator_name",
      "ri.threshold_value",
      "AVG(rml.actual_value)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rr.report_id, rr.report_type, rr.report_content, re.event_type, re.event_description FROM risk_reports rr JOIN risk_events re ON rr.event_id = re.event_id WHERE rr.approval_status = '已批准'",
    "question": "找出所有已批准的风险报告及其相关的风险事件信息",
    "query_toks": [
      "SELECT",
      "rr.report_id,",
      "rr.report_type,",
      "rr.report_content,",
      "re.event_type,",
      "re.event_description",
      "FROM",
      "risk_reports",
      "rr",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已批准'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rr.report_id,",
      "rr.report_type,",
      "rr.report_content,",
      "re.event_type,",
      "re.event_description",
      "FROM",
      "risk_reports",
      "rr",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已批准'"
    ],
    "question_toks": [
      "找出所有已批准的风险报告及其相关的风险事件信息"
    ],
    "result_fields": [
      "rr.report_id",
      "rr.report_type",
      "rr.report_content",
      "re.event_type",
      "re.event_description"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT DISTINCT c.customer_id, c.customer_name, t.transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id JOIN alerts a ON t.event_id = a.event_id WHERE t.risk_score > 80 AND a.alert_level = '高' AND DATE(t.transaction_date) = DATE(a.alert_time)",
    "question": "找出所有在同一天既有高风险交易又有高级别预警的客户",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "c.customer_id,",
      "c.customer_name,",
      "t.transaction_date",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "t.event_id",
      "=",
      "a.event_id",
      "WHERE",
      "t.risk_score",
      ">",
      "80",
      "AND",
      "a.alert_level",
      "=",
      "'高'",
      "AND",
      "DATE(t.transaction_date)",
      "=",
      "DATE(a.alert_time)"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "c.customer_id,",
      "c.customer_name,",
      "t.transaction_date",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "t.event_id",
      "=",
      "a.event_id",
      "WHERE",
      "t.risk_score",
      ">",
      "80",
      "AND",
      "a.alert_level",
      "=",
      "'高'",
      "AND",
      "DATE(t.transaction_date)",
      "=",
      "DATE(a.alert_time)"
    ],
    "question_toks": [
      "找出所有在同一天既有高风险交易又有高级别预警的客户"
    ],
    "result_fields": [
      "DISTINCT c.customer_id",
      "c.customer_name",
      "t.transaction_date"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT t.transaction_id, c.customer_name FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.risk_score > 15;",
    "question": "查询所有高风险的交易及其对应的客户信息。",
    "query_toks": [
      "SELECT",
      "t.transaction_id,",
      "c.customer_name",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "t.risk_score",
      ">",
      "15;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.transaction_id,",
      "c.customer_name",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "t.risk_score",
      ">",
      "15;"
    ],
    "question_toks": [
      "查询所有高风险的交易及其对应的客户信息。"
    ],
    "result_fields": [
      "t.transaction_id",
      "c.customer_name"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_description, ra.assessment_date FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE ra.risk_level = '高'",
    "question": "列出所有风险评估结果为'高'的事件，包括事件描述和评估日期",
    "query_toks": [
      "SELECT",
      "re.event_description,",
      "ra.assessment_date",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "WHERE",
      "ra.risk_level",
      "=",
      "'高'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_description,",
      "ra.assessment_date",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "WHERE",
      "ra.risk_level",
      "=",
      "'高'"
    ],
    "question_toks": [
      "列出所有风险评估结果为'高'的事件，包括事件描述和评估日期"
    ],
    "result_fields": [
      "re.event_description",
      "ra.assessment_date"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_name, t.status FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = '高' AND t.status = '失败';",
    "question": "哪些高风险客户在最近一次交易中出现了失败状态？",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "t.status",
      "=",
      "'失败';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "t.status",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "t.status",
      "=",
      "'失败';"
    ],
    "question_toks": [
      "哪些高风险客户在最近一次交易中出现了失败状态？"
    ],
    "result_fields": [
      "c.customer_name",
      "t.status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, COUNT(t.transaction_id) AS transaction_count FROM risk_events re LEFT JOIN transactions t ON re.event_id = t.event_id GROUP BY re.event_id;",
    "question": "查找每个风险事件的交易记录数量。",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "COUNT(t.transaction_id)",
      "AS",
      "transaction_count",
      "FROM",
      "risk_events",
      "re",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "re.event_id",
      "=",
      "t.event_id",
      "GROUP",
      "BY",
      "re.event_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "COUNT(t.transaction_id)",
      "AS",
      "transaction_count",
      "FROM",
      "risk_events",
      "re",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "re.event_id",
      "=",
      "t.event_id",
      "GROUP",
      "BY",
      "re.event_id;"
    ],
    "question_toks": [
      "查找每个风险事件的交易记录数量。"
    ],
    "result_fields": [
      "re.event_id",
      "COUNT(t.transaction_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT t.transaction_id, t.amount, t.transaction_date, c.customer_name, c.risk_level FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE c.risk_level = '高' AND t.amount > 500000 AND t.transaction_date BETWEEN '2023-01-01' AND '2023-03-31' ORDER BY t.amount DESC",
    "question": "查询2023年1月至3月期间，高风险客户发生的交易金额超过50万元的交易记录及相关客户信息",
    "query_toks": [
      "SELECT",
      "t.transaction_id,",
      "t.amount,",
      "t.transaction_date,",
      "c.customer_name,",
      "c.risk_level",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "t.amount",
      ">",
      "500000",
      "AND",
      "t.transaction_date",
      "BETWEEN",
      "'2023-01-01'",
      "AND",
      "'2023-03-31'",
      "ORDER",
      "BY",
      "t.amount",
      "DESC"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.transaction_id,",
      "t.amount,",
      "t.transaction_date,",
      "c.customer_name,",
      "c.risk_level",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "t.amount",
      ">",
      "500000",
      "AND",
      "t.transaction_date",
      "BETWEEN",
      "'2023-01-01'",
      "AND",
      "'2023-03-31'",
      "ORDER",
      "BY",
      "t.amount",
      "DESC"
    ],
    "question_toks": [
      "查询2023年1月至3月期间，高风险客户发生的交易金额超过50万元的交易记录及相关客户信息"
    ],
    "result_fields": [
      "t.transaction_id",
      "t.amount",
      "t.transaction_date",
      "c.customer_name",
      "c.risk_level"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, re.event_description, re.severity, ra.risk_level, ra.mitigation_plan FROM risk_events re LEFT JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE EXTRACT(YEAR FROM re.occurrence_time) = 2023 AND re.severity IN (4, 5) ORDER BY re.severity DESC, re.occurrence_time",
    "question": "查询2023年发生的所有高严重程度（severity为4或5）的风险事件及其相关的风险评估信息，包括事件描述、严重程度、风险等级和缓解计划。",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "re.severity,",
      "ra.risk_level,",
      "ra.mitigation_plan",
      "FROM",
      "risk_events",
      "re",
      "LEFT",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "re.occurrence_time)",
      "=",
      "2023",
      "AND",
      "re.severity",
      "IN",
      "(4,",
      "5)",
      "ORDER",
      "BY",
      "re.severity",
      "DESC,",
      "re.occurrence_time"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "re.severity,",
      "ra.risk_level,",
      "ra.mitigation_plan",
      "FROM",
      "risk_events",
      "re",
      "LEFT",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "re.occurrence_time)",
      "=",
      "2023",
      "AND",
      "re.severity",
      "IN",
      "(4,",
      "5)",
      "ORDER",
      "BY",
      "re.severity",
      "DESC,",
      "re.occurrence_time"
    ],
    "question_toks": [
      "查询2023年发生的所有高严重程度（severity为4或5）的风险事件及其相关的风险评估信息，包括事件描述、严重程度、风险等级和缓解计划。"
    ],
    "result_fields": [
      "re.event_id",
      "re.event_description",
      "re.severity",
      "ra.risk_level",
      "ra.mitigation_plan"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ml.log_id, ml.notes FROM risk_monitoring_logs ml WHERE ml.is_exceeding_threshold = FALSE;",
    "question": "获取所有风险监控日志中未超过阈值的记录",
    "query_toks": [
      "SELECT",
      "ml.log_id,",
      "ml.notes",
      "FROM",
      "risk_monitoring_logs",
      "ml",
      "WHERE",
      "ml.is_exceeding_threshold",
      "=",
      "FALSE;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ml.log_id,",
      "ml.notes",
      "FROM",
      "risk_monitoring_logs",
      "ml",
      "WHERE",
      "ml.is_exceeding_threshold",
      "=",
      "FALSE;"
    ],
    "question_toks": [
      "获取所有风险监控日志中未超过阈值的记录"
    ],
    "result_fields": [
      "ml.log_id",
      "ml.notes"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT r.report_id, r.report_type, r.author, e.event_type, e.severity, al.audit_result, al.audit_comments FROM risk_reports r JOIN risk_events e ON r.event_id = e.event_id LEFT JOIN (SELECT event_id, audit_result, audit_comments, ROW_NUMBER() OVER (PARTITION BY event_id ORDER BY audit_time DESC) as rn FROM audit_logs) al ON e.event_id = al.event_id AND al.rn = 1 WHERE r.approval_status = '待审批' ORDER BY e.severity DESC, r.report_date DESC;",
    "question": "查询所有待审批状态的风险报告，包括报告作者、相关风险事件信息和最近的审核记录。",
    "query_toks": [
      "SELECT",
      "r.report_id,",
      "r.report_type,",
      "r.author,",
      "e.event_type,",
      "e.severity,",
      "al.audit_result,",
      "al.audit_comments",
      "FROM",
      "risk_reports",
      "r",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "r.event_id",
      "=",
      "e.event_id",
      "LEFT",
      "JOIN",
      "(SELECT",
      "event_id,",
      "audit_result,",
      "audit_comments,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "event_id",
      "ORDER",
      "BY",
      "audit_time",
      "DESC)",
      "as",
      "rn",
      "FROM",
      "audit_logs)",
      "al",
      "ON",
      "e.event_id",
      "=",
      "al.event_id",
      "AND",
      "al.rn",
      "=",
      "1",
      "WHERE",
      "r.approval_status",
      "=",
      "'待审批'",
      "ORDER",
      "BY",
      "e.severity",
      "DESC,",
      "r.report_date",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.report_id,",
      "r.report_type,",
      "r.author,",
      "e.event_type,",
      "e.severity,",
      "al.audit_result,",
      "al.audit_comments",
      "FROM",
      "risk_reports",
      "r",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "r.event_id",
      "=",
      "e.event_id",
      "LEFT",
      "JOIN",
      "(SELECT",
      "event_id,",
      "audit_result,",
      "audit_comments,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "event_id",
      "ORDER",
      "BY",
      "audit_time",
      "DESC)",
      "as",
      "rn",
      "FROM",
      "audit_logs)",
      "al",
      "ON",
      "e.event_id",
      "=",
      "al.event_id",
      "AND",
      "al.rn",
      "=",
      "1",
      "WHERE",
      "r.approval_status",
      "=",
      "'待审批'",
      "ORDER",
      "BY",
      "e.severity",
      "DESC,",
      "r.report_date",
      "DESC;"
    ],
    "question_toks": [
      "查询所有待审批状态的风险报告，包括报告作者、相关风险事件信息和最近的审核记录。"
    ],
    "result_fields": [
      "r.report_id",
      "r.report_type",
      "r.author",
      "e.event_type",
      "e.severity",
      "al.audit_result",
      "al.audit_comments"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.customer_name, c.credit_score, c.risk_level FROM customers c WHERE c.registration_date >= '2021-01-01' AND c.registration_date < '2022-01-01' AND c.risk_level = '高' AND c.credit_score < 550;",
    "question": "哪些客户在2021年注册并且风险等级为高，同时他们的信用评分低于550？",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score,",
      "c.risk_level",
      "FROM",
      "customers",
      "c",
      "WHERE",
      "c.registration_date",
      ">=",
      "'2021-01-01'",
      "AND",
      "c.registration_date",
      "<",
      "'2022-01-01'",
      "AND",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "c.credit_score",
      "<",
      "550;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score,",
      "c.risk_level",
      "FROM",
      "customers",
      "c",
      "WHERE",
      "c.registration_date",
      ">=",
      "'2021-01-01'",
      "AND",
      "c.registration_date",
      "<",
      "'2022-01-01'",
      "AND",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "c.credit_score",
      "<",
      "550;"
    ],
    "question_toks": [
      "哪些客户在2021年注册并且风险等级为高，同时他们的信用评分低于550？"
    ],
    "result_fields": [
      "c.customer_id",
      "c.customer_name",
      "c.credit_score",
      "c.risk_level"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.customer_name, t.transaction_id, t.amount, t.transaction_date, CASE WHEN al.alert_id IS NOT NULL THEN 'Yes' ELSE 'No' END as triggered_alert FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id LEFT JOIN alerts al ON t.transaction_id = al.event_id WHERE t.transaction_date = (SELECT MAX(transaction_date) FROM transactions WHERE customer_id = c.customer_id)",
    "question": "列出所有客户的最近一次交易信息，以及该交易是否触发了任何预警。",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "t.transaction_id,",
      "t.amount,",
      "t.transaction_date,",
      "CASE",
      "WHEN",
      "al.alert_id",
      "IS",
      "NOT",
      "NULL",
      "THEN",
      "'Yes'",
      "ELSE",
      "'No'",
      "END",
      "as",
      "triggered_alert",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "LEFT",
      "JOIN",
      "alerts",
      "al",
      "ON",
      "t.transaction_id",
      "=",
      "al.event_id",
      "WHERE",
      "t.transaction_date",
      "=",
      "(SELECT",
      "MAX(transaction_date)",
      "FROM",
      "transactions",
      "WHERE",
      "customer_id",
      "=",
      "c.customer_id)"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "t.transaction_id,",
      "t.amount,",
      "t.transaction_date,",
      "CASE",
      "WHEN",
      "al.alert_id",
      "IS",
      "NOT",
      "NULL",
      "THEN",
      "'Yes'",
      "ELSE",
      "'No'",
      "END",
      "as",
      "triggered_alert",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "LEFT",
      "JOIN",
      "alerts",
      "al",
      "ON",
      "t.transaction_id",
      "=",
      "al.event_id",
      "WHERE",
      "t.transaction_date",
      "=",
      "(SELECT",
      "MAX(transaction_date)",
      "FROM",
      "transactions",
      "WHERE",
      "customer_id",
      "=",
      "c.customer_id)"
    ],
    "question_toks": [
      "列出所有客户的最近一次交易信息，以及该交易是否触发了任何预警。"
    ],
    "result_fields": [
      "c.customer_id",
      "c.customer_name",
      "t.transaction_id",
      "t.amount",
      "t.transaction_date",
      "CASE WHEN al.alert_id IS NOT NULL THEN 'Yes' ELSE 'No' END"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_type, COUNT(re.event_id) AS event_count FROM risk_events re GROUP BY re.event_type;",
    "question": "获取每种风险类型的数量统计，显示风险事件及其数量。",
    "query_toks": [
      "SELECT",
      "re.event_type,",
      "COUNT(re.event_id)",
      "AS",
      "event_count",
      "FROM",
      "risk_events",
      "re",
      "GROUP",
      "BY",
      "re.event_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_type,",
      "COUNT(re.event_id)",
      "AS",
      "event_count",
      "FROM",
      "risk_events",
      "re",
      "GROUP",
      "BY",
      "re.event_type;"
    ],
    "question_toks": [
      "获取每种风险类型的数量统计，显示风险事件及其数量。"
    ],
    "result_fields": [
      "re.event_type",
      "COUNT(re.event_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_name, rc.rule_name, COUNT(*) AS trigger_count FROM customers c JOIN transactions t ON c.customer_id = t.customer_id JOIN alerts a ON t.event_id = a.event_id JOIN rule_configurations rc ON a.rule_id = rc.rule_id WHERE c.risk_level = '高' GROUP BY c.customer_id, c.customer_name, rc.rule_id, rc.rule_name ORDER BY trigger_count DESC, c.customer_name",
    "question": "查询所有高风险客户（风险等级为'高'）的风险控制规则触发情况，包括客户名称、触发的规则名称和触发次数。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "rc.rule_name,",
      "COUNT(*)",
      "AS",
      "trigger_count",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "t.event_id",
      "=",
      "a.event_id",
      "JOIN",
      "rule_configurations",
      "rc",
      "ON",
      "a.rule_id",
      "=",
      "rc.rule_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "GROUP",
      "BY",
      "c.customer_id,",
      "c.customer_name,",
      "rc.rule_id,",
      "rc.rule_name",
      "ORDER",
      "BY",
      "trigger_count",
      "DESC,",
      "c.customer_name"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "rc.rule_name,",
      "COUNT(*)",
      "AS",
      "trigger_count",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "t.event_id",
      "=",
      "a.event_id",
      "JOIN",
      "rule_configurations",
      "rc",
      "ON",
      "a.rule_id",
      "=",
      "rc.rule_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "GROUP",
      "BY",
      "c.customer_id,",
      "c.customer_name,",
      "rc.rule_id,",
      "rc.rule_name",
      "ORDER",
      "BY",
      "trigger_count",
      "DESC,",
      "c.customer_name"
    ],
    "question_toks": [
      "查询所有高风险客户（风险等级为'高'）的风险控制规则触发情况，包括客户名称、触发的规则名称和触发次数。"
    ],
    "result_fields": [
      "c.customer_name",
      "rc.rule_name",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT DATE_TRUNC('month', re.occurrence_time) as month, re.event_type, COUNT(*) as event_count, AVG(re.severity) as avg_severity, SUM(CASE WHEN re.status = '已解决' THEN 1 ELSE 0 END) / COUNT(*) as resolution_rate FROM risk_events re GROUP BY DATE_TRUNC('month', re.occurrence_time), re.event_type ORDER BY month, re.event_type",
    "question": "统计每个风险事件类型在不同月份的事件数量、平均严重程度和解决率",
    "query_toks": [
      "SELECT",
      "DATE_TRUNC('month',",
      "re.occurrence_time)",
      "as",
      "month,",
      "re.event_type,",
      "COUNT(*)",
      "as",
      "event_count,",
      "AVG(re.severity)",
      "as",
      "avg_severity,",
      "SUM(CASE",
      "WHEN",
      "re.status",
      "=",
      "'已解决'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "resolution_rate",
      "FROM",
      "risk_events",
      "re",
      "GROUP",
      "BY",
      "DATE_TRUNC('month',",
      "re.occurrence_time),",
      "re.event_type",
      "ORDER",
      "BY",
      "month,",
      "re.event_type"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DATE_TRUNC('month',",
      "re.occurrence_time)",
      "as",
      "month,",
      "re.event_type,",
      "COUNT(*)",
      "as",
      "event_count,",
      "AVG(re.severity)",
      "as",
      "avg_severity,",
      "SUM(CASE",
      "WHEN",
      "re.status",
      "=",
      "'已解决'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "/",
      "COUNT(*)",
      "as",
      "resolution_rate",
      "FROM",
      "risk_events",
      "re",
      "GROUP",
      "BY",
      "DATE_TRUNC('month',",
      "re.occurrence_time),",
      "re.event_type",
      "ORDER",
      "BY",
      "month,",
      "re.event_type"
    ],
    "question_toks": [
      "统计每个风险事件类型在不同月份的事件数量、平均严重程度和解决率"
    ],
    "result_fields": [
      "DATE_TRUNC('month', re.occurrence_time)",
      "re.event_type",
      "COUNT(*)",
      "AVG(re.severity)",
      "SUM(CASE WHEN re.status = '已解决' THEN 1 ELSE 0 END) / COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ml.monitoring_date, ml.actual_value, ri.threshold_value FROM risk_monitoring_logs ml JOIN risk_indicators ri ON ml.indicator_id = ri.indicator_id;",
    "question": "请查询所有监控记录，显示实际值和阈值对比。",
    "query_toks": [
      "SELECT",
      "ml.monitoring_date,",
      "ml.actual_value,",
      "ri.threshold_value",
      "FROM",
      "risk_monitoring_logs",
      "ml",
      "JOIN",
      "risk_indicators",
      "ri",
      "ON",
      "ml.indicator_id",
      "=",
      "ri.indicator_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ml.monitoring_date,",
      "ml.actual_value,",
      "ri.threshold_value",
      "FROM",
      "risk_monitoring_logs",
      "ml",
      "JOIN",
      "risk_indicators",
      "ri",
      "ON",
      "ml.indicator_id",
      "=",
      "ri.indicator_id;"
    ],
    "question_toks": [
      "请查询所有监控记录，显示实际值和阈值对比。"
    ],
    "result_fields": [
      "ml.monitoring_date",
      "ml.actual_value",
      "ri.threshold_value"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.risk_level, t.transaction_type, AVG(t.amount) AS avg_transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.risk_level, t.transaction_type ORDER BY c.risk_level, avg_transaction_amount DESC",
    "question": "统计每个风险等级的客户在不同交易类型上的平均交易金额",
    "query_toks": [
      "SELECT",
      "c.risk_level,",
      "t.transaction_type,",
      "AVG(t.amount)",
      "AS",
      "avg_transaction_amount",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "GROUP",
      "BY",
      "c.risk_level,",
      "t.transaction_type",
      "ORDER",
      "BY",
      "c.risk_level,",
      "avg_transaction_amount",
      "DESC"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.risk_level,",
      "t.transaction_type,",
      "AVG(t.amount)",
      "AS",
      "avg_transaction_amount",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "GROUP",
      "BY",
      "c.risk_level,",
      "t.transaction_type",
      "ORDER",
      "BY",
      "c.risk_level,",
      "avg_transaction_amount",
      "DESC"
    ],
    "question_toks": [
      "统计每个风险等级的客户在不同交易类型上的平均交易金额"
    ],
    "result_fields": [
      "c.risk_level",
      "t.transaction_type",
      "AVG(t.amount)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT COUNT(*) FROM rule_configurations WHERE is_active = true",
    "question": "当前有多少条激活状态的规则配置？",
    "query_toks": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "rule_configurations",
      "WHERE",
      "is_active",
      "=",
      "true"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "rule_configurations",
      "WHERE",
      "is_active",
      "=",
      "true"
    ],
    "question_toks": [
      "当前有多少条激活状态的规则配置？"
    ],
    "result_fields": [
      "COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT customer_id, customer_name, risk_level, credit_score FROM customers;",
    "question": "获取所有客户的风险等级和信用评分。",
    "query_toks": [
      "SELECT",
      "customer_id,",
      "customer_name,",
      "risk_level,",
      "credit_score",
      "FROM",
      "customers;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_id,",
      "customer_name,",
      "risk_level,",
      "credit_score",
      "FROM",
      "customers;"
    ],
    "question_toks": [
      "获取所有客户的风险等级和信用评分。"
    ],
    "result_fields": [
      "customer_id",
      "customer_name",
      "risk_level",
      "credit_score"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT COUNT(*), AVG(update_frequencyerval) FROM risk_indicators WHERE threshold_value > 100;",
    "question": "请找出所有风险指标的阈值大于100的记录，并计算其数量和平均更新频率。",
    "query_toks": [
      "SELECT",
      "COUNT(*),",
      "AVG(update_frequencyerval)",
      "FROM",
      "risk_indicators",
      "WHERE",
      "threshold_value",
      ">",
      "100;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*),",
      "AVG(update_frequencyerval)",
      "FROM",
      "risk_indicators",
      "WHERE",
      "threshold_value",
      ">",
      "100;"
    ],
    "question_toks": [
      "请找出所有风险指标的阈值大于100的记录，并计算其数量和平均更新频率。"
    ],
    "result_fields": [
      "COUNT(*)",
      "AVG(update_frequencyerval)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT customer_name, registration_date FROM customers;",
    "question": "查询所有客户的名称和注册日期。",
    "query_toks": [
      "SELECT",
      "customer_name,",
      "registration_date",
      "FROM",
      "customers;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_name,",
      "registration_date",
      "FROM",
      "customers;"
    ],
    "question_toks": [
      "查询所有客户的名称和注册日期。"
    ],
    "result_fields": [
      "customer_name",
      "registration_date"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ri.indicator_id, ri.indicator_name, ml.log_id, ml.actual_value, ml.is_exceeding_threshold FROM risk_indicators ri JOIN risk_monitoring_logs ml ON ri.indicator_id = ml.indicator_id;",
    "question": "获取所有风险指标的监控日志，包括实际值和是否超过阈值的信息。",
    "query_toks": [
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ml.log_id,",
      "ml.actual_value,",
      "ml.is_exceeding_threshold",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "ml",
      "ON",
      "ri.indicator_id",
      "=",
      "ml.indicator_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ml.log_id,",
      "ml.actual_value,",
      "ml.is_exceeding_threshold",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "ml",
      "ON",
      "ri.indicator_id",
      "=",
      "ml.indicator_id;"
    ],
    "question_toks": [
      "获取所有风险指标的监控日志，包括实际值和是否超过阈值的信息。"
    ],
    "result_fields": [
      "ri.indicator_id",
      "ri.indicator_name",
      "ml.log_id",
      "ml.actual_value",
      "ml.is_exceeding_threshold"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ri.indicator_id, ri.indicator_name, ri.data_source, AVG(rml.actual_value) AS avg_value, STDDEV(rml.actual_value) AS stddev_value FROM risk_indicators ri JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id GROUP BY ri.indicator_id, ri.indicator_name, ri.data_source",
    "question": "统计每个风险指标在不同数据来源下的平均值和标准差",
    "query_toks": [
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.data_source,",
      "AVG(rml.actual_value)",
      "AS",
      "avg_value,",
      "STDDEV(rml.actual_value)",
      "AS",
      "stddev_value",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "GROUP",
      "BY",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.data_source"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.data_source,",
      "AVG(rml.actual_value)",
      "AS",
      "avg_value,",
      "STDDEV(rml.actual_value)",
      "AS",
      "stddev_value",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "GROUP",
      "BY",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.data_source"
    ],
    "question_toks": [
      "统计每个风险指标在不同数据来源下的平均值和标准差"
    ],
    "result_fields": [
      "ri.indicator_id",
      "ri.indicator_name",
      "ri.data_source",
      "AVG(rml.actual_value)",
      "STDDEV(rml.actual_value)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT al.audit_id, al.audit_result, al.auditor FROM audit_logs al WHERE al.audit_result = '拒绝';",
    "question": "获取所有审核结果为拒绝的审核记录及其对应的审核人。",
    "query_toks": [
      "SELECT",
      "al.audit_id,",
      "al.audit_result,",
      "al.auditor",
      "FROM",
      "audit_logs",
      "al",
      "WHERE",
      "al.audit_result",
      "=",
      "'拒绝';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "al.audit_id,",
      "al.audit_result,",
      "al.auditor",
      "FROM",
      "audit_logs",
      "al",
      "WHERE",
      "al.audit_result",
      "=",
      "'拒绝';"
    ],
    "question_toks": [
      "获取所有审核结果为拒绝的审核记录及其对应的审核人。"
    ],
    "result_fields": [
      "al.audit_id",
      "al.audit_result",
      "al.auditor"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT alert_type, alert_content FROM alerts;",
    "question": "查询每个预警的类型和内容。",
    "query_toks": [
      "SELECT",
      "alert_type,",
      "alert_content",
      "FROM",
      "alerts;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "alert_type,",
      "alert_content",
      "FROM",
      "alerts;"
    ],
    "question_toks": [
      "查询每个预警的类型和内容。"
    ],
    "result_fields": [
      "alert_type",
      "alert_content"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT a.alert_id, a.alert_type, a.alert_content, e.event_description, al.audit_result, al.audit_comments FROM alerts a JOIN risk_events e ON a.event_id = e.event_id LEFT JOIN (SELECT alert_id, audit_result, audit_comments, ROW_NUMBER() OVER (PARTITION BY alert_id ORDER BY audit_time DESC) as rn FROM audit_logs) al ON a.alert_id = al.alert_id AND al.rn = 1 WHERE a.status = '未处理' ORDER BY a.alert_time DESC;",
    "question": "查询所有未处理状态的预警信息，包括相关的风险事件描述和最近的审核记录。",
    "query_toks": [
      "SELECT",
      "a.alert_id,",
      "a.alert_type,",
      "a.alert_content,",
      "e.event_description,",
      "al.audit_result,",
      "al.audit_comments",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "a.event_id",
      "=",
      "e.event_id",
      "LEFT",
      "JOIN",
      "(SELECT",
      "alert_id,",
      "audit_result,",
      "audit_comments,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "alert_id",
      "ORDER",
      "BY",
      "audit_time",
      "DESC)",
      "as",
      "rn",
      "FROM",
      "audit_logs)",
      "al",
      "ON",
      "a.alert_id",
      "=",
      "al.alert_id",
      "AND",
      "al.rn",
      "=",
      "1",
      "WHERE",
      "a.status",
      "=",
      "'未处理'",
      "ORDER",
      "BY",
      "a.alert_time",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.alert_id,",
      "a.alert_type,",
      "a.alert_content,",
      "e.event_description,",
      "al.audit_result,",
      "al.audit_comments",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "a.event_id",
      "=",
      "e.event_id",
      "LEFT",
      "JOIN",
      "(SELECT",
      "alert_id,",
      "audit_result,",
      "audit_comments,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "alert_id",
      "ORDER",
      "BY",
      "audit_time",
      "DESC)",
      "as",
      "rn",
      "FROM",
      "audit_logs)",
      "al",
      "ON",
      "a.alert_id",
      "=",
      "al.alert_id",
      "AND",
      "al.rn",
      "=",
      "1",
      "WHERE",
      "a.status",
      "=",
      "'未处理'",
      "ORDER",
      "BY",
      "a.alert_time",
      "DESC;"
    ],
    "question_toks": [
      "查询所有未处理状态的预警信息，包括相关的风险事件描述和最近的审核记录。"
    ],
    "result_fields": [
      "a.alert_id",
      "a.alert_type",
      "a.alert_content",
      "e.event_description",
      "al.audit_result",
      "al.audit_comments"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT AVG(EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - alert_time))) AS average_alert_time FROM alerts WHERE status = '未处理';",
    "question": "找出所有未处理的预警，并计算其平均预警时间。",
    "query_toks": [
      "SELECT",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(CURRENT_TIMESTAMP",
      "-",
      "alert_time)))",
      "AS",
      "average_alert_time",
      "FROM",
      "alerts",
      "WHERE",
      "status",
      "=",
      "'未处理';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(CURRENT_TIMESTAMP",
      "-",
      "alert_time)))",
      "AS",
      "average_alert_time",
      "FROM",
      "alerts",
      "WHERE",
      "status",
      "=",
      "'未处理';"
    ],
    "question_toks": [
      "找出所有未处理的预警，并计算其平均预警时间。"
    ],
    "result_fields": [
      "AVG(EXTRACT(EPOCH"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "WITH risk_stats AS (SELECT c.customer_id, COUNT(ra.assessment_id) AS assessment_count, AVG(CASE WHEN ra.risk_level = '高' THEN 3 WHEN ra.risk_level = '中' THEN 2 ELSE 1 END) AS avg_risk_score, COUNT(a.alert_id) AS alert_count FROM customers c LEFT JOIN risk_assessments ra ON c.customer_id = ra.event_id LEFT JOIN alerts a ON c.customer_id = a.event_id GROUP BY c.customer_id) SELECT rs.customer_id, c.customer_name, c.risk_level, (rs.assessment_count * rs.avg_risk_score + rs.alert_count * 2) AS risk_index FROM risk_stats rs JOIN customers c ON rs.customer_id = c.customer_id ORDER BY risk_index DESC",
    "question": "计算每个客户的风险指数（风险评估次数 * 平均风险评分 + 预警次数 * 2）",
    "query_toks": [
      "WITH",
      "risk_stats",
      "AS",
      "(SELECT",
      "c.customer_id,",
      "COUNT(ra.assessment_id)",
      "AS",
      "assessment_count,",
      "AVG(CASE",
      "WHEN",
      "ra.risk_level",
      "=",
      "'高'",
      "THEN",
      "3",
      "WHEN",
      "ra.risk_level",
      "=",
      "'中'",
      "THEN",
      "2",
      "ELSE",
      "1",
      "END)",
      "AS",
      "avg_risk_score,",
      "COUNT(a.alert_id)",
      "AS",
      "alert_count",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "c.customer_id",
      "=",
      "ra.event_id",
      "LEFT",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "c.customer_id",
      "=",
      "a.event_id",
      "GROUP",
      "BY",
      "c.customer_id)",
      "SELECT",
      "rs.customer_id,",
      "c.customer_name,",
      "c.risk_level,",
      "(rs.assessment_count",
      "*",
      "rs.avg_risk_score",
      "+",
      "rs.alert_count",
      "*",
      "2)",
      "AS",
      "risk_index",
      "FROM",
      "risk_stats",
      "rs",
      "JOIN",
      "customers",
      "c",
      "ON",
      "rs.customer_id",
      "=",
      "c.customer_id",
      "ORDER",
      "BY",
      "risk_index",
      "DESC"
    ],
    "query_toks_no_value": [
      "WITH",
      "risk_stats",
      "AS",
      "(SELECT",
      "c.customer_id,",
      "COUNT(ra.assessment_id)",
      "AS",
      "assessment_count,",
      "AVG(CASE",
      "WHEN",
      "ra.risk_level",
      "=",
      "'高'",
      "THEN",
      "3",
      "WHEN",
      "ra.risk_level",
      "=",
      "'中'",
      "THEN",
      "2",
      "ELSE",
      "1",
      "END)",
      "AS",
      "avg_risk_score,",
      "COUNT(a.alert_id)",
      "AS",
      "alert_count",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "c.customer_id",
      "=",
      "ra.event_id",
      "LEFT",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "c.customer_id",
      "=",
      "a.event_id",
      "GROUP",
      "BY",
      "c.customer_id)",
      "SELECT",
      "rs.customer_id,",
      "c.customer_name,",
      "c.risk_level,",
      "(rs.assessment_count",
      "*",
      "rs.avg_risk_score",
      "+",
      "rs.alert_count",
      "*",
      "2)",
      "AS",
      "risk_index",
      "FROM",
      "risk_stats",
      "rs",
      "JOIN",
      "customers",
      "c",
      "ON",
      "rs.customer_id",
      "=",
      "c.customer_id",
      "ORDER",
      "BY",
      "risk_index",
      "DESC"
    ],
    "question_toks": [
      "计算每个客户的风险指数（风险评估次数",
      "*",
      "平均风险评分",
      "+",
      "预警次数",
      "*",
      "2）"
    ],
    "result_fields": [
      "c.customer_id",
      "COUNT(ra.assessment_id)",
      "AVG(CASE WHEN ra.risk_level = '高' THEN 3 WHEN ra.risk_level = '中' THEN 2 ELSE 1 END)",
      "COUNT(a.alert_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT event_type, COUNT(*) as event_count FROM risk_events WHERE status = '未处理' GROUP BY event_type;",
    "question": "统计每种风险类型的风险事件数量，并且只统计状态为未处理的事件。",
    "query_toks": [
      "SELECT",
      "event_type,",
      "COUNT(*)",
      "as",
      "event_count",
      "FROM",
      "risk_events",
      "WHERE",
      "status",
      "=",
      "'未处理'",
      "GROUP",
      "BY",
      "event_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "event_type,",
      "COUNT(*)",
      "as",
      "event_count",
      "FROM",
      "risk_events",
      "WHERE",
      "status",
      "=",
      "'未处理'",
      "GROUP",
      "BY",
      "event_type;"
    ],
    "question_toks": [
      "统计每种风险类型的风险事件数量，并且只统计状态为未处理的事件。"
    ],
    "result_fields": [
      "event_type",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT t.* FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = '低' AND c.credit_score > 700;",
    "question": "哪些客户的风险等级为“低”且信用评分高于700，并列出其交易记录。",
    "query_toks": [
      "SELECT",
      "t.*",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'低'",
      "AND",
      "c.credit_score",
      ">",
      "700;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.*",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'低'",
      "AND",
      "c.credit_score",
      ">",
      "700;"
    ],
    "question_toks": [
      "哪些客户的风险等级为“低”且信用评分高于700，并列出其交易记录。"
    ],
    "result_fields": [
      "t.*"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT a.alert_id, a.alert_type, a.alert_content, a.alert_level, re.event_id, re.event_type, re.severity FROM alerts a LEFT JOIN risk_events re ON a.event_id = re.event_id WHERE a.status = '未处理' AND a.alert_level = '高'",
    "question": "列出所有未处理的高级别预警及其相关的风险事件信息",
    "query_toks": [
      "SELECT",
      "a.alert_id,",
      "a.alert_type,",
      "a.alert_content,",
      "a.alert_level,",
      "re.event_id,",
      "re.event_type,",
      "re.severity",
      "FROM",
      "alerts",
      "a",
      "LEFT",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "a.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "a.status",
      "=",
      "'未处理'",
      "AND",
      "a.alert_level",
      "=",
      "'高'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.alert_id,",
      "a.alert_type,",
      "a.alert_content,",
      "a.alert_level,",
      "re.event_id,",
      "re.event_type,",
      "re.severity",
      "FROM",
      "alerts",
      "a",
      "LEFT",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "a.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "a.status",
      "=",
      "'未处理'",
      "AND",
      "a.alert_level",
      "=",
      "'高'"
    ],
    "question_toks": [
      "列出所有未处理的高级别预警及其相关的风险事件信息"
    ],
    "result_fields": [
      "a.alert_id",
      "a.alert_type",
      "a.alert_content",
      "a.alert_level",
      "re.event_id",
      "re.event_type",
      "re.severity"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT alert_content, status FROM alerts WHERE rule_id IN (SELECT rule_id FROM rule_configurations WHERE rule_type = '合规检查');",
    "question": "请查询所有触发合规违规规则的预警记录及其处理状态。",
    "query_toks": [
      "SELECT",
      "alert_content,",
      "status",
      "FROM",
      "alerts",
      "WHERE",
      "rule_id",
      "IN",
      "(SELECT",
      "rule_id",
      "FROM",
      "rule_configurations",
      "WHERE",
      "rule_type",
      "=",
      "'合规检查');"
    ],
    "query_toks_no_value": [
      "SELECT",
      "alert_content,",
      "status",
      "FROM",
      "alerts",
      "WHERE",
      "rule_id",
      "IN",
      "(SELECT",
      "rule_id",
      "FROM",
      "rule_configurations",
      "WHERE",
      "rule_type",
      "=",
      "'合规检查');"
    ],
    "question_toks": [
      "请查询所有触发合规违规规则的预警记录及其处理状态。"
    ],
    "result_fields": [
      "alert_content",
      "status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.risk_level, SUM(t.amount) AS total_transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = '高' GROUP BY c.customer_id, c.risk_level;",
    "question": "请列出所有有高风险交易的客户及其风险等级，并计算其交易总金额。",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.risk_level,",
      "SUM(t.amount)",
      "AS",
      "total_transaction_amount",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "GROUP",
      "BY",
      "c.customer_id,",
      "c.risk_level;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.risk_level,",
      "SUM(t.amount)",
      "AS",
      "total_transaction_amount",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "GROUP",
      "BY",
      "c.customer_id,",
      "c.risk_level;"
    ],
    "question_toks": [
      "请列出所有有高风险交易的客户及其风险等级，并计算其交易总金额。"
    ],
    "result_fields": [
      "c.customer_id",
      "c.risk_level",
      "SUM(t.amount)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT report_content FROM risk_reports WHERE report_type = '月度风险报告' AND approval_status = '已拒绝';",
    "question": "获取所有风险报告中，报告类型为月度风险报告且审批状态为已拒绝的报告内容。",
    "query_toks": [
      "SELECT",
      "report_content",
      "FROM",
      "risk_reports",
      "WHERE",
      "report_type",
      "=",
      "'月度风险报告'",
      "AND",
      "approval_status",
      "=",
      "'已拒绝';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "report_content",
      "FROM",
      "risk_reports",
      "WHERE",
      "report_type",
      "=",
      "'月度风险报告'",
      "AND",
      "approval_status",
      "=",
      "'已拒绝';"
    ],
    "question_toks": [
      "获取所有风险报告中，报告类型为月度风险报告且审批状态为已拒绝的报告内容。"
    ],
    "result_fields": [
      "report_content"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_type, COUNT(re.event_id) AS event_count FROM risk_events re GROUP BY re.event_type;",
    "question": "统计每个风险事件类型的事件数量",
    "query_toks": [
      "SELECT",
      "re.event_type,",
      "COUNT(re.event_id)",
      "AS",
      "event_count",
      "FROM",
      "risk_events",
      "re",
      "GROUP",
      "BY",
      "re.event_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_type,",
      "COUNT(re.event_id)",
      "AS",
      "event_count",
      "FROM",
      "risk_events",
      "re",
      "GROUP",
      "BY",
      "re.event_type;"
    ],
    "question_toks": [
      "统计每个风险事件类型的事件数量"
    ],
    "result_fields": [
      "re.event_type",
      "COUNT(re.event_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_name, t.amount, t.transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_type = '转账' AND t.amount > 200000 AND t.transaction_date >= '2023-05-04 00:00:00' AND t.transaction_date < '2023-05-05 00:00:00';",
    "question": "哪些客户在2023年5月4日进行了转账交易并且交易金额超过200000元？",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "t.amount,",
      "t.transaction_date",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "t.transaction_type",
      "=",
      "'转账'",
      "AND",
      "t.amount",
      ">",
      "200000",
      "AND",
      "t.transaction_date",
      ">=",
      "'2023-05-04",
      "00:00:00'",
      "AND",
      "t.transaction_date",
      "<",
      "'2023-05-05",
      "00:00:00';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "t.amount,",
      "t.transaction_date",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "t.transaction_type",
      "=",
      "'转账'",
      "AND",
      "t.amount",
      ">",
      "200000",
      "AND",
      "t.transaction_date",
      ">=",
      "'2023-05-04",
      "00:00:00'",
      "AND",
      "t.transaction_date",
      "<",
      "'2023-05-05",
      "00:00:00';"
    ],
    "question_toks": [
      "哪些客户在2023年5月4日进行了转账交易并且交易金额超过200000元？"
    ],
    "result_fields": [
      "c.customer_name",
      "t.amount",
      "t.transaction_date"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT a.alert_id, a.alert_content, a.alert_level, a.assigned_to, e.event_description FROM alerts a JOIN risk_events e ON a.event_id = e.event_id WHERE a.status = '未处理' AND a.alert_level = '高'",
    "question": "列出所有未处理的高级别预警，包括相关的风险事件描述和分配的处理人员",
    "query_toks": [
      "SELECT",
      "a.alert_id,",
      "a.alert_content,",
      "a.alert_level,",
      "a.assigned_to,",
      "e.event_description",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "a.event_id",
      "=",
      "e.event_id",
      "WHERE",
      "a.status",
      "=",
      "'未处理'",
      "AND",
      "a.alert_level",
      "=",
      "'高'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.alert_id,",
      "a.alert_content,",
      "a.alert_level,",
      "a.assigned_to,",
      "e.event_description",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "risk_events",
      "e",
      "ON",
      "a.event_id",
      "=",
      "e.event_id",
      "WHERE",
      "a.status",
      "=",
      "'未处理'",
      "AND",
      "a.alert_level",
      "=",
      "'高'"
    ],
    "question_toks": [
      "列出所有未处理的高级别预警，包括相关的风险事件描述和分配的处理人员"
    ],
    "result_fields": [
      "a.alert_id",
      "a.alert_content",
      "a.alert_level",
      "a.assigned_to",
      "e.event_description"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rr.report_id, rr.report_content FROM risk_reports rr WHERE rr.approval_status = '已批准' AND rr.approved_by = '高志远' AND rr.report_date = '2023-04-01';",
    "question": "在2023年4月的风险报告中，有哪些报告是由高志远审批的？",
    "query_toks": [
      "SELECT",
      "rr.report_id,",
      "rr.report_content",
      "FROM",
      "risk_reports",
      "rr",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已批准'",
      "AND",
      "rr.approved_by",
      "=",
      "'高志远'",
      "AND",
      "rr.report_date",
      "=",
      "'2023-04-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rr.report_id,",
      "rr.report_content",
      "FROM",
      "risk_reports",
      "rr",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已批准'",
      "AND",
      "rr.approved_by",
      "=",
      "'高志远'",
      "AND",
      "rr.report_date",
      "=",
      "'2023-04-01';"
    ],
    "question_toks": [
      "在2023年4月的风险报告中，有哪些报告是由高志远审批的？"
    ],
    "result_fields": [
      "rr.report_id",
      "rr.report_content"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT transaction_type, \n       COUNT(CASE WHEN status = '成功' THEN 1 END) AS success_count, \n       COUNT(CASE WHEN status = '失败' THEN 1 END) AS failure_count \nFROM transactions \nGROUP BY transaction_type;",
    "question": "对于每种交易类型，计算成功与失败交易的数量，并列出类型及数量。",
    "query_toks": [
      "SELECT",
      "transaction_type,",
      "COUNT(CASE",
      "WHEN",
      "status",
      "=",
      "'成功'",
      "THEN",
      "1",
      "END)",
      "AS",
      "success_count,",
      "COUNT(CASE",
      "WHEN",
      "status",
      "=",
      "'失败'",
      "THEN",
      "1",
      "END)",
      "AS",
      "failure_count",
      "FROM",
      "transactions",
      "GROUP",
      "BY",
      "transaction_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "transaction_type,",
      "COUNT(CASE",
      "WHEN",
      "status",
      "=",
      "'成功'",
      "THEN",
      "1",
      "END)",
      "AS",
      "success_count,",
      "COUNT(CASE",
      "WHEN",
      "status",
      "=",
      "'失败'",
      "THEN",
      "1",
      "END)",
      "AS",
      "failure_count",
      "FROM",
      "transactions",
      "GROUP",
      "BY",
      "transaction_type;"
    ],
    "question_toks": [
      "对于每种交易类型，计算成功与失败交易的数量，并列出类型及数量。"
    ],
    "result_fields": [
      "transaction_type",
      "COUNT(CASE WHEN status = '成功' THEN 1 END)",
      "COUNT(CASE WHEN status = '失败' THEN 1 END)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, ra.risk_level FROM risk_events re LEFT JOIN risk_assessments ra ON re.event_id = ra.event_id ORDER BY ra.assessment_date DESC;",
    "question": "列出所有的风险事件及其最新的风险评估结果。",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "ra.risk_level",
      "FROM",
      "risk_events",
      "re",
      "LEFT",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "ORDER",
      "BY",
      "ra.assessment_date",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "ra.risk_level",
      "FROM",
      "risk_events",
      "re",
      "LEFT",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "ORDER",
      "BY",
      "ra.assessment_date",
      "DESC;"
    ],
    "question_toks": [
      "列出所有的风险事件及其最新的风险评估结果。"
    ],
    "result_fields": [
      "re.event_id",
      "ra.risk_level"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_name, COUNT(DISTINCT ra.assessment_id) as high_risk_assessment_count, COUNT(DISTINCT t.transaction_id) as large_transaction_count FROM customers c JOIN transactions t ON c.customer_id = t.customer_id JOIN risk_assessments ra ON t.event_id = ra.event_id WHERE ra.risk_level = '高' AND t.amount > 500000 AND t.transaction_date >= date('now') - INTERVAL '1 year' GROUP BY c.customer_id, c.customer_name HAVING COUNT(DISTINCT ra.assessment_id) > 0 AND COUNT(DISTINCT t.transaction_id) > 0 ORDER BY high_risk_assessment_count DESC, large_transaction_count DESC;",
    "question": "找出所有在过去一年内既有高风险评估又有大额交易（超过50万）的客户，显示客户名称、风险评估次数和大额交易次数。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "COUNT(DISTINCT",
      "ra.assessment_id)",
      "as",
      "high_risk_assessment_count,",
      "COUNT(DISTINCT",
      "t.transaction_id)",
      "as",
      "large_transaction_count",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "t.event_id",
      "=",
      "ra.event_id",
      "WHERE",
      "ra.risk_level",
      "=",
      "'高'",
      "AND",
      "t.amount",
      ">",
      "500000",
      "AND",
      "t.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "GROUP",
      "BY",
      "c.customer_id,",
      "c.customer_name",
      "HAVING",
      "COUNT(DISTINCT",
      "ra.assessment_id)",
      ">",
      "0",
      "AND",
      "COUNT(DISTINCT",
      "t.transaction_id)",
      ">",
      "0",
      "ORDER",
      "BY",
      "high_risk_assessment_count",
      "DESC,",
      "large_transaction_count",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "COUNT(DISTINCT",
      "ra.assessment_id)",
      "as",
      "high_risk_assessment_count,",
      "COUNT(DISTINCT",
      "t.transaction_id)",
      "as",
      "large_transaction_count",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "t.event_id",
      "=",
      "ra.event_id",
      "WHERE",
      "ra.risk_level",
      "=",
      "'高'",
      "AND",
      "t.amount",
      ">",
      "500000",
      "AND",
      "t.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "GROUP",
      "BY",
      "c.customer_id,",
      "c.customer_name",
      "HAVING",
      "COUNT(DISTINCT",
      "ra.assessment_id)",
      ">",
      "0",
      "AND",
      "COUNT(DISTINCT",
      "t.transaction_id)",
      ">",
      "0",
      "ORDER",
      "BY",
      "high_risk_assessment_count",
      "DESC,",
      "large_transaction_count",
      "DESC;"
    ],
    "question_toks": [
      "找出所有在过去一年内既有高风险评估又有大额交易（超过50万）的客户，显示客户名称、风险评估次数和大额交易次数。"
    ],
    "result_fields": [
      "c.customer_name",
      "COUNT(DISTINCT ra.assessment_id)",
      "COUNT(DISTINCT t.transaction_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT * FROM transactions WHERE customer_id = 'CU2534';",
    "question": "获取特定客户 '恒基能源有限公司' 的所有交易记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "transactions",
      "WHERE",
      "customer_id",
      "=",
      "'CU2534';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "transactions",
      "WHERE",
      "customer_id",
      "=",
      "'CU2534';"
    ],
    "question_toks": [
      "获取特定客户",
      "'恒基能源有限公司'",
      "的所有交易记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT event_id, MAX(severity) AS max_severity FROM risk_events GROUP BY event_id;",
    "question": "查找每个风险事件的最高严重程度。",
    "query_toks": [
      "SELECT",
      "event_id,",
      "MAX(severity)",
      "AS",
      "max_severity",
      "FROM",
      "risk_events",
      "GROUP",
      "BY",
      "event_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "event_id,",
      "MAX(severity)",
      "AS",
      "max_severity",
      "FROM",
      "risk_events",
      "GROUP",
      "BY",
      "event_id;"
    ],
    "question_toks": [
      "查找每个风险事件的最高严重程度。"
    ],
    "result_fields": [
      "event_id",
      "MAX(severity)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.risk_level, COUNT(DISTINCT c.customer_id) as customer_count, AVG(t.amount) as avg_transaction_amount FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.risk_level",
    "question": "统计每个风险等级的客户数量和他们的平均交易金额",
    "query_toks": [
      "SELECT",
      "c.risk_level,",
      "COUNT(DISTINCT",
      "c.customer_id)",
      "as",
      "customer_count,",
      "AVG(t.amount)",
      "as",
      "avg_transaction_amount",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "GROUP",
      "BY",
      "c.risk_level"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.risk_level,",
      "COUNT(DISTINCT",
      "c.customer_id)",
      "as",
      "customer_count,",
      "AVG(t.amount)",
      "as",
      "avg_transaction_amount",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "GROUP",
      "BY",
      "c.risk_level"
    ],
    "question_toks": [
      "统计每个风险等级的客户数量和他们的平均交易金额"
    ],
    "result_fields": [
      "c.risk_level",
      "COUNT(DISTINCT c.customer_id)",
      "AVG(t.amount)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT audit_time, audit_result FROM audit_logs WHERE auditor = '张强';",
    "question": "查找所有审核人张强审核的预警记录及其审核结果。",
    "query_toks": [
      "SELECT",
      "audit_time,",
      "audit_result",
      "FROM",
      "audit_logs",
      "WHERE",
      "auditor",
      "=",
      "'张强';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "audit_time,",
      "audit_result",
      "FROM",
      "audit_logs",
      "WHERE",
      "auditor",
      "=",
      "'张强';"
    ],
    "question_toks": [
      "查找所有审核人张强审核的预警记录及其审核结果。"
    ],
    "result_fields": [
      "audit_time",
      "audit_result"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ml.log_id, ml.actual_value, ml.is_exceeding_threshold, ri.indicator_name FROM risk_monitoring_logs ml JOIN risk_indicators ri ON ml.indicator_id = ri.indicator_id;",
    "question": "获取所有监控记录的实际值和是否超过阈值的信息，关联风险指标。",
    "query_toks": [
      "SELECT",
      "ml.log_id,",
      "ml.actual_value,",
      "ml.is_exceeding_threshold,",
      "ri.indicator_name",
      "FROM",
      "risk_monitoring_logs",
      "ml",
      "JOIN",
      "risk_indicators",
      "ri",
      "ON",
      "ml.indicator_id",
      "=",
      "ri.indicator_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ml.log_id,",
      "ml.actual_value,",
      "ml.is_exceeding_threshold,",
      "ri.indicator_name",
      "FROM",
      "risk_monitoring_logs",
      "ml",
      "JOIN",
      "risk_indicators",
      "ri",
      "ON",
      "ml.indicator_id",
      "=",
      "ri.indicator_id;"
    ],
    "question_toks": [
      "获取所有监控记录的实际值和是否超过阈值的信息，关联风险指标。"
    ],
    "result_fields": [
      "ml.log_id",
      "ml.actual_value",
      "ml.is_exceeding_threshold",
      "ri.indicator_name"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ri.indicator_name, COUNT(*) as exceed_count, AVG((rml.actual_value - ri.threshold_value) / ri.threshold_value * 100) as avg_exceed_percentage FROM risk_indicators ri JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.is_exceeding_threshold = true AND EXTRACT(YEAR FROM rml.monitoring_date) = 2023 GROUP BY ri.indicator_id, ri.indicator_name ORDER BY exceed_count DESC;",
    "question": "统计每个风险指标在2023年超过阈值的次数和平均超出幅度，仅考虑超过阈值的情况。",
    "query_toks": [
      "SELECT",
      "ri.indicator_name,",
      "COUNT(*)",
      "as",
      "exceed_count,",
      "AVG((rml.actual_value",
      "-",
      "ri.threshold_value)",
      "/",
      "ri.threshold_value",
      "*",
      "100)",
      "as",
      "avg_exceed_percentage",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "WHERE",
      "rml.is_exceeding_threshold",
      "=",
      "true",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "rml.monitoring_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "ri.indicator_id,",
      "ri.indicator_name",
      "ORDER",
      "BY",
      "exceed_count",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ri.indicator_name,",
      "COUNT(*)",
      "as",
      "exceed_count,",
      "AVG((rml.actual_value",
      "-",
      "ri.threshold_value)",
      "/",
      "ri.threshold_value",
      "*",
      "100)",
      "as",
      "avg_exceed_percentage",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "WHERE",
      "rml.is_exceeding_threshold",
      "=",
      "true",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "rml.monitoring_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "ri.indicator_id,",
      "ri.indicator_name",
      "ORDER",
      "BY",
      "exceed_count",
      "DESC;"
    ],
    "question_toks": [
      "统计每个风险指标在2023年超过阈值的次数和平均超出幅度，仅考虑超过阈值的情况。"
    ],
    "result_fields": [
      "ri.indicator_name",
      "COUNT(*)",
      "AVG((rml.actual_value - ri.threshold_value) / ri.threshold_value * 100)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT a.alert_id, a.alert_content, a.status FROM alerts a WHERE a.alert_time >= '2023-01-01' AND a.alert_time < '2024-01-01';",
    "question": "查询2023年内所有预警信息及其处理状态。",
    "query_toks": [
      "SELECT",
      "a.alert_id,",
      "a.alert_content,",
      "a.status",
      "FROM",
      "alerts",
      "a",
      "WHERE",
      "a.alert_time",
      ">=",
      "'2023-01-01'",
      "AND",
      "a.alert_time",
      "<",
      "'2024-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.alert_id,",
      "a.alert_content,",
      "a.status",
      "FROM",
      "alerts",
      "a",
      "WHERE",
      "a.alert_time",
      ">=",
      "'2023-01-01'",
      "AND",
      "a.alert_time",
      "<",
      "'2024-01-01';"
    ],
    "question_toks": [
      "查询2023年内所有预警信息及其处理状态。"
    ],
    "result_fields": [
      "a.alert_id",
      "a.alert_content",
      "a.status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ri.indicator_id, ri.indicator_name, ml.monitoring_date, ml.actual_value FROM risk_indicators ri JOIN risk_monitoring_logs ml ON ri.indicator_id = ml.indicator_id ORDER BY ml.monitoring_date DESC;",
    "question": "查询每种风险指标的最新监控记录及其实际值。",
    "query_toks": [
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ml.monitoring_date,",
      "ml.actual_value",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "ml",
      "ON",
      "ri.indicator_id",
      "=",
      "ml.indicator_id",
      "ORDER",
      "BY",
      "ml.monitoring_date",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ml.monitoring_date,",
      "ml.actual_value",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "ml",
      "ON",
      "ri.indicator_id",
      "=",
      "ml.indicator_id",
      "ORDER",
      "BY",
      "ml.monitoring_date",
      "DESC;"
    ],
    "question_toks": [
      "查询每种风险指标的最新监控记录及其实际值。"
    ],
    "result_fields": [
      "ri.indicator_id",
      "ri.indicator_name",
      "ml.monitoring_date",
      "ml.actual_value"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "WITH indicator_stats AS (SELECT ri.indicator_id, ri.indicator_name, ri.threshold_value, COUNT(*) as total_checks, SUM(CASE WHEN rml.is_exceeding_threshold THEN 1 ELSE 0 END) as times_exceeded FROM risk_indicators ri JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.monitoring_date >= date('now') - INTERVAL '1 year' GROUP BY ri.indicator_id, ri.indicator_name, ri.threshold_value) SELECT indicator_name, threshold_value, times_exceeded, total_checks, ROUND(times_exceeded / total_checks * 100, 2) as exceed_percentage FROM indicator_stats ORDER BY times_exceeded DESC LIMIT 10;",
    "question": "计算每个风险指标在过去一年内超过阈值的次数和百分比，并找出超过次数最多的前10个指标。",
    "query_toks": [
      "WITH",
      "indicator_stats",
      "AS",
      "(SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.threshold_value,",
      "COUNT(*)",
      "as",
      "total_checks,",
      "SUM(CASE",
      "WHEN",
      "rml.is_exceeding_threshold",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "as",
      "times_exceeded",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "WHERE",
      "rml.monitoring_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "GROUP",
      "BY",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.threshold_value)",
      "SELECT",
      "indicator_name,",
      "threshold_value,",
      "times_exceeded,",
      "total_checks,",
      "ROUND(times_exceeded",
      "/",
      "total_checks",
      "*",
      "100,",
      "2)",
      "as",
      "exceed_percentage",
      "FROM",
      "indicator_stats",
      "ORDER",
      "BY",
      "times_exceeded",
      "DESC",
      "LIMIT",
      "10;"
    ],
    "query_toks_no_value": [
      "WITH",
      "indicator_stats",
      "AS",
      "(SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.threshold_value,",
      "COUNT(*)",
      "as",
      "total_checks,",
      "SUM(CASE",
      "WHEN",
      "rml.is_exceeding_threshold",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "as",
      "times_exceeded",
      "FROM",
      "risk_indicators",
      "ri",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "WHERE",
      "rml.monitoring_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "GROUP",
      "BY",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.threshold_value)",
      "SELECT",
      "indicator_name,",
      "threshold_value,",
      "times_exceeded,",
      "total_checks,",
      "ROUND(times_exceeded",
      "/",
      "total_checks",
      "*",
      "100,",
      "2)",
      "as",
      "exceed_percentage",
      "FROM",
      "indicator_stats",
      "ORDER",
      "BY",
      "times_exceeded",
      "DESC",
      "LIMIT",
      "10;"
    ],
    "question_toks": [
      "计算每个风险指标在过去一年内超过阈值的次数和百分比，并找出超过次数最多的前10个指标。"
    ],
    "result_fields": [
      "ri.indicator_id",
      "ri.indicator_name",
      "ri.threshold_value",
      "COUNT(*)",
      "SUM(CASE WHEN rml.is_exceeding_threshold THEN 1 ELSE 0 END)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT risk_level, COUNT(customer_id) AS customer_count FROM customers GROUP BY risk_level;",
    "question": "统计每种风险等级的客户数量。",
    "query_toks": [
      "SELECT",
      "risk_level,",
      "COUNT(customer_id)",
      "AS",
      "customer_count",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "risk_level;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "risk_level,",
      "COUNT(customer_id)",
      "AS",
      "customer_count",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "risk_level;"
    ],
    "question_toks": [
      "统计每种风险等级的客户数量。"
    ],
    "result_fields": [
      "risk_level",
      "COUNT(customer_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT customer_id, risk_score, status FROM transactions;",
    "question": "查找所有客户的交易风险评分及其状态。",
    "query_toks": [
      "SELECT",
      "customer_id,",
      "risk_score,",
      "status",
      "FROM",
      "transactions;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "customer_id,",
      "risk_score,",
      "status",
      "FROM",
      "transactions;"
    ],
    "question_toks": [
      "查找所有客户的交易风险评分及其状态。"
    ],
    "result_fields": [
      "customer_id",
      "risk_score",
      "status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ra.assessment_id, ra.risk_level, t.transaction_id, t.risk_score FROM risk_assessments ra JOIN transactions t ON ra.event_id = t.event_id WHERE ra.risk_level = '高' AND t.risk_score < 50",
    "question": "查询所有风险评估结果为高风险，但相关交易风险评分低于50的情况",
    "query_toks": [
      "SELECT",
      "ra.assessment_id,",
      "ra.risk_level,",
      "t.transaction_id,",
      "t.risk_score",
      "FROM",
      "risk_assessments",
      "ra",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "ra.event_id",
      "=",
      "t.event_id",
      "WHERE",
      "ra.risk_level",
      "=",
      "'高'",
      "AND",
      "t.risk_score",
      "<",
      "50"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ra.assessment_id,",
      "ra.risk_level,",
      "t.transaction_id,",
      "t.risk_score",
      "FROM",
      "risk_assessments",
      "ra",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "ra.event_id",
      "=",
      "t.event_id",
      "WHERE",
      "ra.risk_level",
      "=",
      "'高'",
      "AND",
      "t.risk_score",
      "<",
      "50"
    ],
    "question_toks": [
      "查询所有风险评估结果为高风险，但相关交易风险评分低于50的情况"
    ],
    "result_fields": [
      "ra.assessment_id",
      "ra.risk_level",
      "t.transaction_id",
      "t.risk_score"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT transaction_type, COUNT(*) as success_count FROM transactions WHERE status = '成功' GROUP BY transaction_type ORDER BY success_count DESC LIMIT 1;",
    "question": "统计每种交易类型的成功交易数量，找出最常见的交易类型。",
    "query_toks": [
      "SELECT",
      "transaction_type,",
      "COUNT(*)",
      "as",
      "success_count",
      "FROM",
      "transactions",
      "WHERE",
      "status",
      "=",
      "'成功'",
      "GROUP",
      "BY",
      "transaction_type",
      "ORDER",
      "BY",
      "success_count",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "transaction_type,",
      "COUNT(*)",
      "as",
      "success_count",
      "FROM",
      "transactions",
      "WHERE",
      "status",
      "=",
      "'成功'",
      "GROUP",
      "BY",
      "transaction_type",
      "ORDER",
      "BY",
      "success_count",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "统计每种交易类型的成功交易数量，找出最常见的交易类型。"
    ],
    "result_fields": [
      "transaction_type",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT t.transaction_id, t.amount, re.status FROM transactions t JOIN risk_events re ON t.event_id = re.event_id WHERE t.status = '失败' AND re.status = '已解决';",
    "question": "查找所有交易失败的记录，并且关联的风险事件状态为已解决。",
    "query_toks": [
      "SELECT",
      "t.transaction_id,",
      "t.amount,",
      "re.status",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "t.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "t.status",
      "=",
      "'失败'",
      "AND",
      "re.status",
      "=",
      "'已解决';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.transaction_id,",
      "t.amount,",
      "re.status",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "t.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "t.status",
      "=",
      "'失败'",
      "AND",
      "re.status",
      "=",
      "'已解决';"
    ],
    "question_toks": [
      "查找所有交易失败的记录，并且关联的风险事件状态为已解决。"
    ],
    "result_fields": [
      "t.transaction_id",
      "t.amount",
      "re.status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT t.transaction_id, c.customer_name FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.status = '处理中';",
    "question": "请找出所有被标记为处理中状态的交易记录及其对应的客户信息。",
    "query_toks": [
      "SELECT",
      "t.transaction_id,",
      "c.customer_name",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "t.status",
      "=",
      "'处理中';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.transaction_id,",
      "c.customer_name",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "t.status",
      "=",
      "'处理中';"
    ],
    "question_toks": [
      "请找出所有被标记为处理中状态的交易记录及其对应的客户信息。"
    ],
    "result_fields": [
      "t.transaction_id",
      "c.customer_name"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT t.transaction_id, t.amount, re.event_description FROM transactions t JOIN risk_events re ON t.event_id = re.event_id WHERE t.amount > 1000;",
    "question": "列出所有交易及其相关的风险事件，要求交易金额超过1000。",
    "query_toks": [
      "SELECT",
      "t.transaction_id,",
      "t.amount,",
      "re.event_description",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "t.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "t.amount",
      ">",
      "1000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.transaction_id,",
      "t.amount,",
      "re.event_description",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "t.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "t.amount",
      ">",
      "1000;"
    ],
    "question_toks": [
      "列出所有交易及其相关的风险事件，要求交易金额超过1000。"
    ],
    "result_fields": [
      "t.transaction_id",
      "t.amount",
      "re.event_description"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT t.transaction_id, t.amount, t.transaction_date, c.customer_name, re.event_type, re.event_description FROM transactions t JOIN customers c ON t.customer_id = c.customer_id JOIN risk_events re ON t.event_id = re.event_id WHERE t.amount > 100000 AND c.risk_level = '高' AND t.transaction_date >= datetime('now') - INTERVAL '1 year'",
    "question": "找出所有在最近一年内进行过大额交易（金额超过100000）且客户风险等级为高的交易及其相关风险事件信息",
    "query_toks": [
      "SELECT",
      "t.transaction_id,",
      "t.amount,",
      "t.transaction_date,",
      "c.customer_name,",
      "re.event_type,",
      "re.event_description",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "t.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "t.amount",
      ">",
      "100000",
      "AND",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "t.transaction_date",
      ">=",
      "datetime('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.transaction_id,",
      "t.amount,",
      "t.transaction_date,",
      "c.customer_name,",
      "re.event_type,",
      "re.event_description",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "t.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "t.amount",
      ">",
      "100000",
      "AND",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "t.transaction_date",
      ">=",
      "datetime('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'"
    ],
    "question_toks": [
      "找出所有在最近一年内进行过大额交易（金额超过100000）且客户风险等级为高的交易及其相关风险事件信息"
    ],
    "result_fields": [
      "t.transaction_id",
      "t.amount",
      "t.transaction_date",
      "c.customer_name",
      "re.event_type",
      "re.event_description"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT assessment_id, mitigation_plan FROM risk_assessments WHERE mitigation_plan IS NOT NULL;",
    "question": "查找所有有缓解计划的风险评估记录。",
    "query_toks": [
      "SELECT",
      "assessment_id,",
      "mitigation_plan",
      "FROM",
      "risk_assessments",
      "WHERE",
      "mitigation_plan",
      "IS",
      "NOT",
      "NULL;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "assessment_id,",
      "mitigation_plan",
      "FROM",
      "risk_assessments",
      "WHERE",
      "mitigation_plan",
      "IS",
      "NOT",
      "NULL;"
    ],
    "question_toks": [
      "查找所有有缓解计划的风险评估记录。"
    ],
    "result_fields": [
      "assessment_id",
      "mitigation_plan"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT t.transaction_id, t.risk_score FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE c.risk_level = '高';",
    "question": "查找所有高风险客户的交易记录及其风险评分。",
    "query_toks": [
      "SELECT",
      "t.transaction_id,",
      "t.risk_score",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.transaction_id,",
      "t.risk_score",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高';"
    ],
    "question_toks": [
      "查找所有高风险客户的交易记录及其风险评分。"
    ],
    "result_fields": [
      "t.transaction_id",
      "t.risk_score"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rml.actual_value, ri.indicator_name FROM risk_monitoring_logs rml JOIN risk_indicators ri ON rml.indicator_id = ri.indicator_id WHERE rml.actual_value < ri.threshold_value;",
    "question": "查询所有风险监控日志的实际值及其对应的风险指标名称，要求实际值低于阈值。",
    "query_toks": [
      "SELECT",
      "rml.actual_value,",
      "ri.indicator_name",
      "FROM",
      "risk_monitoring_logs",
      "rml",
      "JOIN",
      "risk_indicators",
      "ri",
      "ON",
      "rml.indicator_id",
      "=",
      "ri.indicator_id",
      "WHERE",
      "rml.actual_value",
      "<",
      "ri.threshold_value;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rml.actual_value,",
      "ri.indicator_name",
      "FROM",
      "risk_monitoring_logs",
      "rml",
      "JOIN",
      "risk_indicators",
      "ri",
      "ON",
      "rml.indicator_id",
      "=",
      "ri.indicator_id",
      "WHERE",
      "rml.actual_value",
      "<",
      "ri.threshold_value;"
    ],
    "question_toks": [
      "查询所有风险监控日志的实际值及其对应的风险指标名称，要求实际值低于阈值。"
    ],
    "result_fields": [
      "rml.actual_value",
      "ri.indicator_name"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rr.report_content, re.event_type, re.status FROM risk_reports rr JOIN risk_events re ON rr.event_id = re.event_id WHERE rr.approval_status = '已拒绝';",
    "question": "列出所有已拒绝的风险报告，并显示对应的风险事件类型和状态。",
    "query_toks": [
      "SELECT",
      "rr.report_content,",
      "re.event_type,",
      "re.status",
      "FROM",
      "risk_reports",
      "rr",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rr.report_content,",
      "re.event_type,",
      "re.status",
      "FROM",
      "risk_reports",
      "rr",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "question_toks": [
      "列出所有已拒绝的风险报告，并显示对应的风险事件类型和状态。"
    ],
    "result_fields": [
      "rr.report_content",
      "re.event_type",
      "re.status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT DISTINCT c.customer_name, c.credit_score, c.registration_date, t.transaction_date FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.customer_type = '企业' AND c.registration_date >= '2021-01-01' AND c.registration_date < '2022-01-01' AND c.credit_score > 700 AND t.transaction_date >= datetime('now') - INTERVAL '1 year';",
    "question": "哪些企业在2021年注册并且其信用评分高于700，同时在过去一年内有过交易记录？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "c.customer_name,",
      "c.credit_score,",
      "c.registration_date,",
      "t.transaction_date",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.customer_type",
      "=",
      "'企业'",
      "AND",
      "c.registration_date",
      ">=",
      "'2021-01-01'",
      "AND",
      "c.registration_date",
      "<",
      "'2022-01-01'",
      "AND",
      "c.credit_score",
      ">",
      "700",
      "AND",
      "t.transaction_date",
      ">=",
      "datetime('now')",
      "-",
      "INTERVAL",
      "'1",
      "year';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "c.customer_name,",
      "c.credit_score,",
      "c.registration_date,",
      "t.transaction_date",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.customer_type",
      "=",
      "'企业'",
      "AND",
      "c.registration_date",
      ">=",
      "'2021-01-01'",
      "AND",
      "c.registration_date",
      "<",
      "'2022-01-01'",
      "AND",
      "c.credit_score",
      ">",
      "700",
      "AND",
      "t.transaction_date",
      ">=",
      "datetime('now')",
      "-",
      "INTERVAL",
      "'1",
      "year';"
    ],
    "question_toks": [
      "哪些企业在2021年注册并且其信用评分高于700，同时在过去一年内有过交易记录？"
    ],
    "result_fields": [
      "DISTINCT c.customer_name",
      "c.credit_score",
      "c.registration_date",
      "t.transaction_date"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT a.alert_id, a.alert_type, a.alert_content, re.event_id, re.event_type, t.transaction_id, t.amount FROM alerts a LEFT JOIN risk_events re ON a.event_id = re.event_id LEFT JOIN transactions t ON re.event_id = t.event_id WHERE a.assigned_to = '陈强'",
    "question": "查找所有由'陈强'处理的预警及其相关的风险事件和交易信息",
    "query_toks": [
      "SELECT",
      "a.alert_id,",
      "a.alert_type,",
      "a.alert_content,",
      "re.event_id,",
      "re.event_type,",
      "t.transaction_id,",
      "t.amount",
      "FROM",
      "alerts",
      "a",
      "LEFT",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "a.event_id",
      "=",
      "re.event_id",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "re.event_id",
      "=",
      "t.event_id",
      "WHERE",
      "a.assigned_to",
      "=",
      "'陈强'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.alert_id,",
      "a.alert_type,",
      "a.alert_content,",
      "re.event_id,",
      "re.event_type,",
      "t.transaction_id,",
      "t.amount",
      "FROM",
      "alerts",
      "a",
      "LEFT",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "a.event_id",
      "=",
      "re.event_id",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "re.event_id",
      "=",
      "t.event_id",
      "WHERE",
      "a.assigned_to",
      "=",
      "'陈强'"
    ],
    "question_toks": [
      "查找所有由'陈强'处理的预警及其相关的风险事件和交易信息"
    ],
    "result_fields": [
      "a.alert_id",
      "a.alert_type",
      "a.alert_content",
      "re.event_id",
      "re.event_type",
      "t.transaction_id",
      "t.amount"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT * FROM risk_reports WHERE report_content LIKE '%合规%';",
    "question": "获取所有报告内容包含合规的风险报告。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "risk_reports",
      "WHERE",
      "report_content",
      "LIKE",
      "'%合规%';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "risk_reports",
      "WHERE",
      "report_content",
      "LIKE",
      "'%合规%';"
    ],
    "question_toks": [
      "获取所有报告内容包含合规的风险报告。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT DATE_TRUNC('month', re.occurrence_time) as month, COUNT(DISTINCT re.event_id) as event_count, AVG(re.severity) as avg_severity, COUNT(a.alert_id) as alert_count FROM risk_events re LEFT JOIN alerts a ON re.event_id = a.event_id GROUP BY DATE_TRUNC('month', re.occurrence_time) ORDER BY month",
    "question": "统计每个月风险事件的数量、平均严重程度，以及相关的预警数量",
    "query_toks": [
      "SELECT",
      "DATE_TRUNC('month',",
      "re.occurrence_time)",
      "as",
      "month,",
      "COUNT(DISTINCT",
      "re.event_id)",
      "as",
      "event_count,",
      "AVG(re.severity)",
      "as",
      "avg_severity,",
      "COUNT(a.alert_id)",
      "as",
      "alert_count",
      "FROM",
      "risk_events",
      "re",
      "LEFT",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "re.event_id",
      "=",
      "a.event_id",
      "GROUP",
      "BY",
      "DATE_TRUNC('month',",
      "re.occurrence_time)",
      "ORDER",
      "BY",
      "month"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DATE_TRUNC('month',",
      "re.occurrence_time)",
      "as",
      "month,",
      "COUNT(DISTINCT",
      "re.event_id)",
      "as",
      "event_count,",
      "AVG(re.severity)",
      "as",
      "avg_severity,",
      "COUNT(a.alert_id)",
      "as",
      "alert_count",
      "FROM",
      "risk_events",
      "re",
      "LEFT",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "re.event_id",
      "=",
      "a.event_id",
      "GROUP",
      "BY",
      "DATE_TRUNC('month',",
      "re.occurrence_time)",
      "ORDER",
      "BY",
      "month"
    ],
    "question_toks": [
      "统计每个月风险事件的数量、平均严重程度，以及相关的预警数量"
    ],
    "result_fields": [
      "DATE_TRUNC('month', re.occurrence_time)",
      "COUNT(DISTINCT re.event_id)",
      "AVG(re.severity)",
      "COUNT(a.alert_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT indicator_name, threshold_value FROM risk_indicators;",
    "question": "获取所有风险指标的名称和阈值。",
    "query_toks": [
      "SELECT",
      "indicator_name,",
      "threshold_value",
      "FROM",
      "risk_indicators;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "indicator_name,",
      "threshold_value",
      "FROM",
      "risk_indicators;"
    ],
    "question_toks": [
      "获取所有风险指标的名称和阈值。"
    ],
    "result_fields": [
      "indicator_name",
      "threshold_value"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ri.indicator_name, rml.* FROM risk_indicators ri LEFT JOIN LATERAL (SELECT * FROM risk_monitoring_logs WHERE indicator_id = ri.indicator_id ORDER BY monitoring_date DESC LIMIT 1) rml ON true",
    "question": "列出所有风险指标的最新监控记录及其是否超过阈值的信息",
    "query_toks": [
      "SELECT",
      "ri.indicator_name,",
      "rml.*",
      "FROM",
      "risk_indicators",
      "ri",
      "LEFT",
      "JOIN",
      "LATERAL",
      "(SELECT",
      "*",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "indicator_id",
      "=",
      "ri.indicator_id",
      "ORDER",
      "BY",
      "monitoring_date",
      "DESC",
      "LIMIT",
      "1)",
      "rml",
      "ON",
      "true"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ri.indicator_name,",
      "rml.*",
      "FROM",
      "risk_indicators",
      "ri",
      "LEFT",
      "JOIN",
      "LATERAL",
      "(SELECT",
      "*",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "indicator_id",
      "=",
      "ri.indicator_id",
      "ORDER",
      "BY",
      "monitoring_date",
      "DESC",
      "LIMIT",
      "1)",
      "rml",
      "ON",
      "true"
    ],
    "question_toks": [
      "列出所有风险指标的最新监控记录及其是否超过阈值的信息"
    ],
    "result_fields": [
      "ri.indicator_name",
      "rml.*"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT t.transaction_id, t.amount, c.customer_name, c.customer_type FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.amount > 100000;",
    "question": "获取所有交易金额大于10万的交易及其对应的客户信息。",
    "query_toks": [
      "SELECT",
      "t.transaction_id,",
      "t.amount,",
      "c.customer_name,",
      "c.customer_type",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "t.amount",
      ">",
      "100000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.transaction_id,",
      "t.amount,",
      "c.customer_name,",
      "c.customer_type",
      "FROM",
      "transactions",
      "t",
      "JOIN",
      "customers",
      "c",
      "ON",
      "t.customer_id",
      "=",
      "c.customer_id",
      "WHERE",
      "t.amount",
      ">",
      "100000;"
    ],
    "question_toks": [
      "获取所有交易金额大于10万的交易及其对应的客户信息。"
    ],
    "result_fields": [
      "t.transaction_id",
      "t.amount",
      "c.customer_name",
      "c.customer_type"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT * FROM risk_reports WHERE approval_status = '已批准';",
    "question": "获取所有审批状态为已批准的风险报告。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "risk_reports",
      "WHERE",
      "approval_status",
      "=",
      "'已批准';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "risk_reports",
      "WHERE",
      "approval_status",
      "=",
      "'已批准';"
    ],
    "question_toks": [
      "获取所有审批状态为已批准的风险报告。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT transaction_type, AVG(risk_score) as avg_risk_score FROM transactions GROUP BY transaction_type ORDER BY avg_risk_score DESC",
    "question": "统计每种交易类型的平均风险评分",
    "query_toks": [
      "SELECT",
      "transaction_type,",
      "AVG(risk_score)",
      "as",
      "avg_risk_score",
      "FROM",
      "transactions",
      "GROUP",
      "BY",
      "transaction_type",
      "ORDER",
      "BY",
      "avg_risk_score",
      "DESC"
    ],
    "query_toks_no_value": [
      "SELECT",
      "transaction_type,",
      "AVG(risk_score)",
      "as",
      "avg_risk_score",
      "FROM",
      "transactions",
      "GROUP",
      "BY",
      "transaction_type",
      "ORDER",
      "BY",
      "avg_risk_score",
      "DESC"
    ],
    "question_toks": [
      "统计每种交易类型的平均风险评分"
    ],
    "result_fields": [
      "transaction_type",
      "AVG(risk_score)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "WITH event_timelines AS (SELECT event_id, event_type, created_at, MAX(CASE WHEN status = '处理中' THEN occurrence_time END) as processing_start, MAX(CASE WHEN status = '已解决' THEN occurrence_time END) as resolved_time FROM risk_events GROUP BY event_id, event_type, created_at) SELECT event_type, AVG(EXTRACT(EPOCH FROM (resolved_time - created_at))/3600) as avg_total_time_hours, AVG(EXTRACT(EPOCH FROM (processing_start - created_at))/3600) as avg_unprocessed_time_hours, AVG(EXTRACT(EPOCH FROM (resolved_time - processing_start))/3600) as avg_processing_time_hours FROM event_timelines WHERE resolved_time IS NOT NULL GROUP BY event_type",
    "question": "计算每种风险事件类型的平均处理时间（从创建到解决）和每个处理阶段（未处理、处理中、已解决）的平均持续时间",
    "query_toks": [
      "WITH",
      "event_timelines",
      "AS",
      "(SELECT",
      "event_id,",
      "event_type,",
      "created_at,",
      "MAX(CASE",
      "WHEN",
      "status",
      "=",
      "'处理中'",
      "THEN",
      "occurrence_time",
      "END)",
      "as",
      "processing_start,",
      "MAX(CASE",
      "WHEN",
      "status",
      "=",
      "'已解决'",
      "THEN",
      "occurrence_time",
      "END)",
      "as",
      "resolved_time",
      "FROM",
      "risk_events",
      "GROUP",
      "BY",
      "event_id,",
      "event_type,",
      "created_at)",
      "SELECT",
      "event_type,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(resolved_time",
      "-",
      "created_at))/3600)",
      "as",
      "avg_total_time_hours,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(processing_start",
      "-",
      "created_at))/3600)",
      "as",
      "avg_unprocessed_time_hours,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(resolved_time",
      "-",
      "processing_start))/3600)",
      "as",
      "avg_processing_time_hours",
      "FROM",
      "event_timelines",
      "WHERE",
      "resolved_time",
      "IS",
      "NOT",
      "NULL",
      "GROUP",
      "BY",
      "event_type"
    ],
    "query_toks_no_value": [
      "WITH",
      "event_timelines",
      "AS",
      "(SELECT",
      "event_id,",
      "event_type,",
      "created_at,",
      "MAX(CASE",
      "WHEN",
      "status",
      "=",
      "'处理中'",
      "THEN",
      "occurrence_time",
      "END)",
      "as",
      "processing_start,",
      "MAX(CASE",
      "WHEN",
      "status",
      "=",
      "'已解决'",
      "THEN",
      "occurrence_time",
      "END)",
      "as",
      "resolved_time",
      "FROM",
      "risk_events",
      "GROUP",
      "BY",
      "event_id,",
      "event_type,",
      "created_at)",
      "SELECT",
      "event_type,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(resolved_time",
      "-",
      "created_at))/3600)",
      "as",
      "avg_total_time_hours,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(processing_start",
      "-",
      "created_at))/3600)",
      "as",
      "avg_unprocessed_time_hours,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(resolved_time",
      "-",
      "processing_start))/3600)",
      "as",
      "avg_processing_time_hours",
      "FROM",
      "event_timelines",
      "WHERE",
      "resolved_time",
      "IS",
      "NOT",
      "NULL",
      "GROUP",
      "BY",
      "event_type"
    ],
    "question_toks": [
      "计算每种风险事件类型的平均处理时间（从创建到解决）和每个处理阶段（未处理、处理中、已解决）的平均持续时间"
    ],
    "result_fields": [
      "event_id",
      "event_type",
      "created_at",
      "MAX(CASE WHEN status = '处理中' THEN occurrence_time END)",
      "MAX(CASE WHEN status = '已解决' THEN occurrence_time END)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT alert_type, COUNT(*) AS alert_count, AVG(EXTRACT(EPOCH FROM (resolved_time - alert_time))) AS avg_processing_time FROM (SELECT a.alert_type, a.alert_time, l.audit_time AS resolved_time FROM alerts a LEFT JOIN audit_logs l ON a.alert_id = l.alert_id WHERE a.status = '已解决') AS resolved_alerts GROUP BY alert_type;",
    "question": "列出每种预警类型的数量及其对应的平均处理时间。",
    "query_toks": [
      "SELECT",
      "alert_type,",
      "COUNT(*)",
      "AS",
      "alert_count,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(resolved_time",
      "-",
      "alert_time)))",
      "AS",
      "avg_processing_time",
      "FROM",
      "(SELECT",
      "a.alert_type,",
      "a.alert_time,",
      "l.audit_time",
      "AS",
      "resolved_time",
      "FROM",
      "alerts",
      "a",
      "LEFT",
      "JOIN",
      "audit_logs",
      "l",
      "ON",
      "a.alert_id",
      "=",
      "l.alert_id",
      "WHERE",
      "a.status",
      "=",
      "'已解决')",
      "AS",
      "resolved_alerts",
      "GROUP",
      "BY",
      "alert_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "alert_type,",
      "COUNT(*)",
      "AS",
      "alert_count,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(resolved_time",
      "-",
      "alert_time)))",
      "AS",
      "avg_processing_time",
      "FROM",
      "(SELECT",
      "a.alert_type,",
      "a.alert_time,",
      "l.audit_time",
      "AS",
      "resolved_time",
      "FROM",
      "alerts",
      "a",
      "LEFT",
      "JOIN",
      "audit_logs",
      "l",
      "ON",
      "a.alert_id",
      "=",
      "l.alert_id",
      "WHERE",
      "a.status",
      "=",
      "'已解决')",
      "AS",
      "resolved_alerts",
      "GROUP",
      "BY",
      "alert_type;"
    ],
    "question_toks": [
      "列出每种预警类型的数量及其对应的平均处理时间。"
    ],
    "result_fields": [
      "alert_type",
      "COUNT(*)",
      "AVG(EXTRACT(EPOCH"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT event_type, AVG(EXTRACT(EPOCH FROM (CASE WHEN status = '已解决' THEN CURRENT_TIMESTAMP ELSE NULL END - created_at))/86400) as avg_resolution_days FROM risk_events WHERE status = '已解决' GROUP BY event_type",
    "question": "统计每个风险事件类型的平均处理时间（从创建到解决）",
    "query_toks": [
      "SELECT",
      "event_type,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(CASE",
      "WHEN",
      "status",
      "=",
      "'已解决'",
      "THEN",
      "CURRENT_TIMESTAMP",
      "ELSE",
      "NULL",
      "END",
      "-",
      "created_at))/86400)",
      "as",
      "avg_resolution_days",
      "FROM",
      "risk_events",
      "WHERE",
      "status",
      "=",
      "'已解决'",
      "GROUP",
      "BY",
      "event_type"
    ],
    "query_toks_no_value": [
      "SELECT",
      "event_type,",
      "AVG(EXTRACT(EPOCH",
      "FROM",
      "(CASE",
      "WHEN",
      "status",
      "=",
      "'已解决'",
      "THEN",
      "CURRENT_TIMESTAMP",
      "ELSE",
      "NULL",
      "END",
      "-",
      "created_at))/86400)",
      "as",
      "avg_resolution_days",
      "FROM",
      "risk_events",
      "WHERE",
      "status",
      "=",
      "'已解决'",
      "GROUP",
      "BY",
      "event_type"
    ],
    "question_toks": [
      "统计每个风险事件类型的平均处理时间（从创建到解决）"
    ],
    "result_fields": [
      "event_type",
      "AVG(EXTRACT(EPOCH"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT a.alert_content, re.status FROM alerts a JOIN risk_events re ON a.event_id = re.event_id WHERE a.rule_id IS NOT NULL;",
    "question": "找出所有触发规则的预警信息及其对应的风险事件状态。",
    "query_toks": [
      "SELECT",
      "a.alert_content,",
      "re.status",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "a.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "a.rule_id",
      "IS",
      "NOT",
      "NULL;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.alert_content,",
      "re.status",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "a.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "a.rule_id",
      "IS",
      "NOT",
      "NULL;"
    ],
    "question_toks": [
      "找出所有触发规则的预警信息及其对应的风险事件状态。"
    ],
    "result_fields": [
      "a.alert_content",
      "re.status"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_name, COUNT(DISTINCT t.transaction_id) as high_risk_transactions, COUNT(DISTINCT a.alert_id) as high_level_alerts FROM customers c JOIN transactions t ON c.customer_id = t.customer_id LEFT JOIN alerts a ON t.event_id = a.event_id WHERE t.risk_score > 80 AND a.alert_level = '高' AND EXTRACT(YEAR FROM t.transaction_date) = 2023 GROUP BY c.customer_id, c.customer_name HAVING COUNT(DISTINCT t.transaction_id) > 0 AND COUNT(DISTINCT a.alert_id) > 0 ORDER BY high_risk_transactions DESC, high_level_alerts DESC;",
    "question": "查询所有在2023年进行过高风险交易（风险评分大于80）且产生过高级别预警的客户，显示客户名称、高风险交易次数和高级别预警次数。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "COUNT(DISTINCT",
      "t.transaction_id)",
      "as",
      "high_risk_transactions,",
      "COUNT(DISTINCT",
      "a.alert_id)",
      "as",
      "high_level_alerts",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "LEFT",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "t.event_id",
      "=",
      "a.event_id",
      "WHERE",
      "t.risk_score",
      ">",
      "80",
      "AND",
      "a.alert_level",
      "=",
      "'高'",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "t.transaction_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "c.customer_id,",
      "c.customer_name",
      "HAVING",
      "COUNT(DISTINCT",
      "t.transaction_id)",
      ">",
      "0",
      "AND",
      "COUNT(DISTINCT",
      "a.alert_id)",
      ">",
      "0",
      "ORDER",
      "BY",
      "high_risk_transactions",
      "DESC,",
      "high_level_alerts",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "COUNT(DISTINCT",
      "t.transaction_id)",
      "as",
      "high_risk_transactions,",
      "COUNT(DISTINCT",
      "a.alert_id)",
      "as",
      "high_level_alerts",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "LEFT",
      "JOIN",
      "alerts",
      "a",
      "ON",
      "t.event_id",
      "=",
      "a.event_id",
      "WHERE",
      "t.risk_score",
      ">",
      "80",
      "AND",
      "a.alert_level",
      "=",
      "'高'",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "t.transaction_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "c.customer_id,",
      "c.customer_name",
      "HAVING",
      "COUNT(DISTINCT",
      "t.transaction_id)",
      ">",
      "0",
      "AND",
      "COUNT(DISTINCT",
      "a.alert_id)",
      ">",
      "0",
      "ORDER",
      "BY",
      "high_risk_transactions",
      "DESC,",
      "high_level_alerts",
      "DESC;"
    ],
    "question_toks": [
      "查询所有在2023年进行过高风险交易（风险评分大于80）且产生过高级别预警的客户，显示客户名称、高风险交易次数和高级别预警次数。"
    ],
    "result_fields": [
      "c.customer_name",
      "COUNT(DISTINCT t.transaction_id)",
      "COUNT(DISTINCT a.alert_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, re.severity, ra.risk_level FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id;",
    "question": "列出每个风险事件的严重程度及其关联的风险评估结果。",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "re.severity,",
      "ra.risk_level",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "re.severity,",
      "ra.risk_level",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id;"
    ],
    "question_toks": [
      "列出每个风险事件的严重程度及其关联的风险评估结果。"
    ],
    "result_fields": [
      "re.event_id",
      "re.severity",
      "ra.risk_level"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT transaction_id, transaction_type FROM transactions WHERE event_id = 'RE9297';",
    "question": "查询所有与特定风险事件关联的交易记录。",
    "query_toks": [
      "SELECT",
      "transaction_id,",
      "transaction_type",
      "FROM",
      "transactions",
      "WHERE",
      "event_id",
      "=",
      "'RE9297';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "transaction_id,",
      "transaction_type",
      "FROM",
      "transactions",
      "WHERE",
      "event_id",
      "=",
      "'RE9297';"
    ],
    "question_toks": [
      "查询所有与特定风险事件关联的交易记录。"
    ],
    "result_fields": [
      "transaction_id",
      "transaction_type"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_type, COUNT(c.customer_id) AS customer_count FROM customers c GROUP BY c.customer_type;",
    "question": "统计每种客户类型的数量",
    "query_toks": [
      "SELECT",
      "c.customer_type,",
      "COUNT(c.customer_id)",
      "AS",
      "customer_count",
      "FROM",
      "customers",
      "c",
      "GROUP",
      "BY",
      "c.customer_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_type,",
      "COUNT(c.customer_id)",
      "AS",
      "customer_count",
      "FROM",
      "customers",
      "c",
      "GROUP",
      "BY",
      "c.customer_type;"
    ],
    "question_toks": [
      "统计每种客户类型的数量"
    ],
    "result_fields": [
      "c.customer_type",
      "COUNT(c.customer_id)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ra.assessment_id, re.event_description FROM risk_assessments ra JOIN risk_events re ON ra.event_id = re.event_id;",
    "question": "获取所有风险评估及其关联的风险事件信息。",
    "query_toks": [
      "SELECT",
      "ra.assessment_id,",
      "re.event_description",
      "FROM",
      "risk_assessments",
      "ra",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "ra.event_id",
      "=",
      "re.event_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ra.assessment_id,",
      "re.event_description",
      "FROM",
      "risk_assessments",
      "ra",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "ra.event_id",
      "=",
      "re.event_id;"
    ],
    "question_toks": [
      "获取所有风险评估及其关联的风险事件信息。"
    ],
    "result_fields": [
      "ra.assessment_id",
      "re.event_description"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.customer_name, c.risk_level FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id AND t.transaction_date >= date('now') - INTERVAL '30 days' WHERE c.risk_level = '高' AND t.transaction_id IS NULL",
    "question": "找出所有高风险客户中，最近30天内没有任何交易记录的客户",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.risk_level",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "AND",
      "t.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'30",
      "days'",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "t.transaction_id",
      "IS",
      "NULL"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.risk_level",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "AND",
      "t.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'30",
      "days'",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "t.transaction_id",
      "IS",
      "NULL"
    ],
    "question_toks": [
      "找出所有高风险客户中，最近30天内没有任何交易记录的客户"
    ],
    "result_fields": [
      "c.customer_id",
      "c.customer_name",
      "c.risk_level"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.customer_name, c.risk_level, t.transaction_date, t.amount, t.risk_score FROM customers c LEFT JOIN (SELECT customer_id, transaction_date, amount, risk_score, ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY transaction_date DESC) as rn FROM transactions) t ON c.customer_id = t.customer_id WHERE c.risk_level = '高' AND t.rn = 1 ORDER BY t.risk_score DESC, t.amount DESC",
    "question": "列出所有高风险等级的客户及其最近一次交易信息，包括客户名称、风险等级、最近交易日期、交易金额和交易风险评分。",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.risk_level,",
      "t.transaction_date,",
      "t.amount,",
      "t.risk_score",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "(SELECT",
      "customer_id,",
      "transaction_date,",
      "amount,",
      "risk_score,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "transaction_date",
      "DESC)",
      "as",
      "rn",
      "FROM",
      "transactions)",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "t.rn",
      "=",
      "1",
      "ORDER",
      "BY",
      "t.risk_score",
      "DESC,",
      "t.amount",
      "DESC"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.risk_level,",
      "t.transaction_date,",
      "t.amount,",
      "t.risk_score",
      "FROM",
      "customers",
      "c",
      "LEFT",
      "JOIN",
      "(SELECT",
      "customer_id,",
      "transaction_date,",
      "amount,",
      "risk_score,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "customer_id",
      "ORDER",
      "BY",
      "transaction_date",
      "DESC)",
      "as",
      "rn",
      "FROM",
      "transactions)",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "t.rn",
      "=",
      "1",
      "ORDER",
      "BY",
      "t.risk_score",
      "DESC,",
      "t.amount",
      "DESC"
    ],
    "question_toks": [
      "列出所有高风险等级的客户及其最近一次交易信息，包括客户名称、风险等级、最近交易日期、交易金额和交易风险评分。"
    ],
    "result_fields": [
      "c.customer_id",
      "c.customer_name",
      "c.risk_level",
      "t.transaction_date",
      "t.amount",
      "t.risk_score"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT t.transaction_type, COUNT(t.transaction_id) AS transaction_count, COUNT(CASE WHEN t.status = '成功' THEN 1 END) AS success_count FROM transactions t GROUP BY t.transaction_type;",
    "question": "统计每种交易类型的成功率，并显示交易数量。",
    "query_toks": [
      "SELECT",
      "t.transaction_type,",
      "COUNT(t.transaction_id)",
      "AS",
      "transaction_count,",
      "COUNT(CASE",
      "WHEN",
      "t.status",
      "=",
      "'成功'",
      "THEN",
      "1",
      "END)",
      "AS",
      "success_count",
      "FROM",
      "transactions",
      "t",
      "GROUP",
      "BY",
      "t.transaction_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "t.transaction_type,",
      "COUNT(t.transaction_id)",
      "AS",
      "transaction_count,",
      "COUNT(CASE",
      "WHEN",
      "t.status",
      "=",
      "'成功'",
      "THEN",
      "1",
      "END)",
      "AS",
      "success_count",
      "FROM",
      "transactions",
      "t",
      "GROUP",
      "BY",
      "t.transaction_type;"
    ],
    "question_toks": [
      "统计每种交易类型的成功率，并显示交易数量。"
    ],
    "result_fields": [
      "t.transaction_type",
      "COUNT(t.transaction_id)",
      "COUNT(CASE WHEN t.status = '成功' THEN 1 END)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT e.event_id, e.event_type, a.risk_level, a.mitigation_plan, a.assessor FROM risk_events e JOIN risk_assessments a ON e.event_id = a.event_id WHERE a.risk_level = '高'",
    "question": "列出所有风险评估结果为\"高\"风险的事件，以及相关的缓解计划和负责人",
    "query_toks": [
      "SELECT",
      "e.event_id,",
      "e.event_type,",
      "a.risk_level,",
      "a.mitigation_plan,",
      "a.assessor",
      "FROM",
      "risk_events",
      "e",
      "JOIN",
      "risk_assessments",
      "a",
      "ON",
      "e.event_id",
      "=",
      "a.event_id",
      "WHERE",
      "a.risk_level",
      "=",
      "'高'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "e.event_id,",
      "e.event_type,",
      "a.risk_level,",
      "a.mitigation_plan,",
      "a.assessor",
      "FROM",
      "risk_events",
      "e",
      "JOIN",
      "risk_assessments",
      "a",
      "ON",
      "e.event_id",
      "=",
      "a.event_id",
      "WHERE",
      "a.risk_level",
      "=",
      "'高'"
    ],
    "question_toks": [
      "列出所有风险评估结果为\"高\"风险的事件，以及相关的缓解计划和负责人"
    ],
    "result_fields": [
      "e.event_id",
      "e.event_type",
      "a.risk_level",
      "a.mitigation_plan",
      "a.assessor"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.customer_name, c.credit_score FROM customers c WHERE c.risk_level = '高' AND c.credit_score < 700;",
    "question": "哪些客户的风险等级为高，并且他们的信用评分低于700？",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score",
      "FROM",
      "customers",
      "c",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "c.credit_score",
      "<",
      "700;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.customer_name,",
      "c.credit_score",
      "FROM",
      "customers",
      "c",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "c.credit_score",
      "<",
      "700;"
    ],
    "question_toks": [
      "哪些客户的风险等级为高，并且他们的信用评分低于700？"
    ],
    "result_fields": [
      "c.customer_id",
      "c.customer_name",
      "c.credit_score"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT * FROM customers WHERE risk_level = '高' AND credit_score < 600",
    "question": "查询所有风险等级为'高'且信用评分低于600的客户",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "customers",
      "WHERE",
      "risk_level",
      "=",
      "'高'",
      "AND",
      "credit_score",
      "<",
      "600"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "customers",
      "WHERE",
      "risk_level",
      "=",
      "'高'",
      "AND",
      "credit_score",
      "<",
      "600"
    ],
    "question_toks": [
      "查询所有风险等级为'高'且信用评分低于600的客户"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_id, c.risk_level, SUM(t.amount) AS total_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.status = '成功' GROUP BY c.customer_id, c.risk_level;",
    "question": "查询所有客户的风险等级及其交易金额总和，要求交易状态为成功。",
    "query_toks": [
      "SELECT",
      "c.customer_id,",
      "c.risk_level,",
      "SUM(t.amount)",
      "AS",
      "total_amount",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "t.status",
      "=",
      "'成功'",
      "GROUP",
      "BY",
      "c.customer_id,",
      "c.risk_level;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_id,",
      "c.risk_level,",
      "SUM(t.amount)",
      "AS",
      "total_amount",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "t.status",
      "=",
      "'成功'",
      "GROUP",
      "BY",
      "c.customer_id,",
      "c.risk_level;"
    ],
    "question_toks": [
      "查询所有客户的风险等级及其交易金额总和，要求交易状态为成功。"
    ],
    "result_fields": [
      "c.customer_id",
      "c.risk_level",
      "SUM(t.amount)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rr.report_id, rr.report_type, rr.approval_status, re.event_type, re.event_description FROM risk_reports rr JOIN risk_events re ON rr.event_id = re.event_id WHERE rr.approval_status = '已批准'",
    "question": "查询所有已批准的风险报告及其相关的风险事件详情",
    "query_toks": [
      "SELECT",
      "rr.report_id,",
      "rr.report_type,",
      "rr.approval_status,",
      "re.event_type,",
      "re.event_description",
      "FROM",
      "risk_reports",
      "rr",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已批准'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rr.report_id,",
      "rr.report_type,",
      "rr.approval_status,",
      "re.event_type,",
      "re.event_description",
      "FROM",
      "risk_reports",
      "rr",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'已批准'"
    ],
    "question_toks": [
      "查询所有已批准的风险报告及其相关的风险事件详情"
    ],
    "result_fields": [
      "rr.report_id",
      "rr.report_type",
      "rr.approval_status",
      "re.event_type",
      "re.event_description"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT author, COUNT(*) as report_count FROM risk_reports GROUP BY author ORDER BY report_count DESC LIMIT 1",
    "question": "哪位作者提交的风险报告最多？",
    "query_toks": [
      "SELECT",
      "author,",
      "COUNT(*)",
      "as",
      "report_count",
      "FROM",
      "risk_reports",
      "GROUP",
      "BY",
      "author",
      "ORDER",
      "BY",
      "report_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "SELECT",
      "author,",
      "COUNT(*)",
      "as",
      "report_count",
      "FROM",
      "risk_reports",
      "GROUP",
      "BY",
      "author",
      "ORDER",
      "BY",
      "report_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "question_toks": [
      "哪位作者提交的风险报告最多？"
    ],
    "result_fields": [
      "author",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT event_id, event_type, reporter FROM risk_events WHERE status = '未处理';",
    "question": "列出所有未处理的风险事件及其报告人。",
    "query_toks": [
      "SELECT",
      "event_id,",
      "event_type,",
      "reporter",
      "FROM",
      "risk_events",
      "WHERE",
      "status",
      "=",
      "'未处理';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "event_id,",
      "event_type,",
      "reporter",
      "FROM",
      "risk_events",
      "WHERE",
      "status",
      "=",
      "'未处理';"
    ],
    "question_toks": [
      "列出所有未处理的风险事件及其报告人。"
    ],
    "result_fields": [
      "event_id",
      "event_type",
      "reporter"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.customer_name, c.last_update_date FROM customers c WHERE c.registration_date > '2021-01-01';",
    "question": "列出所有客户及其最后更新日期，筛选出注册日期在2021年之后的客户。",
    "query_toks": [
      "SELECT",
      "c.customer_name,",
      "c.last_update_date",
      "FROM",
      "customers",
      "c",
      "WHERE",
      "c.registration_date",
      ">",
      "'2021-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.customer_name,",
      "c.last_update_date",
      "FROM",
      "customers",
      "c",
      "WHERE",
      "c.registration_date",
      ">",
      "'2021-01-01';"
    ],
    "question_toks": [
      "列出所有客户及其最后更新日期，筛选出注册日期在2021年之后的客户。"
    ],
    "result_fields": [
      "c.customer_name",
      "c.last_update_date"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rr.*, re.event_type, re.event_description FROM risk_reports rr LEFT JOIN risk_events re ON rr.event_id = re.event_id WHERE rr.approved_by = '高志远'",
    "question": "查询所有由'高志远'审批的风险报告及其相关的风险事件信息",
    "query_toks": [
      "SELECT",
      "rr.*,",
      "re.event_type,",
      "re.event_description",
      "FROM",
      "risk_reports",
      "rr",
      "LEFT",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "rr.approved_by",
      "=",
      "'高志远'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rr.*,",
      "re.event_type,",
      "re.event_description",
      "FROM",
      "risk_reports",
      "rr",
      "LEFT",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "rr.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "rr.approved_by",
      "=",
      "'高志远'"
    ],
    "question_toks": [
      "查询所有由'高志远'审批的风险报告及其相关的风险事件信息"
    ],
    "result_fields": [
      "rr.*",
      "re.event_type",
      "re.event_description"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ri.indicator_id, ri.indicator_name, ri.threshold_value, rml.actual_value, rml.monitoring_date as last_update_time FROM risk_indicators ri LEFT JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs WHERE indicator_id = ri.indicator_id)",
    "question": "查询所有风险指标的当前值、阈值和最后更新时间",
    "query_toks": [
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.threshold_value,",
      "rml.actual_value,",
      "rml.monitoring_date",
      "as",
      "last_update_time",
      "FROM",
      "risk_indicators",
      "ri",
      "LEFT",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "WHERE",
      "rml.monitoring_date",
      "=",
      "(SELECT",
      "MAX(monitoring_date)",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "indicator_id",
      "=",
      "ri.indicator_id)"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ri.indicator_id,",
      "ri.indicator_name,",
      "ri.threshold_value,",
      "rml.actual_value,",
      "rml.monitoring_date",
      "as",
      "last_update_time",
      "FROM",
      "risk_indicators",
      "ri",
      "LEFT",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "WHERE",
      "rml.monitoring_date",
      "=",
      "(SELECT",
      "MAX(monitoring_date)",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "indicator_id",
      "=",
      "ri.indicator_id)"
    ],
    "question_toks": [
      "查询所有风险指标的当前值、阈值和最后更新时间"
    ],
    "result_fields": [
      "ri.indicator_id",
      "ri.indicator_name",
      "ri.threshold_value",
      "rml.actual_value",
      "rml.monitoring_date"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ml.log_id, ml.actual_value, ri.indicator_name FROM risk_monitoring_logs ml JOIN risk_indicators ri ON ml.indicator_id = ri.indicator_id;",
    "question": "查询所有风险监控日志与其相关的风险指标。",
    "query_toks": [
      "SELECT",
      "ml.log_id,",
      "ml.actual_value,",
      "ri.indicator_name",
      "FROM",
      "risk_monitoring_logs",
      "ml",
      "JOIN",
      "risk_indicators",
      "ri",
      "ON",
      "ml.indicator_id",
      "=",
      "ri.indicator_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ml.log_id,",
      "ml.actual_value,",
      "ri.indicator_name",
      "FROM",
      "risk_monitoring_logs",
      "ml",
      "JOIN",
      "risk_indicators",
      "ri",
      "ON",
      "ml.indicator_id",
      "=",
      "ri.indicator_id;"
    ],
    "question_toks": [
      "查询所有风险监控日志与其相关的风险指标。"
    ],
    "result_fields": [
      "ml.log_id",
      "ml.actual_value",
      "ri.indicator_name"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT AVG(impact_score) AS avg_impact, AVG(probability_score) AS avg_probability FROM risk_assessments;",
    "question": "获取风险评估中影响程度评分和发生概率评分的平均值。",
    "query_toks": [
      "SELECT",
      "AVG(impact_score)",
      "AS",
      "avg_impact,",
      "AVG(probability_score)",
      "AS",
      "avg_probability",
      "FROM",
      "risk_assessments;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "AVG(impact_score)",
      "AS",
      "avg_impact,",
      "AVG(probability_score)",
      "AS",
      "avg_probability",
      "FROM",
      "risk_assessments;"
    ],
    "question_toks": [
      "获取风险评估中影响程度评分和发生概率评分的平均值。"
    ],
    "result_fields": [
      "AVG(impact_score)",
      "AVG(probability_score)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, re.event_description, ra.assessor FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE ra.assessor IS NOT NULL;",
    "question": "列出所有风险事件及其相关的风险评估，要求评估人不为空。",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "ra.assessor",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "WHERE",
      "ra.assessor",
      "IS",
      "NOT",
      "NULL;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "ra.assessor",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "WHERE",
      "ra.assessor",
      "IS",
      "NOT",
      "NULL;"
    ],
    "question_toks": [
      "列出所有风险事件及其相关的风险评估，要求评估人不为空。"
    ],
    "result_fields": [
      "re.event_id",
      "re.event_description",
      "ra.assessor"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT SUM(amount) FROM transactions WHERE transaction_type = '退款';",
    "question": "请找出所有客户中，交易类型为“退款”的记录，并计算其交易金额的总和。",
    "query_toks": [
      "SELECT",
      "SUM(amount)",
      "FROM",
      "transactions",
      "WHERE",
      "transaction_type",
      "=",
      "'退款';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "SUM(amount)",
      "FROM",
      "transactions",
      "WHERE",
      "transaction_type",
      "=",
      "'退款';"
    ],
    "question_toks": [
      "请找出所有客户中，交易类型为“退款”的记录，并计算其交易金额的总和。"
    ],
    "result_fields": [
      "SUM(amount)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ri.*, rml.actual_value, rml.monitoring_date FROM risk_indicators ri LEFT JOIN risk_monitoring_logs rml ON ri.indicator_id = rml.indicator_id WHERE rml.monitoring_date = (SELECT MAX(monitoring_date) FROM risk_monitoring_logs WHERE indicator_id = ri.indicator_id)",
    "question": "列出所有风险指标及其最新的监控记录",
    "query_toks": [
      "SELECT",
      "ri.*,",
      "rml.actual_value,",
      "rml.monitoring_date",
      "FROM",
      "risk_indicators",
      "ri",
      "LEFT",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "WHERE",
      "rml.monitoring_date",
      "=",
      "(SELECT",
      "MAX(monitoring_date)",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "indicator_id",
      "=",
      "ri.indicator_id)"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ri.*,",
      "rml.actual_value,",
      "rml.monitoring_date",
      "FROM",
      "risk_indicators",
      "ri",
      "LEFT",
      "JOIN",
      "risk_monitoring_logs",
      "rml",
      "ON",
      "ri.indicator_id",
      "=",
      "rml.indicator_id",
      "WHERE",
      "rml.monitoring_date",
      "=",
      "(SELECT",
      "MAX(monitoring_date)",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "indicator_id",
      "=",
      "ri.indicator_id)"
    ],
    "question_toks": [
      "列出所有风险指标及其最新的监控记录"
    ],
    "result_fields": [
      "ri.*",
      "rml.actual_value",
      "rml.monitoring_date"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_type, AVG(ra.assessment_date - re.occurrence_time) as avg_mitigation_time FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id GROUP BY re.event_type",
    "question": "计算每个风险类型的平均缓解计划执行时间",
    "query_toks": [
      "SELECT",
      "re.event_type,",
      "AVG(ra.assessment_date",
      "-",
      "re.occurrence_time)",
      "as",
      "avg_mitigation_time",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "GROUP",
      "BY",
      "re.event_type"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_type,",
      "AVG(ra.assessment_date",
      "-",
      "re.occurrence_time)",
      "as",
      "avg_mitigation_time",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "GROUP",
      "BY",
      "re.event_type"
    ],
    "question_toks": [
      "计算每个风险类型的平均缓解计划执行时间"
    ],
    "result_fields": [
      "re.event_type",
      "AVG(ra.assessment_date - re.occurrence_time)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT event_type, COUNT(*) as event_count FROM risk_events GROUP BY event_type;",
    "question": "统计每种风险类型下的风险事件数量。",
    "query_toks": [
      "SELECT",
      "event_type,",
      "COUNT(*)",
      "as",
      "event_count",
      "FROM",
      "risk_events",
      "GROUP",
      "BY",
      "event_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "event_type,",
      "COUNT(*)",
      "as",
      "event_count",
      "FROM",
      "risk_events",
      "GROUP",
      "BY",
      "event_type;"
    ],
    "question_toks": [
      "统计每种风险类型下的风险事件数量。"
    ],
    "result_fields": [
      "event_type",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ra.assessment_id, re.event_description, ra.assessor FROM risk_assessments ra JOIN risk_events re ON ra.event_id = re.event_id;",
    "question": "获取所有风险评估及其对应的风险事件和评估人。",
    "query_toks": [
      "SELECT",
      "ra.assessment_id,",
      "re.event_description,",
      "ra.assessor",
      "FROM",
      "risk_assessments",
      "ra",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "ra.event_id",
      "=",
      "re.event_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ra.assessment_id,",
      "re.event_description,",
      "ra.assessor",
      "FROM",
      "risk_assessments",
      "ra",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "ra.event_id",
      "=",
      "re.event_id;"
    ],
    "question_toks": [
      "获取所有风险评估及其对应的风险事件和评估人。"
    ],
    "result_fields": [
      "ra.assessment_id",
      "re.event_description",
      "ra.assessor"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT * FROM risk_monitoring_logs WHERE is_exceeding_threshold = TRUE; SELECT COUNT(*) FROM risk_monitoring_logs WHERE is_exceeding_threshold = TRUE;",
    "question": "请列出风险监控日志中，实际值超过阈值的所有记录，并计算这些记录的总数。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "is_exceeding_threshold",
      "=",
      "TRUE;",
      "SELECT",
      "COUNT(*)",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "is_exceeding_threshold",
      "=",
      "TRUE;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "is_exceeding_threshold",
      "=",
      "TRUE;",
      "SELECT",
      "COUNT(*)",
      "FROM",
      "risk_monitoring_logs",
      "WHERE",
      "is_exceeding_threshold",
      "=",
      "TRUE;"
    ],
    "question_toks": [
      "请列出风险监控日志中，实际值超过阈值的所有记录，并计算这些记录的总数。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, ra.assessment_id, ra.mitigation_plan FROM risk_events re LEFT JOIN risk_assessments ra ON re.event_id = ra.event_id;",
    "question": "查找每个风险事件的评估结果及缓解计划。",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "ra.assessment_id,",
      "ra.mitigation_plan",
      "FROM",
      "risk_events",
      "re",
      "LEFT",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "ra.assessment_id,",
      "ra.mitigation_plan",
      "FROM",
      "risk_events",
      "re",
      "LEFT",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id;"
    ],
    "question_toks": [
      "查找每个风险事件的评估结果及缓解计划。"
    ],
    "result_fields": [
      "re.event_id",
      "ra.assessment_id",
      "ra.mitigation_plan"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT report_id, report_type, report_date, author FROM risk_reports WHERE approval_status = '已批准';",
    "question": "查找所有已批准的风险报告及其作者信息。",
    "query_toks": [
      "SELECT",
      "report_id,",
      "report_type,",
      "report_date,",
      "author",
      "FROM",
      "risk_reports",
      "WHERE",
      "approval_status",
      "=",
      "'已批准';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "report_id,",
      "report_type,",
      "report_date,",
      "author",
      "FROM",
      "risk_reports",
      "WHERE",
      "approval_status",
      "=",
      "'已批准';"
    ],
    "question_toks": [
      "查找所有已批准的风险报告及其作者信息。"
    ],
    "result_fields": [
      "report_id",
      "report_type",
      "report_date",
      "author"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT c.* FROM customers c WHERE c.risk_level = '高' AND c.credit_score > (SELECT AVG(credit_score) FROM customers)",
    "question": "列出所有风险等级为高但信用评分高于平均水平的客户",
    "query_toks": [
      "SELECT",
      "c.*",
      "FROM",
      "customers",
      "c",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "c.credit_score",
      ">",
      "(SELECT",
      "AVG(credit_score)",
      "FROM",
      "customers)"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.*",
      "FROM",
      "customers",
      "c",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "c.credit_score",
      ">",
      "(SELECT",
      "AVG(credit_score)",
      "FROM",
      "customers)"
    ],
    "question_toks": [
      "列出所有风险等级为高但信用评分高于平均水平的客户"
    ],
    "result_fields": [
      "c.*"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT alert_id, alert_content, assigned_to FROM alerts;",
    "question": "获取所有预警信息的内容以及分配给谁处理。",
    "query_toks": [
      "SELECT",
      "alert_id,",
      "alert_content,",
      "assigned_to",
      "FROM",
      "alerts;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "alert_id,",
      "alert_content,",
      "assigned_to",
      "FROM",
      "alerts;"
    ],
    "question_toks": [
      "获取所有预警信息的内容以及分配给谁处理。"
    ],
    "result_fields": [
      "alert_id",
      "alert_content",
      "assigned_to"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, re.event_description, re.severity, re.created_at, MAX(ra.assessment_date) AS resolved_date, MAX(ra.assessment_date) - re.created_at AS resolution_time FROM risk_events re JOIN risk_assessments ra ON re.event_id = ra.event_id WHERE re.status = '已解决' GROUP BY re.event_id, re.event_description, re.severity, re.created_at ORDER BY resolution_time DESC LIMIT 10",
    "question": "查找所有已解决的风险事件中，解决时间最长的前10个事件，显示事件描述、严重程度、创建时间和解决时间。",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "re.severity,",
      "re.created_at,",
      "MAX(ra.assessment_date)",
      "AS",
      "resolved_date,",
      "MAX(ra.assessment_date)",
      "-",
      "re.created_at",
      "AS",
      "resolution_time",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "WHERE",
      "re.status",
      "=",
      "'已解决'",
      "GROUP",
      "BY",
      "re.event_id,",
      "re.event_description,",
      "re.severity,",
      "re.created_at",
      "ORDER",
      "BY",
      "resolution_time",
      "DESC",
      "LIMIT",
      "10"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "re.event_description,",
      "re.severity,",
      "re.created_at,",
      "MAX(ra.assessment_date)",
      "AS",
      "resolved_date,",
      "MAX(ra.assessment_date)",
      "-",
      "re.created_at",
      "AS",
      "resolution_time",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_assessments",
      "ra",
      "ON",
      "re.event_id",
      "=",
      "ra.event_id",
      "WHERE",
      "re.status",
      "=",
      "'已解决'",
      "GROUP",
      "BY",
      "re.event_id,",
      "re.event_description,",
      "re.severity,",
      "re.created_at",
      "ORDER",
      "BY",
      "resolution_time",
      "DESC",
      "LIMIT",
      "10"
    ],
    "question_toks": [
      "查找所有已解决的风险事件中，解决时间最长的前10个事件，显示事件描述、严重程度、创建时间和解决时间。"
    ],
    "result_fields": [
      "re.event_id",
      "re.event_description",
      "re.severity",
      "re.created_at",
      "MAX(ra.assessment_date)",
      "MAX(ra.assessment_date) - re.created_at"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT rc.*, ri.indicator_name FROM rule_configurations rc LEFT JOIN risk_indicators ri ON rc.indicator_id = ri.indicator_id WHERE rc.is_active = TRUE",
    "question": "查找所有激活状态的规则配置及其关联的风险指标",
    "query_toks": [
      "SELECT",
      "rc.*,",
      "ri.indicator_name",
      "FROM",
      "rule_configurations",
      "rc",
      "LEFT",
      "JOIN",
      "risk_indicators",
      "ri",
      "ON",
      "rc.indicator_id",
      "=",
      "ri.indicator_id",
      "WHERE",
      "rc.is_active",
      "=",
      "TRUE"
    ],
    "query_toks_no_value": [
      "SELECT",
      "rc.*,",
      "ri.indicator_name",
      "FROM",
      "rule_configurations",
      "rc",
      "LEFT",
      "JOIN",
      "risk_indicators",
      "ri",
      "ON",
      "rc.indicator_id",
      "=",
      "ri.indicator_id",
      "WHERE",
      "rc.is_active",
      "=",
      "TRUE"
    ],
    "question_toks": [
      "查找所有激活状态的规则配置及其关联的风险指标"
    ],
    "result_fields": [
      "rc.*",
      "ri.indicator_name"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT risk_level, COUNT(*) AS customer_count FROM customers GROUP BY risk_level;",
    "question": "计算每种风险等级的客户数量，并列出风险等级及其客户总数。",
    "query_toks": [
      "SELECT",
      "risk_level,",
      "COUNT(*)",
      "AS",
      "customer_count",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "risk_level;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "risk_level,",
      "COUNT(*)",
      "AS",
      "customer_count",
      "FROM",
      "customers",
      "GROUP",
      "BY",
      "risk_level;"
    ],
    "question_toks": [
      "计算每种风险等级的客户数量，并列出风险等级及其客户总数。"
    ],
    "result_fields": [
      "risk_level",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT event_id, event_description, reporter FROM risk_events WHERE status = '未处理';",
    "question": "获取所有未处理的风险事件及其报告人。",
    "query_toks": [
      "SELECT",
      "event_id,",
      "event_description,",
      "reporter",
      "FROM",
      "risk_events",
      "WHERE",
      "status",
      "=",
      "'未处理';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "event_id,",
      "event_description,",
      "reporter",
      "FROM",
      "risk_events",
      "WHERE",
      "status",
      "=",
      "'未处理';"
    ],
    "question_toks": [
      "获取所有未处理的风险事件及其报告人。"
    ],
    "result_fields": [
      "event_id",
      "event_description",
      "reporter"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT created_at FROM risk_events WHERE severity >= 3;",
    "question": "找出所有风险事件中，严重程度为3及以上的事件，并列出其创建时间。",
    "query_toks": [
      "SELECT",
      "created_at",
      "FROM",
      "risk_events",
      "WHERE",
      "severity",
      ">=",
      "3;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "created_at",
      "FROM",
      "risk_events",
      "WHERE",
      "severity",
      ">=",
      "3;"
    ],
    "question_toks": [
      "找出所有风险事件中，严重程度为3及以上的事件，并列出其创建时间。"
    ],
    "result_fields": [
      "created_at"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ra.assessment_id, ra.mitigation_plan, ra.assessor FROM risk_assessments ra;",
    "question": "获取所有风险评估的缓解计划及其评估人",
    "query_toks": [
      "SELECT",
      "ra.assessment_id,",
      "ra.mitigation_plan,",
      "ra.assessor",
      "FROM",
      "risk_assessments",
      "ra;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ra.assessment_id,",
      "ra.mitigation_plan,",
      "ra.assessor",
      "FROM",
      "risk_assessments",
      "ra;"
    ],
    "question_toks": [
      "获取所有风险评估的缓解计划及其评估人"
    ],
    "result_fields": [
      "ra.assessment_id",
      "ra.mitigation_plan",
      "ra.assessor"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT a.alert_id, a.alert_content, a.alert_level, re.event_description, al.audit_comments, al.audit_time FROM alerts a JOIN risk_events re ON a.event_id = re.event_id LEFT JOIN audit_logs al ON a.alert_id = al.alert_id WHERE a.status != '已解决' AND a.alert_level = '高' AND al.audit_time = (SELECT MAX(audit_time) FROM audit_logs WHERE alert_id = a.alert_id)",
    "question": "列出所有未解决的高级别预警，包括相关的风险事件描述和最新的审核意见",
    "query_toks": [
      "SELECT",
      "a.alert_id,",
      "a.alert_content,",
      "a.alert_level,",
      "re.event_description,",
      "al.audit_comments,",
      "al.audit_time",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "a.event_id",
      "=",
      "re.event_id",
      "LEFT",
      "JOIN",
      "audit_logs",
      "al",
      "ON",
      "a.alert_id",
      "=",
      "al.alert_id",
      "WHERE",
      "a.status",
      "!=",
      "'已解决'",
      "AND",
      "a.alert_level",
      "=",
      "'高'",
      "AND",
      "al.audit_time",
      "=",
      "(SELECT",
      "MAX(audit_time)",
      "FROM",
      "audit_logs",
      "WHERE",
      "alert_id",
      "=",
      "a.alert_id)"
    ],
    "query_toks_no_value": [
      "SELECT",
      "a.alert_id,",
      "a.alert_content,",
      "a.alert_level,",
      "re.event_description,",
      "al.audit_comments,",
      "al.audit_time",
      "FROM",
      "alerts",
      "a",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "a.event_id",
      "=",
      "re.event_id",
      "LEFT",
      "JOIN",
      "audit_logs",
      "al",
      "ON",
      "a.alert_id",
      "=",
      "al.alert_id",
      "WHERE",
      "a.status",
      "!=",
      "'已解决'",
      "AND",
      "a.alert_level",
      "=",
      "'高'",
      "AND",
      "al.audit_time",
      "=",
      "(SELECT",
      "MAX(audit_time)",
      "FROM",
      "audit_logs",
      "WHERE",
      "alert_id",
      "=",
      "a.alert_id)"
    ],
    "question_toks": [
      "列出所有未解决的高级别预警，包括相关的风险事件描述和最新的审核意见"
    ],
    "result_fields": [
      "a.alert_id",
      "a.alert_content",
      "a.alert_level",
      "re.event_description",
      "al.audit_comments",
      "al.audit_time"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT ra.assessment_id, ra.risk_level, ra.mitigation_plan, re.event_id, re.event_type, re.event_description FROM risk_assessments ra INNER JOIN risk_events re ON ra.event_id = re.event_id WHERE ra.risk_level = '高'",
    "question": "查询所有风险评估结果为\"高\"的事件及其相关的缓解计划",
    "query_toks": [
      "SELECT",
      "ra.assessment_id,",
      "ra.risk_level,",
      "ra.mitigation_plan,",
      "re.event_id,",
      "re.event_type,",
      "re.event_description",
      "FROM",
      "risk_assessments",
      "ra",
      "INNER",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "ra.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "ra.risk_level",
      "=",
      "'高'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "ra.assessment_id,",
      "ra.risk_level,",
      "ra.mitigation_plan,",
      "re.event_id,",
      "re.event_type,",
      "re.event_description",
      "FROM",
      "risk_assessments",
      "ra",
      "INNER",
      "JOIN",
      "risk_events",
      "re",
      "ON",
      "ra.event_id",
      "=",
      "re.event_id",
      "WHERE",
      "ra.risk_level",
      "=",
      "'高'"
    ],
    "question_toks": [
      "查询所有风险评估结果为\"高\"的事件及其相关的缓解计划"
    ],
    "result_fields": [
      "ra.assessment_id",
      "ra.risk_level",
      "ra.mitigation_plan",
      "re.event_id",
      "re.event_type",
      "re.event_description"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT DISTINCT c.customer_id, c.customer_name, t.amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE c.risk_level = '高' AND t.amount > 100000 AND t.transaction_date >= date('now') - INTERVAL '1 year'",
    "question": "哪些高风险等级的客户在过去一年内进行了大额交易（超过100,000）？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "c.customer_id,",
      "c.customer_name,",
      "t.amount",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "t.amount",
      ">",
      "100000",
      "AND",
      "t.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "c.customer_id,",
      "c.customer_name,",
      "t.amount",
      "FROM",
      "customers",
      "c",
      "JOIN",
      "transactions",
      "t",
      "ON",
      "c.customer_id",
      "=",
      "t.customer_id",
      "WHERE",
      "c.risk_level",
      "=",
      "'高'",
      "AND",
      "t.amount",
      ">",
      "100000",
      "AND",
      "t.transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'"
    ],
    "question_toks": [
      "哪些高风险等级的客户在过去一年内进行了大额交易（超过100,000）？"
    ],
    "result_fields": [
      "DISTINCT c.customer_id",
      "c.customer_name",
      "t.amount"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT assessment_id, event_id FROM risk_assessments WHERE impact_score > 8 AND risk_level = '高';",
    "question": "查询风险评估中，影响程度评分大于8且风险等级为高的评估记录。",
    "query_toks": [
      "SELECT",
      "assessment_id,",
      "event_id",
      "FROM",
      "risk_assessments",
      "WHERE",
      "impact_score",
      ">",
      "8",
      "AND",
      "risk_level",
      "=",
      "'高';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "assessment_id,",
      "event_id",
      "FROM",
      "risk_assessments",
      "WHERE",
      "impact_score",
      ">",
      "8",
      "AND",
      "risk_level",
      "=",
      "'高';"
    ],
    "question_toks": [
      "查询风险评估中，影响程度评分大于8且风险等级为高的评估记录。"
    ],
    "result_fields": [
      "assessment_id",
      "event_id"
    ]
  },
  {
    "db_id": "risk_control",
    "query": "SELECT re.event_id, rr.report_type, rr.report_content FROM risk_events re JOIN risk_reports rr ON re.event_id = rr.event_id;",
    "question": "获取所有风险事件及其报告类型和内容。",
    "query_toks": [
      "SELECT",
      "re.event_id,",
      "rr.report_type,",
      "rr.report_content",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_reports",
      "rr",
      "ON",
      "re.event_id",
      "=",
      "rr.event_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.event_id,",
      "rr.report_type,",
      "rr.report_content",
      "FROM",
      "risk_events",
      "re",
      "JOIN",
      "risk_reports",
      "rr",
      "ON",
      "re.event_id",
      "=",
      "rr.event_id;"
    ],
    "question_toks": [
      "获取所有风险事件及其报告类型和内容。"
    ],
    "result_fields": [
      "re.event_id",
      "rr.report_type",
      "rr.report_content"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON fii.institution_id = npl.institution_id WHERE rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND rr.report_date BETWEEN '2023-07-01' AND '2023-09-30' AND npl.npl_ratio > 2.0;",
    "question": "2023年第三季度，哪些金融机构的监管报告类型为'季度报告'且审批状态为'需修改'，并且这些机构的不良贷款率超过2%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.report_date",
      "BETWEEN",
      "'2023-07-01'",
      "AND",
      "'2023-09-30'",
      "AND",
      "npl.npl_ratio",
      ">",
      "2.0;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.report_date",
      "BETWEEN",
      "'2023-07-01'",
      "AND",
      "'2023-09-30'",
      "AND",
      "npl.npl_ratio",
      ">",
      "2.0;"
    ],
    "question_toks": [
      "2023年第三季度，哪些金融机构的监管报告类型为'季度报告'且审批状态为'需修改'，并且这些机构的不良贷款率超过2%？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM regulatory_reports WHERE submission_date = '2023-11-01';",
    "question": "获取所有在2023年11月1日提交的监管报告。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "submission_date",
      "=",
      "'2023-11-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "submission_date",
      "=",
      "'2023-11-01';"
    ],
    "question_toks": [
      "获取所有在2023年11月1日提交的监管报告。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM financial_institution_info fii JOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id JOIN non_performing_loans npl ON fii.institution_id = npl.institution_id WHERE car.report_date = '2023-06-01' AND npl.report_date = '2023-06-01' AND car.total_car < 12 AND npl.npl_ratio > 2;",
    "question": "2023年6月，哪些金融机构的资本充足率表中总资本充足率（total_car）低于12%，并且其不良贷款表中的不良贷款率（npl_ratio）高于2%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "car.report_date",
      "=",
      "'2023-06-01'",
      "AND",
      "npl.report_date",
      "=",
      "'2023-06-01'",
      "AND",
      "car.total_car",
      "<",
      "12",
      "AND",
      "npl.npl_ratio",
      ">",
      "2;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "car.report_date",
      "=",
      "'2023-06-01'",
      "AND",
      "npl.report_date",
      "=",
      "'2023-06-01'",
      "AND",
      "car.total_car",
      "<",
      "12",
      "AND",
      "npl.npl_ratio",
      ">",
      "2;"
    ],
    "question_toks": [
      "2023年6月，哪些金融机构的资本充足率表中总资本充足率（total_car）低于12%，并且其不良贷款表中的不良贷款率（npl_ratio）高于2%？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name FROM risk_exposure re JOIN financial_institution_info fi ON re.institution_id = fi.institution_id ORDER BY (re.market_risk_exposure / re.total_risk_exposure) DESC LIMIT 1;",
    "question": "市场风险暴露占总风险暴露比例最高的机构是哪家？",
    "query_toks": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "risk_exposure",
      "re",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "re.institution_id",
      "=",
      "fi.institution_id",
      "ORDER",
      "BY",
      "(re.market_risk_exposure",
      "/",
      "re.total_risk_exposure)",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "risk_exposure",
      "re",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "re.institution_id",
      "=",
      "fi.institution_id",
      "ORDER",
      "BY",
      "(re.market_risk_exposure",
      "/",
      "re.total_risk_exposure)",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "市场风险暴露占总风险暴露比例最高的机构是哪家？"
    ],
    "result_fields": [
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_id, rr.report_type, rr.approval_status, fii.registered_capital FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND rr.submission_date >= '2023-07-01' AND rr.submission_date < '2023-10-01' AND fii.registered_capital > 50000000;",
    "question": "2023年第三季度，哪些金融机构的监管报告中报告类型为'季度报告'且审批状态为'需修改'，并且这些机构的注册资本超过5000万元？",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_id,",
      "rr.report_type,",
      "rr.approval_status,",
      "fii.registered_capital",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.submission_date",
      ">=",
      "'2023-07-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2023-10-01'",
      "AND",
      "fii.registered_capital",
      ">",
      "50000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_id,",
      "rr.report_type,",
      "rr.approval_status,",
      "fii.registered_capital",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.submission_date",
      ">=",
      "'2023-07-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2023-10-01'",
      "AND",
      "fii.registered_capital",
      ">",
      "50000000;"
    ],
    "question_toks": [
      "2023年第三季度，哪些金融机构的监管报告中报告类型为'季度报告'且审批状态为'需修改'，并且这些机构的注册资本超过5000万元？"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_id",
      "rr.report_type",
      "rr.approval_status",
      "fii.registered_capital"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name, (car.risk_weighted_assets / bs.total_assets * 100) AS rwa_density FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN balance_sheet bs ON fi.institution_id = bs.institution_id ORDER BY rwa_density DESC LIMIT 1",
    "question": "哪家机构的风险加权资产密度（风险加权资产/总资产）最高？请显示机构名称和风险加权资产密度。",
    "query_toks": [
      "SELECT",
      "fi.institution_name,",
      "(car.risk_weighted_assets",
      "/",
      "bs.total_assets",
      "*",
      "100)",
      "AS",
      "rwa_density",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fi.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "balance_sheet",
      "bs",
      "ON",
      "fi.institution_id",
      "=",
      "bs.institution_id",
      "ORDER",
      "BY",
      "rwa_density",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name,",
      "(car.risk_weighted_assets",
      "/",
      "bs.total_assets",
      "*",
      "100)",
      "AS",
      "rwa_density",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fi.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "balance_sheet",
      "bs",
      "ON",
      "fi.institution_id",
      "=",
      "bs.institution_id",
      "ORDER",
      "BY",
      "rwa_density",
      "DESC",
      "LIMIT",
      "1"
    ],
    "question_toks": [
      "哪家机构的风险加权资产密度（风险加权资产/总资产）最高？请显示机构名称和风险加权资产密度。"
    ],
    "result_fields": [
      "fi.institution_name",
      "(car.risk_weighted_assets / bs.total_assets * 100)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT liquidity_coverage_ratio, net_stable_funding_ratio FROM liquidity_ratio;",
    "question": "查询流动性比率表中流动性覆盖率和净稳定资金比例的关系。",
    "query_toks": [
      "SELECT",
      "liquidity_coverage_ratio,",
      "net_stable_funding_ratio",
      "FROM",
      "liquidity_ratio;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "liquidity_coverage_ratio,",
      "net_stable_funding_ratio",
      "FROM",
      "liquidity_ratio;"
    ],
    "question_toks": [
      "查询流动性比率表中流动性覆盖率和净稳定资金比例的关系。"
    ],
    "result_fields": [
      "liquidity_coverage_ratio",
      "net_stable_funding_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id FROM compliance_records WHERE record_date >= '2023-12-01' AND record_date < '2024-01-01' AND status = '未解决';",
    "question": "哪些机构在2023年12月提交的合规记录未解决？",
    "query_toks": [
      "SELECT",
      "institution_id",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      ">=",
      "'2023-12-01'",
      "AND",
      "record_date",
      "<",
      "'2024-01-01'",
      "AND",
      "status",
      "=",
      "'未解决';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      ">=",
      "'2023-12-01'",
      "AND",
      "record_date",
      "<",
      "'2024-01-01'",
      "AND",
      "status",
      "=",
      "'未解决';"
    ],
    "question_toks": [
      "哪些机构在2023年12月提交的合规记录未解决？"
    ],
    "result_fields": [
      "institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, SUM(loans_and_advances) AS total_loans, SUM(deposits) AS total_deposits FROM balance_sheet WHERE EXTRACT(YEAR FROM report_date) = 2024 GROUP BY institution_id;",
    "question": "查询2024年所有机构的贷款总额及其对应的存款总额。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "SUM(loans_and_advances)",
      "AS",
      "total_loans,",
      "SUM(deposits)",
      "AS",
      "total_deposits",
      "FROM",
      "balance_sheet",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "report_date)",
      "=",
      "2024",
      "GROUP",
      "BY",
      "institution_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "SUM(loans_and_advances)",
      "AS",
      "total_loans,",
      "SUM(deposits)",
      "AS",
      "total_deposits",
      "FROM",
      "balance_sheet",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "report_date)",
      "=",
      "2024",
      "GROUP",
      "BY",
      "institution_id;"
    ],
    "question_toks": [
      "查询2024年所有机构的贷款总额及其对应的存款总额。"
    ],
    "result_fields": [
      "institution_id",
      "SUM(loans_and_advances)",
      "SUM(deposits)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM balance_sheet WHERE report_date = '2039-06-08';",
    "question": "查找报告日期为2039年6月8日的资产负债表数据。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "balance_sheet",
      "WHERE",
      "report_date",
      "=",
      "'2039-06-08';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "balance_sheet",
      "WHERE",
      "report_date",
      "=",
      "'2039-06-08';"
    ],
    "question_toks": [
      "查找报告日期为2039年6月8日的资产负债表数据。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT COUNT(DISTINCT institution_id) FROM non_performing_loans WHERE npl_ratio > 3;",
    "question": "不良贷款率超过3%的机构有多少家？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "institution_id)",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "npl_ratio",
      ">",
      "3;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "institution_id)",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "npl_ratio",
      ">",
      "3;"
    ],
    "question_toks": [
      "不良贷款率超过3%的机构有多少家？"
    ],
    "result_fields": [
      "COUNT(DISTINCT institution_id)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT net_interest_income, non_interest_income FROM income_statement WHERE report_date = '2023-03-01';",
    "question": "查询2023年3月1日的净利息收入和非利息收入。",
    "query_toks": [
      "SELECT",
      "net_interest_income,",
      "non_interest_income",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      "=",
      "'2023-03-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "net_interest_income,",
      "non_interest_income",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      "=",
      "'2023-03-01';"
    ],
    "question_toks": [
      "查询2023年3月1日的净利息收入和非利息收入。"
    ],
    "result_fields": [
      "net_interest_income",
      "non_interest_income"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT npl_amount / total_loans AS npl_ratio FROM non_performing_loans;",
    "question": "查询不良贷款表中不良贷款金额与贷款总额的比例。",
    "query_toks": [
      "SELECT",
      "npl_amount",
      "/",
      "total_loans",
      "AS",
      "npl_ratio",
      "FROM",
      "non_performing_loans;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "npl_amount",
      "/",
      "total_loans",
      "AS",
      "npl_ratio",
      "FROM",
      "non_performing_loans;"
    ],
    "question_toks": [
      "查询不良贷款表中不良贷款金额与贷款总额的比例。"
    ],
    "result_fields": [
      "npl_amount / total_loans"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name FROM regulatory_reports rr JOIN financial_institution_info fi ON rr.institution_id = fi.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE rr.submission_date >= '2023-01-01' AND rr.submission_date < '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND npl.report_date >= '2023-01-01' AND npl.report_date < '2024-01-01' AND npl.npl_ratio > 1.00;",
    "question": "在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'且审批状态为'需修改'，并且这些机构在2023年的不良贷款率超过1%？",
    "query_toks": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rr.institution_id",
      "=",
      "fi.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fi.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "npl.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "npl.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.00;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rr.institution_id",
      "=",
      "fi.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fi.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "npl.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "npl.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.00;"
    ],
    "question_toks": [
      "在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'且审批状态为'需修改'，并且这些机构在2023年的不良贷款率超过1%？"
    ],
    "result_fields": [
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.report_date = '2023-10-01' AND rr.report_type = '半年度报告' AND rr.approval_status = '待审核';",
    "question": "2023年10月1日，哪些金融机构提交了半年度报告，并且这些报告的审批状态是待审核？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-10-01'",
      "AND",
      "rr.report_type",
      "=",
      "'半年度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'待审核';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-10-01'",
      "AND",
      "rr.report_type",
      "=",
      "'半年度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'待审核';"
    ],
    "question_toks": [
      "2023年10月1日，哪些金融机构提交了半年度报告，并且这些报告的审批状态是待审核？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_name, registered_capital FROM financial_institution_info WHERE institution_type != '商业银行' ORDER BY registered_capital DESC LIMIT 5;",
    "question": "注册资本最高的五家非银行金融机构是哪些？",
    "query_toks": [
      "SELECT",
      "institution_name,",
      "registered_capital",
      "FROM",
      "financial_institution_info",
      "WHERE",
      "institution_type",
      "!=",
      "'商业银行'",
      "ORDER",
      "BY",
      "registered_capital",
      "DESC",
      "LIMIT",
      "5;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_name,",
      "registered_capital",
      "FROM",
      "financial_institution_info",
      "WHERE",
      "institution_type",
      "!=",
      "'商业银行'",
      "ORDER",
      "BY",
      "registered_capital",
      "DESC",
      "LIMIT",
      "5;"
    ],
    "question_toks": [
      "注册资本最高的五家非银行金融机构是哪些？"
    ],
    "result_fields": [
      "institution_name",
      "registered_capital"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT COUNT(*) FROM (SELECT institution_id FROM balance_sheet ORDER BY total_assets DESC LIMIT 500) AS top500 INNER JOIN non_performing_loans ON top500.institution_id = non_performing_loans.institution_id WHERE npl_ratio < 1 AND provision_coverage_ratio > 200;",
    "question": "总资产排名前500的机构中，有多少家的不良贷款率低于1%且拨备覆盖率高于200%？",
    "query_toks": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "(SELECT",
      "institution_id",
      "FROM",
      "balance_sheet",
      "ORDER",
      "BY",
      "total_assets",
      "DESC",
      "LIMIT",
      "500)",
      "AS",
      "top500",
      "INNER",
      "JOIN",
      "non_performing_loans",
      "ON",
      "top500.institution_id",
      "=",
      "non_performing_loans.institution_id",
      "WHERE",
      "npl_ratio",
      "<",
      "1",
      "AND",
      "provision_coverage_ratio",
      ">",
      "200;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "(SELECT",
      "institution_id",
      "FROM",
      "balance_sheet",
      "ORDER",
      "BY",
      "total_assets",
      "DESC",
      "LIMIT",
      "500)",
      "AS",
      "top500",
      "INNER",
      "JOIN",
      "non_performing_loans",
      "ON",
      "top500.institution_id",
      "=",
      "non_performing_loans.institution_id",
      "WHERE",
      "npl_ratio",
      "<",
      "1",
      "AND",
      "provision_coverage_ratio",
      ">",
      "200;"
    ],
    "question_toks": [
      "总资产排名前500的机构中，有多少家的不良贷款率低于1%且拨备覆盖率高于200%？"
    ],
    "result_fields": [
      "COUNT(*)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM financial_institution_info fii JOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id JOIN regulatory_reports rr ON fii.institution_id = rr.institution_id WHERE car.report_date = '2023-12-01' AND car.core_tier_1_ratio < 10 AND rr.approval_status = '待审核';",
    "question": "2023年12月1日，哪些金融机构的资本充足率表中核心一级资本充足率低于10%，并且其监管报告的审批状态为'待审核'？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "regulatory_reports",
      "rr",
      "ON",
      "fii.institution_id",
      "=",
      "rr.institution_id",
      "WHERE",
      "car.report_date",
      "=",
      "'2023-12-01'",
      "AND",
      "car.core_tier_1_ratio",
      "<",
      "10",
      "AND",
      "rr.approval_status",
      "=",
      "'待审核';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "regulatory_reports",
      "rr",
      "ON",
      "fii.institution_id",
      "=",
      "rr.institution_id",
      "WHERE",
      "car.report_date",
      "=",
      "'2023-12-01'",
      "AND",
      "car.core_tier_1_ratio",
      "<",
      "10",
      "AND",
      "rr.approval_status",
      "=",
      "'待审核';"
    ],
    "question_toks": [
      "2023年12月1日，哪些金融机构的资本充足率表中核心一级资本充足率低于10%，并且其监管报告的审批状态为'待审核'？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "WITH income_growth AS (SELECT institution_id, (MAX(net_interest_income + non_interest_income) - MIN(net_interest_income + non_interest_income)) / MIN(net_interest_income + non_interest_income) * 100 AS income_growth_rate FROM income_statement WHERE report_date >= date('now') - INTERVAL '2 years' GROUP BY institution_id), profit_growth AS (SELECT institution_id, (MAX(net_profit) - MIN(net_profit)) / MIN(net_profit) * 100 AS profit_growth_rate FROM income_statement WHERE report_date >= date('now') - INTERVAL '2 years' GROUP BY institution_id) SELECT fii.institution_name FROM financial_institution_info fii JOIN income_growth ig ON fii.institution_id = ig.institution_id JOIN profit_growth pg ON fii.institution_id = pg.institution_id ORDER BY ig.income_growth_rate DESC, pg.profit_growth_rate ASC LIMIT 1;",
    "question": "过去两年中，营业收入增长率最高但净利润增长率最低的机构是哪一家？",
    "query_toks": [
      "WITH",
      "income_growth",
      "AS",
      "(SELECT",
      "institution_id,",
      "(MAX(net_interest_income",
      "+",
      "non_interest_income)",
      "-",
      "MIN(net_interest_income",
      "+",
      "non_interest_income))",
      "/",
      "MIN(net_interest_income",
      "+",
      "non_interest_income)",
      "*",
      "100",
      "AS",
      "income_growth_rate",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years'",
      "GROUP",
      "BY",
      "institution_id),",
      "profit_growth",
      "AS",
      "(SELECT",
      "institution_id,",
      "(MAX(net_profit)",
      "-",
      "MIN(net_profit))",
      "/",
      "MIN(net_profit)",
      "*",
      "100",
      "AS",
      "profit_growth_rate",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years'",
      "GROUP",
      "BY",
      "institution_id)",
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "income_growth",
      "ig",
      "ON",
      "fii.institution_id",
      "=",
      "ig.institution_id",
      "JOIN",
      "profit_growth",
      "pg",
      "ON",
      "fii.institution_id",
      "=",
      "pg.institution_id",
      "ORDER",
      "BY",
      "ig.income_growth_rate",
      "DESC,",
      "pg.profit_growth_rate",
      "ASC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "WITH",
      "income_growth",
      "AS",
      "(SELECT",
      "institution_id,",
      "(MAX(net_interest_income",
      "+",
      "non_interest_income)",
      "-",
      "MIN(net_interest_income",
      "+",
      "non_interest_income))",
      "/",
      "MIN(net_interest_income",
      "+",
      "non_interest_income)",
      "*",
      "100",
      "AS",
      "income_growth_rate",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years'",
      "GROUP",
      "BY",
      "institution_id),",
      "profit_growth",
      "AS",
      "(SELECT",
      "institution_id,",
      "(MAX(net_profit)",
      "-",
      "MIN(net_profit))",
      "/",
      "MIN(net_profit)",
      "*",
      "100",
      "AS",
      "profit_growth_rate",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years'",
      "GROUP",
      "BY",
      "institution_id)",
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "income_growth",
      "ig",
      "ON",
      "fii.institution_id",
      "=",
      "ig.institution_id",
      "JOIN",
      "profit_growth",
      "pg",
      "ON",
      "fii.institution_id",
      "=",
      "pg.institution_id",
      "ORDER",
      "BY",
      "ig.income_growth_rate",
      "DESC,",
      "pg.profit_growth_rate",
      "ASC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "过去两年中，营业收入增长率最高但净利润增长率最低的机构是哪一家？"
    ],
    "result_fields": [
      "institution_id",
      "(MAX(net_interest_income + non_interest_income) - MIN(net_interest_income + non_interest_income)) / MIN(net_interest_income + non_interest_income) * 100"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT report_id, approval_status FROM regulatory_reports WHERE report_date = '2023-07-01';",
    "question": "获取2023年7月1日的监管报告及其审批状态。",
    "query_toks": [
      "SELECT",
      "report_id,",
      "approval_status",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "report_date",
      "=",
      "'2023-07-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "report_id,",
      "approval_status",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "report_date",
      "=",
      "'2023-07-01';"
    ],
    "question_toks": [
      "获取2023年7月1日的监管报告及其审批状态。"
    ],
    "result_fields": [
      "report_id",
      "approval_status"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT DISTINCT fi.institution_id, fi.institution_name FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id WHERE car.core_tier_1_ratio > (SELECT AVG(core_tier_1_ratio) FROM capital_adequacy_ratio) AND car.tier_1_ratio > (SELECT AVG(tier_1_ratio) FROM capital_adequacy_ratio) AND car.total_car > (SELECT AVG(total_car) FROM capital_adequacy_ratio);",
    "question": "哪些机构的核心一级资本充足率、一级资本充足率和总资本充足率均高于行业平均水平？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "fi.institution_id,",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fi.institution_id",
      "=",
      "car.institution_id",
      "WHERE",
      "car.core_tier_1_ratio",
      ">",
      "(SELECT",
      "AVG(core_tier_1_ratio)",
      "FROM",
      "capital_adequacy_ratio)",
      "AND",
      "car.tier_1_ratio",
      ">",
      "(SELECT",
      "AVG(tier_1_ratio)",
      "FROM",
      "capital_adequacy_ratio)",
      "AND",
      "car.total_car",
      ">",
      "(SELECT",
      "AVG(total_car)",
      "FROM",
      "capital_adequacy_ratio);"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "fi.institution_id,",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fi.institution_id",
      "=",
      "car.institution_id",
      "WHERE",
      "car.core_tier_1_ratio",
      ">",
      "(SELECT",
      "AVG(core_tier_1_ratio)",
      "FROM",
      "capital_adequacy_ratio)",
      "AND",
      "car.tier_1_ratio",
      ">",
      "(SELECT",
      "AVG(tier_1_ratio)",
      "FROM",
      "capital_adequacy_ratio)",
      "AND",
      "car.total_car",
      ">",
      "(SELECT",
      "AVG(total_car)",
      "FROM",
      "capital_adequacy_ratio);"
    ],
    "question_toks": [
      "哪些机构的核心一级资本充足率、一级资本充足率和总资本充足率均高于行业平均水平？"
    ],
    "result_fields": [
      "DISTINCT fi.institution_id",
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM compliance_records WHERE record_date >= '2023-01-01' AND record_date < '2024-01-01' AND status = '已解决';",
    "question": "查找2023年提交的合规记录中状态为'已解决'的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "record_date",
      "<",
      "'2024-01-01'",
      "AND",
      "status",
      "=",
      "'已解决';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "record_date",
      "<",
      "'2024-01-01'",
      "AND",
      "status",
      "=",
      "'已解决';"
    ],
    "question_toks": [
      "查找2023年提交的合规记录中状态为'已解决'的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT report_type, COUNT(*) AS submission_count FROM regulatory_reports WHERE submission_date BETWEEN '2023-07-01' AND '2023-09-30' GROUP BY report_type ORDER BY submission_count DESC LIMIT 1",
    "question": "2023年第三季度提交的监管报告中，哪种报告类型的提交数量最多？",
    "query_toks": [
      "SELECT",
      "report_type,",
      "COUNT(*)",
      "AS",
      "submission_count",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "submission_date",
      "BETWEEN",
      "'2023-07-01'",
      "AND",
      "'2023-09-30'",
      "GROUP",
      "BY",
      "report_type",
      "ORDER",
      "BY",
      "submission_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "SELECT",
      "report_type,",
      "COUNT(*)",
      "AS",
      "submission_count",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "submission_date",
      "BETWEEN",
      "'2023-07-01'",
      "AND",
      "'2023-09-30'",
      "GROUP",
      "BY",
      "report_type",
      "ORDER",
      "BY",
      "submission_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "question_toks": [
      "2023年第三季度提交的监管报告中，哪种报告类型的提交数量最多？"
    ],
    "result_fields": [
      "report_type",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT tier_1_ratio FROM capital_adequacy_ratio;",
    "question": "获取所有机构的资本充足率表中一级资本充足率的分布情况。",
    "query_toks": [
      "SELECT",
      "tier_1_ratio",
      "FROM",
      "capital_adequacy_ratio;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "tier_1_ratio",
      "FROM",
      "capital_adequacy_ratio;"
    ],
    "question_toks": [
      "获取所有机构的资本充足率表中一级资本充足率的分布情况。"
    ],
    "result_fields": [
      "tier_1_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, lr.report_date FROM liquidity_ratio lr JOIN financial_institution_info fii ON lr.institution_id = fii.institution_id WHERE lr.liquidity_coverage_ratio > 100;",
    "question": "获取流动性覆盖率高于100%的机构名称和报告日期。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "lr.report_date",
      "FROM",
      "liquidity_ratio",
      "lr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "lr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "lr.liquidity_coverage_ratio",
      ">",
      "100;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "lr.report_date",
      "FROM",
      "liquidity_ratio",
      "lr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "lr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "lr.liquidity_coverage_ratio",
      ">",
      "100;"
    ],
    "question_toks": [
      "获取流动性覆盖率高于100%的机构名称和报告日期。"
    ],
    "result_fields": [
      "fii.institution_name",
      "lr.report_date"
    ]
  },
  {
    "db_id": "supervise",
    "query": "WITH asset_liability_ratio AS (SELECT institution_id, report_date, total_liabilities / total_assets AS al_ratio FROM balance_sheet WHERE report_date >= date('now') - INTERVAL '2 years'), al_volatility AS (SELECT institution_id, MAX(al_ratio) - MIN(al_ratio) AS al_volatility FROM asset_liability_ratio GROUP BY institution_id), liquidity_trend AS (SELECT institution_id, report_date, liquidity_coverage_ratio, ROW_NUMBER() OVER (PARTITION BY institution_id ORDER BY report_date) AS row_num FROM liquidity_ratio WHERE report_date >= date('now') - INTERVAL '2 years') SELECT fi.institution_name, av.al_volatility, COALESCE(ROUND((last.liquidity_coverage_ratio - first.liquidity_coverage_ratio) / first.liquidity_coverage_ratio * 100, 2), 0) AS lcr_change_percentage FROM financial_institution_info fi JOIN al_volatility av ON fi.institution_id = av.institution_id LEFT JOIN liquidity_trend first ON fi.institution_id = first.institution_id AND first.row_num = 1 LEFT JOIN liquidity_trend last ON fi.institution_id = last.institution_id AND last.row_num = (SELECT MAX(row_num) FROM liquidity_trend WHERE institution_id = fi.institution_id) ORDER BY av.al_volatility DESC LIMIT 5",
    "question": "找出在过去两年中，资产负债率波动最大的五家金融机构，并分析它们的流动性覆盖率变化趋势。",
    "query_toks": [
      "WITH",
      "asset_liability_ratio",
      "AS",
      "(SELECT",
      "institution_id,",
      "report_date,",
      "total_liabilities",
      "/",
      "total_assets",
      "AS",
      "al_ratio",
      "FROM",
      "balance_sheet",
      "WHERE",
      "report_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years'),",
      "al_volatility",
      "AS",
      "(SELECT",
      "institution_id,",
      "MAX(al_ratio)",
      "-",
      "MIN(al_ratio)",
      "AS",
      "al_volatility",
      "FROM",
      "asset_liability_ratio",
      "GROUP",
      "BY",
      "institution_id),",
      "liquidity_trend",
      "AS",
      "(SELECT",
      "institution_id,",
      "report_date,",
      "liquidity_coverage_ratio,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "institution_id",
      "ORDER",
      "BY",
      "report_date)",
      "AS",
      "row_num",
      "FROM",
      "liquidity_ratio",
      "WHERE",
      "report_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years')",
      "SELECT",
      "fi.institution_name,",
      "av.al_volatility,",
      "COALESCE(ROUND((last.liquidity_coverage_ratio",
      "-",
      "first.liquidity_coverage_ratio)",
      "/",
      "first.liquidity_coverage_ratio",
      "*",
      "100,",
      "2),",
      "0)",
      "AS",
      "lcr_change_percentage",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "al_volatility",
      "av",
      "ON",
      "fi.institution_id",
      "=",
      "av.institution_id",
      "LEFT",
      "JOIN",
      "liquidity_trend",
      "first",
      "ON",
      "fi.institution_id",
      "=",
      "first.institution_id",
      "AND",
      "first.row_num",
      "=",
      "1",
      "LEFT",
      "JOIN",
      "liquidity_trend",
      "last",
      "ON",
      "fi.institution_id",
      "=",
      "last.institution_id",
      "AND",
      "last.row_num",
      "=",
      "(SELECT",
      "MAX(row_num)",
      "FROM",
      "liquidity_trend",
      "WHERE",
      "institution_id",
      "=",
      "fi.institution_id)",
      "ORDER",
      "BY",
      "av.al_volatility",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "WITH",
      "asset_liability_ratio",
      "AS",
      "(SELECT",
      "institution_id,",
      "report_date,",
      "total_liabilities",
      "/",
      "total_assets",
      "AS",
      "al_ratio",
      "FROM",
      "balance_sheet",
      "WHERE",
      "report_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years'),",
      "al_volatility",
      "AS",
      "(SELECT",
      "institution_id,",
      "MAX(al_ratio)",
      "-",
      "MIN(al_ratio)",
      "AS",
      "al_volatility",
      "FROM",
      "asset_liability_ratio",
      "GROUP",
      "BY",
      "institution_id),",
      "liquidity_trend",
      "AS",
      "(SELECT",
      "institution_id,",
      "report_date,",
      "liquidity_coverage_ratio,",
      "ROW_NUMBER()",
      "OVER",
      "(PARTITION",
      "BY",
      "institution_id",
      "ORDER",
      "BY",
      "report_date)",
      "AS",
      "row_num",
      "FROM",
      "liquidity_ratio",
      "WHERE",
      "report_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years')",
      "SELECT",
      "fi.institution_name,",
      "av.al_volatility,",
      "COALESCE(ROUND((last.liquidity_coverage_ratio",
      "-",
      "first.liquidity_coverage_ratio)",
      "/",
      "first.liquidity_coverage_ratio",
      "*",
      "100,",
      "2),",
      "0)",
      "AS",
      "lcr_change_percentage",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "al_volatility",
      "av",
      "ON",
      "fi.institution_id",
      "=",
      "av.institution_id",
      "LEFT",
      "JOIN",
      "liquidity_trend",
      "first",
      "ON",
      "fi.institution_id",
      "=",
      "first.institution_id",
      "AND",
      "first.row_num",
      "=",
      "1",
      "LEFT",
      "JOIN",
      "liquidity_trend",
      "last",
      "ON",
      "fi.institution_id",
      "=",
      "last.institution_id",
      "AND",
      "last.row_num",
      "=",
      "(SELECT",
      "MAX(row_num)",
      "FROM",
      "liquidity_trend",
      "WHERE",
      "institution_id",
      "=",
      "fi.institution_id)",
      "ORDER",
      "BY",
      "av.al_volatility",
      "DESC",
      "LIMIT",
      "5"
    ],
    "question_toks": [
      "找出在过去两年中，资产负债率波动最大的五家金融机构，并分析它们的流动性覆盖率变化趋势。"
    ],
    "result_fields": [
      "institution_id",
      "report_date",
      "total_liabilities / total_assets"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT record_id, institution_id, record_date, resolution_date, description, severity, status, compliance_type FROM compliance_records WHERE record_date >= '2023-03-01' AND record_date < '2023-04-01';",
    "question": "查看2023年03月的所有合规记录及其严重程度。",
    "query_toks": [
      "SELECT",
      "record_id,",
      "institution_id,",
      "record_date,",
      "resolution_date,",
      "description,",
      "severity,",
      "status,",
      "compliance_type",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      ">=",
      "'2023-03-01'",
      "AND",
      "record_date",
      "<",
      "'2023-04-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "record_id,",
      "institution_id,",
      "record_date,",
      "resolution_date,",
      "description,",
      "severity,",
      "status,",
      "compliance_type",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      ">=",
      "'2023-03-01'",
      "AND",
      "record_date",
      "<",
      "'2023-04-01';"
    ],
    "question_toks": [
      "查看2023年03月的所有合规记录及其严重程度。"
    ],
    "result_fields": [
      "record_id",
      "institution_id",
      "record_date",
      "resolution_date",
      "description",
      "severity",
      "status",
      "compliance_type"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, record_date, description, severity FROM compliance_records WHERE record_date >= '2024-01-01' AND record_date < '2025-01-01';",
    "question": "查询2024年提交的所有机构的合规记录及其严重程度。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "record_date,",
      "description,",
      "severity",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "record_date",
      "<",
      "'2025-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "record_date,",
      "description,",
      "severity",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "record_date",
      "<",
      "'2025-01-01';"
    ],
    "question_toks": [
      "查询2024年提交的所有机构的合规记录及其严重程度。"
    ],
    "result_fields": [
      "institution_id",
      "record_date",
      "description",
      "severity"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT report_type FROM regulatory_reports WHERE report_date = '2023-10-01';",
    "question": "获取2023年10月1日所有机构的监管报告类型。",
    "query_toks": [
      "SELECT",
      "report_type",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "report_date",
      "=",
      "'2023-10-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "report_type",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "report_date",
      "=",
      "'2023-10-01';"
    ],
    "question_toks": [
      "获取2023年10月1日所有机构的监管报告类型。"
    ],
    "result_fields": [
      "report_type"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM compliance_records WHERE record_date >= '2023-01-01' AND record_date < '2024-01-01' AND severity = '中';",
    "question": "查找2023年所有合规记录中严重程度为'中'的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "record_date",
      "<",
      "'2024-01-01'",
      "AND",
      "severity",
      "=",
      "'中';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "record_date",
      "<",
      "'2024-01-01'",
      "AND",
      "severity",
      "=",
      "'中';"
    ],
    "question_toks": [
      "查找2023年所有合规记录中严重程度为'中'的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM compliance_records WHERE record_date = '2023-10-01';",
    "question": "查询2023年10月1日的所有合规记录及其状态。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      "=",
      "'2023-10-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      "=",
      "'2023-10-01';"
    ],
    "question_toks": [
      "查询2023年10月1日的所有合规记录及其状态。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT DISTINCT lr.institution_id FROM liquidity_ratio lr WHERE lr.liquidity_coverage_ratio > (SELECT AVG(liquidity_coverage_ratio) FROM liquidity_ratio) AND lr.net_stable_funding_ratio > (SELECT AVG(net_stable_funding_ratio) FROM liquidity_ratio) AND lr.loan_to_deposit_ratio > (SELECT AVG(loan_to_deposit_ratio) FROM liquidity_ratio);",
    "question": "哪些机构的流动性覆盖率、净稳定资金比例和贷存比均优于行业平均水平？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "lr.institution_id",
      "FROM",
      "liquidity_ratio",
      "lr",
      "WHERE",
      "lr.liquidity_coverage_ratio",
      ">",
      "(SELECT",
      "AVG(liquidity_coverage_ratio)",
      "FROM",
      "liquidity_ratio)",
      "AND",
      "lr.net_stable_funding_ratio",
      ">",
      "(SELECT",
      "AVG(net_stable_funding_ratio)",
      "FROM",
      "liquidity_ratio)",
      "AND",
      "lr.loan_to_deposit_ratio",
      ">",
      "(SELECT",
      "AVG(loan_to_deposit_ratio)",
      "FROM",
      "liquidity_ratio);"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "lr.institution_id",
      "FROM",
      "liquidity_ratio",
      "lr",
      "WHERE",
      "lr.liquidity_coverage_ratio",
      ">",
      "(SELECT",
      "AVG(liquidity_coverage_ratio)",
      "FROM",
      "liquidity_ratio)",
      "AND",
      "lr.net_stable_funding_ratio",
      ">",
      "(SELECT",
      "AVG(net_stable_funding_ratio)",
      "FROM",
      "liquidity_ratio)",
      "AND",
      "lr.loan_to_deposit_ratio",
      ">",
      "(SELECT",
      "AVG(loan_to_deposit_ratio)",
      "FROM",
      "liquidity_ratio);"
    ],
    "question_toks": [
      "哪些机构的流动性覆盖率、净稳定资金比例和贷存比均优于行业平均水平？"
    ],
    "result_fields": [
      "DISTINCT lr.institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_type, rr.submission_date FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.approval_status = '需修改' AND rr.submission_date >= '2023-07-01' AND rr.submission_date < '2023-10-01' ORDER BY rr.submission_date DESC;",
    "question": "列出2023年第三季度提交的所有监管报告中，审批状态为'需修改'的报告所属机构的名称、报告类型和提交日期，并按提交日期降序排列。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_type,",
      "rr.submission_date",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.submission_date",
      ">=",
      "'2023-07-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2023-10-01'",
      "ORDER",
      "BY",
      "rr.submission_date",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_type,",
      "rr.submission_date",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.submission_date",
      ">=",
      "'2023-07-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2023-10-01'",
      "ORDER",
      "BY",
      "rr.submission_date",
      "DESC;"
    ],
    "question_toks": [
      "列出2023年第三季度提交的所有监管报告中，审批状态为'需修改'的报告所属机构的名称、报告类型和提交日期，并按提交日期降序排列。"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_type",
      "rr.submission_date"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name\nFROM capital_adequacy_ratio car\nJOIN non_performing_loans npl ON car.institution_id = npl.institution_id AND car.report_date = npl.report_date\nJOIN financial_institution_info fii ON car.institution_id = fii.institution_id\nWHERE car.total_car <= (SELECT PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY total_car) FROM capital_adequacy_ratio)\nAND npl.npl_ratio < (SELECT AVG(npl_ratio) FROM non_performing_loans);",
    "question": "资本充足率处于行业后25%的机构中，哪些机构的不良贷款率低于行业平均水平？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "capital_adequacy_ratio",
      "car",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "car.institution_id",
      "=",
      "npl.institution_id",
      "AND",
      "car.report_date",
      "=",
      "npl.report_date",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "car.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "car.total_car",
      "<=",
      "(SELECT",
      "PERCENTILE_CONT(0.25)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "total_car)",
      "FROM",
      "capital_adequacy_ratio)",
      "AND",
      "npl.npl_ratio",
      "<",
      "(SELECT",
      "AVG(npl_ratio)",
      "FROM",
      "non_performing_loans);"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "capital_adequacy_ratio",
      "car",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "car.institution_id",
      "=",
      "npl.institution_id",
      "AND",
      "car.report_date",
      "=",
      "npl.report_date",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "car.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "car.total_car",
      "<=",
      "(SELECT",
      "PERCENTILE_CONT(0.25)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "total_car)",
      "FROM",
      "capital_adequacy_ratio)",
      "AND",
      "npl.npl_ratio",
      "<",
      "(SELECT",
      "AVG(npl_ratio)",
      "FROM",
      "non_performing_loans);"
    ],
    "question_toks": [
      "资本充足率处于行业后25%的机构中，哪些机构的不良贷款率低于行业平均水平？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT registered_capital, institution_type FROM financial_institution_info;",
    "question": "获取所有金融机构的注册资本与机构类型。",
    "query_toks": [
      "SELECT",
      "registered_capital,",
      "institution_type",
      "FROM",
      "financial_institution_info;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "registered_capital,",
      "institution_type",
      "FROM",
      "financial_institution_info;"
    ],
    "question_toks": [
      "获取所有金融机构的注册资本与机构类型。"
    ],
    "result_fields": [
      "registered_capital",
      "institution_type"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT establishment_date, legal_representative FROM financial_institution_info;",
    "question": "获取所有金融机构的成立日期和法定代表人。",
    "query_toks": [
      "SELECT",
      "establishment_date,",
      "legal_representative",
      "FROM",
      "financial_institution_info;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "establishment_date,",
      "legal_representative",
      "FROM",
      "financial_institution_info;"
    ],
    "question_toks": [
      "获取所有金融机构的成立日期和法定代表人。"
    ],
    "result_fields": [
      "establishment_date",
      "legal_representative"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM compliance_records WHERE status = '已解决';",
    "question": "查询所有机构的合规记录中状态为已解决的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "compliance_records",
      "WHERE",
      "status",
      "=",
      "'已解决';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "compliance_records",
      "WHERE",
      "status",
      "=",
      "'已解决';"
    ],
    "question_toks": [
      "查询所有机构的合规记录中状态为已解决的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.approval_status, npl.npl_ratio FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON rr.institution_id = npl.institution_id AND rr.report_date = npl.report_date WHERE rr.report_date = '2023-07-01' AND rr.approval_status = '需修改' AND npl.npl_ratio > 1.00;",
    "question": "2023年7月，哪些金融机构的监管报告状态为'需修改'，并且其不良贷款率超过1%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.approval_status,",
      "npl.npl_ratio",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "rr.institution_id",
      "=",
      "npl.institution_id",
      "AND",
      "rr.report_date",
      "=",
      "npl.report_date",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.00;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.approval_status,",
      "npl.npl_ratio",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "rr.institution_id",
      "=",
      "npl.institution_id",
      "AND",
      "rr.report_date",
      "=",
      "npl.report_date",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.00;"
    ],
    "question_toks": [
      "2023年7月，哪些金融机构的监管报告状态为'需修改'，并且其不良贷款率超过1%？"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.approval_status",
      "npl.npl_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id FROM liquidity_ratio ORDER BY ABS(loan_to_deposit_ratio - 1) LIMIT 1;",
    "question": "哪家机构的贷款和垫款与存款的比值最接近1？",
    "query_toks": [
      "SELECT",
      "institution_id",
      "FROM",
      "liquidity_ratio",
      "ORDER",
      "BY",
      "ABS(loan_to_deposit_ratio",
      "-",
      "1)",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id",
      "FROM",
      "liquidity_ratio",
      "ORDER",
      "BY",
      "ABS(loan_to_deposit_ratio",
      "-",
      "1)",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "哪家机构的贷款和垫款与存款的比值最接近1？"
    ],
    "result_fields": [
      "institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id FROM non_performing_loans WHERE total_loans > 100000000000;",
    "question": "查询不良贷款表中贷款总额超过1000亿的机构信息。",
    "query_toks": [
      "SELECT",
      "institution_id",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "total_loans",
      ">",
      "100000000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "total_loans",
      ">",
      "100000000000;"
    ],
    "question_toks": [
      "查询不良贷款表中贷款总额超过1000亿的机构信息。"
    ],
    "result_fields": [
      "institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT cash_and_equivalents FROM balance_sheet WHERE report_date = '2026-04-27';",
    "question": "获取2026年4月27日的资产负债表中现金及现金等价物。",
    "query_toks": [
      "SELECT",
      "cash_and_equivalents",
      "FROM",
      "balance_sheet",
      "WHERE",
      "report_date",
      "=",
      "'2026-04-27';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "cash_and_equivalents",
      "FROM",
      "balance_sheet",
      "WHERE",
      "report_date",
      "=",
      "'2026-04-27';"
    ],
    "question_toks": [
      "获取2026年4月27日的资产负债表中现金及现金等价物。"
    ],
    "result_fields": [
      "cash_and_equivalents"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id FROM capital_adequacy_ratio WHERE core_tier_1_ratio < 9;",
    "question": "哪些机构的核心一级资本充足率低于9%？",
    "query_toks": [
      "SELECT",
      "institution_id",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "core_tier_1_ratio",
      "<",
      "9;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "core_tier_1_ratio",
      "<",
      "9;"
    ],
    "question_toks": [
      "哪些机构的核心一级资本充足率低于9%？"
    ],
    "result_fields": [
      "institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name, rr.report_type, rr.approval_status, npl.npl_ratio FROM regulatory_reports rr JOIN financial_institution_info fi ON rr.institution_id = fi.institution_id JOIN non_performing_loans npl ON rr.institution_id = npl.institution_id WHERE rr.submission_date >= '2023-01-01' AND rr.submission_date < '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝' AND npl.report_date >= '2023-01-01' AND npl.report_date < '2024-01-01' AND npl.npl_ratio > 2.00;",
    "question": "在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'并且审批状态为'已拒绝'，同时这些机构在2023年的不良贷款率超过2%？",
    "query_toks": [
      "SELECT",
      "fi.institution_name,",
      "rr.report_type,",
      "rr.approval_status,",
      "npl.npl_ratio",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rr.institution_id",
      "=",
      "fi.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "rr.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝'",
      "AND",
      "npl.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "npl.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "2.00;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name,",
      "rr.report_type,",
      "rr.approval_status,",
      "npl.npl_ratio",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rr.institution_id",
      "=",
      "fi.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "rr.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝'",
      "AND",
      "npl.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "npl.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "2.00;"
    ],
    "question_toks": [
      "在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'并且审批状态为'已拒绝'，同时这些机构在2023年的不良贷款率超过2%？"
    ],
    "result_fields": [
      "fi.institution_name",
      "rr.report_type",
      "rr.approval_status",
      "npl.npl_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT COUNT(*) FROM (SELECT institution_id FROM capital_adequacy_ratio ORDER BY risk_weighted_assets / (SELECT total_assets FROM balance_sheet WHERE balance_sheet.institution_id = capital_adequacy_ratio.institution_id AND balance_sheet.report_date = capital_adequacy_ratio.report_date) DESC LIMIT 10) AS top_institutions WHERE institution_id IN (SELECT institution_id FROM risk_exposure WHERE market_risk_exposure > (SELECT AVG(market_risk_exposure) FROM risk_exposure));",
    "question": "风险加权资产占总资产比例最高的十家机构中，有多少家同时存在较高的市场风险暴露？",
    "query_toks": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "(SELECT",
      "institution_id",
      "FROM",
      "capital_adequacy_ratio",
      "ORDER",
      "BY",
      "risk_weighted_assets",
      "/",
      "(SELECT",
      "total_assets",
      "FROM",
      "balance_sheet",
      "WHERE",
      "balance_sheet.institution_id",
      "=",
      "capital_adequacy_ratio.institution_id",
      "AND",
      "balance_sheet.report_date",
      "=",
      "capital_adequacy_ratio.report_date)",
      "DESC",
      "LIMIT",
      "10)",
      "AS",
      "top_institutions",
      "WHERE",
      "institution_id",
      "IN",
      "(SELECT",
      "institution_id",
      "FROM",
      "risk_exposure",
      "WHERE",
      "market_risk_exposure",
      ">",
      "(SELECT",
      "AVG(market_risk_exposure)",
      "FROM",
      "risk_exposure));"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "(SELECT",
      "institution_id",
      "FROM",
      "capital_adequacy_ratio",
      "ORDER",
      "BY",
      "risk_weighted_assets",
      "/",
      "(SELECT",
      "total_assets",
      "FROM",
      "balance_sheet",
      "WHERE",
      "balance_sheet.institution_id",
      "=",
      "capital_adequacy_ratio.institution_id",
      "AND",
      "balance_sheet.report_date",
      "=",
      "capital_adequacy_ratio.report_date)",
      "DESC",
      "LIMIT",
      "10)",
      "AS",
      "top_institutions",
      "WHERE",
      "institution_id",
      "IN",
      "(SELECT",
      "institution_id",
      "FROM",
      "risk_exposure",
      "WHERE",
      "market_risk_exposure",
      ">",
      "(SELECT",
      "AVG(market_risk_exposure)",
      "FROM",
      "risk_exposure));"
    ],
    "question_toks": [
      "风险加权资产占总资产比例最高的十家机构中，有多少家同时存在较高的市场风险暴露？"
    ],
    "result_fields": [
      "COUNT(*)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT AVG(branch_count) AS average_branch_count FROM (SELECT institution_id, COUNT(*) AS branch_count FROM financial_institution_info GROUP BY institution_id) AS branch_counts;",
    "question": "平均每家金融机构的分支机构数量是多少？",
    "query_toks": [
      "SELECT",
      "AVG(branch_count)",
      "AS",
      "average_branch_count",
      "FROM",
      "(SELECT",
      "institution_id,",
      "COUNT(*)",
      "AS",
      "branch_count",
      "FROM",
      "financial_institution_info",
      "GROUP",
      "BY",
      "institution_id)",
      "AS",
      "branch_counts;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "AVG(branch_count)",
      "AS",
      "average_branch_count",
      "FROM",
      "(SELECT",
      "institution_id,",
      "COUNT(*)",
      "AS",
      "branch_count",
      "FROM",
      "financial_institution_info",
      "GROUP",
      "BY",
      "institution_id)",
      "AS",
      "branch_counts;"
    ],
    "question_toks": [
      "平均每家金融机构的分支机构数量是多少？"
    ],
    "result_fields": [
      "AVG(branch_count)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_id, fi.institution_name FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE car.core_tier_1_ratio < 8.5 AND (re.market_risk_exposure / re.total_risk_exposure) > 0.2;",
    "question": "哪些机构的市场风险暴露占比超过20%且核心一级资本充足率低于8.5%？",
    "query_toks": [
      "SELECT",
      "fi.institution_id,",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fi.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fi.institution_id",
      "=",
      "re.institution_id",
      "WHERE",
      "car.core_tier_1_ratio",
      "<",
      "8.5",
      "AND",
      "(re.market_risk_exposure",
      "/",
      "re.total_risk_exposure)",
      ">",
      "0.2;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_id,",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fi.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fi.institution_id",
      "=",
      "re.institution_id",
      "WHERE",
      "car.core_tier_1_ratio",
      "<",
      "8.5",
      "AND",
      "(re.market_risk_exposure",
      "/",
      "re.total_risk_exposure)",
      ">",
      "0.2;"
    ],
    "question_toks": [
      "哪些机构的市场风险暴露占比超过20%且核心一级资本充足率低于8.5%？"
    ],
    "result_fields": [
      "fi.institution_id",
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, car.core_tier_1_ratio, car.tier_1_ratio, car.total_car FROM capital_adequacy_ratio car JOIN financial_institution_info fii ON car.institution_id = fii.institution_id WHERE car.report_date = '2023-12-01' AND car.core_tier_1_ratio < 10 AND car.total_car < 12;",
    "question": "2023年12月1日，哪些金融机构的核心一级资本充足率低于10%，并且它们的总资本充足率也低于12%？请列出这些金融机构的名称、核心一级资本充足率、一级资本充足率和总资本充足率。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "car.core_tier_1_ratio,",
      "car.tier_1_ratio,",
      "car.total_car",
      "FROM",
      "capital_adequacy_ratio",
      "car",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "car.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "car.report_date",
      "=",
      "'2023-12-01'",
      "AND",
      "car.core_tier_1_ratio",
      "<",
      "10",
      "AND",
      "car.total_car",
      "<",
      "12;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "car.core_tier_1_ratio,",
      "car.tier_1_ratio,",
      "car.total_car",
      "FROM",
      "capital_adequacy_ratio",
      "car",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "car.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "car.report_date",
      "=",
      "'2023-12-01'",
      "AND",
      "car.core_tier_1_ratio",
      "<",
      "10",
      "AND",
      "car.total_car",
      "<",
      "12;"
    ],
    "question_toks": [
      "2023年12月1日，哪些金融机构的核心一级资本充足率低于10%，并且它们的总资本充足率也低于12%？请列出这些金融机构的名称、核心一级资本充足率、一级资本充足率和总资本充足率。"
    ],
    "result_fields": [
      "fii.institution_name",
      "car.core_tier_1_ratio",
      "car.tier_1_ratio",
      "car.total_car"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT COUNT(*) FROM compliance_records WHERE record_date >= '2023-01-01' AND record_date < '2024-01-01' AND severity = '高';",
    "question": "2023年发生的严重程度为\"高\"的合规问题有多少起？",
    "query_toks": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "record_date",
      "<",
      "'2024-01-01'",
      "AND",
      "severity",
      "=",
      "'高';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "record_date",
      "<",
      "'2024-01-01'",
      "AND",
      "severity",
      "=",
      "'高';"
    ],
    "question_toks": [
      "2023年发生的严重程度为\"高\"的合规问题有多少起？"
    ],
    "result_fields": [
      "COUNT(*)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM balance_sheet bs JOIN financial_institution_info fii ON bs.institution_id = fii.institution_id ORDER BY (bs.cash_and_equivalents / bs.total_assets) DESC LIMIT 1;",
    "question": "现金及现金等价物占总资产比例最高的机构是哪家？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "balance_sheet",
      "bs",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "bs.institution_id",
      "=",
      "fii.institution_id",
      "ORDER",
      "BY",
      "(bs.cash_and_equivalents",
      "/",
      "bs.total_assets)",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "balance_sheet",
      "bs",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "bs.institution_id",
      "=",
      "fii.institution_id",
      "ORDER",
      "BY",
      "(bs.cash_and_equivalents",
      "/",
      "bs.total_assets)",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "现金及现金等价物占总资产比例最高的机构是哪家？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE (re.market_risk_exposure / re.total_risk_exposure) > 0.4;",
    "question": "市场风险暴露占总风险暴露比例超过40%的金融机构有哪些？",
    "query_toks": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fi.institution_id",
      "=",
      "re.institution_id",
      "WHERE",
      "(re.market_risk_exposure",
      "/",
      "re.total_risk_exposure)",
      ">",
      "0.4;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fi.institution_id",
      "=",
      "re.institution_id",
      "WHERE",
      "(re.market_risk_exposure",
      "/",
      "re.total_risk_exposure)",
      ">",
      "0.4;"
    ],
    "question_toks": [
      "市场风险暴露占总风险暴露比例超过40%的金融机构有哪些？"
    ],
    "result_fields": [
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name, rr.approval_status, rr.comments \nFROM regulatory_reports rr \nJOIN financial_institution_info fi ON rr.institution_id = fi.institution_id \nWHERE rr.report_date >= '2023-01-01' AND rr.report_date < '2024-01-01' \nORDER BY rr.approval_status DESC, rr.comments DESC;",
    "question": "2023年监管报告中，哪些机构的信息披露最为透明？",
    "query_toks": [
      "SELECT",
      "fi.institution_name,",
      "rr.approval_status,",
      "rr.comments",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rr.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "rr.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.report_date",
      "<",
      "'2024-01-01'",
      "ORDER",
      "BY",
      "rr.approval_status",
      "DESC,",
      "rr.comments",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name,",
      "rr.approval_status,",
      "rr.comments",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rr.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "rr.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.report_date",
      "<",
      "'2024-01-01'",
      "ORDER",
      "BY",
      "rr.approval_status",
      "DESC,",
      "rr.comments",
      "DESC;"
    ],
    "question_toks": [
      "2023年监管报告中，哪些机构的信息披露最为透明？"
    ],
    "result_fields": [
      "fi.institution_name",
      "rr.approval_status",
      "rr.comments"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM financial_institution_info fii JOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id JOIN regulatory_reports rr ON fii.institution_id = rr.institution_id WHERE car.report_date >= '2023-01-01' AND car.report_date < '2024-01-01' AND car.core_tier_1_ratio < 8 AND rr.approval_status = '已批准';",
    "question": "在2023年，哪些金融机构的资本充足率表中核心一级资本充足率低于8%，并且其监管报告的审批状态为'已批准'？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "regulatory_reports",
      "rr",
      "ON",
      "fii.institution_id",
      "=",
      "rr.institution_id",
      "WHERE",
      "car.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "car.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "car.core_tier_1_ratio",
      "<",
      "8",
      "AND",
      "rr.approval_status",
      "=",
      "'已批准';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "regulatory_reports",
      "rr",
      "ON",
      "fii.institution_id",
      "=",
      "rr.institution_id",
      "WHERE",
      "car.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "car.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "car.core_tier_1_ratio",
      "<",
      "8",
      "AND",
      "rr.approval_status",
      "=",
      "'已批准';"
    ],
    "question_toks": [
      "在2023年，哪些金融机构的资本充足率表中核心一级资本充足率低于8%，并且其监管报告的审批状态为'已批准'？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, credit_risk_exposure, operational_risk_exposure FROM risk_exposure WHERE report_date >= '2024-01-01' AND report_date < '2024-02-01';",
    "question": "查询2024年1月所有机构的操作风险暴露和信用风险暴露。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "credit_risk_exposure,",
      "operational_risk_exposure",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "report_date",
      "<",
      "'2024-02-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "credit_risk_exposure,",
      "operational_risk_exposure",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "report_date",
      "<",
      "'2024-02-01';"
    ],
    "question_toks": [
      "查询2024年1月所有机构的操作风险暴露和信用风险暴露。"
    ],
    "result_fields": [
      "institution_id",
      "credit_risk_exposure",
      "operational_risk_exposure"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT record_id, institution_id, record_date, resolution_date, description, severity, status, compliance_type FROM compliance_records WHERE record_date = '2023-04-02';",
    "question": "获取2023年4月2日的合规记录及其严重程度。",
    "query_toks": [
      "SELECT",
      "record_id,",
      "institution_id,",
      "record_date,",
      "resolution_date,",
      "description,",
      "severity,",
      "status,",
      "compliance_type",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      "=",
      "'2023-04-02';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "record_id,",
      "institution_id,",
      "record_date,",
      "resolution_date,",
      "description,",
      "severity,",
      "status,",
      "compliance_type",
      "FROM",
      "compliance_records",
      "WHERE",
      "record_date",
      "=",
      "'2023-04-02';"
    ],
    "question_toks": [
      "获取2023年4月2日的合规记录及其严重程度。"
    ],
    "result_fields": [
      "record_id",
      "institution_id",
      "record_date",
      "resolution_date",
      "description",
      "severity",
      "status",
      "compliance_type"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT npl.report_date, npl.npl_ratio, car.total_car FROM non_performing_loans npl JOIN capital_adequacy_ratio car ON npl.institution_id = car.institution_id AND npl.report_date = car.report_date ORDER BY npl.report_date;",
    "question": "不良贷款率的变化趋势是否领先于或滞后于宏观经济指标的变化？",
    "query_toks": [
      "SELECT",
      "npl.report_date,",
      "npl.npl_ratio,",
      "car.total_car",
      "FROM",
      "non_performing_loans",
      "npl",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "npl.institution_id",
      "=",
      "car.institution_id",
      "AND",
      "npl.report_date",
      "=",
      "car.report_date",
      "ORDER",
      "BY",
      "npl.report_date;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "npl.report_date,",
      "npl.npl_ratio,",
      "car.total_car",
      "FROM",
      "non_performing_loans",
      "npl",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "npl.institution_id",
      "=",
      "car.institution_id",
      "AND",
      "npl.report_date",
      "=",
      "car.report_date",
      "ORDER",
      "BY",
      "npl.report_date;"
    ],
    "question_toks": [
      "不良贷款率的变化趋势是否领先于或滞后于宏观经济指标的变化？"
    ],
    "result_fields": [
      "npl.report_date",
      "npl.npl_ratio",
      "car.total_car"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, provision_coverage_ratio FROM non_performing_loans WHERE provision_coverage_ratio > 150",
    "question": "查找各机构的拨备覆盖率，要求大于150%。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "provision_coverage_ratio",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "provision_coverage_ratio",
      ">",
      "150"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "provision_coverage_ratio",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "provision_coverage_ratio",
      ">",
      "150"
    ],
    "question_toks": [
      "查找各机构的拨备覆盖率，要求大于150%。"
    ],
    "result_fields": [
      "institution_id",
      "provision_coverage_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM related_party_transactions WHERE transaction_date = '2023-12-22';",
    "question": "获取2023年12月22日的所有关联交易记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "related_party_transactions",
      "WHERE",
      "transaction_date",
      "=",
      "'2023-12-22';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "related_party_transactions",
      "WHERE",
      "transaction_date",
      "=",
      "'2023-12-22';"
    ],
    "question_toks": [
      "获取2023年12月22日的所有关联交易记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name FROM financial_institution_info fi JOIN liquidity_ratio lr ON fi.institution_id = lr.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE lr.liquidity_coverage_ratio > 110 AND npl.npl_ratio < 1.5;",
    "question": "哪些金融机构的流动性覆盖率高于110%且不良贷款率低于1.5%？",
    "query_toks": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "liquidity_ratio",
      "lr",
      "ON",
      "fi.institution_id",
      "=",
      "lr.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fi.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "lr.liquidity_coverage_ratio",
      ">",
      "110",
      "AND",
      "npl.npl_ratio",
      "<",
      "1.5;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "liquidity_ratio",
      "lr",
      "ON",
      "fi.institution_id",
      "=",
      "lr.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fi.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "lr.liquidity_coverage_ratio",
      ">",
      "110",
      "AND",
      "npl.npl_ratio",
      "<",
      "1.5;"
    ],
    "question_toks": [
      "哪些金融机构的流动性覆盖率高于110%且不良贷款率低于1.5%？"
    ],
    "result_fields": [
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT r.institution_id, f.institution_name, r.report_type, r.approval_status, n.npl_ratio FROM regulatory_reports r JOIN financial_institution_info f ON r.institution_id = f.institution_id JOIN non_performing_loans n ON r.institution_id = n.institution_id WHERE r.submission_date >= '2023-01-01' AND r.submission_date < '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '需修改' AND n.npl_ratio > 2.00;",
    "question": "在2023年提交的监管报告中，哪些机构的报告类型为'季度报告'且审批状态为'需修改'，并且这些机构的不良贷款率超过2%？",
    "query_toks": [
      "SELECT",
      "r.institution_id,",
      "f.institution_name,",
      "r.report_type,",
      "r.approval_status,",
      "n.npl_ratio",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "financial_institution_info",
      "f",
      "ON",
      "r.institution_id",
      "=",
      "f.institution_id",
      "JOIN",
      "non_performing_loans",
      "n",
      "ON",
      "r.institution_id",
      "=",
      "n.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'需修改'",
      "AND",
      "n.npl_ratio",
      ">",
      "2.00;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.institution_id,",
      "f.institution_name,",
      "r.report_type,",
      "r.approval_status,",
      "n.npl_ratio",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "financial_institution_info",
      "f",
      "ON",
      "r.institution_id",
      "=",
      "f.institution_id",
      "JOIN",
      "non_performing_loans",
      "n",
      "ON",
      "r.institution_id",
      "=",
      "n.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'需修改'",
      "AND",
      "n.npl_ratio",
      ">",
      "2.00;"
    ],
    "question_toks": [
      "在2023年提交的监管报告中，哪些机构的报告类型为'季度报告'且审批状态为'需修改'，并且这些机构的不良贷款率超过2%？"
    ],
    "result_fields": [
      "r.institution_id",
      "f.institution_name",
      "r.report_type",
      "r.approval_status",
      "n.npl_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, AVG(net_profit / (net_interest_income + non_interest_income)) AS avg_net_profit_margin FROM income_statement WHERE report_date >= date('now') - INTERVAL '2 years' GROUP BY institution_id ORDER BY avg_net_profit_margin DESC LIMIT 5;",
    "question": "过去两年中，平均净利润率（净利润/营业收入）最高的五家机构是哪些？",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "AVG(net_profit",
      "/",
      "(net_interest_income",
      "+",
      "non_interest_income))",
      "AS",
      "avg_net_profit_margin",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years'",
      "GROUP",
      "BY",
      "institution_id",
      "ORDER",
      "BY",
      "avg_net_profit_margin",
      "DESC",
      "LIMIT",
      "5;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "AVG(net_profit",
      "/",
      "(net_interest_income",
      "+",
      "non_interest_income))",
      "AS",
      "avg_net_profit_margin",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years'",
      "GROUP",
      "BY",
      "institution_id",
      "ORDER",
      "BY",
      "avg_net_profit_margin",
      "DESC",
      "LIMIT",
      "5;"
    ],
    "question_toks": [
      "过去两年中，平均净利润率（净利润/营业收入）最高的五家机构是哪些？"
    ],
    "result_fields": [
      "institution_id",
      "AVG(net_profit / (net_interest_income + non_interest_income))"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_type, AVG(npl.npl_ratio) as avg_npl_ratio\n           FROM non_performing_loans npl\n           JOIN financial_institution_info fi ON npl.institution_id = fi.institution_id\n           WHERE EXTRACT(YEAR FROM npl.report_date) = 2023\n           GROUP BY fi.institution_type",
    "question": "2023年，各类型金融机构的平均不良贷款率是多少？",
    "query_toks": [
      "SELECT",
      "fi.institution_type,",
      "AVG(npl.npl_ratio)",
      "as",
      "avg_npl_ratio",
      "FROM",
      "non_performing_loans",
      "npl",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "npl.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "npl.report_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "fi.institution_type"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_type,",
      "AVG(npl.npl_ratio)",
      "as",
      "avg_npl_ratio",
      "FROM",
      "non_performing_loans",
      "npl",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "npl.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "npl.report_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "fi.institution_type"
    ],
    "question_toks": [
      "2023年，各类型金融机构的平均不良贷款率是多少？"
    ],
    "result_fields": [
      "fi.institution_type",
      "AVG(npl.npl_ratio)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT COUNT(DISTINCT re.institution_id) FROM risk_exposure re JOIN capital_adequacy_ratio car ON re.institution_id = car.institution_id AND re.report_date = car.report_date WHERE re.market_risk_exposure > (SELECT market_risk_exposure * 1.5 FROM risk_exposure WHERE institution_id = re.institution_id AND report_date < re.report_date ORDER BY report_date DESC LIMIT 1) AND car.total_car < (SELECT total_car + 1 FROM capital_adequacy_ratio WHERE institution_id = car.institution_id AND report_date < car.report_date ORDER BY report_date DESC LIMIT 1);",
    "question": "有多少家金融机构的市场风险暴露增速超过50%但资本充足率提升不足1个百分点？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "re.institution_id)",
      "FROM",
      "risk_exposure",
      "re",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "re.institution_id",
      "=",
      "car.institution_id",
      "AND",
      "re.report_date",
      "=",
      "car.report_date",
      "WHERE",
      "re.market_risk_exposure",
      ">",
      "(SELECT",
      "market_risk_exposure",
      "*",
      "1.5",
      "FROM",
      "risk_exposure",
      "WHERE",
      "institution_id",
      "=",
      "re.institution_id",
      "AND",
      "report_date",
      "<",
      "re.report_date",
      "ORDER",
      "BY",
      "report_date",
      "DESC",
      "LIMIT",
      "1)",
      "AND",
      "car.total_car",
      "<",
      "(SELECT",
      "total_car",
      "+",
      "1",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "institution_id",
      "=",
      "car.institution_id",
      "AND",
      "report_date",
      "<",
      "car.report_date",
      "ORDER",
      "BY",
      "report_date",
      "DESC",
      "LIMIT",
      "1);"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "re.institution_id)",
      "FROM",
      "risk_exposure",
      "re",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "re.institution_id",
      "=",
      "car.institution_id",
      "AND",
      "re.report_date",
      "=",
      "car.report_date",
      "WHERE",
      "re.market_risk_exposure",
      ">",
      "(SELECT",
      "market_risk_exposure",
      "*",
      "1.5",
      "FROM",
      "risk_exposure",
      "WHERE",
      "institution_id",
      "=",
      "re.institution_id",
      "AND",
      "report_date",
      "<",
      "re.report_date",
      "ORDER",
      "BY",
      "report_date",
      "DESC",
      "LIMIT",
      "1)",
      "AND",
      "car.total_car",
      "<",
      "(SELECT",
      "total_car",
      "+",
      "1",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "institution_id",
      "=",
      "car.institution_id",
      "AND",
      "report_date",
      "<",
      "car.report_date",
      "ORDER",
      "BY",
      "report_date",
      "DESC",
      "LIMIT",
      "1);"
    ],
    "question_toks": [
      "有多少家金融机构的市场风险暴露增速超过50%但资本充足率提升不足1个百分点？"
    ],
    "result_fields": [
      "COUNT(DISTINCT re.institution_id)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, SUM(total_assets) AS total_assets, SUM(total_liabilities) AS total_liabilities FROM balance_sheet GROUP BY institution_id;",
    "question": "获取资产负债表中所有机构的总资产和总负债。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "SUM(total_assets)",
      "AS",
      "total_assets,",
      "SUM(total_liabilities)",
      "AS",
      "total_liabilities",
      "FROM",
      "balance_sheet",
      "GROUP",
      "BY",
      "institution_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "SUM(total_assets)",
      "AS",
      "total_assets,",
      "SUM(total_liabilities)",
      "AS",
      "total_liabilities",
      "FROM",
      "balance_sheet",
      "GROUP",
      "BY",
      "institution_id;"
    ],
    "question_toks": [
      "获取资产负债表中所有机构的总资产和总负债。"
    ],
    "result_fields": [
      "institution_id",
      "SUM(total_assets)",
      "SUM(total_liabilities)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.approval_status, rpt.transaction_amount FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN related_party_transactions rpt ON rr.institution_id = rpt.institution_id WHERE rr.approval_status = '需修改' AND rr.report_date = '2023-07-01' AND rpt.transaction_amount > 5000000;",
    "question": "2023年7月，哪些金融机构的监管报告状态为'需修改'，并且其关联交易金额超过500万元？",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.approval_status,",
      "rpt.transaction_amount",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "rr.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "rpt.transaction_amount",
      ">",
      "5000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.approval_status,",
      "rpt.transaction_amount",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "rr.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "rpt.transaction_amount",
      ">",
      "5000000;"
    ],
    "question_toks": [
      "2023年7月，哪些金融机构的监管报告状态为'需修改'，并且其关联交易金额超过500万元？"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.approval_status",
      "rpt.transaction_amount"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT AVG(total_car) FROM capital_adequacy_ratio WHERE institution_id IN (SELECT institution_id FROM balance_sheet WHERE total_assets > 10000000000000);",
    "question": "总资产超过1万亿元的机构中，平均资本充足率是多少？",
    "query_toks": [
      "SELECT",
      "AVG(total_car)",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "institution_id",
      "IN",
      "(SELECT",
      "institution_id",
      "FROM",
      "balance_sheet",
      "WHERE",
      "total_assets",
      ">",
      "10000000000000);"
    ],
    "query_toks_no_value": [
      "SELECT",
      "AVG(total_car)",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "institution_id",
      "IN",
      "(SELECT",
      "institution_id",
      "FROM",
      "balance_sheet",
      "WHERE",
      "total_assets",
      ">",
      "10000000000000);"
    ],
    "question_toks": [
      "总资产超过1万亿元的机构中，平均资本充足率是多少？"
    ],
    "result_fields": [
      "AVG(total_car)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM risk_exposure WHERE report_date = '2023-10-01';",
    "question": "查询2023年10月1日的所有风险暴露表记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      "=",
      "'2023-10-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      "=",
      "'2023-10-01';"
    ],
    "question_toks": [
      "查询2023年10月1日的所有风险暴露表记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM financial_institution_info fii JOIN related_party_transactions rpt ON fii.institution_id = rpt.institution_id JOIN regulatory_reports rr ON fii.institution_id = rr.institution_id WHERE rpt.transaction_amount > 5000000 AND rpt.transaction_date = '2023-06-01' AND rr.approval_status = '已批准';",
    "question": "2023年6月1日，哪些金融机构的关联交易金额超过500万元，并且其监管报告的审批状态为'已批准'？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "fii.institution_id",
      "=",
      "rpt.institution_id",
      "JOIN",
      "regulatory_reports",
      "rr",
      "ON",
      "fii.institution_id",
      "=",
      "rr.institution_id",
      "WHERE",
      "rpt.transaction_amount",
      ">",
      "5000000",
      "AND",
      "rpt.transaction_date",
      "=",
      "'2023-06-01'",
      "AND",
      "rr.approval_status",
      "=",
      "'已批准';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "fii.institution_id",
      "=",
      "rpt.institution_id",
      "JOIN",
      "regulatory_reports",
      "rr",
      "ON",
      "fii.institution_id",
      "=",
      "rr.institution_id",
      "WHERE",
      "rpt.transaction_amount",
      ">",
      "5000000",
      "AND",
      "rpt.transaction_date",
      "=",
      "'2023-06-01'",
      "AND",
      "rr.approval_status",
      "=",
      "'已批准';"
    ],
    "question_toks": [
      "2023年6月1日，哪些金融机构的关联交易金额超过500万元，并且其监管报告的审批状态为'已批准'？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT corr(b.total_assets, c.total_car) AS correlation_coefficient\nFROM balance_sheet b\nJOIN capital_adequacy_ratio c ON b.institution_id = c.institution_id AND b.report_date = c.report_date;",
    "question": "总资产规模与资本充足率之间是否存在显著关系？",
    "query_toks": [
      "SELECT",
      "corr(b.total_assets,",
      "c.total_car)",
      "AS",
      "correlation_coefficient",
      "FROM",
      "balance_sheet",
      "b",
      "JOIN",
      "capital_adequacy_ratio",
      "c",
      "ON",
      "b.institution_id",
      "=",
      "c.institution_id",
      "AND",
      "b.report_date",
      "=",
      "c.report_date;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "corr(b.total_assets,",
      "c.total_car)",
      "AS",
      "correlation_coefficient",
      "FROM",
      "balance_sheet",
      "b",
      "JOIN",
      "capital_adequacy_ratio",
      "c",
      "ON",
      "b.institution_id",
      "=",
      "c.institution_id",
      "AND",
      "b.report_date",
      "=",
      "c.report_date;"
    ],
    "question_toks": [
      "总资产规模与资本充足率之间是否存在显著关系？"
    ],
    "result_fields": [
      "corr(b.total_assets, c.total_car)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "WITH transaction_stats AS (\n             SELECT institution_id,\n                    COUNT(*) as total_transactions,\n                    SUM(CASE WHEN approval_status != '已批准' THEN 1 ELSE 0 END) as unapproved_transactions\n             FROM related_party_transactions\n             WHERE EXTRACT(YEAR FROM transaction_date) = 2023\n             GROUP BY institution_id\n           )\n           SELECT fi.institution_name,\n                  (ts.unapproved_transactions / NULLIF(ts.total_transactions, 0)) * 100 as unapproved_ratio\n           FROM transaction_stats ts\n           JOIN financial_institution_info fi ON ts.institution_id = fi.institution_id\n           WHERE (ts.unapproved_transactions / NULLIF(ts.total_transactions, 0)) > 0.2\n           ORDER BY unapproved_ratio DESC",
    "question": "2023年，哪些金融机构的关联交易审批未通过的比例超过20%？",
    "query_toks": [
      "WITH",
      "transaction_stats",
      "AS",
      "(",
      "SELECT",
      "institution_id,",
      "COUNT(*)",
      "as",
      "total_transactions,",
      "SUM(CASE",
      "WHEN",
      "approval_status",
      "!=",
      "'已批准'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "as",
      "unapproved_transactions",
      "FROM",
      "related_party_transactions",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "transaction_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "institution_id",
      ")",
      "SELECT",
      "fi.institution_name,",
      "(ts.unapproved_transactions",
      "/",
      "NULLIF(ts.total_transactions,",
      "0))",
      "*",
      "100",
      "as",
      "unapproved_ratio",
      "FROM",
      "transaction_stats",
      "ts",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "ts.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "(ts.unapproved_transactions",
      "/",
      "NULLIF(ts.total_transactions,",
      "0))",
      ">",
      "0.2",
      "ORDER",
      "BY",
      "unapproved_ratio",
      "DESC"
    ],
    "query_toks_no_value": [
      "WITH",
      "transaction_stats",
      "AS",
      "(",
      "SELECT",
      "institution_id,",
      "COUNT(*)",
      "as",
      "total_transactions,",
      "SUM(CASE",
      "WHEN",
      "approval_status",
      "!=",
      "'已批准'",
      "THEN",
      "1",
      "ELSE",
      "0",
      "END)",
      "as",
      "unapproved_transactions",
      "FROM",
      "related_party_transactions",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "transaction_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "institution_id",
      ")",
      "SELECT",
      "fi.institution_name,",
      "(ts.unapproved_transactions",
      "/",
      "NULLIF(ts.total_transactions,",
      "0))",
      "*",
      "100",
      "as",
      "unapproved_ratio",
      "FROM",
      "transaction_stats",
      "ts",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "ts.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "(ts.unapproved_transactions",
      "/",
      "NULLIF(ts.total_transactions,",
      "0))",
      ">",
      "0.2",
      "ORDER",
      "BY",
      "unapproved_ratio",
      "DESC"
    ],
    "question_toks": [
      "2023年，哪些金融机构的关联交易审批未通过的比例超过20%？"
    ],
    "result_fields": [
      "institution_id",
      "COUNT(*)",
      "SUM(CASE WHEN approval_status != '已批准' THEN 1 ELSE 0 END)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON fii.institution_id = npl.institution_id WHERE rr.report_date = '2023-07-01' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND npl.npl_ratio > 2.00;",
    "question": "2023年7月1日，哪些金融机构的监管报告中报告类型为'季度报告'且审批状态为'需修改'，并且这些机构的不良贷款率超过2%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "npl.npl_ratio",
      ">",
      "2.00;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "npl.npl_ratio",
      ">",
      "2.00;"
    ],
    "question_toks": [
      "2023年7月1日，哪些金融机构的监管报告中报告类型为'季度报告'且审批状态为'需修改'，并且这些机构的不良贷款率超过2%？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT r.institution_id, r.approval_status, c.compliance_type, c.severity, c.status \nFROM regulatory_reports r \nJOIN compliance_records c ON r.institution_id = c.institution_id \nWHERE EXTRACT(YEAR FROM r.report_date) = 2023;",
    "question": "查找2023年中各机构的审批状态和合规记录。",
    "query_toks": [
      "SELECT",
      "r.institution_id,",
      "r.approval_status,",
      "c.compliance_type,",
      "c.severity,",
      "c.status",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "compliance_records",
      "c",
      "ON",
      "r.institution_id",
      "=",
      "c.institution_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "r.report_date)",
      "=",
      "2023;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.institution_id,",
      "r.approval_status,",
      "c.compliance_type,",
      "c.severity,",
      "c.status",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "compliance_records",
      "c",
      "ON",
      "r.institution_id",
      "=",
      "c.institution_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "r.report_date)",
      "=",
      "2023;"
    ],
    "question_toks": [
      "查找2023年中各机构的审批状态和合规记录。"
    ],
    "result_fields": [
      "r.institution_id",
      "r.approval_status",
      "c.compliance_type",
      "c.severity",
      "c.status"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON rr.institution_id = npl.institution_id WHERE rr.report_date = '2023-10-01' AND rr.report_type = '半年度报告' AND npl.npl_ratio > 2.0;",
    "question": "在2023年10月1日，哪些金融机构的监管报告类型为'半年度报告'，并且其不良贷款率超过2%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "rr.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-10-01'",
      "AND",
      "rr.report_type",
      "=",
      "'半年度报告'",
      "AND",
      "npl.npl_ratio",
      ">",
      "2.0;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "rr.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-10-01'",
      "AND",
      "rr.report_type",
      "=",
      "'半年度报告'",
      "AND",
      "npl.npl_ratio",
      ">",
      "2.0;"
    ],
    "question_toks": [
      "在2023年10月1日，哪些金融机构的监管报告类型为'半年度报告'，并且其不良贷款率超过2%？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, liquidity_coverage_ratio, net_stable_funding_ratio FROM liquidity_ratio WHERE report_date >= '2023-05-01' AND report_date < '2023-06-01';",
    "question": "查询所有机构在2023年5月的流动性覆盖率和净稳定资金比例。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "liquidity_coverage_ratio,",
      "net_stable_funding_ratio",
      "FROM",
      "liquidity_ratio",
      "WHERE",
      "report_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "report_date",
      "<",
      "'2023-06-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "liquidity_coverage_ratio,",
      "net_stable_funding_ratio",
      "FROM",
      "liquidity_ratio",
      "WHERE",
      "report_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "report_date",
      "<",
      "'2023-06-01';"
    ],
    "question_toks": [
      "查询所有机构在2023年5月的流动性覆盖率和净稳定资金比例。"
    ],
    "result_fields": [
      "institution_id",
      "liquidity_coverage_ratio",
      "net_stable_funding_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, SUM(non_interest_income) AS total_non_interest_income FROM income_statement WHERE report_date = '2023-03-01' GROUP BY institution_id;",
    "question": "统计各机构2023年3月1日的非利息收入总和。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "SUM(non_interest_income)",
      "AS",
      "total_non_interest_income",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      "=",
      "'2023-03-01'",
      "GROUP",
      "BY",
      "institution_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "SUM(non_interest_income)",
      "AS",
      "total_non_interest_income",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      "=",
      "'2023-03-01'",
      "GROUP",
      "BY",
      "institution_id;"
    ],
    "question_toks": [
      "统计各机构2023年3月1日的非利息收入总和。"
    ],
    "result_fields": [
      "institution_id",
      "SUM(non_interest_income)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM risk_exposure WHERE report_date = '2023-02-01';",
    "question": "获取所有机构在2023年2月1日的风险暴露信息。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      "=",
      "'2023-02-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      "=",
      "'2023-02-01';"
    ],
    "question_toks": [
      "获取所有机构在2023年2月1日的风险暴露信息。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT COUNT(*) FROM related_party_transactions WHERE transaction_amount > 500000000 AND transaction_type = '资产转移' AND EXTRACT(YEAR FROM transaction_date) = 2023;",
    "question": "2023年，关联交易金额超过5亿元且为\"资产转移\"类型的交易有多少笔？",
    "query_toks": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "related_party_transactions",
      "WHERE",
      "transaction_amount",
      ">",
      "500000000",
      "AND",
      "transaction_type",
      "=",
      "'资产转移'",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "transaction_date)",
      "=",
      "2023;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "related_party_transactions",
      "WHERE",
      "transaction_amount",
      ">",
      "500000000",
      "AND",
      "transaction_type",
      "=",
      "'资产转移'",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "transaction_date)",
      "=",
      "2023;"
    ],
    "question_toks": [
      "2023年，关联交易金额超过5亿元且为\"资产转移\"类型的交易有多少笔？"
    ],
    "result_fields": [
      "COUNT(*)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN related_party_transactions rpt ON rr.institution_id = rpt.institution_id WHERE rr.approval_status = '需修改' AND rr.submission_date = '2023-08-01' AND rpt.transaction_amount > 5000000;",
    "question": "2023年8月1日，哪些金融机构的监管报告审批状态为'需修改'，并且其关联交易金额超过500万元？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "rr.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.submission_date",
      "=",
      "'2023-08-01'",
      "AND",
      "rpt.transaction_amount",
      ">",
      "5000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "rr.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.submission_date",
      "=",
      "'2023-08-01'",
      "AND",
      "rpt.transaction_amount",
      ">",
      "5000000;"
    ],
    "question_toks": [
      "2023年8月1日，哪些金融机构的监管报告审批状态为'需修改'，并且其关联交易金额超过500万元？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT r.institution_id, f.institution_name FROM regulatory_reports r JOIN financial_institution_info f ON r.institution_id = f.institution_id JOIN income_statement i ON r.institution_id = i.institution_id WHERE r.submission_date >= '2023-01-01' AND r.submission_date < '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '已拒绝' AND i.report_date >= '2023-01-01' AND i.report_date < '2023-04-01' AND i.net_profit > 10000000;",
    "question": "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'且审批状态为'已拒绝'，并且这些机构在2023年第一季度的净利润超过1000万元？",
    "query_toks": [
      "SELECT",
      "r.institution_id,",
      "f.institution_name",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "financial_institution_info",
      "f",
      "ON",
      "r.institution_id",
      "=",
      "f.institution_id",
      "JOIN",
      "income_statement",
      "i",
      "ON",
      "r.institution_id",
      "=",
      "i.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'已拒绝'",
      "AND",
      "i.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "i.report_date",
      "<",
      "'2023-04-01'",
      "AND",
      "i.net_profit",
      ">",
      "10000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.institution_id,",
      "f.institution_name",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "financial_institution_info",
      "f",
      "ON",
      "r.institution_id",
      "=",
      "f.institution_id",
      "JOIN",
      "income_statement",
      "i",
      "ON",
      "r.institution_id",
      "=",
      "i.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'已拒绝'",
      "AND",
      "i.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "i.report_date",
      "<",
      "'2023-04-01'",
      "AND",
      "i.net_profit",
      ">",
      "10000000;"
    ],
    "question_toks": [
      "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'且审批状态为'已拒绝'，并且这些机构在2023年第一季度的净利润超过1000万元？"
    ],
    "result_fields": [
      "r.institution_id",
      "f.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.report_date = '2023-07-01' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改';",
    "question": "2023年7月1日，哪些金融机构提交了季度报告，并且这些报告的审批状态是需要修改的？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改';"
    ],
    "question_toks": [
      "2023年7月1日，哪些金融机构提交了季度报告，并且这些报告的审批状态是需要修改的？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM compliance_records WHERE compliance_type = '内控管理';",
    "question": "查询所有机构的合规记录中合规类型为内控管理的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "compliance_records",
      "WHERE",
      "compliance_type",
      "=",
      "'内控管理';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "compliance_records",
      "WHERE",
      "compliance_type",
      "=",
      "'内控管理';"
    ],
    "question_toks": [
      "查询所有机构的合规记录中合规类型为内控管理的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_type, rr.approval_status, npl.npl_ratio FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON fii.institution_id = npl.institution_id WHERE rr.report_type = '半年度报告' AND rr.approval_status = '待审核' AND rr.report_date >= '2023-10-01' AND rr.report_date < '2023-11-01' AND npl.npl_ratio > 1.00;",
    "question": "2023年10月，哪些金融机构的监管报告类型为'半年度报告'且审批状态为'待审核'，并且这些机构的不良贷款率超过1%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_type,",
      "rr.approval_status,",
      "npl.npl_ratio",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'半年度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'待审核'",
      "AND",
      "rr.report_date",
      ">=",
      "'2023-10-01'",
      "AND",
      "rr.report_date",
      "<",
      "'2023-11-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.00;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_type,",
      "rr.approval_status,",
      "npl.npl_ratio",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'半年度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'待审核'",
      "AND",
      "rr.report_date",
      ">=",
      "'2023-10-01'",
      "AND",
      "rr.report_date",
      "<",
      "'2023-11-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.00;"
    ],
    "question_toks": [
      "2023年10月，哪些金融机构的监管报告类型为'半年度报告'且审批状态为'待审核'，并且这些机构的不良贷款率超过1%？"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_type",
      "rr.approval_status",
      "npl.npl_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_type, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY npl_ratio) AS median_npl_ratio FROM non_performing_loans JOIN financial_institution_info ON non_performing_loans.institution_id = financial_institution_info.institution_id GROUP BY institution_type;",
    "question": "各机构类型中，不良贷款率的中位数是多少？",
    "query_toks": [
      "SELECT",
      "institution_type,",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "npl_ratio)",
      "AS",
      "median_npl_ratio",
      "FROM",
      "non_performing_loans",
      "JOIN",
      "financial_institution_info",
      "ON",
      "non_performing_loans.institution_id",
      "=",
      "financial_institution_info.institution_id",
      "GROUP",
      "BY",
      "institution_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_type,",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "npl_ratio)",
      "AS",
      "median_npl_ratio",
      "FROM",
      "non_performing_loans",
      "JOIN",
      "financial_institution_info",
      "ON",
      "non_performing_loans.institution_id",
      "=",
      "financial_institution_info.institution_id",
      "GROUP",
      "BY",
      "institution_type;"
    ],
    "question_toks": [
      "各机构类型中，不良贷款率的中位数是多少？"
    ],
    "result_fields": [
      "institution_type",
      "PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY npl_ratio)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM capital_adequacy_ratio WHERE core_tier_1_ratio < 8;",
    "question": "查询资本充足率表中核心一级资本充足率低于8%的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "core_tier_1_ratio",
      "<",
      "8;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "core_tier_1_ratio",
      "<",
      "8;"
    ],
    "question_toks": [
      "查询资本充足率表中核心一级资本充足率低于8%的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT r.institution_id, f.institution_name, f.registered_capital, r.report_type, r.approval_status FROM regulatory_reports r JOIN financial_institution_info f ON r.institution_id = f.institution_id WHERE r.submission_date >= '2023-01-01' AND r.submission_date < '2024-01-01' AND r.report_type = '半年度报告' AND r.approval_status = '待审核' AND f.registered_capital > 50000000;",
    "question": "在2023年提交的监管报告中，哪些金融机构的报告类型为'半年度报告'且审批状态为'待审核'，并且这些金融机构的注册资本超过5000万元？",
    "query_toks": [
      "SELECT",
      "r.institution_id,",
      "f.institution_name,",
      "f.registered_capital,",
      "r.report_type,",
      "r.approval_status",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "financial_institution_info",
      "f",
      "ON",
      "r.institution_id",
      "=",
      "f.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'半年度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'待审核'",
      "AND",
      "f.registered_capital",
      ">",
      "50000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.institution_id,",
      "f.institution_name,",
      "f.registered_capital,",
      "r.report_type,",
      "r.approval_status",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "financial_institution_info",
      "f",
      "ON",
      "r.institution_id",
      "=",
      "f.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'半年度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'待审核'",
      "AND",
      "f.registered_capital",
      ">",
      "50000000;"
    ],
    "question_toks": [
      "在2023年提交的监管报告中，哪些金融机构的报告类型为'半年度报告'且审批状态为'待审核'，并且这些金融机构的注册资本超过5000万元？"
    ],
    "result_fields": [
      "r.institution_id",
      "f.institution_name",
      "f.registered_capital",
      "r.report_type",
      "r.approval_status"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM financial_institution_info fii JOIN related_party_transactions rpt ON fii.institution_id = rpt.institution_id WHERE rpt.transaction_date = '2023-06-01' AND rpt.transaction_amount > 5000000 AND rpt.approval_status = '待审批';",
    "question": "2023年6月1日，哪些金融机构的关联交易金额超过500万元且审批状态为待审批？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "fii.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "rpt.transaction_date",
      "=",
      "'2023-06-01'",
      "AND",
      "rpt.transaction_amount",
      ">",
      "5000000",
      "AND",
      "rpt.approval_status",
      "=",
      "'待审批';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "fii.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "rpt.transaction_date",
      "=",
      "'2023-06-01'",
      "AND",
      "rpt.transaction_amount",
      ">",
      "5000000",
      "AND",
      "rpt.approval_status",
      "=",
      "'待审批';"
    ],
    "question_toks": [
      "2023年6月1日，哪些金融机构的关联交易金额超过500万元且审批状态为待审批？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT lr.institution_id FROM liquidity_ratio lr WHERE lr.loan_to_deposit_ratio > (SELECT AVG(loan_to_deposit_ratio) FROM liquidity_ratio) AND lr.liquidity_coverage_ratio < (SELECT AVG(liquidity_coverage_ratio) FROM liquidity_ratio);",
    "question": "哪些机构的存贷比高于行业平均水平，但流动性覆盖率低于行业平均水平？",
    "query_toks": [
      "SELECT",
      "lr.institution_id",
      "FROM",
      "liquidity_ratio",
      "lr",
      "WHERE",
      "lr.loan_to_deposit_ratio",
      ">",
      "(SELECT",
      "AVG(loan_to_deposit_ratio)",
      "FROM",
      "liquidity_ratio)",
      "AND",
      "lr.liquidity_coverage_ratio",
      "<",
      "(SELECT",
      "AVG(liquidity_coverage_ratio)",
      "FROM",
      "liquidity_ratio);"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lr.institution_id",
      "FROM",
      "liquidity_ratio",
      "lr",
      "WHERE",
      "lr.loan_to_deposit_ratio",
      ">",
      "(SELECT",
      "AVG(loan_to_deposit_ratio)",
      "FROM",
      "liquidity_ratio)",
      "AND",
      "lr.liquidity_coverage_ratio",
      "<",
      "(SELECT",
      "AVG(liquidity_coverage_ratio)",
      "FROM",
      "liquidity_ratio);"
    ],
    "question_toks": [
      "哪些机构的存贷比高于行业平均水平，但流动性覆盖率低于行业平均水平？"
    ],
    "result_fields": [
      "lr.institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT f.institution_name FROM financial_institution_info f JOIN income_statement i ON f.institution_id = i.institution_id WHERE i.report_date = '2023-04-01' AND i.net_interest_income > 10000000000;",
    "question": "在2023年4月1日，哪些机构的利息净收入超过10亿？",
    "query_toks": [
      "SELECT",
      "f.institution_name",
      "FROM",
      "financial_institution_info",
      "f",
      "JOIN",
      "income_statement",
      "i",
      "ON",
      "f.institution_id",
      "=",
      "i.institution_id",
      "WHERE",
      "i.report_date",
      "=",
      "'2023-04-01'",
      "AND",
      "i.net_interest_income",
      ">",
      "10000000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "f.institution_name",
      "FROM",
      "financial_institution_info",
      "f",
      "JOIN",
      "income_statement",
      "i",
      "ON",
      "f.institution_id",
      "=",
      "i.institution_id",
      "WHERE",
      "i.report_date",
      "=",
      "'2023-04-01'",
      "AND",
      "i.net_interest_income",
      ">",
      "10000000000;"
    ],
    "question_toks": [
      "在2023年4月1日，哪些机构的利息净收入超过10亿？"
    ],
    "result_fields": [
      "f.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT r.institution_id, r.report_id, r.report_type, r.approval_status, n.npl_ratio FROM regulatory_reports r JOIN non_performing_loans n ON r.institution_id = n.institution_id WHERE r.submission_date >= '2023-01-01' AND r.submission_date < '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '需修改' AND n.report_date >= '2023-01-01' AND n.report_date < '2024-01-01' AND n.npl_ratio > 1.00;",
    "question": "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'需修改'，同时这些机构在2023年的不良贷款率超过1%？",
    "query_toks": [
      "SELECT",
      "r.institution_id,",
      "r.report_id,",
      "r.report_type,",
      "r.approval_status,",
      "n.npl_ratio",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "non_performing_loans",
      "n",
      "ON",
      "r.institution_id",
      "=",
      "n.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'需修改'",
      "AND",
      "n.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "n.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "n.npl_ratio",
      ">",
      "1.00;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.institution_id,",
      "r.report_id,",
      "r.report_type,",
      "r.approval_status,",
      "n.npl_ratio",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "non_performing_loans",
      "n",
      "ON",
      "r.institution_id",
      "=",
      "n.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'需修改'",
      "AND",
      "n.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "n.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "n.npl_ratio",
      ">",
      "1.00;"
    ],
    "question_toks": [
      "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'需修改'，同时这些机构在2023年的不良贷款率超过1%？"
    ],
    "result_fields": [
      "r.institution_id",
      "r.report_id",
      "r.report_type",
      "r.approval_status",
      "n.npl_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, re.total_risk_exposure, car.core_tier_1_ratio FROM financial_institution_info fii JOIN risk_exposure re ON fii.institution_id = re.institution_id JOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id WHERE re.report_date = '2023-10-01' AND re.total_risk_exposure > 300000000000 AND car.core_tier_1_ratio < 8",
    "question": "2023年10月1日，哪些金融机构的总风险暴露超过了3000亿元，并且其核心一级资本充足率低于8%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "re.total_risk_exposure,",
      "car.core_tier_1_ratio",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fii.institution_id",
      "=",
      "re.institution_id",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "WHERE",
      "re.report_date",
      "=",
      "'2023-10-01'",
      "AND",
      "re.total_risk_exposure",
      ">",
      "300000000000",
      "AND",
      "car.core_tier_1_ratio",
      "<",
      "8"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "re.total_risk_exposure,",
      "car.core_tier_1_ratio",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fii.institution_id",
      "=",
      "re.institution_id",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "WHERE",
      "re.report_date",
      "=",
      "'2023-10-01'",
      "AND",
      "re.total_risk_exposure",
      ">",
      "300000000000",
      "AND",
      "car.core_tier_1_ratio",
      "<",
      "8"
    ],
    "question_toks": [
      "2023年10月1日，哪些金融机构的总风险暴露超过了3000亿元，并且其核心一级资本充足率低于8%？"
    ],
    "result_fields": [
      "fii.institution_name",
      "re.total_risk_exposure",
      "car.core_tier_1_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT COUNT(DISTINCT re.institution_id) FROM risk_exposure re JOIN risk_exposure re_prev ON re.institution_id = re_prev.institution_id AND re.report_date = date('now') - INTERVAL '1 year' AND re_prev.report_date = date('now') - INTERVAL '2 years' WHERE (re.market_risk_exposure / re.credit_risk_exposure) / (re_prev.market_risk_exposure / re_prev.credit_risk_exposure) > 1.1 OR (re.market_risk_exposure / re.credit_risk_exposure) / (re_prev.market_risk_exposure / re_prev.credit_risk_exposure) < 0.9;",
    "question": "有多少家金融机构的市场风险暴露和信用风险暴露的比例在过去一年中发生了显著变化？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "re.institution_id)",
      "FROM",
      "risk_exposure",
      "re",
      "JOIN",
      "risk_exposure",
      "re_prev",
      "ON",
      "re.institution_id",
      "=",
      "re_prev.institution_id",
      "AND",
      "re.report_date",
      "=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "AND",
      "re_prev.report_date",
      "=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years'",
      "WHERE",
      "(re.market_risk_exposure",
      "/",
      "re.credit_risk_exposure)",
      "/",
      "(re_prev.market_risk_exposure",
      "/",
      "re_prev.credit_risk_exposure)",
      ">",
      "1.1",
      "OR",
      "(re.market_risk_exposure",
      "/",
      "re.credit_risk_exposure)",
      "/",
      "(re_prev.market_risk_exposure",
      "/",
      "re_prev.credit_risk_exposure)",
      "<",
      "0.9;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "re.institution_id)",
      "FROM",
      "risk_exposure",
      "re",
      "JOIN",
      "risk_exposure",
      "re_prev",
      "ON",
      "re.institution_id",
      "=",
      "re_prev.institution_id",
      "AND",
      "re.report_date",
      "=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "AND",
      "re_prev.report_date",
      "=",
      "date('now')",
      "-",
      "INTERVAL",
      "'2",
      "years'",
      "WHERE",
      "(re.market_risk_exposure",
      "/",
      "re.credit_risk_exposure)",
      "/",
      "(re_prev.market_risk_exposure",
      "/",
      "re_prev.credit_risk_exposure)",
      ">",
      "1.1",
      "OR",
      "(re.market_risk_exposure",
      "/",
      "re.credit_risk_exposure)",
      "/",
      "(re_prev.market_risk_exposure",
      "/",
      "re_prev.credit_risk_exposure)",
      "<",
      "0.9;"
    ],
    "question_toks": [
      "有多少家金融机构的市场风险暴露和信用风险暴露的比例在过去一年中发生了显著变化？"
    ],
    "result_fields": [
      "COUNT(DISTINCT re.institution_id)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT b.institution_id FROM balance_sheet b WHERE b.loans_and_advances > b.deposits;",
    "question": "哪些机构的贷款总额超过其存款总额？",
    "query_toks": [
      "SELECT",
      "b.institution_id",
      "FROM",
      "balance_sheet",
      "b",
      "WHERE",
      "b.loans_and_advances",
      ">",
      "b.deposits;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "b.institution_id",
      "FROM",
      "balance_sheet",
      "b",
      "WHERE",
      "b.loans_and_advances",
      ">",
      "b.deposits;"
    ],
    "question_toks": [
      "哪些机构的贷款总额超过其存款总额？"
    ],
    "result_fields": [
      "b.institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_date, rr.approval_status FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date >= '2023-01-01' AND rr.submission_date <= '2023-12-31' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';",
    "question": "在2023年提交的所有监管报告中，哪些机构的报告类型为季度报告且审批状态为已拒绝？请列出这些机构的名称、报告日期和审批状态。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_date,",
      "rr.approval_status",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<=",
      "'2023-12-31'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_date,",
      "rr.approval_status",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<=",
      "'2023-12-31'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "question_toks": [
      "在2023年提交的所有监管报告中，哪些机构的报告类型为季度报告且审批状态为已拒绝？请列出这些机构的名称、报告日期和审批状态。"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_date",
      "rr.approval_status"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT f.institution_name FROM financial_institution_info f JOIN income_statement i ON f.institution_id = i.institution_id WHERE i.report_date = '2023-04-01' AND i.non_interest_income > 200000000;",
    "question": "哪些机构在2023年4月1日的非利息收入超过2亿？",
    "query_toks": [
      "SELECT",
      "f.institution_name",
      "FROM",
      "financial_institution_info",
      "f",
      "JOIN",
      "income_statement",
      "i",
      "ON",
      "f.institution_id",
      "=",
      "i.institution_id",
      "WHERE",
      "i.report_date",
      "=",
      "'2023-04-01'",
      "AND",
      "i.non_interest_income",
      ">",
      "200000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "f.institution_name",
      "FROM",
      "financial_institution_info",
      "f",
      "JOIN",
      "income_statement",
      "i",
      "ON",
      "f.institution_id",
      "=",
      "i.institution_id",
      "WHERE",
      "i.report_date",
      "=",
      "'2023-04-01'",
      "AND",
      "i.non_interest_income",
      ">",
      "200000000;"
    ],
    "question_toks": [
      "哪些机构在2023年4月1日的非利息收入超过2亿？"
    ],
    "result_fields": [
      "f.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, COUNT(*) AS transaction_count FROM related_party_transactions WHERE transaction_date >= date('now') - INTERVAL '1 year' GROUP BY institution_id ORDER BY transaction_count DESC LIMIT 1;",
    "question": "过去一年中，哪家机构的关联交易笔数最多？",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "COUNT(*)",
      "AS",
      "transaction_count",
      "FROM",
      "related_party_transactions",
      "WHERE",
      "transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "GROUP",
      "BY",
      "institution_id",
      "ORDER",
      "BY",
      "transaction_count",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "COUNT(*)",
      "AS",
      "transaction_count",
      "FROM",
      "related_party_transactions",
      "WHERE",
      "transaction_date",
      ">=",
      "date('now')",
      "-",
      "INTERVAL",
      "'1",
      "year'",
      "GROUP",
      "BY",
      "institution_id",
      "ORDER",
      "BY",
      "transaction_count",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "过去一年中，哪家机构的关联交易笔数最多？"
    ],
    "result_fields": [
      "institution_id",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name, (re.credit_risk_exposure / re.total_risk_exposure * 100) AS credit_risk_percentage FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id ORDER BY credit_risk_percentage DESC LIMIT 1",
    "question": "哪家机构的信用风险暴露占总风险暴露的比例最高？请显示机构名称和该比例。",
    "query_toks": [
      "SELECT",
      "fi.institution_name,",
      "(re.credit_risk_exposure",
      "/",
      "re.total_risk_exposure",
      "*",
      "100)",
      "AS",
      "credit_risk_percentage",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fi.institution_id",
      "=",
      "re.institution_id",
      "ORDER",
      "BY",
      "credit_risk_percentage",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name,",
      "(re.credit_risk_exposure",
      "/",
      "re.total_risk_exposure",
      "*",
      "100)",
      "AS",
      "credit_risk_percentage",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fi.institution_id",
      "=",
      "re.institution_id",
      "ORDER",
      "BY",
      "credit_risk_percentage",
      "DESC",
      "LIMIT",
      "1"
    ],
    "question_toks": [
      "哪家机构的信用风险暴露占总风险暴露的比例最高？请显示机构名称和该比例。"
    ],
    "result_fields": [
      "fi.institution_name",
      "(re.credit_risk_exposure / re.total_risk_exposure * 100)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT DISTINCT institution_id FROM risk_exposure WHERE report_date >= '2023-01-01' AND report_date < '2024-01-01';",
    "question": "找出在2023年有风险暴露记录的所有机构。",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "institution_id",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "report_date",
      "<",
      "'2024-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "institution_id",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "report_date",
      "<",
      "'2024-01-01';"
    ],
    "question_toks": [
      "找出在2023年有风险暴露记录的所有机构。"
    ],
    "result_fields": [
      "DISTINCT institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id FROM capital_adequacy_ratio WHERE report_date = '2023-11-01' AND risk_weighted_assets > 120000000000;",
    "question": "哪些机构的风险加权资产在2023年11月超过1200亿元？",
    "query_toks": [
      "SELECT",
      "institution_id",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "report_date",
      "=",
      "'2023-11-01'",
      "AND",
      "risk_weighted_assets",
      ">",
      "120000000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "report_date",
      "=",
      "'2023-11-01'",
      "AND",
      "risk_weighted_assets",
      ">",
      "120000000000;"
    ],
    "question_toks": [
      "哪些机构的风险加权资产在2023年11月超过1200亿元？"
    ],
    "result_fields": [
      "institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT severity, AVG(resolution_date - record_date) AS avg_resolution_time FROM compliance_records GROUP BY severity;",
    "question": "合规问题的解决时间与问题的严重程度之间是否存在相关性？",
    "query_toks": [
      "SELECT",
      "severity,",
      "AVG(resolution_date",
      "-",
      "record_date)",
      "AS",
      "avg_resolution_time",
      "FROM",
      "compliance_records",
      "GROUP",
      "BY",
      "severity;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "severity,",
      "AVG(resolution_date",
      "-",
      "record_date)",
      "AS",
      "avg_resolution_time",
      "FROM",
      "compliance_records",
      "GROUP",
      "BY",
      "severity;"
    ],
    "question_toks": [
      "合规问题的解决时间与问题的严重程度之间是否存在相关性？"
    ],
    "result_fields": [
      "severity",
      "AVG(resolution_date - record_date)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT COUNT(DISTINCT institution_id) FROM liquidity_ratio WHERE liquidity_coverage_ratio > 100 AND net_stable_funding_ratio > 100;",
    "question": "流动性覆盖率和净稳定资金比例都高于监管要求的机构有多少家？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "institution_id)",
      "FROM",
      "liquidity_ratio",
      "WHERE",
      "liquidity_coverage_ratio",
      ">",
      "100",
      "AND",
      "net_stable_funding_ratio",
      ">",
      "100;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "institution_id)",
      "FROM",
      "liquidity_ratio",
      "WHERE",
      "liquidity_coverage_ratio",
      ">",
      "100",
      "AND",
      "net_stable_funding_ratio",
      ">",
      "100;"
    ],
    "question_toks": [
      "流动性覆盖率和净稳定资金比例都高于监管要求的机构有多少家？"
    ],
    "result_fields": [
      "COUNT(DISTINCT institution_id)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT AVG(npl_ratio) AS average_npl_ratio, AVG(provision_coverage_ratio) AS average_provision_coverage_ratio, AVG(total_car) AS average_total_car FROM (SELECT b.institution_id, n.npl_ratio, n.provision_coverage_ratio, c.total_car FROM balance_sheet b JOIN non_performing_loans n ON b.institution_id = n.institution_id AND b.report_date = n.report_date JOIN capital_adequacy_ratio c ON b.institution_id = c.institution_id AND b.report_date = c.report_date ORDER BY b.total_assets DESC LIMIT 1000) AS top_institutions;",
    "question": "总资产排名前1000的机构中，平均不良贷款率、平均拨备覆盖率和平均资本充足率分别是多少？",
    "query_toks": [
      "SELECT",
      "AVG(npl_ratio)",
      "AS",
      "average_npl_ratio,",
      "AVG(provision_coverage_ratio)",
      "AS",
      "average_provision_coverage_ratio,",
      "AVG(total_car)",
      "AS",
      "average_total_car",
      "FROM",
      "(SELECT",
      "b.institution_id,",
      "n.npl_ratio,",
      "n.provision_coverage_ratio,",
      "c.total_car",
      "FROM",
      "balance_sheet",
      "b",
      "JOIN",
      "non_performing_loans",
      "n",
      "ON",
      "b.institution_id",
      "=",
      "n.institution_id",
      "AND",
      "b.report_date",
      "=",
      "n.report_date",
      "JOIN",
      "capital_adequacy_ratio",
      "c",
      "ON",
      "b.institution_id",
      "=",
      "c.institution_id",
      "AND",
      "b.report_date",
      "=",
      "c.report_date",
      "ORDER",
      "BY",
      "b.total_assets",
      "DESC",
      "LIMIT",
      "1000)",
      "AS",
      "top_institutions;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "AVG(npl_ratio)",
      "AS",
      "average_npl_ratio,",
      "AVG(provision_coverage_ratio)",
      "AS",
      "average_provision_coverage_ratio,",
      "AVG(total_car)",
      "AS",
      "average_total_car",
      "FROM",
      "(SELECT",
      "b.institution_id,",
      "n.npl_ratio,",
      "n.provision_coverage_ratio,",
      "c.total_car",
      "FROM",
      "balance_sheet",
      "b",
      "JOIN",
      "non_performing_loans",
      "n",
      "ON",
      "b.institution_id",
      "=",
      "n.institution_id",
      "AND",
      "b.report_date",
      "=",
      "n.report_date",
      "JOIN",
      "capital_adequacy_ratio",
      "c",
      "ON",
      "b.institution_id",
      "=",
      "c.institution_id",
      "AND",
      "b.report_date",
      "=",
      "c.report_date",
      "ORDER",
      "BY",
      "b.total_assets",
      "DESC",
      "LIMIT",
      "1000)",
      "AS",
      "top_institutions;"
    ],
    "question_toks": [
      "总资产排名前1000的机构中，平均不良贷款率、平均拨备覆盖率和平均资本充足率分别是多少？"
    ],
    "result_fields": [
      "AVG(npl_ratio)",
      "AVG(provision_coverage_ratio)",
      "AVG(total_car)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_type, npl.npl_ratio FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON rr.institution_id = npl.institution_id WHERE rr.report_date = '2023-07-01' AND rr.report_type = '季度报告' AND npl.npl_ratio > 1.5;",
    "question": "2023年7月1日，哪些金融机构的监管报告类型为季度报告，并且其不良贷款率超过1.5%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_type,",
      "npl.npl_ratio",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "rr.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.5;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_type,",
      "npl.npl_ratio",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "rr.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.5;"
    ],
    "question_toks": [
      "2023年7月1日，哪些金融机构的监管报告类型为季度报告，并且其不良贷款率超过1.5%？"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_type",
      "npl.npl_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON fii.institution_id = npl.institution_id WHERE rr.report_date = '2024-01-01' AND rr.report_type = '年度报告' AND rr.approval_status = '已批准' AND npl.report_date = '2024-01-01' AND npl.npl_ratio > 1.0;",
    "question": "2024年1月1日，哪些金融机构的监管报告类型为'年度报告'且审批状态为'已批准'，并且这些机构的不良贷款率超过1%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'年度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已批准'",
      "AND",
      "npl.report_date",
      "=",
      "'2024-01-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.0;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'年度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已批准'",
      "AND",
      "npl.report_date",
      "=",
      "'2024-01-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.0;"
    ],
    "question_toks": [
      "2024年1月1日，哪些金融机构的监管报告类型为'年度报告'且审批状态为'已批准'，并且这些机构的不良贷款率超过1%？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT lr.liquidity_coverage_ratio, lr.net_stable_funding_ratio, lr.loan_to_deposit_ratio FROM liquidity_ratio lr;",
    "question": "流动性指标与资产负债结构（如贷存比）之间的关系如何？",
    "query_toks": [
      "SELECT",
      "lr.liquidity_coverage_ratio,",
      "lr.net_stable_funding_ratio,",
      "lr.loan_to_deposit_ratio",
      "FROM",
      "liquidity_ratio",
      "lr;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lr.liquidity_coverage_ratio,",
      "lr.net_stable_funding_ratio,",
      "lr.loan_to_deposit_ratio",
      "FROM",
      "liquidity_ratio",
      "lr;"
    ],
    "question_toks": [
      "流动性指标与资产负债结构（如贷存比）之间的关系如何？"
    ],
    "result_fields": [
      "lr.liquidity_coverage_ratio",
      "lr.net_stable_funding_ratio",
      "lr.loan_to_deposit_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name FROM non_performing_loans npl JOIN financial_institution_info fi ON npl.institution_id = fi.institution_id WHERE npl.report_date >= '2023-12-01' AND npl.report_date < '2024-01-01' AND npl.npl_ratio > 1.5;",
    "question": "在2023年12月，不良贷款率超过1.5%的机构有哪些？",
    "query_toks": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "non_performing_loans",
      "npl",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "npl.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "npl.report_date",
      ">=",
      "'2023-12-01'",
      "AND",
      "npl.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.5;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "non_performing_loans",
      "npl",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "npl.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "npl.report_date",
      ">=",
      "'2023-12-01'",
      "AND",
      "npl.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.5;"
    ],
    "question_toks": [
      "在2023年12月，不良贷款率超过1.5%的机构有哪些？"
    ],
    "result_fields": [
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name FROM financial_institution_info fi JOIN liquidity_ratio lr ON fi.institution_id = lr.institution_id WHERE lr.loan_to_deposit_ratio > 75 AND lr.liquidity_coverage_ratio < 120;",
    "question": "贷存比超过75%且流动性覆盖率低于120%的机构有哪些？",
    "query_toks": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "liquidity_ratio",
      "lr",
      "ON",
      "fi.institution_id",
      "=",
      "lr.institution_id",
      "WHERE",
      "lr.loan_to_deposit_ratio",
      ">",
      "75",
      "AND",
      "lr.liquidity_coverage_ratio",
      "<",
      "120;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "liquidity_ratio",
      "lr",
      "ON",
      "fi.institution_id",
      "=",
      "lr.institution_id",
      "WHERE",
      "lr.loan_to_deposit_ratio",
      ">",
      "75",
      "AND",
      "lr.liquidity_coverage_ratio",
      "<",
      "120;"
    ],
    "question_toks": [
      "贷存比超过75%且流动性覆盖率低于120%的机构有哪些？"
    ],
    "result_fields": [
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM regulatory_reports WHERE report_type = '半年度报告';",
    "question": "获取监管报告中报告类型为半年度报告的所有记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "report_type",
      "=",
      "'半年度报告';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "report_type",
      "=",
      "'半年度报告';"
    ],
    "question_toks": [
      "获取监管报告中报告类型为半年度报告的所有记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM compliance_records ORDER BY resolution_date - record_date DESC LIMIT 5;",
    "question": "合规问题解决用时最长的五个案例是哪些？",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "compliance_records",
      "ORDER",
      "BY",
      "resolution_date",
      "-",
      "record_date",
      "DESC",
      "LIMIT",
      "5;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "compliance_records",
      "ORDER",
      "BY",
      "resolution_date",
      "-",
      "record_date",
      "DESC",
      "LIMIT",
      "5;"
    ],
    "question_toks": [
      "合规问题解决用时最长的五个案例是哪些？"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT r.institution_id, r.report_id, r.report_type, r.approval_status, n.npl_ratio FROM regulatory_reports r JOIN non_performing_loans n ON r.institution_id = n.institution_id WHERE r.submission_date >= '2023-01-01' AND r.submission_date < '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '已拒绝' AND n.report_date >= '2023-01-01' AND n.report_date < '2024-01-01' AND n.npl_ratio > 2.00;",
    "question": "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'已拒绝'，同时这些机构在2023年的不良贷款率超过2%？",
    "query_toks": [
      "SELECT",
      "r.institution_id,",
      "r.report_id,",
      "r.report_type,",
      "r.approval_status,",
      "n.npl_ratio",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "non_performing_loans",
      "n",
      "ON",
      "r.institution_id",
      "=",
      "n.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'已拒绝'",
      "AND",
      "n.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "n.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "n.npl_ratio",
      ">",
      "2.00;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.institution_id,",
      "r.report_id,",
      "r.report_type,",
      "r.approval_status,",
      "n.npl_ratio",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "non_performing_loans",
      "n",
      "ON",
      "r.institution_id",
      "=",
      "n.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'已拒绝'",
      "AND",
      "n.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "n.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "n.npl_ratio",
      ">",
      "2.00;"
    ],
    "question_toks": [
      "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'已拒绝'，同时这些机构在2023年的不良贷款率超过2%？"
    ],
    "result_fields": [
      "r.institution_id",
      "r.report_id",
      "r.report_type",
      "r.approval_status",
      "n.npl_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_id, rr.report_date, rr.comments FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date >= '2023-01-01' AND rr.submission_date < '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';",
    "question": "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'已拒绝'？请列出这些机构的名称、报告ID、报告日期和备注信息。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_id,",
      "rr.report_date,",
      "rr.comments",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_id,",
      "rr.report_date,",
      "rr.comments",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "question_toks": [
      "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'已拒绝'？请列出这些机构的名称、报告ID、报告日期和备注信息。"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_id",
      "rr.report_date",
      "rr.comments"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT f.institution_name FROM financial_institution_info f JOIN liquidity_ratio l ON f.institution_id = l.institution_id WHERE l.loan_to_deposit_ratio BETWEEN 60 AND 80;",
    "question": "哪些机构的贷款与存款比率在60%到80%之间？",
    "query_toks": [
      "SELECT",
      "f.institution_name",
      "FROM",
      "financial_institution_info",
      "f",
      "JOIN",
      "liquidity_ratio",
      "l",
      "ON",
      "f.institution_id",
      "=",
      "l.institution_id",
      "WHERE",
      "l.loan_to_deposit_ratio",
      "BETWEEN",
      "60",
      "AND",
      "80;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "f.institution_name",
      "FROM",
      "financial_institution_info",
      "f",
      "JOIN",
      "liquidity_ratio",
      "l",
      "ON",
      "f.institution_id",
      "=",
      "l.institution_id",
      "WHERE",
      "l.loan_to_deposit_ratio",
      "BETWEEN",
      "60",
      "AND",
      "80;"
    ],
    "question_toks": [
      "哪些机构的贷款与存款比率在60%到80%之间？"
    ],
    "result_fields": [
      "f.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id FROM capital_adequacy_ratio ORDER BY ABS(core_tier_1_ratio - total_car) LIMIT 1;",
    "question": "核心一级资本充足率与总资本充足率的差值最小的机构是哪些？",
    "query_toks": [
      "SELECT",
      "institution_id",
      "FROM",
      "capital_adequacy_ratio",
      "ORDER",
      "BY",
      "ABS(core_tier_1_ratio",
      "-",
      "total_car)",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id",
      "FROM",
      "capital_adequacy_ratio",
      "ORDER",
      "BY",
      "ABS(core_tier_1_ratio",
      "-",
      "total_car)",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "核心一级资本充足率与总资本充足率的差值最小的机构是哪些？"
    ],
    "result_fields": [
      "institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT b.institution_id, b.total_liabilities, f.registered_capital FROM balance_sheet b JOIN financial_institution_info f ON b.institution_id = f.institution_id WHERE EXTRACT(YEAR FROM b.report_date) = 2024;",
    "question": "展示2024年所有机构的总负债及其注册资本。",
    "query_toks": [
      "SELECT",
      "b.institution_id,",
      "b.total_liabilities,",
      "f.registered_capital",
      "FROM",
      "balance_sheet",
      "b",
      "JOIN",
      "financial_institution_info",
      "f",
      "ON",
      "b.institution_id",
      "=",
      "f.institution_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "b.report_date)",
      "=",
      "2024;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "b.institution_id,",
      "b.total_liabilities,",
      "f.registered_capital",
      "FROM",
      "balance_sheet",
      "b",
      "JOIN",
      "financial_institution_info",
      "f",
      "ON",
      "b.institution_id",
      "=",
      "f.institution_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "b.report_date)",
      "=",
      "2024;"
    ],
    "question_toks": [
      "展示2024年所有机构的总负债及其注册资本。"
    ],
    "result_fields": [
      "b.institution_id",
      "b.total_liabilities",
      "f.registered_capital"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT corr(npl_ratio, credit_risk_exposure) AS correlation_coefficient FROM non_performing_loans JOIN risk_exposure USING (institution_id, report_date);",
    "question": "信用风险暴露与不良贷款率之间是否存在显著相关性？",
    "query_toks": [
      "SELECT",
      "corr(npl_ratio,",
      "credit_risk_exposure)",
      "AS",
      "correlation_coefficient",
      "FROM",
      "non_performing_loans",
      "JOIN",
      "risk_exposure",
      "USING",
      "(institution_id,",
      "report_date);"
    ],
    "query_toks_no_value": [
      "SELECT",
      "corr(npl_ratio,",
      "credit_risk_exposure)",
      "AS",
      "correlation_coefficient",
      "FROM",
      "non_performing_loans",
      "JOIN",
      "risk_exposure",
      "USING",
      "(institution_id,",
      "report_date);"
    ],
    "question_toks": [
      "信用风险暴露与不良贷款率之间是否存在显著相关性？"
    ],
    "result_fields": [
      "corr(npl_ratio, credit_risk_exposure)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM financial_institution_info fii JOIN regulatory_reports rr ON fii.institution_id = rr.institution_id JOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id WHERE rr.report_type = '年度报告' AND rr.approval_status = '已批准' AND car.report_date >= '2023-01-01' AND car.report_date < '2024-01-01' AND car.total_car > 10;",
    "question": "在2023年，哪些金融机构的年度报告已批准，并且其总资本充足率（CAR）超过10%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "regulatory_reports",
      "rr",
      "ON",
      "fii.institution_id",
      "=",
      "rr.institution_id",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'年度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已批准'",
      "AND",
      "car.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "car.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "car.total_car",
      ">",
      "10;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "regulatory_reports",
      "rr",
      "ON",
      "fii.institution_id",
      "=",
      "rr.institution_id",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'年度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已批准'",
      "AND",
      "car.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "car.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "car.total_car",
      ">",
      "10;"
    ],
    "question_toks": [
      "在2023年，哪些金融机构的年度报告已批准，并且其总资本充足率（CAR）超过10%？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT npl_ratio, institution_id FROM non_performing_loans WHERE report_date = '2023-06-01';",
    "question": "获取2023年6月1日不良贷款表中不良贷款率及其机构。",
    "query_toks": [
      "SELECT",
      "npl_ratio,",
      "institution_id",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "report_date",
      "=",
      "'2023-06-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "npl_ratio,",
      "institution_id",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "report_date",
      "=",
      "'2023-06-01';"
    ],
    "question_toks": [
      "获取2023年6月1日不良贷款表中不良贷款率及其机构。"
    ],
    "result_fields": [
      "npl_ratio",
      "institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE re.report_date = '2023-05-01' AND re.market_risk_exposure > 20000000000;",
    "question": "哪些机构在2023年05月的市场风险暴露超过200亿元？",
    "query_toks": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fi.institution_id",
      "=",
      "re.institution_id",
      "WHERE",
      "re.report_date",
      "=",
      "'2023-05-01'",
      "AND",
      "re.market_risk_exposure",
      ">",
      "20000000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fi.institution_id",
      "=",
      "re.institution_id",
      "WHERE",
      "re.report_date",
      "=",
      "'2023-05-01'",
      "AND",
      "re.market_risk_exposure",
      ">",
      "20000000000;"
    ],
    "question_toks": [
      "哪些机构在2023年05月的市场风险暴露超过200亿元？"
    ],
    "result_fields": [
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_date, rr.approval_status FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date >= '2024-01-01' AND rr.report_type = '年度报告' AND rr.approval_status = '已批准';",
    "question": "在2024年提交的监管报告中，哪些金融机构的报告类型为'年度报告'并且审批状态为'已批准'？请列出这些机构的名称、报告日期和审批状态。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_date,",
      "rr.approval_status",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'年度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已批准';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_date,",
      "rr.approval_status",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'年度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已批准';"
    ],
    "question_toks": [
      "在2024年提交的监管报告中，哪些金融机构的报告类型为'年度报告'并且审批状态为'已批准'？请列出这些机构的名称、报告日期和审批状态。"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_date",
      "rr.approval_status"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM capital_adequacy_ratio WHERE report_date = '2023-11-01';",
    "question": "获取2023年11月1日的资本充足率详细信息。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "report_date",
      "=",
      "'2023-11-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "report_date",
      "=",
      "'2023-11-01';"
    ],
    "question_toks": [
      "获取2023年11月1日的资本充足率详细信息。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT corr(l.net_stable_funding_ratio, c.core_tier_1_ratio) AS correlation\nFROM liquidity_ratio l\nJOIN capital_adequacy_ratio c ON l.institution_id = c.institution_id AND l.report_date = c.report_date;",
    "question": "净稳定资金比例与核心一级资本充足率之间是否存在相关性？",
    "query_toks": [
      "SELECT",
      "corr(l.net_stable_funding_ratio,",
      "c.core_tier_1_ratio)",
      "AS",
      "correlation",
      "FROM",
      "liquidity_ratio",
      "l",
      "JOIN",
      "capital_adequacy_ratio",
      "c",
      "ON",
      "l.institution_id",
      "=",
      "c.institution_id",
      "AND",
      "l.report_date",
      "=",
      "c.report_date;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "corr(l.net_stable_funding_ratio,",
      "c.core_tier_1_ratio)",
      "AS",
      "correlation",
      "FROM",
      "liquidity_ratio",
      "l",
      "JOIN",
      "capital_adequacy_ratio",
      "c",
      "ON",
      "l.institution_id",
      "=",
      "c.institution_id",
      "AND",
      "l.report_date",
      "=",
      "c.report_date;"
    ],
    "question_toks": [
      "净稳定资金比例与核心一级资本充足率之间是否存在相关性？"
    ],
    "result_fields": [
      "corr(l.net_stable_funding_ratio, c.core_tier_1_ratio)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_date FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date >= '2024-01-01' AND rr.submission_date < '2025-01-01' AND rr.report_type = '年度报告' AND rr.approval_status = '已批准';",
    "question": "请列出在2024年提交的所有监管报告中，报告类型为'年度报告'且审批状态为'已批准'的机构名称及其对应的报告日期。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_date",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2025-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'年度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已批准';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_date",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2025-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'年度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已批准';"
    ],
    "question_toks": [
      "请列出在2024年提交的所有监管报告中，报告类型为'年度报告'且审批状态为'已批准'的机构名称及其对应的报告日期。"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_date"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM capital_adequacy_ratio WHERE report_date = '2023-11-01';",
    "question": "获取2023年11月1日资本充足率表中的所有数据。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "report_date",
      "=",
      "'2023-11-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "report_date",
      "=",
      "'2023-11-01';"
    ],
    "question_toks": [
      "获取2023年11月1日资本充足率表中的所有数据。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT core_tier_1_ratio, tier_1_ratio, total_car, risk_weighted_assets, report_date FROM capital_adequacy_ratio WHERE institution_id = 2162;",
    "question": "查询机构ID为2162的资本充足率详细信息。",
    "query_toks": [
      "SELECT",
      "core_tier_1_ratio,",
      "tier_1_ratio,",
      "total_car,",
      "risk_weighted_assets,",
      "report_date",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "institution_id",
      "=",
      "2162;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "core_tier_1_ratio,",
      "tier_1_ratio,",
      "total_car,",
      "risk_weighted_assets,",
      "report_date",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "institution_id",
      "=",
      "2162;"
    ],
    "question_toks": [
      "查询机构ID为2162的资本充足率详细信息。"
    ],
    "result_fields": [
      "core_tier_1_ratio",
      "tier_1_ratio",
      "total_car",
      "risk_weighted_assets",
      "report_date"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, SUM(total_loans) AS total_loans_2023, SUM(npl_amount) AS total_npl_amount_2023 FROM non_performing_loans WHERE EXTRACT(YEAR FROM report_date) = 2023 GROUP BY institution_id;",
    "question": "展示2023年所有机构的贷款总额和不良贷款金额。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "SUM(total_loans)",
      "AS",
      "total_loans_2023,",
      "SUM(npl_amount)",
      "AS",
      "total_npl_amount_2023",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "report_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "institution_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "SUM(total_loans)",
      "AS",
      "total_loans_2023,",
      "SUM(npl_amount)",
      "AS",
      "total_npl_amount_2023",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "report_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "institution_id;"
    ],
    "question_toks": [
      "展示2023年所有机构的贷款总额和不良贷款金额。"
    ],
    "result_fields": [
      "institution_id",
      "SUM(total_loans)",
      "SUM(npl_amount)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT corr(market_risk_exposure / total_risk_exposure, non_interest_income / (net_interest_income + non_interest_income)) AS correlation\nFROM risk_exposure\nJOIN income_statement USING (institution_id, report_date);",
    "question": "市场风险暴露占比与机构的交易类业务收入占比之间是否存在正相关关系？",
    "query_toks": [
      "SELECT",
      "corr(market_risk_exposure",
      "/",
      "total_risk_exposure,",
      "non_interest_income",
      "/",
      "(net_interest_income",
      "+",
      "non_interest_income))",
      "AS",
      "correlation",
      "FROM",
      "risk_exposure",
      "JOIN",
      "income_statement",
      "USING",
      "(institution_id,",
      "report_date);"
    ],
    "query_toks_no_value": [
      "SELECT",
      "corr(market_risk_exposure",
      "/",
      "total_risk_exposure,",
      "non_interest_income",
      "/",
      "(net_interest_income",
      "+",
      "non_interest_income))",
      "AS",
      "correlation",
      "FROM",
      "risk_exposure",
      "JOIN",
      "income_statement",
      "USING",
      "(institution_id,",
      "report_date);"
    ],
    "question_toks": [
      "市场风险暴露占比与机构的交易类业务收入占比之间是否存在正相关关系？"
    ],
    "result_fields": [
      "corr(market_risk_exposure / total_risk_exposure, non_interest_income / (net_interest_income + non_interest_income))"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, provision_coverage_ratio FROM non_performing_loans ORDER BY provision_coverage_ratio DESC LIMIT 1;",
    "question": "哪家机构的贷款损失准备金占不良贷款比例最高？",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "provision_coverage_ratio",
      "FROM",
      "non_performing_loans",
      "ORDER",
      "BY",
      "provision_coverage_ratio",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "provision_coverage_ratio",
      "FROM",
      "non_performing_loans",
      "ORDER",
      "BY",
      "provision_coverage_ratio",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "哪家机构的贷款损失准备金占不良贷款比例最高？"
    ],
    "result_fields": [
      "institution_id",
      "provision_coverage_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT lr.institution_id, lr.report_date, lr.liquidity_coverage_ratio, lr.net_stable_funding_ratio, lr.loan_to_deposit_ratio, car.core_tier_1_ratio, car.tier_1_ratio, car.total_car FROM liquidity_ratio lr JOIN capital_adequacy_ratio car ON lr.institution_id = car.institution_id AND lr.report_date = car.report_date WHERE lr.report_date >= '2023-01-01' AND lr.report_date < '2024-01-01';",
    "question": "查询所有机构在2023年中提交的流动性比率和资本充足率的报告。",
    "query_toks": [
      "SELECT",
      "lr.institution_id,",
      "lr.report_date,",
      "lr.liquidity_coverage_ratio,",
      "lr.net_stable_funding_ratio,",
      "lr.loan_to_deposit_ratio,",
      "car.core_tier_1_ratio,",
      "car.tier_1_ratio,",
      "car.total_car",
      "FROM",
      "liquidity_ratio",
      "lr",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "lr.institution_id",
      "=",
      "car.institution_id",
      "AND",
      "lr.report_date",
      "=",
      "car.report_date",
      "WHERE",
      "lr.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "lr.report_date",
      "<",
      "'2024-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lr.institution_id,",
      "lr.report_date,",
      "lr.liquidity_coverage_ratio,",
      "lr.net_stable_funding_ratio,",
      "lr.loan_to_deposit_ratio,",
      "car.core_tier_1_ratio,",
      "car.tier_1_ratio,",
      "car.total_car",
      "FROM",
      "liquidity_ratio",
      "lr",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "lr.institution_id",
      "=",
      "car.institution_id",
      "AND",
      "lr.report_date",
      "=",
      "car.report_date",
      "WHERE",
      "lr.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "lr.report_date",
      "<",
      "'2024-01-01';"
    ],
    "question_toks": [
      "查询所有机构在2023年中提交的流动性比率和资本充足率的报告。"
    ],
    "result_fields": [
      "lr.institution_id",
      "lr.report_date",
      "lr.liquidity_coverage_ratio",
      "lr.net_stable_funding_ratio",
      "lr.loan_to_deposit_ratio",
      "car.core_tier_1_ratio",
      "car.tier_1_ratio",
      "car.total_car"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT f.institution_name FROM financial_institution_info f JOIN income_statement i ON f.institution_id = i.institution_id WHERE i.report_date = '2023-04-01' ORDER BY i.operating_expenses DESC LIMIT 1;",
    "question": "2023年4月1日，哪些机构的营业支出最多？",
    "query_toks": [
      "SELECT",
      "f.institution_name",
      "FROM",
      "financial_institution_info",
      "f",
      "JOIN",
      "income_statement",
      "i",
      "ON",
      "f.institution_id",
      "=",
      "i.institution_id",
      "WHERE",
      "i.report_date",
      "=",
      "'2023-04-01'",
      "ORDER",
      "BY",
      "i.operating_expenses",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "f.institution_name",
      "FROM",
      "financial_institution_info",
      "f",
      "JOIN",
      "income_statement",
      "i",
      "ON",
      "f.institution_id",
      "=",
      "i.institution_id",
      "WHERE",
      "i.report_date",
      "=",
      "'2023-04-01'",
      "ORDER",
      "BY",
      "i.operating_expenses",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "2023年4月1日，哪些机构的营业支出最多？"
    ],
    "result_fields": [
      "f.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, SUM(non_interest_income) AS total_non_interest_income, SUM(net_profit) AS total_net_profit FROM income_statement WHERE report_date >= '2023-01-01' AND report_date < '2024-01-01' GROUP BY institution_id;",
    "question": "查看2023年每个机构的非利息收入和净利润。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "SUM(non_interest_income)",
      "AS",
      "total_non_interest_income,",
      "SUM(net_profit)",
      "AS",
      "total_net_profit",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "report_date",
      "<",
      "'2024-01-01'",
      "GROUP",
      "BY",
      "institution_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "SUM(non_interest_income)",
      "AS",
      "total_non_interest_income,",
      "SUM(net_profit)",
      "AS",
      "total_net_profit",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "report_date",
      "<",
      "'2024-01-01'",
      "GROUP",
      "BY",
      "institution_id;"
    ],
    "question_toks": [
      "查看2023年每个机构的非利息收入和净利润。"
    ],
    "result_fields": [
      "institution_id",
      "SUM(non_interest_income)",
      "SUM(net_profit)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name, rr.report_type, rr.approval_status, npl.npl_ratio FROM regulatory_reports rr JOIN financial_institution_info fi ON rr.institution_id = fi.institution_id JOIN non_performing_loans npl ON rr.institution_id = npl.institution_id WHERE rr.submission_date >= '2023-01-01' AND rr.submission_date < '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝' AND npl.report_date >= '2023-01-01' AND npl.report_date < '2024-01-01' AND npl.npl_ratio > 2.00;",
    "question": "在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'且审批状态为'已拒绝'，并且这些机构在2023年的不良贷款率超过2%？",
    "query_toks": [
      "SELECT",
      "fi.institution_name,",
      "rr.report_type,",
      "rr.approval_status,",
      "npl.npl_ratio",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rr.institution_id",
      "=",
      "fi.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "rr.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝'",
      "AND",
      "npl.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "npl.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "2.00;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name,",
      "rr.report_type,",
      "rr.approval_status,",
      "npl.npl_ratio",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rr.institution_id",
      "=",
      "fi.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "rr.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝'",
      "AND",
      "npl.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "npl.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "2.00;"
    ],
    "question_toks": [
      "在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'且审批状态为'已拒绝'，并且这些机构在2023年的不良贷款率超过2%？"
    ],
    "result_fields": [
      "fi.institution_name",
      "rr.report_type",
      "rr.approval_status",
      "npl.npl_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id WHERE car.report_date = '2023-12-01' AND car.core_tier_1_ratio < 9;",
    "question": "哪些机构在2023年12月的核心一级资本充足率低于9%？",
    "query_toks": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fi.institution_id",
      "=",
      "car.institution_id",
      "WHERE",
      "car.report_date",
      "=",
      "'2023-12-01'",
      "AND",
      "car.core_tier_1_ratio",
      "<",
      "9;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fi.institution_id",
      "=",
      "car.institution_id",
      "WHERE",
      "car.report_date",
      "=",
      "'2023-12-01'",
      "AND",
      "car.core_tier_1_ratio",
      "<",
      "9;"
    ],
    "question_toks": [
      "哪些机构在2023年12月的核心一级资本充足率低于9%？"
    ],
    "result_fields": [
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id FROM liquidity_ratio WHERE report_date = '2023-11-01' AND liquidity_coverage_ratio < 110;",
    "question": "哪些机构在2023年11月的流动性覆盖率低于110%？",
    "query_toks": [
      "SELECT",
      "institution_id",
      "FROM",
      "liquidity_ratio",
      "WHERE",
      "report_date",
      "=",
      "'2023-11-01'",
      "AND",
      "liquidity_coverage_ratio",
      "<",
      "110;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id",
      "FROM",
      "liquidity_ratio",
      "WHERE",
      "report_date",
      "=",
      "'2023-11-01'",
      "AND",
      "liquidity_coverage_ratio",
      "<",
      "110;"
    ],
    "question_toks": [
      "哪些机构在2023年11月的流动性覆盖率低于110%？"
    ],
    "result_fields": [
      "institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT re.market_risk_exposure, npl.provision_coverage_ratio FROM risk_exposure re JOIN non_performing_loans npl ON re.institution_id = npl.institution_id WHERE re.report_date = '2023-03-01' AND npl.report_date = '2023-03-01';",
    "question": "查找2023年3月1日所有机构的市场风险暴露及其拨备覆盖率。",
    "query_toks": [
      "SELECT",
      "re.market_risk_exposure,",
      "npl.provision_coverage_ratio",
      "FROM",
      "risk_exposure",
      "re",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "re.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "re.report_date",
      "=",
      "'2023-03-01'",
      "AND",
      "npl.report_date",
      "=",
      "'2023-03-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "re.market_risk_exposure,",
      "npl.provision_coverage_ratio",
      "FROM",
      "risk_exposure",
      "re",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "re.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "re.report_date",
      "=",
      "'2023-03-01'",
      "AND",
      "npl.report_date",
      "=",
      "'2023-03-01';"
    ],
    "question_toks": [
      "查找2023年3月1日所有机构的市场风险暴露及其拨备覆盖率。"
    ],
    "result_fields": [
      "re.market_risk_exposure",
      "npl.provision_coverage_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT legal_representative, contact_number FROM financial_institution_info;",
    "question": "查询所有金融机构的法人代表及其联系方式。",
    "query_toks": [
      "SELECT",
      "legal_representative,",
      "contact_number",
      "FROM",
      "financial_institution_info;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "legal_representative,",
      "contact_number",
      "FROM",
      "financial_institution_info;"
    ],
    "question_toks": [
      "查询所有金融机构的法人代表及其联系方式。"
    ],
    "result_fields": [
      "legal_representative",
      "contact_number"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name, COUNT(DISTINCT rpt.related_party) AS distinct_related_parties FROM financial_institution_info fi JOIN related_party_transactions rpt ON fi.institution_id = rpt.institution_id WHERE EXTRACT(YEAR FROM rpt.transaction_date) = 2023 GROUP BY fi.institution_name ORDER BY distinct_related_parties DESC LIMIT 1;",
    "question": "2023年关联交易中，哪家金融机构的交易对手最多样化？",
    "query_toks": [
      "SELECT",
      "fi.institution_name,",
      "COUNT(DISTINCT",
      "rpt.related_party)",
      "AS",
      "distinct_related_parties",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "fi.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "rpt.transaction_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "fi.institution_name",
      "ORDER",
      "BY",
      "distinct_related_parties",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name,",
      "COUNT(DISTINCT",
      "rpt.related_party)",
      "AS",
      "distinct_related_parties",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "fi.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "rpt.transaction_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "fi.institution_name",
      "ORDER",
      "BY",
      "distinct_related_parties",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "2023年关联交易中，哪家金融机构的交易对手最多样化？"
    ],
    "result_fields": [
      "fi.institution_name",
      "COUNT(DISTINCT rpt.related_party)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.address AS region, AVG(lr.liquidity_coverage_ratio) AS avg_liquidity_coverage_ratio\nFROM liquidity_ratio lr\nJOIN financial_institution_info fi ON lr.institution_id = fi.institution_id\nGROUP BY fi.address\nORDER BY avg_liquidity_coverage_ratio DESC\nLIMIT 1;",
    "question": "各地区金融机构的平均流动性覆盖率是多少？哪个地区表现最好？",
    "query_toks": [
      "SELECT",
      "fi.address",
      "AS",
      "region,",
      "AVG(lr.liquidity_coverage_ratio)",
      "AS",
      "avg_liquidity_coverage_ratio",
      "FROM",
      "liquidity_ratio",
      "lr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "lr.institution_id",
      "=",
      "fi.institution_id",
      "GROUP",
      "BY",
      "fi.address",
      "ORDER",
      "BY",
      "avg_liquidity_coverage_ratio",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.address",
      "AS",
      "region,",
      "AVG(lr.liquidity_coverage_ratio)",
      "AS",
      "avg_liquidity_coverage_ratio",
      "FROM",
      "liquidity_ratio",
      "lr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "lr.institution_id",
      "=",
      "fi.institution_id",
      "GROUP",
      "BY",
      "fi.address",
      "ORDER",
      "BY",
      "avg_liquidity_coverage_ratio",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "各地区金融机构的平均流动性覆盖率是多少？哪个地区表现最好？"
    ],
    "result_fields": [
      "fi.address",
      "AVG(lr.liquidity_coverage_ratio)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT EXTRACT(QUARTER FROM report_date) AS quarter, AVG(LENGTH(comments)) AS avg_word_count FROM regulatory_reports WHERE EXTRACT(YEAR FROM report_date) = 2023 GROUP BY quarter ORDER BY quarter;",
    "question": "2023年各季度监管报告的平均字数有何变化？",
    "query_toks": [
      "SELECT",
      "EXTRACT(QUARTER",
      "FROM",
      "report_date)",
      "AS",
      "quarter,",
      "AVG(LENGTH(comments))",
      "AS",
      "avg_word_count",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "report_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "quarter",
      "ORDER",
      "BY",
      "quarter;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "EXTRACT(QUARTER",
      "FROM",
      "report_date)",
      "AS",
      "quarter,",
      "AVG(LENGTH(comments))",
      "AS",
      "avg_word_count",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "report_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "quarter",
      "ORDER",
      "BY",
      "quarter;"
    ],
    "question_toks": [
      "2023年各季度监管报告的平均字数有何变化？"
    ],
    "result_fields": [
      "EXTRACT(QUARTER"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name, npl.provision_coverage_ratio FROM financial_institution_info fi JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id ORDER BY npl.provision_coverage_ratio DESC LIMIT 1",
    "question": "哪家机构的拨备覆盖率最高？请显示机构名称和拨备覆盖率。",
    "query_toks": [
      "SELECT",
      "fi.institution_name,",
      "npl.provision_coverage_ratio",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fi.institution_id",
      "=",
      "npl.institution_id",
      "ORDER",
      "BY",
      "npl.provision_coverage_ratio",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name,",
      "npl.provision_coverage_ratio",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fi.institution_id",
      "=",
      "npl.institution_id",
      "ORDER",
      "BY",
      "npl.provision_coverage_ratio",
      "DESC",
      "LIMIT",
      "1"
    ],
    "question_toks": [
      "哪家机构的拨备覆盖率最高？请显示机构名称和拨备覆盖率。"
    ],
    "result_fields": [
      "fi.institution_name",
      "npl.provision_coverage_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT legal_representative, contact_number FROM financial_institution_info;",
    "question": "查询所有金融机构的法定代表人及其联系方式。",
    "query_toks": [
      "SELECT",
      "legal_representative,",
      "contact_number",
      "FROM",
      "financial_institution_info;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "legal_representative,",
      "contact_number",
      "FROM",
      "financial_institution_info;"
    ],
    "question_toks": [
      "查询所有金融机构的法定代表人及其联系方式。"
    ],
    "result_fields": [
      "legal_representative",
      "contact_number"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_date, rr.submission_date FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND EXTRACT(YEAR FROM rr.submission_date) = 2023;",
    "question": "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'需修改'？请列出这些机构的名称、报告日期和提交日期。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_date,",
      "rr.submission_date",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "rr.submission_date)",
      "=",
      "2023;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_date,",
      "rr.submission_date",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "rr.submission_date)",
      "=",
      "2023;"
    ],
    "question_toks": [
      "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'需修改'？请列出这些机构的名称、报告日期和提交日期。"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_date",
      "rr.submission_date"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name, car.total_car, npl.npl_ratio FROM financial_institution_info fi JOIN capital_adequacy_ratio car ON fi.institution_id = car.institution_id JOIN non_performing_loans npl ON fi.institution_id = npl.institution_id WHERE car.total_car > 12 AND npl.npl_ratio < 2",
    "question": "哪些金融机构的资本充足率超过12%且不良贷款率低于2%？",
    "query_toks": [
      "SELECT",
      "fi.institution_name,",
      "car.total_car,",
      "npl.npl_ratio",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fi.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fi.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "car.total_car",
      ">",
      "12",
      "AND",
      "npl.npl_ratio",
      "<",
      "2"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name,",
      "car.total_car,",
      "npl.npl_ratio",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fi.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fi.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "car.total_car",
      ">",
      "12",
      "AND",
      "npl.npl_ratio",
      "<",
      "2"
    ],
    "question_toks": [
      "哪些金融机构的资本充足率超过12%且不良贷款率低于2%？"
    ],
    "result_fields": [
      "fi.institution_name",
      "car.total_car",
      "npl.npl_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id FROM liquidity_ratio ORDER BY net_stable_funding_ratio DESC, loan_to_deposit_ratio ASC LIMIT 10;",
    "question": "净稳定资金比例和贷存比都处于较好水平的前十家机构是哪些？",
    "query_toks": [
      "SELECT",
      "institution_id",
      "FROM",
      "liquidity_ratio",
      "ORDER",
      "BY",
      "net_stable_funding_ratio",
      "DESC,",
      "loan_to_deposit_ratio",
      "ASC",
      "LIMIT",
      "10;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id",
      "FROM",
      "liquidity_ratio",
      "ORDER",
      "BY",
      "net_stable_funding_ratio",
      "DESC,",
      "loan_to_deposit_ratio",
      "ASC",
      "LIMIT",
      "10;"
    ],
    "question_toks": [
      "净稳定资金比例和贷存比都处于较好水平的前十家机构是哪些？"
    ],
    "result_fields": [
      "institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE re.report_date >= '2023-01-01' AND re.report_date < '2024-01-01' AND re.credit_risk_exposure > 500000000000;",
    "question": "哪些机构在2023年的风险暴露表中显示信用风险暴露超过500亿？",
    "query_toks": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fi.institution_id",
      "=",
      "re.institution_id",
      "WHERE",
      "re.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "re.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "re.credit_risk_exposure",
      ">",
      "500000000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fi.institution_id",
      "=",
      "re.institution_id",
      "WHERE",
      "re.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "re.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "re.credit_risk_exposure",
      ">",
      "500000000000;"
    ],
    "question_toks": [
      "哪些机构在2023年的风险暴露表中显示信用风险暴露超过500亿？"
    ],
    "result_fields": [
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name FROM non_performing_loans npl JOIN financial_institution_info fi ON npl.institution_id = fi.institution_id WHERE npl.npl_ratio > 2;",
    "question": "不良贷款率超过2%的机构有哪些？",
    "query_toks": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "non_performing_loans",
      "npl",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "npl.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "npl.npl_ratio",
      ">",
      "2;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "non_performing_loans",
      "npl",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "npl.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "npl.npl_ratio",
      ">",
      "2;"
    ],
    "question_toks": [
      "不良贷款率超过2%的机构有哪些？"
    ],
    "result_fields": [
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM capital_adequacy_ratio WHERE report_date = '2023-05-01';",
    "question": "获取2023年5月1日的资本充足率表记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "report_date",
      "=",
      "'2023-05-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "report_date",
      "=",
      "'2023-05-01';"
    ],
    "question_toks": [
      "获取2023年5月1日的资本充足率表记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, severity, COUNT(*) AS severity_count FROM compliance_records WHERE EXTRACT(YEAR FROM record_date) = 2023 GROUP BY institution_id, severity;",
    "question": "展示2023年合规记录中每个机构的严重程度分布。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "severity,",
      "COUNT(*)",
      "AS",
      "severity_count",
      "FROM",
      "compliance_records",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "record_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "institution_id,",
      "severity;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "severity,",
      "COUNT(*)",
      "AS",
      "severity_count",
      "FROM",
      "compliance_records",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "record_date)",
      "=",
      "2023",
      "GROUP",
      "BY",
      "institution_id,",
      "severity;"
    ],
    "question_toks": [
      "展示2023年合规记录中每个机构的严重程度分布。"
    ],
    "result_fields": [
      "institution_id",
      "severity",
      "COUNT(*)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_date, rr.comments FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date >= '2023-01-01' AND rr.submission_date < '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';",
    "question": "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'已拒绝'？请列出这些机构的名称、报告日期和备注。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_date,",
      "rr.comments",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_date,",
      "rr.comments",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "question_toks": [
      "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'已拒绝'？请列出这些机构的名称、报告日期和备注。"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_date",
      "rr.comments"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, transaction_id, transaction_amount FROM related_party_transactions;",
    "question": "列出所有机构的关联交易及其金额。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "transaction_id,",
      "transaction_amount",
      "FROM",
      "related_party_transactions;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "transaction_id,",
      "transaction_amount",
      "FROM",
      "related_party_transactions;"
    ],
    "question_toks": [
      "列出所有机构的关联交易及其金额。"
    ],
    "result_fields": [
      "institution_id",
      "transaction_id",
      "transaction_amount"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name, rr.report_type, SUM(rpt.transaction_amount) AS total_transaction_amount FROM regulatory_reports rr JOIN financial_institution_info fi ON rr.institution_id = fi.institution_id JOIN related_party_transactions rpt ON rr.institution_id = rpt.institution_id WHERE rr.report_date = '2023-10-01' AND rr.report_type = '半年度报告' GROUP BY fi.institution_name, rr.report_type HAVING SUM(rpt.transaction_amount) > 10000000;",
    "question": "2023年10月1日，哪些金融机构的监管报告类型为'半年度报告'，并且其关联交易的总金额超过1000万元？",
    "query_toks": [
      "SELECT",
      "fi.institution_name,",
      "rr.report_type,",
      "SUM(rpt.transaction_amount)",
      "AS",
      "total_transaction_amount",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rr.institution_id",
      "=",
      "fi.institution_id",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "rr.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-10-01'",
      "AND",
      "rr.report_type",
      "=",
      "'半年度报告'",
      "GROUP",
      "BY",
      "fi.institution_name,",
      "rr.report_type",
      "HAVING",
      "SUM(rpt.transaction_amount)",
      ">",
      "10000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name,",
      "rr.report_type,",
      "SUM(rpt.transaction_amount)",
      "AS",
      "total_transaction_amount",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rr.institution_id",
      "=",
      "fi.institution_id",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "rr.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-10-01'",
      "AND",
      "rr.report_type",
      "=",
      "'半年度报告'",
      "GROUP",
      "BY",
      "fi.institution_name,",
      "rr.report_type",
      "HAVING",
      "SUM(rpt.transaction_amount)",
      ">",
      "10000000;"
    ],
    "question_toks": [
      "2023年10月1日，哪些金融机构的监管报告类型为'半年度报告'，并且其关联交易的总金额超过1000万元？"
    ],
    "result_fields": [
      "fi.institution_name",
      "rr.report_type",
      "SUM(rpt.transaction_amount)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_id, rr.report_date, rr.comments FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date >= '2023-01-01' AND rr.submission_date <= '2023-12-31' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';",
    "question": "在2023年提交的所有监管报告中，哪些机构的报告类型为季度报告且审批状态为已拒绝？请列出这些机构的名称、报告ID、报告日期和备注。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_id,",
      "rr.report_date,",
      "rr.comments",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<=",
      "'2023-12-31'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_id,",
      "rr.report_date,",
      "rr.comments",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<=",
      "'2023-12-31'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "question_toks": [
      "在2023年提交的所有监管报告中，哪些机构的报告类型为季度报告且审批状态为已拒绝？请列出这些机构的名称、报告ID、报告日期和备注。"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_id",
      "rr.report_date",
      "rr.comments"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_type, rr.approval_status, rr.submission_date FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date >= '2023-01-01' AND rr.submission_date < '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';",
    "question": "在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'并且审批状态为'已拒绝'？请列出这些机构的名称、报告类型、审批状态和提交日期。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_type,",
      "rr.approval_status,",
      "rr.submission_date",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_type,",
      "rr.approval_status,",
      "rr.submission_date",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "question_toks": [
      "在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'并且审批状态为'已拒绝'？请列出这些机构的名称、报告类型、审批状态和提交日期。"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_type",
      "rr.approval_status",
      "rr.submission_date"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT npl_ratio, address FROM non_performing_loans JOIN financial_institution_info ON non_performing_loans.institution_id = financial_institution_info.institution_id;",
    "question": "不良贷款率与地区经济发展水平是否存在相关性？",
    "query_toks": [
      "SELECT",
      "npl_ratio,",
      "address",
      "FROM",
      "non_performing_loans",
      "JOIN",
      "financial_institution_info",
      "ON",
      "non_performing_loans.institution_id",
      "=",
      "financial_institution_info.institution_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "npl_ratio,",
      "address",
      "FROM",
      "non_performing_loans",
      "JOIN",
      "financial_institution_info",
      "ON",
      "non_performing_loans.institution_id",
      "=",
      "financial_institution_info.institution_id;"
    ],
    "question_toks": [
      "不良贷款率与地区经济发展水平是否存在相关性？"
    ],
    "result_fields": [
      "npl_ratio",
      "address"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT report_id, institution_id, report_date, report_type, approval_status FROM regulatory_reports WHERE submission_date >= '2024-01-01' AND submission_date < '2025-01-01';",
    "question": "找出在2024年提交的所有金融机构的监管报告及其审批状态。",
    "query_toks": [
      "SELECT",
      "report_id,",
      "institution_id,",
      "report_date,",
      "report_type,",
      "approval_status",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "submission_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "submission_date",
      "<",
      "'2025-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "report_id,",
      "institution_id,",
      "report_date,",
      "report_type,",
      "approval_status",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "submission_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "submission_date",
      "<",
      "'2025-01-01';"
    ],
    "question_toks": [
      "找出在2024年提交的所有金融机构的监管报告及其审批状态。"
    ],
    "result_fields": [
      "report_id",
      "institution_id",
      "report_date",
      "report_type",
      "approval_status"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_type, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY liquidity_coverage_ratio) AS median_liquidity_coverage_ratio FROM liquidity_ratio lr JOIN financial_institution_info fii ON lr.institution_id = fii.institution_id GROUP BY institution_type;",
    "question": "各机构类型中，流动性覆盖率的中位数是多少？",
    "query_toks": [
      "SELECT",
      "institution_type,",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "liquidity_coverage_ratio)",
      "AS",
      "median_liquidity_coverage_ratio",
      "FROM",
      "liquidity_ratio",
      "lr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "lr.institution_id",
      "=",
      "fii.institution_id",
      "GROUP",
      "BY",
      "institution_type;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_type,",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "liquidity_coverage_ratio)",
      "AS",
      "median_liquidity_coverage_ratio",
      "FROM",
      "liquidity_ratio",
      "lr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "lr.institution_id",
      "=",
      "fii.institution_id",
      "GROUP",
      "BY",
      "institution_type;"
    ],
    "question_toks": [
      "各机构类型中，流动性覆盖率的中位数是多少？"
    ],
    "result_fields": [
      "institution_type",
      "PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY liquidity_coverage_ratio)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT r.institution_id, r.report_id, r.report_type, r.approval_status, c.core_tier_1_ratio FROM regulatory_reports r JOIN capital_adequacy_ratio c ON r.institution_id = c.institution_id WHERE r.submission_date >= '2023-01-01' AND r.submission_date < '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '已拒绝' AND c.report_date = '2023-06-01' AND c.core_tier_1_ratio < 8;",
    "question": "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'且审批状态为'已拒绝'，并且这些机构在2023年6月1日的资本充足率表中，核心一级资本充足率低于8%？",
    "query_toks": [
      "SELECT",
      "r.institution_id,",
      "r.report_id,",
      "r.report_type,",
      "r.approval_status,",
      "c.core_tier_1_ratio",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "capital_adequacy_ratio",
      "c",
      "ON",
      "r.institution_id",
      "=",
      "c.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'已拒绝'",
      "AND",
      "c.report_date",
      "=",
      "'2023-06-01'",
      "AND",
      "c.core_tier_1_ratio",
      "<",
      "8;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.institution_id,",
      "r.report_id,",
      "r.report_type,",
      "r.approval_status,",
      "c.core_tier_1_ratio",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "capital_adequacy_ratio",
      "c",
      "ON",
      "r.institution_id",
      "=",
      "c.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'已拒绝'",
      "AND",
      "c.report_date",
      "=",
      "'2023-06-01'",
      "AND",
      "c.core_tier_1_ratio",
      "<",
      "8;"
    ],
    "question_toks": [
      "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'且审批状态为'已拒绝'，并且这些机构在2023年6月1日的资本充足率表中，核心一级资本充足率低于8%？"
    ],
    "result_fields": [
      "r.institution_id",
      "r.report_id",
      "r.report_type",
      "r.approval_status",
      "c.core_tier_1_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT AVG(npl_ratio) AS average_npl_ratio FROM (SELECT npl.institution_id, npl.npl_ratio FROM non_performing_loans npl JOIN capital_adequacy_ratio car ON npl.institution_id = car.institution_id AND npl.report_date = car.report_date WHERE npl.report_date >= '2023-07-01' AND npl.report_date < '2023-10-01' ORDER BY car.total_car DESC LIMIT 10) AS top_institutions;",
    "question": "2023年第三季度，资本充足率top10的机构中，平均不良贷款率是多少？",
    "query_toks": [
      "SELECT",
      "AVG(npl_ratio)",
      "AS",
      "average_npl_ratio",
      "FROM",
      "(SELECT",
      "npl.institution_id,",
      "npl.npl_ratio",
      "FROM",
      "non_performing_loans",
      "npl",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "npl.institution_id",
      "=",
      "car.institution_id",
      "AND",
      "npl.report_date",
      "=",
      "car.report_date",
      "WHERE",
      "npl.report_date",
      ">=",
      "'2023-07-01'",
      "AND",
      "npl.report_date",
      "<",
      "'2023-10-01'",
      "ORDER",
      "BY",
      "car.total_car",
      "DESC",
      "LIMIT",
      "10)",
      "AS",
      "top_institutions;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "AVG(npl_ratio)",
      "AS",
      "average_npl_ratio",
      "FROM",
      "(SELECT",
      "npl.institution_id,",
      "npl.npl_ratio",
      "FROM",
      "non_performing_loans",
      "npl",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "npl.institution_id",
      "=",
      "car.institution_id",
      "AND",
      "npl.report_date",
      "=",
      "car.report_date",
      "WHERE",
      "npl.report_date",
      ">=",
      "'2023-07-01'",
      "AND",
      "npl.report_date",
      "<",
      "'2023-10-01'",
      "ORDER",
      "BY",
      "car.total_car",
      "DESC",
      "LIMIT",
      "10)",
      "AS",
      "top_institutions;"
    ],
    "question_toks": [
      "2023年第三季度，资本充足率top10的机构中，平均不良贷款率是多少？"
    ],
    "result_fields": [
      "AVG(npl_ratio)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM compliance_records cr JOIN financial_institution_info fii ON cr.institution_id = fii.institution_id WHERE cr.status = '未解决' GROUP BY fii.institution_name ORDER BY COUNT(*) DESC LIMIT 1;",
    "question": "未解决的合规问题数量最多的机构是哪家？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "compliance_records",
      "cr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "cr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "cr.status",
      "=",
      "'未解决'",
      "GROUP",
      "BY",
      "fii.institution_name",
      "ORDER",
      "BY",
      "COUNT(*)",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "compliance_records",
      "cr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "cr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "cr.status",
      "=",
      "'未解决'",
      "GROUP",
      "BY",
      "fii.institution_name",
      "ORDER",
      "BY",
      "COUNT(*)",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "未解决的合规问题数量最多的机构是哪家？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM related_party_transactions WHERE transaction_date >= '2023-01-01' AND transaction_date < '2024-01-01' AND transaction_amount > 5000000;",
    "question": "展示2023年在关联交易中金额超过500万的记录。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "related_party_transactions",
      "WHERE",
      "transaction_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "transaction_date",
      "<",
      "'2024-01-01'",
      "AND",
      "transaction_amount",
      ">",
      "5000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "related_party_transactions",
      "WHERE",
      "transaction_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "transaction_date",
      "<",
      "'2024-01-01'",
      "AND",
      "transaction_amount",
      ">",
      "5000000;"
    ],
    "question_toks": [
      "展示2023年在关联交易中金额超过500万的记录。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id FROM risk_exposure WHERE market_risk_exposure / total_risk_exposure > 0.25;",
    "question": "哪些机构的市场风险暴露占总风险暴露的比例超过25%？",
    "query_toks": [
      "SELECT",
      "institution_id",
      "FROM",
      "risk_exposure",
      "WHERE",
      "market_risk_exposure",
      "/",
      "total_risk_exposure",
      ">",
      "0.25;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id",
      "FROM",
      "risk_exposure",
      "WHERE",
      "market_risk_exposure",
      "/",
      "total_risk_exposure",
      ">",
      "0.25;"
    ],
    "question_toks": [
      "哪些机构的市场风险暴露占总风险暴露的比例超过25%？"
    ],
    "result_fields": [
      "institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rpt.transaction_amount, rpt.transaction_type FROM related_party_transactions rpt JOIN financial_institution_info fii ON rpt.institution_id = fii.institution_id WHERE rpt.transaction_date >= '2023-08-01' AND rpt.transaction_date < '2023-09-01' AND rpt.transaction_amount > 5000000 AND rpt.approval_status = '待审批';",
    "question": "2023年8月，哪些金融机构的关联交易金额超过500万元且审批状态为待审批？请列出机构名称、交易金额和交易类型。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rpt.transaction_amount,",
      "rpt.transaction_type",
      "FROM",
      "related_party_transactions",
      "rpt",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rpt.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rpt.transaction_date",
      ">=",
      "'2023-08-01'",
      "AND",
      "rpt.transaction_date",
      "<",
      "'2023-09-01'",
      "AND",
      "rpt.transaction_amount",
      ">",
      "5000000",
      "AND",
      "rpt.approval_status",
      "=",
      "'待审批';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rpt.transaction_amount,",
      "rpt.transaction_type",
      "FROM",
      "related_party_transactions",
      "rpt",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rpt.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rpt.transaction_date",
      ">=",
      "'2023-08-01'",
      "AND",
      "rpt.transaction_date",
      "<",
      "'2023-09-01'",
      "AND",
      "rpt.transaction_amount",
      ">",
      "5000000",
      "AND",
      "rpt.approval_status",
      "=",
      "'待审批';"
    ],
    "question_toks": [
      "2023年8月，哪些金融机构的关联交易金额超过500万元且审批状态为待审批？请列出机构名称、交易金额和交易类型。"
    ],
    "result_fields": [
      "fii.institution_name",
      "rpt.transaction_amount",
      "rpt.transaction_type"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT r.institution_id, f.institution_name FROM regulatory_reports r JOIN financial_institution_info f ON r.institution_id = f.institution_id JOIN income_statement i ON r.institution_id = i.institution_id WHERE r.report_type = '季度报告' AND r.approval_status = '需修改' AND r.submission_date >= '2023-01-01' AND r.submission_date < '2024-01-01' AND i.report_date >= '2023-01-01' AND i.report_date < '2023-04-01' AND i.net_profit > 50000000;",
    "question": "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'需修改'，同时这些机构在2023年第一季度的净利润超过5000万元？",
    "query_toks": [
      "SELECT",
      "r.institution_id,",
      "f.institution_name",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "financial_institution_info",
      "f",
      "ON",
      "r.institution_id",
      "=",
      "f.institution_id",
      "JOIN",
      "income_statement",
      "i",
      "ON",
      "r.institution_id",
      "=",
      "i.institution_id",
      "WHERE",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'需修改'",
      "AND",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "i.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "i.report_date",
      "<",
      "'2023-04-01'",
      "AND",
      "i.net_profit",
      ">",
      "50000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.institution_id,",
      "f.institution_name",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "financial_institution_info",
      "f",
      "ON",
      "r.institution_id",
      "=",
      "f.institution_id",
      "JOIN",
      "income_statement",
      "i",
      "ON",
      "r.institution_id",
      "=",
      "i.institution_id",
      "WHERE",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'需修改'",
      "AND",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "i.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "i.report_date",
      "<",
      "'2023-04-01'",
      "AND",
      "i.net_profit",
      ">",
      "50000000;"
    ],
    "question_toks": [
      "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'需修改'，同时这些机构在2023年第一季度的净利润超过5000万元？"
    ],
    "result_fields": [
      "r.institution_id",
      "f.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name FROM financial_institution_info fi WHERE fi.institution_id IN (SELECT npl.institution_id FROM non_performing_loans npl WHERE npl.npl_ratio > (SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY npl_ratio) FROM non_performing_loans) AND npl.provision_coverage_ratio > (SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY provision_coverage_ratio) FROM non_performing_loans) AND npl.institution_id IN (SELECT car.institution_id FROM capital_adequacy_ratio car WHERE car.total_car > (SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY total_car) FROM capital_adequacy_ratio)));",
    "question": "哪些机构的不良贷款率、拨备覆盖率和资本充足率均处于行业中位数以上？",
    "query_toks": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "WHERE",
      "fi.institution_id",
      "IN",
      "(SELECT",
      "npl.institution_id",
      "FROM",
      "non_performing_loans",
      "npl",
      "WHERE",
      "npl.npl_ratio",
      ">",
      "(SELECT",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "npl_ratio)",
      "FROM",
      "non_performing_loans)",
      "AND",
      "npl.provision_coverage_ratio",
      ">",
      "(SELECT",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "provision_coverage_ratio)",
      "FROM",
      "non_performing_loans)",
      "AND",
      "npl.institution_id",
      "IN",
      "(SELECT",
      "car.institution_id",
      "FROM",
      "capital_adequacy_ratio",
      "car",
      "WHERE",
      "car.total_car",
      ">",
      "(SELECT",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "total_car)",
      "FROM",
      "capital_adequacy_ratio)));"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "WHERE",
      "fi.institution_id",
      "IN",
      "(SELECT",
      "npl.institution_id",
      "FROM",
      "non_performing_loans",
      "npl",
      "WHERE",
      "npl.npl_ratio",
      ">",
      "(SELECT",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "npl_ratio)",
      "FROM",
      "non_performing_loans)",
      "AND",
      "npl.provision_coverage_ratio",
      ">",
      "(SELECT",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "provision_coverage_ratio)",
      "FROM",
      "non_performing_loans)",
      "AND",
      "npl.institution_id",
      "IN",
      "(SELECT",
      "car.institution_id",
      "FROM",
      "capital_adequacy_ratio",
      "car",
      "WHERE",
      "car.total_car",
      ">",
      "(SELECT",
      "PERCENTILE_CONT(0.5)",
      "WITHIN",
      "GROUP",
      "(ORDER",
      "BY",
      "total_car)",
      "FROM",
      "capital_adequacy_ratio)));"
    ],
    "question_toks": [
      "哪些机构的不良贷款率、拨备覆盖率和资本充足率均处于行业中位数以上？"
    ],
    "result_fields": [
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT related_party FROM related_party_transactions ORDER BY transaction_amount DESC LIMIT 1;",
    "question": "关联交易中涉及金额最大的关联方是谁？",
    "query_toks": [
      "SELECT",
      "related_party",
      "FROM",
      "related_party_transactions",
      "ORDER",
      "BY",
      "transaction_amount",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "related_party",
      "FROM",
      "related_party_transactions",
      "ORDER",
      "BY",
      "transaction_amount",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "关联交易中涉及金额最大的关联方是谁？"
    ],
    "result_fields": [
      "related_party"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT f.institution_name FROM financial_institution_info f JOIN related_party_transactions r ON f.institution_id = r.institution_id WHERE r.transaction_date = '2023-10-01' AND r.approval_status = '待审批';",
    "question": "哪些机构在2023年10月1日的审批状态为待审批？",
    "query_toks": [
      "SELECT",
      "f.institution_name",
      "FROM",
      "financial_institution_info",
      "f",
      "JOIN",
      "related_party_transactions",
      "r",
      "ON",
      "f.institution_id",
      "=",
      "r.institution_id",
      "WHERE",
      "r.transaction_date",
      "=",
      "'2023-10-01'",
      "AND",
      "r.approval_status",
      "=",
      "'待审批';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "f.institution_name",
      "FROM",
      "financial_institution_info",
      "f",
      "JOIN",
      "related_party_transactions",
      "r",
      "ON",
      "f.institution_id",
      "=",
      "r.institution_id",
      "WHERE",
      "r.transaction_date",
      "=",
      "'2023-10-01'",
      "AND",
      "r.approval_status",
      "=",
      "'待审批';"
    ],
    "question_toks": [
      "哪些机构在2023年10月1日的审批状态为待审批？"
    ],
    "result_fields": [
      "f.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name FROM financial_institution_info fi JOIN risk_exposure re ON fi.institution_id = re.institution_id WHERE re.report_date = '2023-05-01' AND re.total_risk_exposure > 150000000000;",
    "question": "哪些机构在2023年05月的总风险暴露高于150亿？",
    "query_toks": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fi.institution_id",
      "=",
      "re.institution_id",
      "WHERE",
      "re.report_date",
      "=",
      "'2023-05-01'",
      "AND",
      "re.total_risk_exposure",
      ">",
      "150000000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "risk_exposure",
      "re",
      "ON",
      "fi.institution_id",
      "=",
      "re.institution_id",
      "WHERE",
      "re.report_date",
      "=",
      "'2023-05-01'",
      "AND",
      "re.total_risk_exposure",
      ">",
      "150000000000;"
    ],
    "question_toks": [
      "哪些机构在2023年05月的总风险暴露高于150亿？"
    ],
    "result_fields": [
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT r.institution_id, f.institution_name, f.registered_capital FROM regulatory_reports r JOIN financial_institution_info f ON r.institution_id = f.institution_id WHERE r.submission_date >= '2023-01-01' AND r.submission_date < '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '需修改' AND f.registered_capital > 50000000;",
    "question": "在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'且审批状态为'需修改'，并且这些金融机构的注册资本超过5000万元？",
    "query_toks": [
      "SELECT",
      "r.institution_id,",
      "f.institution_name,",
      "f.registered_capital",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "financial_institution_info",
      "f",
      "ON",
      "r.institution_id",
      "=",
      "f.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'需修改'",
      "AND",
      "f.registered_capital",
      ">",
      "50000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.institution_id,",
      "f.institution_name,",
      "f.registered_capital",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "financial_institution_info",
      "f",
      "ON",
      "r.institution_id",
      "=",
      "f.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'需修改'",
      "AND",
      "f.registered_capital",
      ">",
      "50000000;"
    ],
    "question_toks": [
      "在2023年提交的监管报告中，哪些金融机构的报告类型为'季度报告'且审批状态为'需修改'，并且这些金融机构的注册资本超过5000万元？"
    ],
    "result_fields": [
      "r.institution_id",
      "f.institution_name",
      "f.registered_capital"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, report_date, market_risk_exposure, credit_risk_exposure FROM risk_exposure WHERE report_date >= '2023-11-01' AND report_date < '2023-12-01';",
    "question": "查询2023年11月所有机构的市场风险暴露与信用风险暴露。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "report_date,",
      "market_risk_exposure,",
      "credit_risk_exposure",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      ">=",
      "'2023-11-01'",
      "AND",
      "report_date",
      "<",
      "'2023-12-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "report_date,",
      "market_risk_exposure,",
      "credit_risk_exposure",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      ">=",
      "'2023-11-01'",
      "AND",
      "report_date",
      "<",
      "'2023-12-01';"
    ],
    "question_toks": [
      "查询2023年11月所有机构的市场风险暴露与信用风险暴露。"
    ],
    "result_fields": [
      "institution_id",
      "report_date",
      "market_risk_exposure",
      "credit_risk_exposure"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, credit_risk_exposure FROM risk_exposure WHERE report_date = '2023-09-01';",
    "question": "获取2023年9月1日所有机构的风险暴露和相关的信用风险暴露。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "credit_risk_exposure",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      "=",
      "'2023-09-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "credit_risk_exposure",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      "=",
      "'2023-09-01';"
    ],
    "question_toks": [
      "获取2023年9月1日所有机构的风险暴露和相关的信用风险暴露。"
    ],
    "result_fields": [
      "institution_id",
      "credit_risk_exposure"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rpt.transaction_amount, rpt.approval_status FROM related_party_transactions rpt JOIN financial_institution_info fii ON rpt.institution_id = fii.institution_id WHERE rpt.transaction_amount > 5000000 AND rpt.approval_status = '已批准' AND rpt.transaction_date >= '2023-05-01' AND rpt.transaction_date < '2023-06-01';",
    "question": "2023年5月，哪些金融机构的关联交易金额超过500万元且审批状态为已批准？",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rpt.transaction_amount,",
      "rpt.approval_status",
      "FROM",
      "related_party_transactions",
      "rpt",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rpt.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rpt.transaction_amount",
      ">",
      "5000000",
      "AND",
      "rpt.approval_status",
      "=",
      "'已批准'",
      "AND",
      "rpt.transaction_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "rpt.transaction_date",
      "<",
      "'2023-06-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rpt.transaction_amount,",
      "rpt.approval_status",
      "FROM",
      "related_party_transactions",
      "rpt",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rpt.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rpt.transaction_amount",
      ">",
      "5000000",
      "AND",
      "rpt.approval_status",
      "=",
      "'已批准'",
      "AND",
      "rpt.transaction_date",
      ">=",
      "'2023-05-01'",
      "AND",
      "rpt.transaction_date",
      "<",
      "'2023-06-01';"
    ],
    "question_toks": [
      "2023年5月，哪些金融机构的关联交易金额超过500万元且审批状态为已批准？"
    ],
    "result_fields": [
      "fii.institution_name",
      "rpt.transaction_amount",
      "rpt.approval_status"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id FROM capital_adequacy_ratio WHERE risk_weighted_assets > 800000000000;",
    "question": "查询资本充足率表中风险加权资产超过8000亿元的机构。",
    "query_toks": [
      "SELECT",
      "institution_id",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "risk_weighted_assets",
      ">",
      "800000000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "risk_weighted_assets",
      ">",
      "800000000000;"
    ],
    "question_toks": [
      "查询资本充足率表中风险加权资产超过8000亿元的机构。"
    ],
    "result_fields": [
      "institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT COUNT(*) FROM financial_institution_info fii JOIN balance_sheet bs ON fii.institution_id = bs.institution_id WHERE fii.registered_capital < 1000000000 AND bs.total_assets > 100000000000;",
    "question": "有多少家注册资本低于10亿元的金融机构的资产规模已经超过1000亿元？",
    "query_toks": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "balance_sheet",
      "bs",
      "ON",
      "fii.institution_id",
      "=",
      "bs.institution_id",
      "WHERE",
      "fii.registered_capital",
      "<",
      "1000000000",
      "AND",
      "bs.total_assets",
      ">",
      "100000000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "balance_sheet",
      "bs",
      "ON",
      "fii.institution_id",
      "=",
      "bs.institution_id",
      "WHERE",
      "fii.registered_capital",
      "<",
      "1000000000",
      "AND",
      "bs.total_assets",
      ">",
      "100000000000;"
    ],
    "question_toks": [
      "有多少家注册资本低于10亿元的金融机构的资产规模已经超过1000亿元？"
    ],
    "result_fields": [
      "COUNT(*)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, car.total_car, npl.npl_ratio FROM capital_adequacy_ratio car JOIN non_performing_loans npl ON car.institution_id = npl.institution_id AND car.report_date = npl.report_date JOIN financial_institution_info fii ON car.institution_id = fii.institution_id WHERE car.report_date BETWEEN '2023-07-01' AND '2023-09-30' AND car.total_car < 12 AND npl.npl_ratio > 2;",
    "question": "2023年第三季度，哪些金融机构的资本充足率表中总资本充足率低于12%，并且其不良贷款率超过2%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "car.total_car,",
      "npl.npl_ratio",
      "FROM",
      "capital_adequacy_ratio",
      "car",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "car.institution_id",
      "=",
      "npl.institution_id",
      "AND",
      "car.report_date",
      "=",
      "npl.report_date",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "car.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "car.report_date",
      "BETWEEN",
      "'2023-07-01'",
      "AND",
      "'2023-09-30'",
      "AND",
      "car.total_car",
      "<",
      "12",
      "AND",
      "npl.npl_ratio",
      ">",
      "2;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "car.total_car,",
      "npl.npl_ratio",
      "FROM",
      "capital_adequacy_ratio",
      "car",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "car.institution_id",
      "=",
      "npl.institution_id",
      "AND",
      "car.report_date",
      "=",
      "npl.report_date",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "car.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "car.report_date",
      "BETWEEN",
      "'2023-07-01'",
      "AND",
      "'2023-09-30'",
      "AND",
      "car.total_car",
      "<",
      "12",
      "AND",
      "npl.npl_ratio",
      ">",
      "2;"
    ],
    "question_toks": [
      "2023年第三季度，哪些金融机构的资本充足率表中总资本充足率低于12%，并且其不良贷款率超过2%？"
    ],
    "result_fields": [
      "fii.institution_name",
      "car.total_car",
      "npl.npl_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT report_date, approval_status FROM regulatory_reports;",
    "question": "查找所有机构的报告日期及其审批状态。",
    "query_toks": [
      "SELECT",
      "report_date,",
      "approval_status",
      "FROM",
      "regulatory_reports;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "report_date,",
      "approval_status",
      "FROM",
      "regulatory_reports;"
    ],
    "question_toks": [
      "查找所有机构的报告日期及其审批状态。"
    ],
    "result_fields": [
      "report_date",
      "approval_status"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name FROM balance_sheet bs JOIN financial_institution_info fi ON bs.institution_id = fi.institution_id WHERE bs.report_date >= '2024-01-01' AND bs.report_date < '2025-01-01' ORDER BY bs.total_assets DESC LIMIT 1;",
    "question": "在2024年，哪个机构的资产负债表中总资产最高？",
    "query_toks": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "balance_sheet",
      "bs",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "bs.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "bs.report_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "bs.report_date",
      "<",
      "'2025-01-01'",
      "ORDER",
      "BY",
      "bs.total_assets",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name",
      "FROM",
      "balance_sheet",
      "bs",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "bs.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "bs.report_date",
      ">=",
      "'2024-01-01'",
      "AND",
      "bs.report_date",
      "<",
      "'2025-01-01'",
      "ORDER",
      "BY",
      "bs.total_assets",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "在2024年，哪个机构的资产负债表中总资产最高？"
    ],
    "result_fields": [
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT compliance_type, AVG(resolution_date - record_date) AS avg_resolution_time FROM compliance_records WHERE EXTRACT(YEAR FROM record_date) = 2023 AND severity = '严重' GROUP BY compliance_type ORDER BY avg_resolution_time DESC LIMIT 1",
    "question": "2023年发生的严重合规问题中，平均解决时间最长的合规类型是什么？",
    "query_toks": [
      "SELECT",
      "compliance_type,",
      "AVG(resolution_date",
      "-",
      "record_date)",
      "AS",
      "avg_resolution_time",
      "FROM",
      "compliance_records",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "record_date)",
      "=",
      "2023",
      "AND",
      "severity",
      "=",
      "'严重'",
      "GROUP",
      "BY",
      "compliance_type",
      "ORDER",
      "BY",
      "avg_resolution_time",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "SELECT",
      "compliance_type,",
      "AVG(resolution_date",
      "-",
      "record_date)",
      "AS",
      "avg_resolution_time",
      "FROM",
      "compliance_records",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "record_date)",
      "=",
      "2023",
      "AND",
      "severity",
      "=",
      "'严重'",
      "GROUP",
      "BY",
      "compliance_type",
      "ORDER",
      "BY",
      "avg_resolution_time",
      "DESC",
      "LIMIT",
      "1"
    ],
    "question_toks": [
      "2023年发生的严重合规问题中，平均解决时间最长的合规类型是什么？"
    ],
    "result_fields": [
      "compliance_type",
      "AVG(resolution_date - record_date)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_type, rpt.transaction_amount FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN related_party_transactions rpt ON rr.institution_id = rpt.institution_id WHERE rr.report_date = '2023-10-01' AND rr.report_type = '半年度报告' AND rpt.transaction_amount > 5000000;",
    "question": "2023年10月1日，哪些金融机构的监管报告类型为'半年度报告'，并且其关联交易金额超过500万元？",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_type,",
      "rpt.transaction_amount",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "rr.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-10-01'",
      "AND",
      "rr.report_type",
      "=",
      "'半年度报告'",
      "AND",
      "rpt.transaction_amount",
      ">",
      "5000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_type,",
      "rpt.transaction_amount",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "rr.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-10-01'",
      "AND",
      "rr.report_type",
      "=",
      "'半年度报告'",
      "AND",
      "rpt.transaction_amount",
      ">",
      "5000000;"
    ],
    "question_toks": [
      "2023年10月1日，哪些金融机构的监管报告类型为'半年度报告'，并且其关联交易金额超过500万元？"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_type",
      "rpt.transaction_amount"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT AVG(non_interest_income) FROM income_statement WHERE report_date = '2023-01-01';",
    "question": "查询2023年1月1日的利润表中非利息收入的平均值。",
    "query_toks": [
      "SELECT",
      "AVG(non_interest_income)",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      "=",
      "'2023-01-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "AVG(non_interest_income)",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      "=",
      "'2023-01-01';"
    ],
    "question_toks": [
      "查询2023年1月1日的利润表中非利息收入的平均值。"
    ],
    "result_fields": [
      "AVG(non_interest_income)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT report_date, npl_amount FROM non_performing_loans WHERE report_date >= '2023-06-01' AND report_date < '2023-07-01';",
    "question": "查看2023年06月的所有不良贷款记录及其金额。",
    "query_toks": [
      "SELECT",
      "report_date,",
      "npl_amount",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "report_date",
      ">=",
      "'2023-06-01'",
      "AND",
      "report_date",
      "<",
      "'2023-07-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "report_date,",
      "npl_amount",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "report_date",
      ">=",
      "'2023-06-01'",
      "AND",
      "report_date",
      "<",
      "'2023-07-01';"
    ],
    "question_toks": [
      "查看2023年06月的所有不良贷款记录及其金额。"
    ],
    "result_fields": [
      "report_date",
      "npl_amount"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id FROM non_performing_loans WHERE provision_coverage_ratio < 200;",
    "question": "查询不良贷款表中拨备覆盖率小于200%的机构。",
    "query_toks": [
      "SELECT",
      "institution_id",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "provision_coverage_ratio",
      "<",
      "200;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "provision_coverage_ratio",
      "<",
      "200;"
    ],
    "question_toks": [
      "查询不良贷款表中拨备覆盖率小于200%的机构。"
    ],
    "result_fields": [
      "institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT AVG(total_car) AS average_capital_adequacy_ratio FROM capital_adequacy_ratio WHERE institution_id IN (SELECT institution_id FROM income_statement WHERE report_date BETWEEN '2023-10-01' AND '2023-12-31' ORDER BY net_profit DESC LIMIT 10);",
    "question": "2023年第四季度，净利润top10的机构中，平均资本充足率是多少？",
    "query_toks": [
      "SELECT",
      "AVG(total_car)",
      "AS",
      "average_capital_adequacy_ratio",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "institution_id",
      "IN",
      "(SELECT",
      "institution_id",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      "BETWEEN",
      "'2023-10-01'",
      "AND",
      "'2023-12-31'",
      "ORDER",
      "BY",
      "net_profit",
      "DESC",
      "LIMIT",
      "10);"
    ],
    "query_toks_no_value": [
      "SELECT",
      "AVG(total_car)",
      "AS",
      "average_capital_adequacy_ratio",
      "FROM",
      "capital_adequacy_ratio",
      "WHERE",
      "institution_id",
      "IN",
      "(SELECT",
      "institution_id",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      "BETWEEN",
      "'2023-10-01'",
      "AND",
      "'2023-12-31'",
      "ORDER",
      "BY",
      "net_profit",
      "DESC",
      "LIMIT",
      "10);"
    ],
    "question_toks": [
      "2023年第四季度，净利润top10的机构中，平均资本充足率是多少？"
    ],
    "result_fields": [
      "AVG(total_car)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT f.institution_name FROM financial_institution_info f JOIN compliance_records c ON f.institution_id = c.institution_id WHERE c.description LIKE '%客户投诉%';",
    "question": "哪些机构的合规记录的描述中提到了客户投诉？",
    "query_toks": [
      "SELECT",
      "f.institution_name",
      "FROM",
      "financial_institution_info",
      "f",
      "JOIN",
      "compliance_records",
      "c",
      "ON",
      "f.institution_id",
      "=",
      "c.institution_id",
      "WHERE",
      "c.description",
      "LIKE",
      "'%客户投诉%';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "f.institution_name",
      "FROM",
      "financial_institution_info",
      "f",
      "JOIN",
      "compliance_records",
      "c",
      "ON",
      "f.institution_id",
      "=",
      "c.institution_id",
      "WHERE",
      "c.description",
      "LIKE",
      "'%客户投诉%';"
    ],
    "question_toks": [
      "哪些机构的合规记录的描述中提到了客户投诉？"
    ],
    "result_fields": [
      "f.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_id, net_interest_income, non_interest_income FROM income_statement WHERE report_date = '2023-07-01';",
    "question": "提供2023年07月各机构的利息净收入与非利息收入。",
    "query_toks": [
      "SELECT",
      "institution_id,",
      "net_interest_income,",
      "non_interest_income",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      "=",
      "'2023-07-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_id,",
      "net_interest_income,",
      "non_interest_income",
      "FROM",
      "income_statement",
      "WHERE",
      "report_date",
      "=",
      "'2023-07-01';"
    ],
    "question_toks": [
      "提供2023年07月各机构的利息净收入与非利息收入。"
    ],
    "result_fields": [
      "institution_id",
      "net_interest_income",
      "non_interest_income"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT r.institution_id, r.report_id, r.report_type, r.approval_status, n.npl_ratio FROM regulatory_reports r JOIN non_performing_loans n ON r.institution_id = n.institution_id WHERE r.submission_date >= '2023-01-01' AND r.submission_date < '2024-01-01' AND r.report_type = '季度报告' AND r.approval_status = '已拒绝' AND n.report_date >= '2023-01-01' AND n.report_date < '2024-01-01' AND n.npl_ratio > 1.00;",
    "question": "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'已拒绝'，同时这些机构在2023年的不良贷款率超过1%？",
    "query_toks": [
      "SELECT",
      "r.institution_id,",
      "r.report_id,",
      "r.report_type,",
      "r.approval_status,",
      "n.npl_ratio",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "non_performing_loans",
      "n",
      "ON",
      "r.institution_id",
      "=",
      "n.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'已拒绝'",
      "AND",
      "n.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "n.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "n.npl_ratio",
      ">",
      "1.00;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "r.institution_id,",
      "r.report_id,",
      "r.report_type,",
      "r.approval_status,",
      "n.npl_ratio",
      "FROM",
      "regulatory_reports",
      "r",
      "JOIN",
      "non_performing_loans",
      "n",
      "ON",
      "r.institution_id",
      "=",
      "n.institution_id",
      "WHERE",
      "r.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "r.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "r.report_type",
      "=",
      "'季度报告'",
      "AND",
      "r.approval_status",
      "=",
      "'已拒绝'",
      "AND",
      "n.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "n.report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "n.npl_ratio",
      ">",
      "1.00;"
    ],
    "question_toks": [
      "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'已拒绝'，同时这些机构在2023年的不良贷款率超过1%？"
    ],
    "result_fields": [
      "r.institution_id",
      "r.report_id",
      "r.report_type",
      "r.approval_status",
      "n.npl_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT npl_amount, provision_coverage_ratio FROM non_performing_loans WHERE report_date = '2023-03-01';",
    "question": "查找2023年3月1日的不良贷款及其拨备覆盖率。",
    "query_toks": [
      "SELECT",
      "npl_amount,",
      "provision_coverage_ratio",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "report_date",
      "=",
      "'2023-03-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "npl_amount,",
      "provision_coverage_ratio",
      "FROM",
      "non_performing_loans",
      "WHERE",
      "report_date",
      "=",
      "'2023-03-01';"
    ],
    "question_toks": [
      "查找2023年3月1日的不良贷款及其拨备覆盖率。"
    ],
    "result_fields": [
      "npl_amount",
      "provision_coverage_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_id, fii.registered_capital, car.total_car, lr.liquidity_coverage_ratio, npl.npl_ratio\nFROM financial_institution_info fii\nJOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id\nJOIN liquidity_ratio lr ON fii.institution_id = lr.institution_id\nJOIN non_performing_loans npl ON fii.institution_id = npl.institution_id\nWHERE car.report_date = lr.report_date AND lr.report_date = npl.report_date;",
    "question": "各项监管指标（如资本充足率、流动性覆盖率等）的达标情况与机构规模是否相关？",
    "query_toks": [
      "SELECT",
      "fii.institution_id,",
      "fii.registered_capital,",
      "car.total_car,",
      "lr.liquidity_coverage_ratio,",
      "npl.npl_ratio",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "liquidity_ratio",
      "lr",
      "ON",
      "fii.institution_id",
      "=",
      "lr.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "car.report_date",
      "=",
      "lr.report_date",
      "AND",
      "lr.report_date",
      "=",
      "npl.report_date;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_id,",
      "fii.registered_capital,",
      "car.total_car,",
      "lr.liquidity_coverage_ratio,",
      "npl.npl_ratio",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "liquidity_ratio",
      "lr",
      "ON",
      "fii.institution_id",
      "=",
      "lr.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "car.report_date",
      "=",
      "lr.report_date",
      "AND",
      "lr.report_date",
      "=",
      "npl.report_date;"
    ],
    "question_toks": [
      "各项监管指标（如资本充足率、流动性覆盖率等）的达标情况与机构规模是否相关？"
    ],
    "result_fields": [
      "fii.institution_id",
      "fii.registered_capital",
      "car.total_car",
      "lr.liquidity_coverage_ratio",
      "npl.npl_ratio"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.submission_date >= '2023-01-01' AND rr.submission_date < '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '已拒绝';",
    "question": "哪些金融机构在2023年提交了季度报告，并且这些报告的审批状态是已拒绝？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'已拒绝';"
    ],
    "question_toks": [
      "哪些金融机构在2023年提交了季度报告，并且这些报告的审批状态是已拒绝？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT COUNT(DISTINCT b1.institution_id) FROM balance_sheet b1 JOIN balance_sheet b2 ON b1.institution_id = b2.institution_id AND b1.report_date = b2.report_date + INTERVAL '1 year' JOIN capital_adequacy_ratio c1 ON b1.institution_id = c1.institution_id AND b1.report_date = c1.report_date JOIN capital_adequacy_ratio c2 ON b1.institution_id = c2.institution_id AND b1.report_date = c2.report_date + INTERVAL '1 year' WHERE (b2.loans_and_advances - b1.loans_and_advances) / b1.loans_and_advances > 0.2 AND (b1.loans_and_advances - b2.loans_and_advances) / b2.loans_and_advances > 0.2 AND c2.total_car < c1.total_car;",
    "question": "有多少家金融机构的贷款增速连续两年超过20%但资本充足率持续下降？",
    "query_toks": [
      "SELECT",
      "COUNT(DISTINCT",
      "b1.institution_id)",
      "FROM",
      "balance_sheet",
      "b1",
      "JOIN",
      "balance_sheet",
      "b2",
      "ON",
      "b1.institution_id",
      "=",
      "b2.institution_id",
      "AND",
      "b1.report_date",
      "=",
      "b2.report_date",
      "+",
      "INTERVAL",
      "'1",
      "year'",
      "JOIN",
      "capital_adequacy_ratio",
      "c1",
      "ON",
      "b1.institution_id",
      "=",
      "c1.institution_id",
      "AND",
      "b1.report_date",
      "=",
      "c1.report_date",
      "JOIN",
      "capital_adequacy_ratio",
      "c2",
      "ON",
      "b1.institution_id",
      "=",
      "c2.institution_id",
      "AND",
      "b1.report_date",
      "=",
      "c2.report_date",
      "+",
      "INTERVAL",
      "'1",
      "year'",
      "WHERE",
      "(b2.loans_and_advances",
      "-",
      "b1.loans_and_advances)",
      "/",
      "b1.loans_and_advances",
      ">",
      "0.2",
      "AND",
      "(b1.loans_and_advances",
      "-",
      "b2.loans_and_advances)",
      "/",
      "b2.loans_and_advances",
      ">",
      "0.2",
      "AND",
      "c2.total_car",
      "<",
      "c1.total_car;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(DISTINCT",
      "b1.institution_id)",
      "FROM",
      "balance_sheet",
      "b1",
      "JOIN",
      "balance_sheet",
      "b2",
      "ON",
      "b1.institution_id",
      "=",
      "b2.institution_id",
      "AND",
      "b1.report_date",
      "=",
      "b2.report_date",
      "+",
      "INTERVAL",
      "'1",
      "year'",
      "JOIN",
      "capital_adequacy_ratio",
      "c1",
      "ON",
      "b1.institution_id",
      "=",
      "c1.institution_id",
      "AND",
      "b1.report_date",
      "=",
      "c1.report_date",
      "JOIN",
      "capital_adequacy_ratio",
      "c2",
      "ON",
      "b1.institution_id",
      "=",
      "c2.institution_id",
      "AND",
      "b1.report_date",
      "=",
      "c2.report_date",
      "+",
      "INTERVAL",
      "'1",
      "year'",
      "WHERE",
      "(b2.loans_and_advances",
      "-",
      "b1.loans_and_advances)",
      "/",
      "b1.loans_and_advances",
      ">",
      "0.2",
      "AND",
      "(b1.loans_and_advances",
      "-",
      "b2.loans_and_advances)",
      "/",
      "b2.loans_and_advances",
      ">",
      "0.2",
      "AND",
      "c2.total_car",
      "<",
      "c1.total_car;"
    ],
    "question_toks": [
      "有多少家金融机构的贷款增速连续两年超过20%但资本充足率持续下降？"
    ],
    "result_fields": [
      "COUNT(DISTINCT b1.institution_id)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND rr.submission_date >= '2023-07-01' AND rr.submission_date < '2023-10-01';",
    "question": "2023年第三季度，哪些金融机构的监管报告类型为季度报告且审批状态为需修改？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.submission_date",
      ">=",
      "'2023-07-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2023-10-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.submission_date",
      ">=",
      "'2023-07-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2023-10-01';"
    ],
    "question_toks": [
      "2023年第三季度，哪些金融机构的监管报告类型为季度报告且审批状态为需修改？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id JOIN non_performing_loans npl ON rr.institution_id = npl.institution_id WHERE rr.report_date = '2023-07-01' AND rr.report_type = '季度报告' AND npl.npl_ratio > 1.00 AND npl.report_date = '2023-07-01';",
    "question": "2023年7月1日，哪些金融机构的监管报告类型为'季度报告'，并且其不良贷款率超过1%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "rr.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.00",
      "AND",
      "npl.report_date",
      "=",
      "'2023-07-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "rr.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "npl.npl_ratio",
      ">",
      "1.00",
      "AND",
      "npl.report_date",
      "=",
      "'2023-07-01';"
    ],
    "question_toks": [
      "2023年7月1日，哪些金融机构的监管报告类型为'季度报告'，并且其不良贷款率超过1%？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT DISTINCT institution_id FROM related_party_transactions",
    "question": "哪些机构在2023年10月进行了关联交易？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "institution_id",
      "FROM",
      "related_party_transactions"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "institution_id",
      "FROM",
      "related_party_transactions"
    ],
    "question_toks": [
      "哪些机构在2023年10月进行了关联交易？"
    ],
    "result_fields": [
      "DISTINCT institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name FROM financial_institution_info fii JOIN regulatory_reports rr ON fii.institution_id = rr.institution_id JOIN non_performing_loans npl ON fii.institution_id = npl.institution_id WHERE rr.report_type = '季度报告' AND rr.report_date = '2023-07-01' AND npl.report_date = '2023-07-01' AND npl.npl_ratio > 2.0;",
    "question": "在2023年7月1日，哪些金融机构的监管报告类型为'季度报告'，并且其不良贷款率超过2%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "regulatory_reports",
      "rr",
      "ON",
      "fii.institution_id",
      "=",
      "rr.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "npl.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "2.0;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "regulatory_reports",
      "rr",
      "ON",
      "fii.institution_id",
      "=",
      "rr.institution_id",
      "JOIN",
      "non_performing_loans",
      "npl",
      "ON",
      "fii.institution_id",
      "=",
      "npl.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "npl.report_date",
      "=",
      "'2023-07-01'",
      "AND",
      "npl.npl_ratio",
      ">",
      "2.0;"
    ],
    "question_toks": [
      "在2023年7月1日，哪些金融机构的监管报告类型为'季度报告'，并且其不良贷款率超过2%？"
    ],
    "result_fields": [
      "fii.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT c.report_date, c.total_car, c.risk_weighted_assets FROM capital_adequacy_ratio c ORDER BY c.report_date;",
    "question": "风险加权资产的构成是否随着资本充足率的变化而调整？",
    "query_toks": [
      "SELECT",
      "c.report_date,",
      "c.total_car,",
      "c.risk_weighted_assets",
      "FROM",
      "capital_adequacy_ratio",
      "c",
      "ORDER",
      "BY",
      "c.report_date;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "c.report_date,",
      "c.total_car,",
      "c.risk_weighted_assets",
      "FROM",
      "capital_adequacy_ratio",
      "c",
      "ORDER",
      "BY",
      "c.report_date;"
    ],
    "question_toks": [
      "风险加权资产的构成是否随着资本充足率的变化而调整？"
    ],
    "result_fields": [
      "c.report_date",
      "c.total_car",
      "c.risk_weighted_assets"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT lr.institution_id, lr.liquidity_coverage_ratio, rr.approval_status FROM liquidity_ratio lr JOIN regulatory_reports rr ON lr.institution_id = rr.institution_id AND lr.report_date = rr.report_date WHERE EXTRACT(YEAR FROM lr.report_date) = 2023;",
    "question": "查询2023年每个机构的流动性覆盖率及其审批状态。",
    "query_toks": [
      "SELECT",
      "lr.institution_id,",
      "lr.liquidity_coverage_ratio,",
      "rr.approval_status",
      "FROM",
      "liquidity_ratio",
      "lr",
      "JOIN",
      "regulatory_reports",
      "rr",
      "ON",
      "lr.institution_id",
      "=",
      "rr.institution_id",
      "AND",
      "lr.report_date",
      "=",
      "rr.report_date",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "lr.report_date)",
      "=",
      "2023;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lr.institution_id,",
      "lr.liquidity_coverage_ratio,",
      "rr.approval_status",
      "FROM",
      "liquidity_ratio",
      "lr",
      "JOIN",
      "regulatory_reports",
      "rr",
      "ON",
      "lr.institution_id",
      "=",
      "rr.institution_id",
      "AND",
      "lr.report_date",
      "=",
      "rr.report_date",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "lr.report_date)",
      "=",
      "2023;"
    ],
    "question_toks": [
      "查询2023年每个机构的流动性覆盖率及其审批状态。"
    ],
    "result_fields": [
      "lr.institution_id",
      "lr.liquidity_coverage_ratio",
      "rr.approval_status"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_date, rr.approval_status FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND rr.submission_date > '2023-07-01';",
    "question": "2023年7月1日之后，哪些金融机构提交了季度报告，并且这些报告的审批状态为'需修改'？请列出机构名称、报告日期和审批状态。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_date,",
      "rr.approval_status",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.submission_date",
      ">",
      "'2023-07-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_date,",
      "rr.approval_status",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rr.submission_date",
      ">",
      "'2023-07-01';"
    ],
    "question_toks": [
      "2023年7月1日之后，哪些金融机构提交了季度报告，并且这些报告的审批状态为'需修改'？请列出机构名称、报告日期和审批状态。"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_date",
      "rr.approval_status"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT COUNT(*) FROM regulatory_reports WHERE report_type = '季度报告' AND submission_date BETWEEN '2023-04-01' AND '2023-06-30' AND approval_status = '已拒绝'",
    "question": "2023年第二季度提交的监管报告中，有多少份被拒绝？",
    "query_toks": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "report_type",
      "=",
      "'季度报告'",
      "AND",
      "submission_date",
      "BETWEEN",
      "'2023-04-01'",
      "AND",
      "'2023-06-30'",
      "AND",
      "approval_status",
      "=",
      "'已拒绝'"
    ],
    "query_toks_no_value": [
      "SELECT",
      "COUNT(*)",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "report_type",
      "=",
      "'季度报告'",
      "AND",
      "submission_date",
      "BETWEEN",
      "'2023-04-01'",
      "AND",
      "'2023-06-30'",
      "AND",
      "approval_status",
      "=",
      "'已拒绝'"
    ],
    "question_toks": [
      "2023年第二季度提交的监管报告中，有多少份被拒绝？"
    ],
    "result_fields": [
      "COUNT(*)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT * FROM risk_exposure WHERE report_date = '2023-10-01';",
    "question": "获取2023年10月1日的所有风险暴露记录及其金额。",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      "=",
      "'2023-10-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "*",
      "FROM",
      "risk_exposure",
      "WHERE",
      "report_date",
      "=",
      "'2023-10-01';"
    ],
    "question_toks": [
      "获取2023年10月1日的所有风险暴露记录及其金额。"
    ],
    "result_fields": [
      "*"
    ]
  },
  {
    "db_id": "supervise",
    "query": "WITH loan_growth AS (SELECT institution_id, (MAX(loans_and_advances) - MIN(loans_and_advances)) / MIN(loans_and_advances) * 100 AS growth_rate FROM balance_sheet GROUP BY institution_id) SELECT fi.institution_name, lg.growth_rate FROM financial_institution_info fi JOIN loan_growth lg ON fi.institution_id = lg.institution_id ORDER BY lg.growth_rate DESC LIMIT 1",
    "question": "哪家机构的贷款和垫款增长率最高？请显示机构名称和增长率（假设有两个时间点的数据）。",
    "query_toks": [
      "WITH",
      "loan_growth",
      "AS",
      "(SELECT",
      "institution_id,",
      "(MAX(loans_and_advances)",
      "-",
      "MIN(loans_and_advances))",
      "/",
      "MIN(loans_and_advances)",
      "*",
      "100",
      "AS",
      "growth_rate",
      "FROM",
      "balance_sheet",
      "GROUP",
      "BY",
      "institution_id)",
      "SELECT",
      "fi.institution_name,",
      "lg.growth_rate",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "loan_growth",
      "lg",
      "ON",
      "fi.institution_id",
      "=",
      "lg.institution_id",
      "ORDER",
      "BY",
      "lg.growth_rate",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "WITH",
      "loan_growth",
      "AS",
      "(SELECT",
      "institution_id,",
      "(MAX(loans_and_advances)",
      "-",
      "MIN(loans_and_advances))",
      "/",
      "MIN(loans_and_advances)",
      "*",
      "100",
      "AS",
      "growth_rate",
      "FROM",
      "balance_sheet",
      "GROUP",
      "BY",
      "institution_id)",
      "SELECT",
      "fi.institution_name,",
      "lg.growth_rate",
      "FROM",
      "financial_institution_info",
      "fi",
      "JOIN",
      "loan_growth",
      "lg",
      "ON",
      "fi.institution_id",
      "=",
      "lg.institution_id",
      "ORDER",
      "BY",
      "lg.growth_rate",
      "DESC",
      "LIMIT",
      "1"
    ],
    "question_toks": [
      "哪家机构的贷款和垫款增长率最高？请显示机构名称和增长率（假设有两个时间点的数据）。"
    ],
    "result_fields": [
      "institution_id",
      "(MAX(loans_and_advances) - MIN(loans_and_advances)) / MIN(loans_and_advances) * 100"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name,\n                  (re.market_risk_exposure / NULLIF(car.risk_weighted_assets, 0)) * 100 as market_risk_capital_ratio\n           FROM risk_exposure re\n           JOIN capital_adequacy_ratio car ON re.institution_id = car.institution_id\n           JOIN financial_institution_info fi ON re.institution_id = fi.institution_id\n           WHERE EXTRACT(YEAR FROM re.report_date) = 2023\n           AND EXTRACT(YEAR FROM car.report_date) = 2023\n           AND (re.market_risk_exposure / NULLIF(car.risk_weighted_assets, 0)) > 0.15\n           ORDER BY market_risk_capital_ratio DESC",
    "question": "2023年，哪些金融机构的市场风险资本占比（市场风险资本/总资本）超过15%？",
    "query_toks": [
      "SELECT",
      "fi.institution_name,",
      "(re.market_risk_exposure",
      "/",
      "NULLIF(car.risk_weighted_assets,",
      "0))",
      "*",
      "100",
      "as",
      "market_risk_capital_ratio",
      "FROM",
      "risk_exposure",
      "re",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "re.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "re.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "re.report_date)",
      "=",
      "2023",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "car.report_date)",
      "=",
      "2023",
      "AND",
      "(re.market_risk_exposure",
      "/",
      "NULLIF(car.risk_weighted_assets,",
      "0))",
      ">",
      "0.15",
      "ORDER",
      "BY",
      "market_risk_capital_ratio",
      "DESC"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name,",
      "(re.market_risk_exposure",
      "/",
      "NULLIF(car.risk_weighted_assets,",
      "0))",
      "*",
      "100",
      "as",
      "market_risk_capital_ratio",
      "FROM",
      "risk_exposure",
      "re",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "re.institution_id",
      "=",
      "car.institution_id",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "re.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "re.report_date)",
      "=",
      "2023",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "car.report_date)",
      "=",
      "2023",
      "AND",
      "(re.market_risk_exposure",
      "/",
      "NULLIF(car.risk_weighted_assets,",
      "0))",
      ">",
      "0.15",
      "ORDER",
      "BY",
      "market_risk_capital_ratio",
      "DESC"
    ],
    "question_toks": [
      "2023年，哪些金融机构的市场风险资本占比（市场风险资本/总资本）超过15%？"
    ],
    "result_fields": [
      "fi.institution_name",
      "(re.market_risk_exposure / NULLIF(car.risk_weighted_assets, 0)) * 100"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, rr.report_type, rr.submission_date FROM regulatory_reports rr JOIN financial_institution_info fii ON rr.institution_id = fii.institution_id WHERE rr.approval_status = '需修改' AND EXTRACT(YEAR FROM rr.submission_date) = 2023 ORDER BY rr.submission_date DESC;",
    "question": "列出2023年提交的所有监管报告中，审批状态为'需修改'的报告所属机构的名称、报告类型和提交日期，并按提交日期降序排列。",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_type,",
      "rr.submission_date",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "rr.submission_date)",
      "=",
      "2023",
      "ORDER",
      "BY",
      "rr.submission_date",
      "DESC;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "rr.report_type,",
      "rr.submission_date",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "rr.institution_id",
      "=",
      "fii.institution_id",
      "WHERE",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "EXTRACT(YEAR",
      "FROM",
      "rr.submission_date)",
      "=",
      "2023",
      "ORDER",
      "BY",
      "rr.submission_date",
      "DESC;"
    ],
    "question_toks": [
      "列出2023年提交的所有监管报告中，审批状态为'需修改'的报告所属机构的名称、报告类型和提交日期，并按提交日期降序排列。"
    ],
    "result_fields": [
      "fii.institution_name",
      "rr.report_type",
      "rr.submission_date"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT DISTINCT fi.institution_name FROM regulatory_reports rr JOIN financial_institution_info fi ON rr.institution_id = fi.institution_id JOIN related_party_transactions rpt ON rr.institution_id = rpt.institution_id WHERE rr.submission_date >= '2023-01-01' AND rr.submission_date < '2024-01-01' AND rr.report_type = '季度报告' AND rr.approval_status = '需修改' AND rpt.transaction_date >= '2023-01-01' AND rpt.transaction_date < '2024-01-01' AND rpt.transaction_amount > 1000;",
    "question": "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'需修改'，同时这些机构在2023年的关联交易中是否有交易金额超过1000万元的记录？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "fi.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rr.institution_id",
      "=",
      "fi.institution_id",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "rr.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rpt.transaction_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rpt.transaction_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rpt.transaction_amount",
      ">",
      "1000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "fi.institution_name",
      "FROM",
      "regulatory_reports",
      "rr",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rr.institution_id",
      "=",
      "fi.institution_id",
      "JOIN",
      "related_party_transactions",
      "rpt",
      "ON",
      "rr.institution_id",
      "=",
      "rpt.institution_id",
      "WHERE",
      "rr.submission_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rr.submission_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rr.report_type",
      "=",
      "'季度报告'",
      "AND",
      "rr.approval_status",
      "=",
      "'需修改'",
      "AND",
      "rpt.transaction_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "rpt.transaction_date",
      "<",
      "'2024-01-01'",
      "AND",
      "rpt.transaction_amount",
      ">",
      "1000;"
    ],
    "question_toks": [
      "在2023年提交的所有监管报告中，哪些机构的报告类型为'季度报告'并且审批状态为'需修改'，同时这些机构在2023年的关联交易中是否有交易金额超过1000万元的记录？"
    ],
    "result_fields": [
      "DISTINCT fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT lr.liquidity_coverage_ratio, fii.institution_type FROM liquidity_ratio lr JOIN financial_institution_info fii ON lr.institution_id = fii.institution_id;",
    "question": "流动性覆盖率与机构的国际化程度是否存在关联？",
    "query_toks": [
      "SELECT",
      "lr.liquidity_coverage_ratio,",
      "fii.institution_type",
      "FROM",
      "liquidity_ratio",
      "lr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "lr.institution_id",
      "=",
      "fii.institution_id;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "lr.liquidity_coverage_ratio,",
      "fii.institution_type",
      "FROM",
      "liquidity_ratio",
      "lr",
      "JOIN",
      "financial_institution_info",
      "fii",
      "ON",
      "lr.institution_id",
      "=",
      "fii.institution_id;"
    ],
    "question_toks": [
      "流动性覆盖率与机构的国际化程度是否存在关联？"
    ],
    "result_fields": [
      "lr.liquidity_coverage_ratio",
      "fii.institution_type"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT DISTINCT institution_id FROM related_party_transactions WHERE transaction_date >= '2023-10-01' AND transaction_date < '2023-11-01' AND transaction_amount > 10000000;",
    "question": "哪些机构的关联交易在2023年10月金额超过1000万元？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "institution_id",
      "FROM",
      "related_party_transactions",
      "WHERE",
      "transaction_date",
      ">=",
      "'2023-10-01'",
      "AND",
      "transaction_date",
      "<",
      "'2023-11-01'",
      "AND",
      "transaction_amount",
      ">",
      "10000000;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "institution_id",
      "FROM",
      "related_party_transactions",
      "WHERE",
      "transaction_date",
      ">=",
      "'2023-10-01'",
      "AND",
      "transaction_date",
      "<",
      "'2023-11-01'",
      "AND",
      "transaction_amount",
      ">",
      "10000000;"
    ],
    "question_toks": [
      "哪些机构的关联交易在2023年10月金额超过1000万元？"
    ],
    "result_fields": [
      "DISTINCT institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name, COUNT(rpt.approval_status) FILTER (WHERE rpt.approval_status = '未通过') * 1.0 / COUNT(rpt.approval_status) AS failure_rate FROM related_party_transactions rpt JOIN financial_institution_info fi ON rpt.institution_id = fi.institution_id WHERE rpt.transaction_date >= '2023-01-01' GROUP BY fi.institution_name ORDER BY failure_rate DESC LIMIT 1;",
    "question": "2023年以来，哪家机构的关联交易审批未通过率最高？",
    "query_toks": [
      "SELECT",
      "fi.institution_name,",
      "COUNT(rpt.approval_status)",
      "FILTER",
      "(WHERE",
      "rpt.approval_status",
      "=",
      "'未通过')",
      "*",
      "1.0",
      "/",
      "COUNT(rpt.approval_status)",
      "AS",
      "failure_rate",
      "FROM",
      "related_party_transactions",
      "rpt",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rpt.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "rpt.transaction_date",
      ">=",
      "'2023-01-01'",
      "GROUP",
      "BY",
      "fi.institution_name",
      "ORDER",
      "BY",
      "failure_rate",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name,",
      "COUNT(rpt.approval_status)",
      "FILTER",
      "(WHERE",
      "rpt.approval_status",
      "=",
      "'未通过')",
      "*",
      "1.0",
      "/",
      "COUNT(rpt.approval_status)",
      "AS",
      "failure_rate",
      "FROM",
      "related_party_transactions",
      "rpt",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "rpt.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "rpt.transaction_date",
      ">=",
      "'2023-01-01'",
      "GROUP",
      "BY",
      "fi.institution_name",
      "ORDER",
      "BY",
      "failure_rate",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "2023年以来，哪家机构的关联交易审批未通过率最高？"
    ],
    "result_fields": [
      "fi.institution_name",
      "COUNT(rpt.approval_status) FILTER (WHERE rpt.approval_status = '未通过') * 1.0 / COUNT(rpt.approval_status)"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fi.institution_name, re.operational_risk_exposure / re.total_risk_exposure AS op_risk_ratio FROM risk_exposure re JOIN financial_institution_info fi ON re.institution_id = fi.institution_id WHERE EXTRACT(YEAR FROM re.report_date) = 2023 ORDER BY op_risk_ratio DESC LIMIT 1;",
    "question": "2023年，哪家机构的操作风险暴露占总风险暴露的比例最高？",
    "query_toks": [
      "SELECT",
      "fi.institution_name,",
      "re.operational_risk_exposure",
      "/",
      "re.total_risk_exposure",
      "AS",
      "op_risk_ratio",
      "FROM",
      "risk_exposure",
      "re",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "re.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "re.report_date)",
      "=",
      "2023",
      "ORDER",
      "BY",
      "op_risk_ratio",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fi.institution_name,",
      "re.operational_risk_exposure",
      "/",
      "re.total_risk_exposure",
      "AS",
      "op_risk_ratio",
      "FROM",
      "risk_exposure",
      "re",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "re.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "EXTRACT(YEAR",
      "FROM",
      "re.report_date)",
      "=",
      "2023",
      "ORDER",
      "BY",
      "op_risk_ratio",
      "DESC",
      "LIMIT",
      "1;"
    ],
    "question_toks": [
      "2023年，哪家机构的操作风险暴露占总风险暴露的比例最高？"
    ],
    "result_fields": [
      "fi.institution_name",
      "re.operational_risk_exposure / re.total_risk_exposure"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT DISTINCT institution_id FROM regulatory_reports WHERE report_date >= '2023-01-01' AND report_date < '2024-01-01' AND comments IS NOT NULL;",
    "question": "哪些机构的年度报告在2023年中有备注信息？",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "institution_id",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "comments",
      "IS",
      "NOT",
      "NULL;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "DISTINCT",
      "institution_id",
      "FROM",
      "regulatory_reports",
      "WHERE",
      "report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "report_date",
      "<",
      "'2024-01-01'",
      "AND",
      "comments",
      "IS",
      "NOT",
      "NULL;"
    ],
    "question_toks": [
      "哪些机构的年度报告在2023年中有备注信息？"
    ],
    "result_fields": [
      "DISTINCT institution_id"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT npl.*, fi.institution_name FROM non_performing_loans npl JOIN financial_institution_info fi ON npl.institution_id = fi.institution_id WHERE npl.report_date = '2023-03-01';",
    "question": "获取2023年3月1日的不良贷款数据及其机构名称。",
    "query_toks": [
      "SELECT",
      "npl.*,",
      "fi.institution_name",
      "FROM",
      "non_performing_loans",
      "npl",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "npl.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "npl.report_date",
      "=",
      "'2023-03-01';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "npl.*,",
      "fi.institution_name",
      "FROM",
      "non_performing_loans",
      "npl",
      "JOIN",
      "financial_institution_info",
      "fi",
      "ON",
      "npl.institution_id",
      "=",
      "fi.institution_id",
      "WHERE",
      "npl.report_date",
      "=",
      "'2023-03-01';"
    ],
    "question_toks": [
      "获取2023年3月1日的不良贷款数据及其机构名称。"
    ],
    "result_fields": [
      "npl.*",
      "fi.institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT institution_name FROM financial_institution_info WHERE legal_representative LIKE '王%';",
    "question": "哪些机构的法定代表人是王姓？",
    "query_toks": [
      "SELECT",
      "institution_name",
      "FROM",
      "financial_institution_info",
      "WHERE",
      "legal_representative",
      "LIKE",
      "'王%';"
    ],
    "query_toks_no_value": [
      "SELECT",
      "institution_name",
      "FROM",
      "financial_institution_info",
      "WHERE",
      "legal_representative",
      "LIKE",
      "'王%';"
    ],
    "question_toks": [
      "哪些机构的法定代表人是王姓？"
    ],
    "result_fields": [
      "institution_name"
    ]
  },
  {
    "db_id": "supervise",
    "query": "SELECT fii.institution_name, car.total_car FROM financial_institution_info fii JOIN capital_adequacy_ratio car ON fii.institution_id = car.institution_id WHERE car.report_date >= '2023-01-01' AND car.report_date < '2023-04-01' AND car.total_car > 10.0;",
    "question": "2023年第一季度，哪些金融机构的监管报告中包含关于资本充足率的详细数据，并且这些机构的总资本充足率超过10%？",
    "query_toks": [
      "SELECT",
      "fii.institution_name,",
      "car.total_car",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "WHERE",
      "car.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "car.report_date",
      "<",
      "'2023-04-01'",
      "AND",
      "car.total_car",
      ">",
      "10.0;"
    ],
    "query_toks_no_value": [
      "SELECT",
      "fii.institution_name,",
      "car.total_car",
      "FROM",
      "financial_institution_info",
      "fii",
      "JOIN",
      "capital_adequacy_ratio",
      "car",
      "ON",
      "fii.institution_id",
      "=",
      "car.institution_id",
      "WHERE",
      "car.report_date",
      ">=",
      "'2023-01-01'",
      "AND",
      "car.report_date",
      "<",
      "'2023-04-01'",
      "AND",
      "car.total_car",
      ">",
      "10.0;"
    ],
    "question_toks": [
      "2023年第一季度，哪些金融机构的监管报告中包含关于资本充足率的详细数据，并且这些机构的总资本充足率超过10%？"
    ],
    "result_fields": [
      "fii.institution_name",
      "car.total_car"
    ]
  }
]